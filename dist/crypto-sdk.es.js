import { recoverTypedSignature, SignTypedDataVersion } from "@metamask/eth-sig-util";
import BigNumber$1 from "bignumber.js";
const addEventListener = (cb) => {
  document.addEventListener(cryptoEvent, cb);
};
const addEventListenerWS = (cb) => {
  document.addEventListener(cryptoEventWS, cb);
};
const emitEvent = (type, msg) => {
  const event = new CustomEvent(cryptoEvent, { detail: { type, msg } });
  document.dispatchEvent(event);
};
const emitEventWS = (msg) => {
  const event = new CustomEvent(cryptoEventWS, { detail: JSON.parse(msg) });
  document.dispatchEvent(event);
};
const emitErrorEvent = (type, msg) => {
  const event = new CustomEvent(cryptoEvent, { detail: { type, msg, error: true } });
  document.dispatchEvent(event);
};
const eventType = {
  network: "network",
  accountsChanged: "accountsChanged",
  chainChanged: "chainChanged",
  message: "message",
  address: "address",
  wrongNetworkOnGetAddress: "wrongNetworkOnGetAddress",
  metamaskNotInstalled: "metamaskNotInstalled",
  general: "general",
  claimNotSigned: "claimNotSigned",
  claimSigned: "claimSigned",
  claimConfirmed: "claimConfirmed",
  claimNotConfirmed: "claimNotConfirmed",
  winClaimSigned: "winClaimSigned",
  winNotConfirmed: "winNotConfirmed",
  challengeSigned: "challengeSigned",
  challengeNotSigned: "challengeNotSigned",
  claimSynced: "claimSynced",
  claimNotSynced: "claimNotSynced",
  token: "jwtToken",
  withdraw: "withdraw",
  withdrawReceipt: "withdrawReceipt",
  withdrawHash: "withdrawHash",
  withdrawSigned: "withdrawSigned",
  depositDega: "depositDega",
  withdrawDega: "withdrawDega",
  approveDega: "approveDega",
  getBalance: "getBalance",
  degaAllowed: "degaAllowed"
};
const cryptoEvent = "cryptoSDK";
const cryptoEventWS = "cryptoSDK_WS";
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
var bn$1 = { exports: {} };
(function(module) {
  (function(module2, exports) {
    function assert2(val, msg) {
      if (!val)
        throw new Error(msg || "Assertion failed");
    }
    function inherits2(ctor, superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function() {
      };
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
    function BN2(number, base2, endian) {
      if (BN2.isBN(number)) {
        return number;
      }
      this.negative = 0;
      this.words = null;
      this.length = 0;
      this.red = null;
      if (number !== null) {
        if (base2 === "le" || base2 === "be") {
          endian = base2;
          base2 = 10;
        }
        this._init(number || 0, base2 || 10, endian || "be");
      }
    }
    if (typeof module2 === "object") {
      module2.exports = BN2;
    } else {
      exports.BN = BN2;
    }
    BN2.BN = BN2;
    BN2.wordSize = 26;
    var Buffer;
    try {
      if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
        Buffer = window.Buffer;
      } else {
        Buffer = require("buffer").Buffer;
      }
    } catch (e) {
    }
    BN2.isBN = function isBN(num) {
      if (num instanceof BN2) {
        return true;
      }
      return num !== null && typeof num === "object" && num.constructor.wordSize === BN2.wordSize && Array.isArray(num.words);
    };
    BN2.max = function max(left, right) {
      if (left.cmp(right) > 0)
        return left;
      return right;
    };
    BN2.min = function min(left, right) {
      if (left.cmp(right) < 0)
        return left;
      return right;
    };
    BN2.prototype._init = function init3(number, base2, endian) {
      if (typeof number === "number") {
        return this._initNumber(number, base2, endian);
      }
      if (typeof number === "object") {
        return this._initArray(number, base2, endian);
      }
      if (base2 === "hex") {
        base2 = 16;
      }
      assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
      number = number.toString().replace(/\s+/g, "");
      var start = 0;
      if (number[0] === "-") {
        start++;
        this.negative = 1;
      }
      if (start < number.length) {
        if (base2 === 16) {
          this._parseHex(number, start, endian);
        } else {
          this._parseBase(number, base2, start);
          if (endian === "le") {
            this._initArray(this.toArray(), base2, endian);
          }
        }
      }
    };
    BN2.prototype._initNumber = function _initNumber(number, base2, endian) {
      if (number < 0) {
        this.negative = 1;
        number = -number;
      }
      if (number < 67108864) {
        this.words = [number & 67108863];
        this.length = 1;
      } else if (number < 4503599627370496) {
        this.words = [
          number & 67108863,
          number / 67108864 & 67108863
        ];
        this.length = 2;
      } else {
        assert2(number < 9007199254740992);
        this.words = [
          number & 67108863,
          number / 67108864 & 67108863,
          1
        ];
        this.length = 3;
      }
      if (endian !== "le")
        return;
      this._initArray(this.toArray(), base2, endian);
    };
    BN2.prototype._initArray = function _initArray(number, base2, endian) {
      assert2(typeof number.length === "number");
      if (number.length <= 0) {
        this.words = [0];
        this.length = 1;
        return this;
      }
      this.length = Math.ceil(number.length / 3);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }
      var j, w;
      var off = 0;
      if (endian === "be") {
        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] = w >>> 26 - off & 67108863;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      } else if (endian === "le") {
        for (i = 0, j = 0; i < number.length; i += 3) {
          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] = w >>> 26 - off & 67108863;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      }
      return this._strip();
    };
    function parseHex4Bits(string, index) {
      var c = string.charCodeAt(index);
      if (c >= 48 && c <= 57) {
        return c - 48;
      } else if (c >= 65 && c <= 70) {
        return c - 55;
      } else if (c >= 97 && c <= 102) {
        return c - 87;
      } else {
        assert2(false, "Invalid character in " + string);
      }
    }
    function parseHexByte(string, lowerBound, index) {
      var r2 = parseHex4Bits(string, index);
      if (index - 1 >= lowerBound) {
        r2 |= parseHex4Bits(string, index - 1) << 4;
      }
      return r2;
    }
    BN2.prototype._parseHex = function _parseHex(number, start, endian) {
      this.length = Math.ceil((number.length - start) / 6);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }
      var off = 0;
      var j = 0;
      var w;
      if (endian === "be") {
        for (i = number.length - 1; i >= start; i -= 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 67108863;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      } else {
        var parseLength = number.length - start;
        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 67108863;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      }
      this._strip();
    };
    function parseBase(str, start, end, mul3) {
      var r2 = 0;
      var b = 0;
      var len = Math.min(str.length, end);
      for (var i = start; i < len; i++) {
        var c = str.charCodeAt(i) - 48;
        r2 *= mul3;
        if (c >= 49) {
          b = c - 49 + 10;
        } else if (c >= 17) {
          b = c - 17 + 10;
        } else {
          b = c;
        }
        assert2(c >= 0 && b < mul3, "Invalid character");
        r2 += b;
      }
      return r2;
    }
    BN2.prototype._parseBase = function _parseBase(number, base2, start) {
      this.words = [0];
      this.length = 1;
      for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
        limbLen++;
      }
      limbLen--;
      limbPow = limbPow / base2 | 0;
      var total = number.length - start;
      var mod = total % limbLen;
      var end = Math.min(total, total - mod) + start;
      var word = 0;
      for (var i = start; i < end; i += limbLen) {
        word = parseBase(number, i, i + limbLen, base2);
        this.imuln(limbPow);
        if (this.words[0] + word < 67108864) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      if (mod !== 0) {
        var pow2 = 1;
        word = parseBase(number, i, number.length, base2);
        for (i = 0; i < mod; i++) {
          pow2 *= base2;
        }
        this.imuln(pow2);
        if (this.words[0] + word < 67108864) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      this._strip();
    };
    BN2.prototype.copy = function copy(dest) {
      dest.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        dest.words[i] = this.words[i];
      }
      dest.length = this.length;
      dest.negative = this.negative;
      dest.red = this.red;
    };
    function move(dest, src) {
      dest.words = src.words;
      dest.length = src.length;
      dest.negative = src.negative;
      dest.red = src.red;
    }
    BN2.prototype._move = function _move(dest) {
      move(dest, this);
    };
    BN2.prototype.clone = function clone() {
      var r2 = new BN2(null);
      this.copy(r2);
      return r2;
    };
    BN2.prototype._expand = function _expand(size) {
      while (this.length < size) {
        this.words[this.length++] = 0;
      }
      return this;
    };
    BN2.prototype._strip = function strip() {
      while (this.length > 1 && this.words[this.length - 1] === 0) {
        this.length--;
      }
      return this._normSign();
    };
    BN2.prototype._normSign = function _normSign() {
      if (this.length === 1 && this.words[0] === 0) {
        this.negative = 0;
      }
      return this;
    };
    if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
      try {
        BN2.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect4;
      } catch (e) {
        BN2.prototype.inspect = inspect4;
      }
    } else {
      BN2.prototype.inspect = inspect4;
    }
    function inspect4() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var zeros2 = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ];
    var groupSizes = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ];
    var groupBases = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    BN2.prototype.toString = function toString(base2, padding2) {
      base2 = base2 || 10;
      padding2 = padding2 | 0 || 1;
      var out;
      if (base2 === 16 || base2 === "hex") {
        out = "";
        var off = 0;
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = this.words[i];
          var word = ((w << off | carry) & 16777215).toString(16);
          carry = w >>> 24 - off & 16777215;
          off += 2;
          if (off >= 26) {
            off -= 26;
            i--;
          }
          if (carry !== 0 || i !== this.length - 1) {
            out = zeros2[6 - word.length] + word + out;
          } else {
            out = word + out;
          }
        }
        if (carry !== 0) {
          out = carry.toString(16) + out;
        }
        while (out.length % padding2 !== 0) {
          out = "0" + out;
        }
        if (this.negative !== 0) {
          out = "-" + out;
        }
        return out;
      }
      if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
        var groupSize = groupSizes[base2];
        var groupBase = groupBases[base2];
        out = "";
        var c = this.clone();
        c.negative = 0;
        while (!c.isZero()) {
          var r2 = c.modrn(groupBase).toString(base2);
          c = c.idivn(groupBase);
          if (!c.isZero()) {
            out = zeros2[groupSize - r2.length] + r2 + out;
          } else {
            out = r2 + out;
          }
        }
        if (this.isZero()) {
          out = "0" + out;
        }
        while (out.length % padding2 !== 0) {
          out = "0" + out;
        }
        if (this.negative !== 0) {
          out = "-" + out;
        }
        return out;
      }
      assert2(false, "Base should be between 2 and 36");
    };
    BN2.prototype.toNumber = function toNumber() {
      var ret = this.words[0];
      if (this.length === 2) {
        ret += this.words[1] * 67108864;
      } else if (this.length === 3 && this.words[2] === 1) {
        ret += 4503599627370496 + this.words[1] * 67108864;
      } else if (this.length > 2) {
        assert2(false, "Number can only safely store up to 53 bits");
      }
      return this.negative !== 0 ? -ret : ret;
    };
    BN2.prototype.toJSON = function toJSON2() {
      return this.toString(16, 2);
    };
    if (Buffer) {
      BN2.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
      };
    }
    BN2.prototype.toArray = function toArray2(endian, length) {
      return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate2(ArrayType, size) {
      if (ArrayType.allocUnsafe) {
        return ArrayType.allocUnsafe(size);
      }
      return new ArrayType(size);
    };
    BN2.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
      this._strip();
      var byteLength = this.byteLength();
      var reqLength = length || Math.max(1, byteLength);
      assert2(byteLength <= reqLength, "byte array longer than desired length");
      assert2(reqLength > 0, "Requested array length <= 0");
      var res = allocate(ArrayType, reqLength);
      var postfix = endian === "le" ? "LE" : "BE";
      this["_toArrayLike" + postfix](res, byteLength);
      return res;
    };
    BN2.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
      var position = 0;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position++] = word & 255;
        if (position < res.length) {
          res[position++] = word >> 8 & 255;
        }
        if (position < res.length) {
          res[position++] = word >> 16 & 255;
        }
        if (shift === 6) {
          if (position < res.length) {
            res[position++] = word >> 24 & 255;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position < res.length) {
        res[position++] = carry;
        while (position < res.length) {
          res[position++] = 0;
        }
      }
    };
    BN2.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
      var position = res.length - 1;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position--] = word & 255;
        if (position >= 0) {
          res[position--] = word >> 8 & 255;
        }
        if (position >= 0) {
          res[position--] = word >> 16 & 255;
        }
        if (shift === 6) {
          if (position >= 0) {
            res[position--] = word >> 24 & 255;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position >= 0) {
        res[position--] = carry;
        while (position >= 0) {
          res[position--] = 0;
        }
      }
    };
    if (Math.clz32) {
      BN2.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
      };
    } else {
      BN2.prototype._countBits = function _countBits(w) {
        var t = w;
        var r2 = 0;
        if (t >= 4096) {
          r2 += 13;
          t >>>= 13;
        }
        if (t >= 64) {
          r2 += 7;
          t >>>= 7;
        }
        if (t >= 8) {
          r2 += 4;
          t >>>= 4;
        }
        if (t >= 2) {
          r2 += 2;
          t >>>= 2;
        }
        return r2 + t;
      };
    }
    BN2.prototype._zeroBits = function _zeroBits(w) {
      if (w === 0)
        return 26;
      var t = w;
      var r2 = 0;
      if ((t & 8191) === 0) {
        r2 += 13;
        t >>>= 13;
      }
      if ((t & 127) === 0) {
        r2 += 7;
        t >>>= 7;
      }
      if ((t & 15) === 0) {
        r2 += 4;
        t >>>= 4;
      }
      if ((t & 3) === 0) {
        r2 += 2;
        t >>>= 2;
      }
      if ((t & 1) === 0) {
        r2++;
      }
      return r2;
    };
    BN2.prototype.bitLength = function bitLength() {
      var w = this.words[this.length - 1];
      var hi = this._countBits(w);
      return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
      var w = new Array(num.bitLength());
      for (var bit = 0; bit < w.length; bit++) {
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        w[bit] = num.words[off] >>> wbit & 1;
      }
      return w;
    }
    BN2.prototype.zeroBits = function zeroBits() {
      if (this.isZero())
        return 0;
      var r2 = 0;
      for (var i = 0; i < this.length; i++) {
        var b = this._zeroBits(this.words[i]);
        r2 += b;
        if (b !== 26)
          break;
      }
      return r2;
    };
    BN2.prototype.byteLength = function byteLength() {
      return Math.ceil(this.bitLength() / 8);
    };
    BN2.prototype.toTwos = function toTwos(width) {
      if (this.negative !== 0) {
        return this.abs().inotn(width).iaddn(1);
      }
      return this.clone();
    };
    BN2.prototype.fromTwos = function fromTwos(width) {
      if (this.testn(width - 1)) {
        return this.notn(width).iaddn(1).ineg();
      }
      return this.clone();
    };
    BN2.prototype.isNeg = function isNeg() {
      return this.negative !== 0;
    };
    BN2.prototype.neg = function neg3() {
      return this.clone().ineg();
    };
    BN2.prototype.ineg = function ineg() {
      if (!this.isZero()) {
        this.negative ^= 1;
      }
      return this;
    };
    BN2.prototype.iuor = function iuor(num) {
      while (this.length < num.length) {
        this.words[this.length++] = 0;
      }
      for (var i = 0; i < num.length; i++) {
        this.words[i] = this.words[i] | num.words[i];
      }
      return this._strip();
    };
    BN2.prototype.ior = function ior(num) {
      assert2((this.negative | num.negative) === 0);
      return this.iuor(num);
    };
    BN2.prototype.or = function or(num) {
      if (this.length > num.length)
        return this.clone().ior(num);
      return num.clone().ior(this);
    };
    BN2.prototype.uor = function uor(num) {
      if (this.length > num.length)
        return this.clone().iuor(num);
      return num.clone().iuor(this);
    };
    BN2.prototype.iuand = function iuand(num) {
      var b;
      if (this.length > num.length) {
        b = num;
      } else {
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = this.words[i] & num.words[i];
      }
      this.length = b.length;
      return this._strip();
    };
    BN2.prototype.iand = function iand(num) {
      assert2((this.negative | num.negative) === 0);
      return this.iuand(num);
    };
    BN2.prototype.and = function and(num) {
      if (this.length > num.length)
        return this.clone().iand(num);
      return num.clone().iand(this);
    };
    BN2.prototype.uand = function uand(num) {
      if (this.length > num.length)
        return this.clone().iuand(num);
      return num.clone().iuand(this);
    };
    BN2.prototype.iuxor = function iuxor(num) {
      var a;
      var b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = a.words[i] ^ b.words[i];
      }
      if (this !== a) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = a.length;
      return this._strip();
    };
    BN2.prototype.ixor = function ixor(num) {
      assert2((this.negative | num.negative) === 0);
      return this.iuxor(num);
    };
    BN2.prototype.xor = function xor(num) {
      if (this.length > num.length)
        return this.clone().ixor(num);
      return num.clone().ixor(this);
    };
    BN2.prototype.uxor = function uxor(num) {
      if (this.length > num.length)
        return this.clone().iuxor(num);
      return num.clone().iuxor(this);
    };
    BN2.prototype.inotn = function inotn(width) {
      assert2(typeof width === "number" && width >= 0);
      var bytesNeeded = Math.ceil(width / 26) | 0;
      var bitsLeft = width % 26;
      this._expand(bytesNeeded);
      if (bitsLeft > 0) {
        bytesNeeded--;
      }
      for (var i = 0; i < bytesNeeded; i++) {
        this.words[i] = ~this.words[i] & 67108863;
      }
      if (bitsLeft > 0) {
        this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
      }
      return this._strip();
    };
    BN2.prototype.notn = function notn(width) {
      return this.clone().inotn(width);
    };
    BN2.prototype.setn = function setn(bit, val) {
      assert2(typeof bit === "number" && bit >= 0);
      var off = bit / 26 | 0;
      var wbit = bit % 26;
      this._expand(off + 1);
      if (val) {
        this.words[off] = this.words[off] | 1 << wbit;
      } else {
        this.words[off] = this.words[off] & ~(1 << wbit);
      }
      return this._strip();
    };
    BN2.prototype.iadd = function iadd(num) {
      var r2;
      if (this.negative !== 0 && num.negative === 0) {
        this.negative = 0;
        r2 = this.isub(num);
        this.negative ^= 1;
        return this._normSign();
      } else if (this.negative === 0 && num.negative !== 0) {
        num.negative = 0;
        r2 = this.isub(num);
        num.negative = 1;
        return r2._normSign();
      }
      var a, b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r2 = (a.words[i] | 0) + (b.words[i] | 0) + carry;
        this.words[i] = r2 & 67108863;
        carry = r2 >>> 26;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r2 = (a.words[i] | 0) + carry;
        this.words[i] = r2 & 67108863;
        carry = r2 >>> 26;
      }
      this.length = a.length;
      if (carry !== 0) {
        this.words[this.length] = carry;
        this.length++;
      } else if (a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      return this;
    };
    BN2.prototype.add = function add3(num) {
      var res;
      if (num.negative !== 0 && this.negative === 0) {
        num.negative = 0;
        res = this.sub(num);
        num.negative ^= 1;
        return res;
      } else if (num.negative === 0 && this.negative !== 0) {
        this.negative = 0;
        res = num.sub(this);
        this.negative = 1;
        return res;
      }
      if (this.length > num.length)
        return this.clone().iadd(num);
      return num.clone().iadd(this);
    };
    BN2.prototype.isub = function isub(num) {
      if (num.negative !== 0) {
        num.negative = 0;
        var r2 = this.iadd(num);
        num.negative = 1;
        return r2._normSign();
      } else if (this.negative !== 0) {
        this.negative = 0;
        this.iadd(num);
        this.negative = 1;
        return this._normSign();
      }
      var cmp = this.cmp(num);
      if (cmp === 0) {
        this.negative = 0;
        this.length = 1;
        this.words[0] = 0;
        return this;
      }
      var a, b;
      if (cmp > 0) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r2 = (a.words[i] | 0) - (b.words[i] | 0) + carry;
        carry = r2 >> 26;
        this.words[i] = r2 & 67108863;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r2 = (a.words[i] | 0) + carry;
        carry = r2 >> 26;
        this.words[i] = r2 & 67108863;
      }
      if (carry === 0 && i < a.length && a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = Math.max(this.length, i);
      if (a !== this) {
        this.negative = 1;
      }
      return this._strip();
    };
    BN2.prototype.sub = function sub(num) {
      return this.clone().isub(num);
    };
    function smallMulTo(self2, num, out) {
      out.negative = num.negative ^ self2.negative;
      var len = self2.length + num.length | 0;
      out.length = len;
      len = len - 1 | 0;
      var a = self2.words[0] | 0;
      var b = num.words[0] | 0;
      var r2 = a * b;
      var lo = r2 & 67108863;
      var carry = r2 / 67108864 | 0;
      out.words[0] = lo;
      for (var k = 1; k < len; k++) {
        var ncarry = carry >>> 26;
        var rword = carry & 67108863;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
          var i = k - j | 0;
          a = self2.words[i] | 0;
          b = num.words[j] | 0;
          r2 = a * b + rword;
          ncarry += r2 / 67108864 | 0;
          rword = r2 & 67108863;
        }
        out.words[k] = rword | 0;
        carry = ncarry | 0;
      }
      if (carry !== 0) {
        out.words[k] = carry | 0;
      } else {
        out.length--;
      }
      return out._strip();
    }
    var comb10MulTo = function comb10MulTo2(self2, num, out) {
      var a = self2.words;
      var b = num.words;
      var o = out.words;
      var c = 0;
      var lo;
      var mid;
      var hi;
      var a0 = a[0] | 0;
      var al0 = a0 & 8191;
      var ah0 = a0 >>> 13;
      var a1 = a[1] | 0;
      var al1 = a1 & 8191;
      var ah1 = a1 >>> 13;
      var a2 = a[2] | 0;
      var al2 = a2 & 8191;
      var ah2 = a2 >>> 13;
      var a3 = a[3] | 0;
      var al3 = a3 & 8191;
      var ah3 = a3 >>> 13;
      var a4 = a[4] | 0;
      var al4 = a4 & 8191;
      var ah4 = a4 >>> 13;
      var a5 = a[5] | 0;
      var al5 = a5 & 8191;
      var ah5 = a5 >>> 13;
      var a6 = a[6] | 0;
      var al6 = a6 & 8191;
      var ah6 = a6 >>> 13;
      var a7 = a[7] | 0;
      var al7 = a7 & 8191;
      var ah7 = a7 >>> 13;
      var a8 = a[8] | 0;
      var al8 = a8 & 8191;
      var ah8 = a8 >>> 13;
      var a9 = a[9] | 0;
      var al9 = a9 & 8191;
      var ah9 = a9 >>> 13;
      var b0 = b[0] | 0;
      var bl0 = b0 & 8191;
      var bh0 = b0 >>> 13;
      var b1 = b[1] | 0;
      var bl1 = b1 & 8191;
      var bh1 = b1 >>> 13;
      var b2 = b[2] | 0;
      var bl2 = b2 & 8191;
      var bh2 = b2 >>> 13;
      var b3 = b[3] | 0;
      var bl3 = b3 & 8191;
      var bh3 = b3 >>> 13;
      var b4 = b[4] | 0;
      var bl4 = b4 & 8191;
      var bh4 = b4 >>> 13;
      var b5 = b[5] | 0;
      var bl5 = b5 & 8191;
      var bh5 = b5 >>> 13;
      var b6 = b[6] | 0;
      var bl6 = b6 & 8191;
      var bh6 = b6 >>> 13;
      var b7 = b[7] | 0;
      var bl7 = b7 & 8191;
      var bh7 = b7 >>> 13;
      var b8 = b[8] | 0;
      var bl8 = b8 & 8191;
      var bh8 = b8 >>> 13;
      var b9 = b[9] | 0;
      var bl9 = b9 & 8191;
      var bh9 = b9 >>> 13;
      out.negative = self2.negative ^ num.negative;
      out.length = 19;
      lo = Math.imul(al0, bl0);
      mid = Math.imul(al0, bh0);
      mid = mid + Math.imul(ah0, bl0) | 0;
      hi = Math.imul(ah0, bh0);
      var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
      w0 &= 67108863;
      lo = Math.imul(al1, bl0);
      mid = Math.imul(al1, bh0);
      mid = mid + Math.imul(ah1, bl0) | 0;
      hi = Math.imul(ah1, bh0);
      lo = lo + Math.imul(al0, bl1) | 0;
      mid = mid + Math.imul(al0, bh1) | 0;
      mid = mid + Math.imul(ah0, bl1) | 0;
      hi = hi + Math.imul(ah0, bh1) | 0;
      var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
      w1 &= 67108863;
      lo = Math.imul(al2, bl0);
      mid = Math.imul(al2, bh0);
      mid = mid + Math.imul(ah2, bl0) | 0;
      hi = Math.imul(ah2, bh0);
      lo = lo + Math.imul(al1, bl1) | 0;
      mid = mid + Math.imul(al1, bh1) | 0;
      mid = mid + Math.imul(ah1, bl1) | 0;
      hi = hi + Math.imul(ah1, bh1) | 0;
      lo = lo + Math.imul(al0, bl2) | 0;
      mid = mid + Math.imul(al0, bh2) | 0;
      mid = mid + Math.imul(ah0, bl2) | 0;
      hi = hi + Math.imul(ah0, bh2) | 0;
      var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
      w2 &= 67108863;
      lo = Math.imul(al3, bl0);
      mid = Math.imul(al3, bh0);
      mid = mid + Math.imul(ah3, bl0) | 0;
      hi = Math.imul(ah3, bh0);
      lo = lo + Math.imul(al2, bl1) | 0;
      mid = mid + Math.imul(al2, bh1) | 0;
      mid = mid + Math.imul(ah2, bl1) | 0;
      hi = hi + Math.imul(ah2, bh1) | 0;
      lo = lo + Math.imul(al1, bl2) | 0;
      mid = mid + Math.imul(al1, bh2) | 0;
      mid = mid + Math.imul(ah1, bl2) | 0;
      hi = hi + Math.imul(ah1, bh2) | 0;
      lo = lo + Math.imul(al0, bl3) | 0;
      mid = mid + Math.imul(al0, bh3) | 0;
      mid = mid + Math.imul(ah0, bl3) | 0;
      hi = hi + Math.imul(ah0, bh3) | 0;
      var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
      w3 &= 67108863;
      lo = Math.imul(al4, bl0);
      mid = Math.imul(al4, bh0);
      mid = mid + Math.imul(ah4, bl0) | 0;
      hi = Math.imul(ah4, bh0);
      lo = lo + Math.imul(al3, bl1) | 0;
      mid = mid + Math.imul(al3, bh1) | 0;
      mid = mid + Math.imul(ah3, bl1) | 0;
      hi = hi + Math.imul(ah3, bh1) | 0;
      lo = lo + Math.imul(al2, bl2) | 0;
      mid = mid + Math.imul(al2, bh2) | 0;
      mid = mid + Math.imul(ah2, bl2) | 0;
      hi = hi + Math.imul(ah2, bh2) | 0;
      lo = lo + Math.imul(al1, bl3) | 0;
      mid = mid + Math.imul(al1, bh3) | 0;
      mid = mid + Math.imul(ah1, bl3) | 0;
      hi = hi + Math.imul(ah1, bh3) | 0;
      lo = lo + Math.imul(al0, bl4) | 0;
      mid = mid + Math.imul(al0, bh4) | 0;
      mid = mid + Math.imul(ah0, bl4) | 0;
      hi = hi + Math.imul(ah0, bh4) | 0;
      var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
      w4 &= 67108863;
      lo = Math.imul(al5, bl0);
      mid = Math.imul(al5, bh0);
      mid = mid + Math.imul(ah5, bl0) | 0;
      hi = Math.imul(ah5, bh0);
      lo = lo + Math.imul(al4, bl1) | 0;
      mid = mid + Math.imul(al4, bh1) | 0;
      mid = mid + Math.imul(ah4, bl1) | 0;
      hi = hi + Math.imul(ah4, bh1) | 0;
      lo = lo + Math.imul(al3, bl2) | 0;
      mid = mid + Math.imul(al3, bh2) | 0;
      mid = mid + Math.imul(ah3, bl2) | 0;
      hi = hi + Math.imul(ah3, bh2) | 0;
      lo = lo + Math.imul(al2, bl3) | 0;
      mid = mid + Math.imul(al2, bh3) | 0;
      mid = mid + Math.imul(ah2, bl3) | 0;
      hi = hi + Math.imul(ah2, bh3) | 0;
      lo = lo + Math.imul(al1, bl4) | 0;
      mid = mid + Math.imul(al1, bh4) | 0;
      mid = mid + Math.imul(ah1, bl4) | 0;
      hi = hi + Math.imul(ah1, bh4) | 0;
      lo = lo + Math.imul(al0, bl5) | 0;
      mid = mid + Math.imul(al0, bh5) | 0;
      mid = mid + Math.imul(ah0, bl5) | 0;
      hi = hi + Math.imul(ah0, bh5) | 0;
      var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
      w5 &= 67108863;
      lo = Math.imul(al6, bl0);
      mid = Math.imul(al6, bh0);
      mid = mid + Math.imul(ah6, bl0) | 0;
      hi = Math.imul(ah6, bh0);
      lo = lo + Math.imul(al5, bl1) | 0;
      mid = mid + Math.imul(al5, bh1) | 0;
      mid = mid + Math.imul(ah5, bl1) | 0;
      hi = hi + Math.imul(ah5, bh1) | 0;
      lo = lo + Math.imul(al4, bl2) | 0;
      mid = mid + Math.imul(al4, bh2) | 0;
      mid = mid + Math.imul(ah4, bl2) | 0;
      hi = hi + Math.imul(ah4, bh2) | 0;
      lo = lo + Math.imul(al3, bl3) | 0;
      mid = mid + Math.imul(al3, bh3) | 0;
      mid = mid + Math.imul(ah3, bl3) | 0;
      hi = hi + Math.imul(ah3, bh3) | 0;
      lo = lo + Math.imul(al2, bl4) | 0;
      mid = mid + Math.imul(al2, bh4) | 0;
      mid = mid + Math.imul(ah2, bl4) | 0;
      hi = hi + Math.imul(ah2, bh4) | 0;
      lo = lo + Math.imul(al1, bl5) | 0;
      mid = mid + Math.imul(al1, bh5) | 0;
      mid = mid + Math.imul(ah1, bl5) | 0;
      hi = hi + Math.imul(ah1, bh5) | 0;
      lo = lo + Math.imul(al0, bl6) | 0;
      mid = mid + Math.imul(al0, bh6) | 0;
      mid = mid + Math.imul(ah0, bl6) | 0;
      hi = hi + Math.imul(ah0, bh6) | 0;
      var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
      w6 &= 67108863;
      lo = Math.imul(al7, bl0);
      mid = Math.imul(al7, bh0);
      mid = mid + Math.imul(ah7, bl0) | 0;
      hi = Math.imul(ah7, bh0);
      lo = lo + Math.imul(al6, bl1) | 0;
      mid = mid + Math.imul(al6, bh1) | 0;
      mid = mid + Math.imul(ah6, bl1) | 0;
      hi = hi + Math.imul(ah6, bh1) | 0;
      lo = lo + Math.imul(al5, bl2) | 0;
      mid = mid + Math.imul(al5, bh2) | 0;
      mid = mid + Math.imul(ah5, bl2) | 0;
      hi = hi + Math.imul(ah5, bh2) | 0;
      lo = lo + Math.imul(al4, bl3) | 0;
      mid = mid + Math.imul(al4, bh3) | 0;
      mid = mid + Math.imul(ah4, bl3) | 0;
      hi = hi + Math.imul(ah4, bh3) | 0;
      lo = lo + Math.imul(al3, bl4) | 0;
      mid = mid + Math.imul(al3, bh4) | 0;
      mid = mid + Math.imul(ah3, bl4) | 0;
      hi = hi + Math.imul(ah3, bh4) | 0;
      lo = lo + Math.imul(al2, bl5) | 0;
      mid = mid + Math.imul(al2, bh5) | 0;
      mid = mid + Math.imul(ah2, bl5) | 0;
      hi = hi + Math.imul(ah2, bh5) | 0;
      lo = lo + Math.imul(al1, bl6) | 0;
      mid = mid + Math.imul(al1, bh6) | 0;
      mid = mid + Math.imul(ah1, bl6) | 0;
      hi = hi + Math.imul(ah1, bh6) | 0;
      lo = lo + Math.imul(al0, bl7) | 0;
      mid = mid + Math.imul(al0, bh7) | 0;
      mid = mid + Math.imul(ah0, bl7) | 0;
      hi = hi + Math.imul(ah0, bh7) | 0;
      var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
      w7 &= 67108863;
      lo = Math.imul(al8, bl0);
      mid = Math.imul(al8, bh0);
      mid = mid + Math.imul(ah8, bl0) | 0;
      hi = Math.imul(ah8, bh0);
      lo = lo + Math.imul(al7, bl1) | 0;
      mid = mid + Math.imul(al7, bh1) | 0;
      mid = mid + Math.imul(ah7, bl1) | 0;
      hi = hi + Math.imul(ah7, bh1) | 0;
      lo = lo + Math.imul(al6, bl2) | 0;
      mid = mid + Math.imul(al6, bh2) | 0;
      mid = mid + Math.imul(ah6, bl2) | 0;
      hi = hi + Math.imul(ah6, bh2) | 0;
      lo = lo + Math.imul(al5, bl3) | 0;
      mid = mid + Math.imul(al5, bh3) | 0;
      mid = mid + Math.imul(ah5, bl3) | 0;
      hi = hi + Math.imul(ah5, bh3) | 0;
      lo = lo + Math.imul(al4, bl4) | 0;
      mid = mid + Math.imul(al4, bh4) | 0;
      mid = mid + Math.imul(ah4, bl4) | 0;
      hi = hi + Math.imul(ah4, bh4) | 0;
      lo = lo + Math.imul(al3, bl5) | 0;
      mid = mid + Math.imul(al3, bh5) | 0;
      mid = mid + Math.imul(ah3, bl5) | 0;
      hi = hi + Math.imul(ah3, bh5) | 0;
      lo = lo + Math.imul(al2, bl6) | 0;
      mid = mid + Math.imul(al2, bh6) | 0;
      mid = mid + Math.imul(ah2, bl6) | 0;
      hi = hi + Math.imul(ah2, bh6) | 0;
      lo = lo + Math.imul(al1, bl7) | 0;
      mid = mid + Math.imul(al1, bh7) | 0;
      mid = mid + Math.imul(ah1, bl7) | 0;
      hi = hi + Math.imul(ah1, bh7) | 0;
      lo = lo + Math.imul(al0, bl8) | 0;
      mid = mid + Math.imul(al0, bh8) | 0;
      mid = mid + Math.imul(ah0, bl8) | 0;
      hi = hi + Math.imul(ah0, bh8) | 0;
      var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
      w8 &= 67108863;
      lo = Math.imul(al9, bl0);
      mid = Math.imul(al9, bh0);
      mid = mid + Math.imul(ah9, bl0) | 0;
      hi = Math.imul(ah9, bh0);
      lo = lo + Math.imul(al8, bl1) | 0;
      mid = mid + Math.imul(al8, bh1) | 0;
      mid = mid + Math.imul(ah8, bl1) | 0;
      hi = hi + Math.imul(ah8, bh1) | 0;
      lo = lo + Math.imul(al7, bl2) | 0;
      mid = mid + Math.imul(al7, bh2) | 0;
      mid = mid + Math.imul(ah7, bl2) | 0;
      hi = hi + Math.imul(ah7, bh2) | 0;
      lo = lo + Math.imul(al6, bl3) | 0;
      mid = mid + Math.imul(al6, bh3) | 0;
      mid = mid + Math.imul(ah6, bl3) | 0;
      hi = hi + Math.imul(ah6, bh3) | 0;
      lo = lo + Math.imul(al5, bl4) | 0;
      mid = mid + Math.imul(al5, bh4) | 0;
      mid = mid + Math.imul(ah5, bl4) | 0;
      hi = hi + Math.imul(ah5, bh4) | 0;
      lo = lo + Math.imul(al4, bl5) | 0;
      mid = mid + Math.imul(al4, bh5) | 0;
      mid = mid + Math.imul(ah4, bl5) | 0;
      hi = hi + Math.imul(ah4, bh5) | 0;
      lo = lo + Math.imul(al3, bl6) | 0;
      mid = mid + Math.imul(al3, bh6) | 0;
      mid = mid + Math.imul(ah3, bl6) | 0;
      hi = hi + Math.imul(ah3, bh6) | 0;
      lo = lo + Math.imul(al2, bl7) | 0;
      mid = mid + Math.imul(al2, bh7) | 0;
      mid = mid + Math.imul(ah2, bl7) | 0;
      hi = hi + Math.imul(ah2, bh7) | 0;
      lo = lo + Math.imul(al1, bl8) | 0;
      mid = mid + Math.imul(al1, bh8) | 0;
      mid = mid + Math.imul(ah1, bl8) | 0;
      hi = hi + Math.imul(ah1, bh8) | 0;
      lo = lo + Math.imul(al0, bl9) | 0;
      mid = mid + Math.imul(al0, bh9) | 0;
      mid = mid + Math.imul(ah0, bl9) | 0;
      hi = hi + Math.imul(ah0, bh9) | 0;
      var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
      w9 &= 67108863;
      lo = Math.imul(al9, bl1);
      mid = Math.imul(al9, bh1);
      mid = mid + Math.imul(ah9, bl1) | 0;
      hi = Math.imul(ah9, bh1);
      lo = lo + Math.imul(al8, bl2) | 0;
      mid = mid + Math.imul(al8, bh2) | 0;
      mid = mid + Math.imul(ah8, bl2) | 0;
      hi = hi + Math.imul(ah8, bh2) | 0;
      lo = lo + Math.imul(al7, bl3) | 0;
      mid = mid + Math.imul(al7, bh3) | 0;
      mid = mid + Math.imul(ah7, bl3) | 0;
      hi = hi + Math.imul(ah7, bh3) | 0;
      lo = lo + Math.imul(al6, bl4) | 0;
      mid = mid + Math.imul(al6, bh4) | 0;
      mid = mid + Math.imul(ah6, bl4) | 0;
      hi = hi + Math.imul(ah6, bh4) | 0;
      lo = lo + Math.imul(al5, bl5) | 0;
      mid = mid + Math.imul(al5, bh5) | 0;
      mid = mid + Math.imul(ah5, bl5) | 0;
      hi = hi + Math.imul(ah5, bh5) | 0;
      lo = lo + Math.imul(al4, bl6) | 0;
      mid = mid + Math.imul(al4, bh6) | 0;
      mid = mid + Math.imul(ah4, bl6) | 0;
      hi = hi + Math.imul(ah4, bh6) | 0;
      lo = lo + Math.imul(al3, bl7) | 0;
      mid = mid + Math.imul(al3, bh7) | 0;
      mid = mid + Math.imul(ah3, bl7) | 0;
      hi = hi + Math.imul(ah3, bh7) | 0;
      lo = lo + Math.imul(al2, bl8) | 0;
      mid = mid + Math.imul(al2, bh8) | 0;
      mid = mid + Math.imul(ah2, bl8) | 0;
      hi = hi + Math.imul(ah2, bh8) | 0;
      lo = lo + Math.imul(al1, bl9) | 0;
      mid = mid + Math.imul(al1, bh9) | 0;
      mid = mid + Math.imul(ah1, bl9) | 0;
      hi = hi + Math.imul(ah1, bh9) | 0;
      var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
      w10 &= 67108863;
      lo = Math.imul(al9, bl2);
      mid = Math.imul(al9, bh2);
      mid = mid + Math.imul(ah9, bl2) | 0;
      hi = Math.imul(ah9, bh2);
      lo = lo + Math.imul(al8, bl3) | 0;
      mid = mid + Math.imul(al8, bh3) | 0;
      mid = mid + Math.imul(ah8, bl3) | 0;
      hi = hi + Math.imul(ah8, bh3) | 0;
      lo = lo + Math.imul(al7, bl4) | 0;
      mid = mid + Math.imul(al7, bh4) | 0;
      mid = mid + Math.imul(ah7, bl4) | 0;
      hi = hi + Math.imul(ah7, bh4) | 0;
      lo = lo + Math.imul(al6, bl5) | 0;
      mid = mid + Math.imul(al6, bh5) | 0;
      mid = mid + Math.imul(ah6, bl5) | 0;
      hi = hi + Math.imul(ah6, bh5) | 0;
      lo = lo + Math.imul(al5, bl6) | 0;
      mid = mid + Math.imul(al5, bh6) | 0;
      mid = mid + Math.imul(ah5, bl6) | 0;
      hi = hi + Math.imul(ah5, bh6) | 0;
      lo = lo + Math.imul(al4, bl7) | 0;
      mid = mid + Math.imul(al4, bh7) | 0;
      mid = mid + Math.imul(ah4, bl7) | 0;
      hi = hi + Math.imul(ah4, bh7) | 0;
      lo = lo + Math.imul(al3, bl8) | 0;
      mid = mid + Math.imul(al3, bh8) | 0;
      mid = mid + Math.imul(ah3, bl8) | 0;
      hi = hi + Math.imul(ah3, bh8) | 0;
      lo = lo + Math.imul(al2, bl9) | 0;
      mid = mid + Math.imul(al2, bh9) | 0;
      mid = mid + Math.imul(ah2, bl9) | 0;
      hi = hi + Math.imul(ah2, bh9) | 0;
      var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
      w11 &= 67108863;
      lo = Math.imul(al9, bl3);
      mid = Math.imul(al9, bh3);
      mid = mid + Math.imul(ah9, bl3) | 0;
      hi = Math.imul(ah9, bh3);
      lo = lo + Math.imul(al8, bl4) | 0;
      mid = mid + Math.imul(al8, bh4) | 0;
      mid = mid + Math.imul(ah8, bl4) | 0;
      hi = hi + Math.imul(ah8, bh4) | 0;
      lo = lo + Math.imul(al7, bl5) | 0;
      mid = mid + Math.imul(al7, bh5) | 0;
      mid = mid + Math.imul(ah7, bl5) | 0;
      hi = hi + Math.imul(ah7, bh5) | 0;
      lo = lo + Math.imul(al6, bl6) | 0;
      mid = mid + Math.imul(al6, bh6) | 0;
      mid = mid + Math.imul(ah6, bl6) | 0;
      hi = hi + Math.imul(ah6, bh6) | 0;
      lo = lo + Math.imul(al5, bl7) | 0;
      mid = mid + Math.imul(al5, bh7) | 0;
      mid = mid + Math.imul(ah5, bl7) | 0;
      hi = hi + Math.imul(ah5, bh7) | 0;
      lo = lo + Math.imul(al4, bl8) | 0;
      mid = mid + Math.imul(al4, bh8) | 0;
      mid = mid + Math.imul(ah4, bl8) | 0;
      hi = hi + Math.imul(ah4, bh8) | 0;
      lo = lo + Math.imul(al3, bl9) | 0;
      mid = mid + Math.imul(al3, bh9) | 0;
      mid = mid + Math.imul(ah3, bl9) | 0;
      hi = hi + Math.imul(ah3, bh9) | 0;
      var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
      w12 &= 67108863;
      lo = Math.imul(al9, bl4);
      mid = Math.imul(al9, bh4);
      mid = mid + Math.imul(ah9, bl4) | 0;
      hi = Math.imul(ah9, bh4);
      lo = lo + Math.imul(al8, bl5) | 0;
      mid = mid + Math.imul(al8, bh5) | 0;
      mid = mid + Math.imul(ah8, bl5) | 0;
      hi = hi + Math.imul(ah8, bh5) | 0;
      lo = lo + Math.imul(al7, bl6) | 0;
      mid = mid + Math.imul(al7, bh6) | 0;
      mid = mid + Math.imul(ah7, bl6) | 0;
      hi = hi + Math.imul(ah7, bh6) | 0;
      lo = lo + Math.imul(al6, bl7) | 0;
      mid = mid + Math.imul(al6, bh7) | 0;
      mid = mid + Math.imul(ah6, bl7) | 0;
      hi = hi + Math.imul(ah6, bh7) | 0;
      lo = lo + Math.imul(al5, bl8) | 0;
      mid = mid + Math.imul(al5, bh8) | 0;
      mid = mid + Math.imul(ah5, bl8) | 0;
      hi = hi + Math.imul(ah5, bh8) | 0;
      lo = lo + Math.imul(al4, bl9) | 0;
      mid = mid + Math.imul(al4, bh9) | 0;
      mid = mid + Math.imul(ah4, bl9) | 0;
      hi = hi + Math.imul(ah4, bh9) | 0;
      var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
      w13 &= 67108863;
      lo = Math.imul(al9, bl5);
      mid = Math.imul(al9, bh5);
      mid = mid + Math.imul(ah9, bl5) | 0;
      hi = Math.imul(ah9, bh5);
      lo = lo + Math.imul(al8, bl6) | 0;
      mid = mid + Math.imul(al8, bh6) | 0;
      mid = mid + Math.imul(ah8, bl6) | 0;
      hi = hi + Math.imul(ah8, bh6) | 0;
      lo = lo + Math.imul(al7, bl7) | 0;
      mid = mid + Math.imul(al7, bh7) | 0;
      mid = mid + Math.imul(ah7, bl7) | 0;
      hi = hi + Math.imul(ah7, bh7) | 0;
      lo = lo + Math.imul(al6, bl8) | 0;
      mid = mid + Math.imul(al6, bh8) | 0;
      mid = mid + Math.imul(ah6, bl8) | 0;
      hi = hi + Math.imul(ah6, bh8) | 0;
      lo = lo + Math.imul(al5, bl9) | 0;
      mid = mid + Math.imul(al5, bh9) | 0;
      mid = mid + Math.imul(ah5, bl9) | 0;
      hi = hi + Math.imul(ah5, bh9) | 0;
      var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
      w14 &= 67108863;
      lo = Math.imul(al9, bl6);
      mid = Math.imul(al9, bh6);
      mid = mid + Math.imul(ah9, bl6) | 0;
      hi = Math.imul(ah9, bh6);
      lo = lo + Math.imul(al8, bl7) | 0;
      mid = mid + Math.imul(al8, bh7) | 0;
      mid = mid + Math.imul(ah8, bl7) | 0;
      hi = hi + Math.imul(ah8, bh7) | 0;
      lo = lo + Math.imul(al7, bl8) | 0;
      mid = mid + Math.imul(al7, bh8) | 0;
      mid = mid + Math.imul(ah7, bl8) | 0;
      hi = hi + Math.imul(ah7, bh8) | 0;
      lo = lo + Math.imul(al6, bl9) | 0;
      mid = mid + Math.imul(al6, bh9) | 0;
      mid = mid + Math.imul(ah6, bl9) | 0;
      hi = hi + Math.imul(ah6, bh9) | 0;
      var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
      w15 &= 67108863;
      lo = Math.imul(al9, bl7);
      mid = Math.imul(al9, bh7);
      mid = mid + Math.imul(ah9, bl7) | 0;
      hi = Math.imul(ah9, bh7);
      lo = lo + Math.imul(al8, bl8) | 0;
      mid = mid + Math.imul(al8, bh8) | 0;
      mid = mid + Math.imul(ah8, bl8) | 0;
      hi = hi + Math.imul(ah8, bh8) | 0;
      lo = lo + Math.imul(al7, bl9) | 0;
      mid = mid + Math.imul(al7, bh9) | 0;
      mid = mid + Math.imul(ah7, bl9) | 0;
      hi = hi + Math.imul(ah7, bh9) | 0;
      var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
      w16 &= 67108863;
      lo = Math.imul(al9, bl8);
      mid = Math.imul(al9, bh8);
      mid = mid + Math.imul(ah9, bl8) | 0;
      hi = Math.imul(ah9, bh8);
      lo = lo + Math.imul(al8, bl9) | 0;
      mid = mid + Math.imul(al8, bh9) | 0;
      mid = mid + Math.imul(ah8, bl9) | 0;
      hi = hi + Math.imul(ah8, bh9) | 0;
      var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
      w17 &= 67108863;
      lo = Math.imul(al9, bl9);
      mid = Math.imul(al9, bh9);
      mid = mid + Math.imul(ah9, bl9) | 0;
      hi = Math.imul(ah9, bh9);
      var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
      w18 &= 67108863;
      o[0] = w0;
      o[1] = w1;
      o[2] = w2;
      o[3] = w3;
      o[4] = w4;
      o[5] = w5;
      o[6] = w6;
      o[7] = w7;
      o[8] = w8;
      o[9] = w9;
      o[10] = w10;
      o[11] = w11;
      o[12] = w12;
      o[13] = w13;
      o[14] = w14;
      o[15] = w15;
      o[16] = w16;
      o[17] = w17;
      o[18] = w18;
      if (c !== 0) {
        o[19] = c;
        out.length++;
      }
      return out;
    };
    if (!Math.imul) {
      comb10MulTo = smallMulTo;
    }
    function bigMulTo(self2, num, out) {
      out.negative = num.negative ^ self2.negative;
      out.length = self2.length + num.length;
      var carry = 0;
      var hncarry = 0;
      for (var k = 0; k < out.length - 1; k++) {
        var ncarry = hncarry;
        hncarry = 0;
        var rword = carry & 67108863;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
          var i = k - j;
          var a = self2.words[i] | 0;
          var b = num.words[j] | 0;
          var r2 = a * b;
          var lo = r2 & 67108863;
          ncarry = ncarry + (r2 / 67108864 | 0) | 0;
          lo = lo + rword | 0;
          rword = lo & 67108863;
          ncarry = ncarry + (lo >>> 26) | 0;
          hncarry += ncarry >>> 26;
          ncarry &= 67108863;
        }
        out.words[k] = rword;
        carry = ncarry;
        ncarry = hncarry;
      }
      if (carry !== 0) {
        out.words[k] = carry;
      } else {
        out.length--;
      }
      return out._strip();
    }
    function jumboMulTo(self2, num, out) {
      return bigMulTo(self2, num, out);
    }
    BN2.prototype.mulTo = function mulTo(num, out) {
      var res;
      var len = this.length + num.length;
      if (this.length === 10 && num.length === 10) {
        res = comb10MulTo(this, num, out);
      } else if (len < 63) {
        res = smallMulTo(this, num, out);
      } else if (len < 1024) {
        res = bigMulTo(this, num, out);
      } else {
        res = jumboMulTo(this, num, out);
      }
      return res;
    };
    BN2.prototype.mul = function mul3(num) {
      var out = new BN2(null);
      out.words = new Array(this.length + num.length);
      return this.mulTo(num, out);
    };
    BN2.prototype.mulf = function mulf(num) {
      var out = new BN2(null);
      out.words = new Array(this.length + num.length);
      return jumboMulTo(this, num, out);
    };
    BN2.prototype.imul = function imul(num) {
      return this.clone().mulTo(num, this);
    };
    BN2.prototype.imuln = function imuln(num) {
      var isNegNum = num < 0;
      if (isNegNum)
        num = -num;
      assert2(typeof num === "number");
      assert2(num < 67108864);
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = (this.words[i] | 0) * num;
        var lo = (w & 67108863) + (carry & 67108863);
        carry >>= 26;
        carry += w / 67108864 | 0;
        carry += lo >>> 26;
        this.words[i] = lo & 67108863;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return isNegNum ? this.ineg() : this;
    };
    BN2.prototype.muln = function muln(num) {
      return this.clone().imuln(num);
    };
    BN2.prototype.sqr = function sqr() {
      return this.mul(this);
    };
    BN2.prototype.isqr = function isqr() {
      return this.imul(this.clone());
    };
    BN2.prototype.pow = function pow2(num) {
      var w = toBitArray(num);
      if (w.length === 0)
        return new BN2(1);
      var res = this;
      for (var i = 0; i < w.length; i++, res = res.sqr()) {
        if (w[i] !== 0)
          break;
      }
      if (++i < w.length) {
        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
          if (w[i] === 0)
            continue;
          res = res.mul(q);
        }
      }
      return res;
    };
    BN2.prototype.iushln = function iushln(bits) {
      assert2(typeof bits === "number" && bits >= 0);
      var r2 = bits % 26;
      var s2 = (bits - r2) / 26;
      var carryMask = 67108863 >>> 26 - r2 << 26 - r2;
      var i;
      if (r2 !== 0) {
        var carry = 0;
        for (i = 0; i < this.length; i++) {
          var newCarry = this.words[i] & carryMask;
          var c = (this.words[i] | 0) - newCarry << r2;
          this.words[i] = c | carry;
          carry = newCarry >>> 26 - r2;
        }
        if (carry) {
          this.words[i] = carry;
          this.length++;
        }
      }
      if (s2 !== 0) {
        for (i = this.length - 1; i >= 0; i--) {
          this.words[i + s2] = this.words[i];
        }
        for (i = 0; i < s2; i++) {
          this.words[i] = 0;
        }
        this.length += s2;
      }
      return this._strip();
    };
    BN2.prototype.ishln = function ishln(bits) {
      assert2(this.negative === 0);
      return this.iushln(bits);
    };
    BN2.prototype.iushrn = function iushrn(bits, hint, extended) {
      assert2(typeof bits === "number" && bits >= 0);
      var h;
      if (hint) {
        h = (hint - hint % 26) / 26;
      } else {
        h = 0;
      }
      var r2 = bits % 26;
      var s2 = Math.min((bits - r2) / 26, this.length);
      var mask = 67108863 ^ 67108863 >>> r2 << r2;
      var maskedWords = extended;
      h -= s2;
      h = Math.max(0, h);
      if (maskedWords) {
        for (var i = 0; i < s2; i++) {
          maskedWords.words[i] = this.words[i];
        }
        maskedWords.length = s2;
      }
      if (s2 === 0)
        ;
      else if (this.length > s2) {
        this.length -= s2;
        for (i = 0; i < this.length; i++) {
          this.words[i] = this.words[i + s2];
        }
      } else {
        this.words[0] = 0;
        this.length = 1;
      }
      var carry = 0;
      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
        var word = this.words[i] | 0;
        this.words[i] = carry << 26 - r2 | word >>> r2;
        carry = word & mask;
      }
      if (maskedWords && carry !== 0) {
        maskedWords.words[maskedWords.length++] = carry;
      }
      if (this.length === 0) {
        this.words[0] = 0;
        this.length = 1;
      }
      return this._strip();
    };
    BN2.prototype.ishrn = function ishrn(bits, hint, extended) {
      assert2(this.negative === 0);
      return this.iushrn(bits, hint, extended);
    };
    BN2.prototype.shln = function shln(bits) {
      return this.clone().ishln(bits);
    };
    BN2.prototype.ushln = function ushln(bits) {
      return this.clone().iushln(bits);
    };
    BN2.prototype.shrn = function shrn(bits) {
      return this.clone().ishrn(bits);
    };
    BN2.prototype.ushrn = function ushrn(bits) {
      return this.clone().iushrn(bits);
    };
    BN2.prototype.testn = function testn(bit) {
      assert2(typeof bit === "number" && bit >= 0);
      var r2 = bit % 26;
      var s2 = (bit - r2) / 26;
      var q = 1 << r2;
      if (this.length <= s2)
        return false;
      var w = this.words[s2];
      return !!(w & q);
    };
    BN2.prototype.imaskn = function imaskn(bits) {
      assert2(typeof bits === "number" && bits >= 0);
      var r2 = bits % 26;
      var s2 = (bits - r2) / 26;
      assert2(this.negative === 0, "imaskn works only with positive numbers");
      if (this.length <= s2) {
        return this;
      }
      if (r2 !== 0) {
        s2++;
      }
      this.length = Math.min(s2, this.length);
      if (r2 !== 0) {
        var mask = 67108863 ^ 67108863 >>> r2 << r2;
        this.words[this.length - 1] &= mask;
      }
      return this._strip();
    };
    BN2.prototype.maskn = function maskn(bits) {
      return this.clone().imaskn(bits);
    };
    BN2.prototype.iaddn = function iaddn(num) {
      assert2(typeof num === "number");
      assert2(num < 67108864);
      if (num < 0)
        return this.isubn(-num);
      if (this.negative !== 0) {
        if (this.length === 1 && (this.words[0] | 0) <= num) {
          this.words[0] = num - (this.words[0] | 0);
          this.negative = 0;
          return this;
        }
        this.negative = 0;
        this.isubn(num);
        this.negative = 1;
        return this;
      }
      return this._iaddn(num);
    };
    BN2.prototype._iaddn = function _iaddn(num) {
      this.words[0] += num;
      for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
        this.words[i] -= 67108864;
        if (i === this.length - 1) {
          this.words[i + 1] = 1;
        } else {
          this.words[i + 1]++;
        }
      }
      this.length = Math.max(this.length, i + 1);
      return this;
    };
    BN2.prototype.isubn = function isubn(num) {
      assert2(typeof num === "number");
      assert2(num < 67108864);
      if (num < 0)
        return this.iaddn(-num);
      if (this.negative !== 0) {
        this.negative = 0;
        this.iaddn(num);
        this.negative = 1;
        return this;
      }
      this.words[0] -= num;
      if (this.length === 1 && this.words[0] < 0) {
        this.words[0] = -this.words[0];
        this.negative = 1;
      } else {
        for (var i = 0; i < this.length && this.words[i] < 0; i++) {
          this.words[i] += 67108864;
          this.words[i + 1] -= 1;
        }
      }
      return this._strip();
    };
    BN2.prototype.addn = function addn(num) {
      return this.clone().iaddn(num);
    };
    BN2.prototype.subn = function subn(num) {
      return this.clone().isubn(num);
    };
    BN2.prototype.iabs = function iabs() {
      this.negative = 0;
      return this;
    };
    BN2.prototype.abs = function abs2() {
      return this.clone().iabs();
    };
    BN2.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
      var len = num.length + shift;
      var i;
      this._expand(len);
      var w;
      var carry = 0;
      for (i = 0; i < num.length; i++) {
        w = (this.words[i + shift] | 0) + carry;
        var right = (num.words[i] | 0) * mul3;
        w -= right & 67108863;
        carry = (w >> 26) - (right / 67108864 | 0);
        this.words[i + shift] = w & 67108863;
      }
      for (; i < this.length - shift; i++) {
        w = (this.words[i + shift] | 0) + carry;
        carry = w >> 26;
        this.words[i + shift] = w & 67108863;
      }
      if (carry === 0)
        return this._strip();
      assert2(carry === -1);
      carry = 0;
      for (i = 0; i < this.length; i++) {
        w = -(this.words[i] | 0) + carry;
        carry = w >> 26;
        this.words[i] = w & 67108863;
      }
      this.negative = 1;
      return this._strip();
    };
    BN2.prototype._wordDiv = function _wordDiv(num, mode) {
      var shift = this.length - num.length;
      var a = this.clone();
      var b = num;
      var bhi = b.words[b.length - 1] | 0;
      var bhiBits = this._countBits(bhi);
      shift = 26 - bhiBits;
      if (shift !== 0) {
        b = b.ushln(shift);
        a.iushln(shift);
        bhi = b.words[b.length - 1] | 0;
      }
      var m = a.length - b.length;
      var q;
      if (mode !== "mod") {
        q = new BN2(null);
        q.length = m + 1;
        q.words = new Array(q.length);
        for (var i = 0; i < q.length; i++) {
          q.words[i] = 0;
        }
      }
      var diff = a.clone()._ishlnsubmul(b, 1, m);
      if (diff.negative === 0) {
        a = diff;
        if (q) {
          q.words[m] = 1;
        }
      }
      for (var j = m - 1; j >= 0; j--) {
        var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
        qj = Math.min(qj / bhi | 0, 67108863);
        a._ishlnsubmul(b, qj, j);
        while (a.negative !== 0) {
          qj--;
          a.negative = 0;
          a._ishlnsubmul(b, 1, j);
          if (!a.isZero()) {
            a.negative ^= 1;
          }
        }
        if (q) {
          q.words[j] = qj;
        }
      }
      if (q) {
        q._strip();
      }
      a._strip();
      if (mode !== "div" && shift !== 0) {
        a.iushrn(shift);
      }
      return {
        div: q || null,
        mod: a
      };
    };
    BN2.prototype.divmod = function divmod(num, mode, positive) {
      assert2(!num.isZero());
      if (this.isZero()) {
        return {
          div: new BN2(0),
          mod: new BN2(0)
        };
      }
      var div2, mod, res;
      if (this.negative !== 0 && num.negative === 0) {
        res = this.neg().divmod(num, mode);
        if (mode !== "mod") {
          div2 = res.div.neg();
        }
        if (mode !== "div") {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.iadd(num);
          }
        }
        return {
          div: div2,
          mod
        };
      }
      if (this.negative === 0 && num.negative !== 0) {
        res = this.divmod(num.neg(), mode);
        if (mode !== "mod") {
          div2 = res.div.neg();
        }
        return {
          div: div2,
          mod: res.mod
        };
      }
      if ((this.negative & num.negative) !== 0) {
        res = this.neg().divmod(num.neg(), mode);
        if (mode !== "div") {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.isub(num);
          }
        }
        return {
          div: res.div,
          mod
        };
      }
      if (num.length > this.length || this.cmp(num) < 0) {
        return {
          div: new BN2(0),
          mod: this
        };
      }
      if (num.length === 1) {
        if (mode === "div") {
          return {
            div: this.divn(num.words[0]),
            mod: null
          };
        }
        if (mode === "mod") {
          return {
            div: null,
            mod: new BN2(this.modrn(num.words[0]))
          };
        }
        return {
          div: this.divn(num.words[0]),
          mod: new BN2(this.modrn(num.words[0]))
        };
      }
      return this._wordDiv(num, mode);
    };
    BN2.prototype.div = function div2(num) {
      return this.divmod(num, "div", false).div;
    };
    BN2.prototype.mod = function mod(num) {
      return this.divmod(num, "mod", false).mod;
    };
    BN2.prototype.umod = function umod(num) {
      return this.divmod(num, "mod", true).mod;
    };
    BN2.prototype.divRound = function divRound(num) {
      var dm = this.divmod(num);
      if (dm.mod.isZero())
        return dm.div;
      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
      var half = num.ushrn(1);
      var r2 = num.andln(1);
      var cmp = mod.cmp(half);
      if (cmp < 0 || r2 === 1 && cmp === 0)
        return dm.div;
      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN2.prototype.modrn = function modrn(num) {
      var isNegNum = num < 0;
      if (isNegNum)
        num = -num;
      assert2(num <= 67108863);
      var p = (1 << 26) % num;
      var acc = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        acc = (p * acc + (this.words[i] | 0)) % num;
      }
      return isNegNum ? -acc : acc;
    };
    BN2.prototype.modn = function modn(num) {
      return this.modrn(num);
    };
    BN2.prototype.idivn = function idivn(num) {
      var isNegNum = num < 0;
      if (isNegNum)
        num = -num;
      assert2(num <= 67108863);
      var carry = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var w = (this.words[i] | 0) + carry * 67108864;
        this.words[i] = w / num | 0;
        carry = w % num;
      }
      this._strip();
      return isNegNum ? this.ineg() : this;
    };
    BN2.prototype.divn = function divn(num) {
      return this.clone().idivn(num);
    };
    BN2.prototype.egcd = function egcd(p) {
      assert2(p.negative === 0);
      assert2(!p.isZero());
      var x = this;
      var y = p.clone();
      if (x.negative !== 0) {
        x = x.umod(p);
      } else {
        x = x.clone();
      }
      var A = new BN2(1);
      var B = new BN2(0);
      var C = new BN2(0);
      var D = new BN2(1);
      var g = 0;
      while (x.isEven() && y.isEven()) {
        x.iushrn(1);
        y.iushrn(1);
        ++g;
      }
      var yp = y.clone();
      var xp = x.clone();
      while (!x.isZero()) {
        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
          ;
        if (i > 0) {
          x.iushrn(i);
          while (i-- > 0) {
            if (A.isOdd() || B.isOdd()) {
              A.iadd(yp);
              B.isub(xp);
            }
            A.iushrn(1);
            B.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
          ;
        if (j > 0) {
          y.iushrn(j);
          while (j-- > 0) {
            if (C.isOdd() || D.isOdd()) {
              C.iadd(yp);
              D.isub(xp);
            }
            C.iushrn(1);
            D.iushrn(1);
          }
        }
        if (x.cmp(y) >= 0) {
          x.isub(y);
          A.isub(C);
          B.isub(D);
        } else {
          y.isub(x);
          C.isub(A);
          D.isub(B);
        }
      }
      return {
        a: C,
        b: D,
        gcd: y.iushln(g)
      };
    };
    BN2.prototype._invmp = function _invmp(p) {
      assert2(p.negative === 0);
      assert2(!p.isZero());
      var a = this;
      var b = p.clone();
      if (a.negative !== 0) {
        a = a.umod(p);
      } else {
        a = a.clone();
      }
      var x1 = new BN2(1);
      var x2 = new BN2(0);
      var delta = b.clone();
      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
          ;
        if (i > 0) {
          a.iushrn(i);
          while (i-- > 0) {
            if (x1.isOdd()) {
              x1.iadd(delta);
            }
            x1.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
          ;
        if (j > 0) {
          b.iushrn(j);
          while (j-- > 0) {
            if (x2.isOdd()) {
              x2.iadd(delta);
            }
            x2.iushrn(1);
          }
        }
        if (a.cmp(b) >= 0) {
          a.isub(b);
          x1.isub(x2);
        } else {
          b.isub(a);
          x2.isub(x1);
        }
      }
      var res;
      if (a.cmpn(1) === 0) {
        res = x1;
      } else {
        res = x2;
      }
      if (res.cmpn(0) < 0) {
        res.iadd(p);
      }
      return res;
    };
    BN2.prototype.gcd = function gcd(num) {
      if (this.isZero())
        return num.abs();
      if (num.isZero())
        return this.abs();
      var a = this.clone();
      var b = num.clone();
      a.negative = 0;
      b.negative = 0;
      for (var shift = 0; a.isEven() && b.isEven(); shift++) {
        a.iushrn(1);
        b.iushrn(1);
      }
      do {
        while (a.isEven()) {
          a.iushrn(1);
        }
        while (b.isEven()) {
          b.iushrn(1);
        }
        var r2 = a.cmp(b);
        if (r2 < 0) {
          var t = a;
          a = b;
          b = t;
        } else if (r2 === 0 || b.cmpn(1) === 0) {
          break;
        }
        a.isub(b);
      } while (true);
      return b.iushln(shift);
    };
    BN2.prototype.invm = function invm(num) {
      return this.egcd(num).a.umod(num);
    };
    BN2.prototype.isEven = function isEven() {
      return (this.words[0] & 1) === 0;
    };
    BN2.prototype.isOdd = function isOdd() {
      return (this.words[0] & 1) === 1;
    };
    BN2.prototype.andln = function andln(num) {
      return this.words[0] & num;
    };
    BN2.prototype.bincn = function bincn(bit) {
      assert2(typeof bit === "number");
      var r2 = bit % 26;
      var s2 = (bit - r2) / 26;
      var q = 1 << r2;
      if (this.length <= s2) {
        this._expand(s2 + 1);
        this.words[s2] |= q;
        return this;
      }
      var carry = q;
      for (var i = s2; carry !== 0 && i < this.length; i++) {
        var w = this.words[i] | 0;
        w += carry;
        carry = w >>> 26;
        w &= 67108863;
        this.words[i] = w;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return this;
    };
    BN2.prototype.isZero = function isZero() {
      return this.length === 1 && this.words[0] === 0;
    };
    BN2.prototype.cmpn = function cmpn(num) {
      var negative = num < 0;
      if (this.negative !== 0 && !negative)
        return -1;
      if (this.negative === 0 && negative)
        return 1;
      this._strip();
      var res;
      if (this.length > 1) {
        res = 1;
      } else {
        if (negative) {
          num = -num;
        }
        assert2(num <= 67108863, "Number is too big");
        var w = this.words[0] | 0;
        res = w === num ? 0 : w < num ? -1 : 1;
      }
      if (this.negative !== 0)
        return -res | 0;
      return res;
    };
    BN2.prototype.cmp = function cmp(num) {
      if (this.negative !== 0 && num.negative === 0)
        return -1;
      if (this.negative === 0 && num.negative !== 0)
        return 1;
      var res = this.ucmp(num);
      if (this.negative !== 0)
        return -res | 0;
      return res;
    };
    BN2.prototype.ucmp = function ucmp(num) {
      if (this.length > num.length)
        return 1;
      if (this.length < num.length)
        return -1;
      var res = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var a = this.words[i] | 0;
        var b = num.words[i] | 0;
        if (a === b)
          continue;
        if (a < b) {
          res = -1;
        } else if (a > b) {
          res = 1;
        }
        break;
      }
      return res;
    };
    BN2.prototype.gtn = function gtn(num) {
      return this.cmpn(num) === 1;
    };
    BN2.prototype.gt = function gt2(num) {
      return this.cmp(num) === 1;
    };
    BN2.prototype.gten = function gten(num) {
      return this.cmpn(num) >= 0;
    };
    BN2.prototype.gte = function gte2(num) {
      return this.cmp(num) >= 0;
    };
    BN2.prototype.ltn = function ltn(num) {
      return this.cmpn(num) === -1;
    };
    BN2.prototype.lt = function lt2(num) {
      return this.cmp(num) === -1;
    };
    BN2.prototype.lten = function lten(num) {
      return this.cmpn(num) <= 0;
    };
    BN2.prototype.lte = function lte2(num) {
      return this.cmp(num) <= 0;
    };
    BN2.prototype.eqn = function eqn(num) {
      return this.cmpn(num) === 0;
    };
    BN2.prototype.eq = function eq5(num) {
      return this.cmp(num) === 0;
    };
    BN2.red = function red(num) {
      return new Red(num);
    };
    BN2.prototype.toRed = function toRed(ctx) {
      assert2(!this.red, "Already a number in reduction context");
      assert2(this.negative === 0, "red works only with positives");
      return ctx.convertTo(this)._forceRed(ctx);
    };
    BN2.prototype.fromRed = function fromRed() {
      assert2(this.red, "fromRed works only with numbers in reduction context");
      return this.red.convertFrom(this);
    };
    BN2.prototype._forceRed = function _forceRed(ctx) {
      this.red = ctx;
      return this;
    };
    BN2.prototype.forceRed = function forceRed(ctx) {
      assert2(!this.red, "Already a number in reduction context");
      return this._forceRed(ctx);
    };
    BN2.prototype.redAdd = function redAdd(num) {
      assert2(this.red, "redAdd works only with red numbers");
      return this.red.add(this, num);
    };
    BN2.prototype.redIAdd = function redIAdd(num) {
      assert2(this.red, "redIAdd works only with red numbers");
      return this.red.iadd(this, num);
    };
    BN2.prototype.redSub = function redSub(num) {
      assert2(this.red, "redSub works only with red numbers");
      return this.red.sub(this, num);
    };
    BN2.prototype.redISub = function redISub(num) {
      assert2(this.red, "redISub works only with red numbers");
      return this.red.isub(this, num);
    };
    BN2.prototype.redShl = function redShl(num) {
      assert2(this.red, "redShl works only with red numbers");
      return this.red.shl(this, num);
    };
    BN2.prototype.redMul = function redMul(num) {
      assert2(this.red, "redMul works only with red numbers");
      this.red._verify2(this, num);
      return this.red.mul(this, num);
    };
    BN2.prototype.redIMul = function redIMul(num) {
      assert2(this.red, "redMul works only with red numbers");
      this.red._verify2(this, num);
      return this.red.imul(this, num);
    };
    BN2.prototype.redSqr = function redSqr() {
      assert2(this.red, "redSqr works only with red numbers");
      this.red._verify1(this);
      return this.red.sqr(this);
    };
    BN2.prototype.redISqr = function redISqr() {
      assert2(this.red, "redISqr works only with red numbers");
      this.red._verify1(this);
      return this.red.isqr(this);
    };
    BN2.prototype.redSqrt = function redSqrt() {
      assert2(this.red, "redSqrt works only with red numbers");
      this.red._verify1(this);
      return this.red.sqrt(this);
    };
    BN2.prototype.redInvm = function redInvm() {
      assert2(this.red, "redInvm works only with red numbers");
      this.red._verify1(this);
      return this.red.invm(this);
    };
    BN2.prototype.redNeg = function redNeg() {
      assert2(this.red, "redNeg works only with red numbers");
      this.red._verify1(this);
      return this.red.neg(this);
    };
    BN2.prototype.redPow = function redPow(num) {
      assert2(this.red && !num.red, "redPow(normalNum)");
      this.red._verify1(this);
      return this.red.pow(this, num);
    };
    var primes = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function MPrime(name2, p) {
      this.name = name2;
      this.p = new BN2(p, 16);
      this.n = this.p.bitLength();
      this.k = new BN2(1).iushln(this.n).isub(this.p);
      this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
      var tmp = new BN2(null);
      tmp.words = new Array(Math.ceil(this.n / 13));
      return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
      var r2 = num;
      var rlen;
      do {
        this.split(r2, this.tmp);
        r2 = this.imulK(r2);
        r2 = r2.iadd(this.tmp);
        rlen = r2.bitLength();
      } while (rlen > this.n);
      var cmp = rlen < this.n ? -1 : r2.ucmp(this.p);
      if (cmp === 0) {
        r2.words[0] = 0;
        r2.length = 1;
      } else if (cmp > 0) {
        r2.isub(this.p);
      } else {
        if (r2.strip !== void 0) {
          r2.strip();
        } else {
          r2._strip();
        }
      }
      return r2;
    };
    MPrime.prototype.split = function split(input, out) {
      input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
      return num.imul(this.k);
    };
    function K256() {
      MPrime.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    inherits2(K256, MPrime);
    K256.prototype.split = function split(input, output) {
      var mask = 4194303;
      var outLen = Math.min(input.length, 9);
      for (var i = 0; i < outLen; i++) {
        output.words[i] = input.words[i];
      }
      output.length = outLen;
      if (input.length <= 9) {
        input.words[0] = 0;
        input.length = 1;
        return;
      }
      var prev = input.words[9];
      output.words[output.length++] = prev & mask;
      for (i = 10; i < input.length; i++) {
        var next = input.words[i] | 0;
        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
        prev = next;
      }
      prev >>>= 22;
      input.words[i - 10] = prev;
      if (prev === 0 && input.length > 10) {
        input.length -= 10;
      } else {
        input.length -= 9;
      }
    };
    K256.prototype.imulK = function imulK(num) {
      num.words[num.length] = 0;
      num.words[num.length + 1] = 0;
      num.length += 2;
      var lo = 0;
      for (var i = 0; i < num.length; i++) {
        var w = num.words[i] | 0;
        lo += w * 977;
        num.words[i] = lo & 67108863;
        lo = w * 64 + (lo / 67108864 | 0);
      }
      if (num.words[num.length - 1] === 0) {
        num.length--;
        if (num.words[num.length - 1] === 0) {
          num.length--;
        }
      }
      return num;
    };
    function P224() {
      MPrime.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    inherits2(P224, MPrime);
    function P192() {
      MPrime.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    inherits2(P192, MPrime);
    function P25519() {
      MPrime.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    inherits2(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
      var carry = 0;
      for (var i = 0; i < num.length; i++) {
        var hi = (num.words[i] | 0) * 19 + carry;
        var lo = hi & 67108863;
        hi >>>= 26;
        num.words[i] = lo;
        carry = hi;
      }
      if (carry !== 0) {
        num.words[num.length++] = carry;
      }
      return num;
    };
    BN2._prime = function prime(name2) {
      if (primes[name2])
        return primes[name2];
      var prime2;
      if (name2 === "k256") {
        prime2 = new K256();
      } else if (name2 === "p224") {
        prime2 = new P224();
      } else if (name2 === "p192") {
        prime2 = new P192();
      } else if (name2 === "p25519") {
        prime2 = new P25519();
      } else {
        throw new Error("Unknown prime " + name2);
      }
      primes[name2] = prime2;
      return prime2;
    };
    function Red(m) {
      if (typeof m === "string") {
        var prime = BN2._prime(m);
        this.m = prime.p;
        this.prime = prime;
      } else {
        assert2(m.gtn(1), "modulus must be greater than 1");
        this.m = m;
        this.prime = null;
      }
    }
    Red.prototype._verify1 = function _verify1(a) {
      assert2(a.negative === 0, "red works only with positives");
      assert2(a.red, "red works only with red numbers");
    };
    Red.prototype._verify2 = function _verify2(a, b) {
      assert2((a.negative | b.negative) === 0, "red works only with positives");
      assert2(
        a.red && a.red === b.red,
        "red works only with red numbers"
      );
    };
    Red.prototype.imod = function imod(a) {
      if (this.prime)
        return this.prime.ireduce(a)._forceRed(this);
      move(a, a.umod(this.m)._forceRed(this));
      return a;
    };
    Red.prototype.neg = function neg3(a) {
      if (a.isZero()) {
        return a.clone();
      }
      return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add3(a, b) {
      this._verify2(a, b);
      var res = a.add(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
      this._verify2(a, b);
      var res = a.iadd(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res;
    };
    Red.prototype.sub = function sub(a, b) {
      this._verify2(a, b);
      var res = a.sub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
      this._verify2(a, b);
      var res = a.isub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res;
    };
    Red.prototype.shl = function shl(a, num) {
      this._verify1(a);
      return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
      this._verify2(a, b);
      return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul3(a, b) {
      this._verify2(a, b);
      return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
      return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
      return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
      if (a.isZero())
        return a.clone();
      var mod3 = this.m.andln(3);
      assert2(mod3 % 2 === 1);
      if (mod3 === 3) {
        var pow2 = this.m.add(new BN2(1)).iushrn(2);
        return this.pow(a, pow2);
      }
      var q = this.m.subn(1);
      var s2 = 0;
      while (!q.isZero() && q.andln(1) === 0) {
        s2++;
        q.iushrn(1);
      }
      assert2(!q.isZero());
      var one = new BN2(1).toRed(this);
      var nOne = one.redNeg();
      var lpow = this.m.subn(1).iushrn(1);
      var z = this.m.bitLength();
      z = new BN2(2 * z * z).toRed(this);
      while (this.pow(z, lpow).cmp(nOne) !== 0) {
        z.redIAdd(nOne);
      }
      var c = this.pow(z, q);
      var r2 = this.pow(a, q.addn(1).iushrn(1));
      var t = this.pow(a, q);
      var m = s2;
      while (t.cmp(one) !== 0) {
        var tmp = t;
        for (var i = 0; tmp.cmp(one) !== 0; i++) {
          tmp = tmp.redSqr();
        }
        assert2(i < m);
        var b = this.pow(c, new BN2(1).iushln(m - i - 1));
        r2 = r2.redMul(b);
        c = b.redSqr();
        t = t.redMul(c);
        m = i;
      }
      return r2;
    };
    Red.prototype.invm = function invm(a) {
      var inv = a._invmp(this.m);
      if (inv.negative !== 0) {
        inv.negative = 0;
        return this.imod(inv).redNeg();
      } else {
        return this.imod(inv);
      }
    };
    Red.prototype.pow = function pow2(a, num) {
      if (num.isZero())
        return new BN2(1).toRed(this);
      if (num.cmpn(1) === 0)
        return a.clone();
      var windowSize = 4;
      var wnd = new Array(1 << windowSize);
      wnd[0] = new BN2(1).toRed(this);
      wnd[1] = a;
      for (var i = 2; i < wnd.length; i++) {
        wnd[i] = this.mul(wnd[i - 1], a);
      }
      var res = wnd[0];
      var current = 0;
      var currentLen = 0;
      var start = num.bitLength() % 26;
      if (start === 0) {
        start = 26;
      }
      for (i = num.length - 1; i >= 0; i--) {
        var word = num.words[i];
        for (var j = start - 1; j >= 0; j--) {
          var bit = word >> j & 1;
          if (res !== wnd[0]) {
            res = this.sqr(res);
          }
          if (bit === 0 && current === 0) {
            currentLen = 0;
            continue;
          }
          current <<= 1;
          current |= bit;
          currentLen++;
          if (currentLen !== windowSize && (i !== 0 || j !== 0))
            continue;
          res = this.mul(res, wnd[current]);
          currentLen = 0;
          current = 0;
        }
        start = 26;
      }
      return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
      var r2 = num.umod(this.m);
      return r2 === num ? r2.clone() : r2;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
      var res = num.clone();
      res.red = null;
      return res;
    };
    BN2.mont = function mont(num) {
      return new Mont(num);
    };
    function Mont(m) {
      Red.call(this, m);
      this.shift = this.m.bitLength();
      if (this.shift % 26 !== 0) {
        this.shift += 26 - this.shift % 26;
      }
      this.r = new BN2(1).iushln(this.shift);
      this.r2 = this.imod(this.r.sqr());
      this.rinv = this.r._invmp(this.m);
      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
      this.minv = this.minv.umod(this.r);
      this.minv = this.r.sub(this.minv);
    }
    inherits2(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
      return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
      var r2 = this.imod(num.mul(this.rinv));
      r2.red = null;
      return r2;
    };
    Mont.prototype.imul = function imul(a, b) {
      if (a.isZero() || b.isZero()) {
        a.words[0] = 0;
        a.length = 1;
        return a;
      }
      var t = a.imul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.mul = function mul3(a, b) {
      if (a.isZero() || b.isZero())
        return new BN2(0)._forceRed(this);
      var t = a.mul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
      var res = this.imod(a._invmp(this.m).mul(this.r2));
      return res._forceRed(this);
    };
  })(module, commonjsGlobal);
})(bn$1);
var _BN = bn$1.exports;
const version$g = "logger/5.7.0";
let _permanentCensorErrors = false;
let _censorErrors = false;
const LogLevels = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
let _logLevel = LogLevels["default"];
let _globalLogger = null;
function _checkNormalize() {
  try {
    const missing = [];
    ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
      try {
        if ("test".normalize(form) !== "test") {
          throw new Error("bad normalize");
        }
        ;
      } catch (error) {
        missing.push(form);
      }
    });
    if (missing.length) {
      throw new Error("missing " + missing.join(", "));
    }
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) {
      throw new Error("broken implementation");
    }
  } catch (error) {
    return error.message;
  }
  return null;
}
const _normalizeError = _checkNormalize();
var LogLevel;
(function(LogLevel2) {
  LogLevel2["DEBUG"] = "DEBUG";
  LogLevel2["INFO"] = "INFO";
  LogLevel2["WARNING"] = "WARNING";
  LogLevel2["ERROR"] = "ERROR";
  LogLevel2["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
  ErrorCode2["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
  ErrorCode2["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
  ErrorCode2["NETWORK_ERROR"] = "NETWORK_ERROR";
  ErrorCode2["SERVER_ERROR"] = "SERVER_ERROR";
  ErrorCode2["TIMEOUT"] = "TIMEOUT";
  ErrorCode2["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
  ErrorCode2["NUMERIC_FAULT"] = "NUMERIC_FAULT";
  ErrorCode2["MISSING_NEW"] = "MISSING_NEW";
  ErrorCode2["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
  ErrorCode2["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
  ErrorCode2["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
  ErrorCode2["CALL_EXCEPTION"] = "CALL_EXCEPTION";
  ErrorCode2["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
  ErrorCode2["NONCE_EXPIRED"] = "NONCE_EXPIRED";
  ErrorCode2["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
  ErrorCode2["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
  ErrorCode2["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
  ErrorCode2["ACTION_REJECTED"] = "ACTION_REJECTED";
})(ErrorCode || (ErrorCode = {}));
const HEX = "0123456789abcdef";
class Logger {
  constructor(version2) {
    Object.defineProperty(this, "version", {
      enumerable: true,
      value: version2,
      writable: false
    });
  }
  _log(logLevel, args) {
    const level = logLevel.toLowerCase();
    if (LogLevels[level] == null) {
      this.throwArgumentError("invalid log level name", "logLevel", logLevel);
    }
    if (_logLevel > LogLevels[level]) {
      return;
    }
    console.log.apply(console, args);
  }
  debug(...args) {
    this._log(Logger.levels.DEBUG, args);
  }
  info(...args) {
    this._log(Logger.levels.INFO, args);
  }
  warn(...args) {
    this._log(Logger.levels.WARNING, args);
  }
  makeError(message, code, params) {
    if (_censorErrors) {
      return this.makeError("censored error", code, {});
    }
    if (!code) {
      code = Logger.errors.UNKNOWN_ERROR;
    }
    if (!params) {
      params = {};
    }
    const messageDetails = [];
    Object.keys(params).forEach((key2) => {
      const value = params[key2];
      try {
        if (value instanceof Uint8Array) {
          let hex = "";
          for (let i = 0; i < value.length; i++) {
            hex += HEX[value[i] >> 4];
            hex += HEX[value[i] & 15];
          }
          messageDetails.push(key2 + "=Uint8Array(0x" + hex + ")");
        } else {
          messageDetails.push(key2 + "=" + JSON.stringify(value));
        }
      } catch (error2) {
        messageDetails.push(key2 + "=" + JSON.stringify(params[key2].toString()));
      }
    });
    messageDetails.push(`code=${code}`);
    messageDetails.push(`version=${this.version}`);
    const reason = message;
    let url = "";
    switch (code) {
      case ErrorCode.NUMERIC_FAULT: {
        url = "NUMERIC_FAULT";
        const fault = message;
        switch (fault) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            url += "-" + fault;
            break;
          case "negative-power":
          case "negative-width":
            url += "-unsupported";
            break;
          case "unbound-bitwise-result":
            url += "-unbound-result";
            break;
        }
        break;
      }
      case ErrorCode.CALL_EXCEPTION:
      case ErrorCode.INSUFFICIENT_FUNDS:
      case ErrorCode.MISSING_NEW:
      case ErrorCode.NONCE_EXPIRED:
      case ErrorCode.REPLACEMENT_UNDERPRICED:
      case ErrorCode.TRANSACTION_REPLACED:
      case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
        url = code;
        break;
    }
    if (url) {
      message += " [ See: https://links.ethers.org/v5-errors-" + url + " ]";
    }
    if (messageDetails.length) {
      message += " (" + messageDetails.join(", ") + ")";
    }
    const error = new Error(message);
    error.reason = reason;
    error.code = code;
    Object.keys(params).forEach(function(key2) {
      error[key2] = params[key2];
    });
    return error;
  }
  throwError(message, code, params) {
    throw this.makeError(message, code, params);
  }
  throwArgumentError(message, name2, value) {
    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
      argument: name2,
      value
    });
  }
  assert(condition, message, code, params) {
    if (!!condition) {
      return;
    }
    this.throwError(message, code, params);
  }
  assertArgument(condition, message, name2, value) {
    if (!!condition) {
      return;
    }
    this.throwArgumentError(message, name2, value);
  }
  checkNormalize(message) {
    if (_normalizeError) {
      this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "String.prototype.normalize",
        form: _normalizeError
      });
    }
  }
  checkSafeUint53(value, message) {
    if (typeof value !== "number") {
      return;
    }
    if (message == null) {
      message = "value not safe";
    }
    if (value < 0 || value >= 9007199254740991) {
      this.throwError(message, Logger.errors.NUMERIC_FAULT, {
        operation: "checkSafeInteger",
        fault: "out-of-safe-range",
        value
      });
    }
    if (value % 1) {
      this.throwError(message, Logger.errors.NUMERIC_FAULT, {
        operation: "checkSafeInteger",
        fault: "non-integer",
        value
      });
    }
  }
  checkArgumentCount(count, expectedCount, message) {
    if (message) {
      message = ": " + message;
    } else {
      message = "";
    }
    if (count < expectedCount) {
      this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
        count,
        expectedCount
      });
    }
    if (count > expectedCount) {
      this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
        count,
        expectedCount
      });
    }
  }
  checkNew(target, kind) {
    if (target === Object || target == null) {
      this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
    }
  }
  checkAbstract(target, kind) {
    if (target === kind) {
      this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
    } else if (target === Object || target == null) {
      this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
    }
  }
  static globalLogger() {
    if (!_globalLogger) {
      _globalLogger = new Logger(version$g);
    }
    return _globalLogger;
  }
  static setCensorship(censorship, permanent) {
    if (!censorship && permanent) {
      this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    if (_permanentCensorErrors) {
      if (!censorship) {
        return;
      }
      this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    _censorErrors = !!censorship;
    _permanentCensorErrors = !!permanent;
  }
  static setLogLevel(logLevel) {
    const level = LogLevels[logLevel.toLowerCase()];
    if (level == null) {
      Logger.globalLogger().warn("invalid log level - " + logLevel);
      return;
    }
    _logLevel = level;
  }
  static from(version2) {
    return new Logger(version2);
  }
}
Logger.errors = ErrorCode;
Logger.levels = LogLevel;
const version$f = "bytes/5.7.0";
const logger$i = new Logger(version$f);
function isHexable(value) {
  return !!value.toHexString;
}
function addSlice(array) {
  if (array.slice) {
    return array;
  }
  array.slice = function() {
    const args = Array.prototype.slice.call(arguments);
    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
  };
  return array;
}
function isBytesLike(value) {
  return isHexString(value) && !(value.length % 2) || isBytes(value);
}
function isInteger(value) {
  return typeof value === "number" && value == value && value % 1 === 0;
}
function isBytes(value) {
  if (value == null) {
    return false;
  }
  if (value.constructor === Uint8Array) {
    return true;
  }
  if (typeof value === "string") {
    return false;
  }
  if (!isInteger(value.length) || value.length < 0) {
    return false;
  }
  for (let i = 0; i < value.length; i++) {
    const v = value[i];
    if (!isInteger(v) || v < 0 || v >= 256) {
      return false;
    }
  }
  return true;
}
function arrayify(value, options2) {
  if (!options2) {
    options2 = {};
  }
  if (typeof value === "number") {
    logger$i.checkSafeUint53(value, "invalid arrayify value");
    const result = [];
    while (value) {
      result.unshift(value & 255);
      value = parseInt(String(value / 256));
    }
    if (result.length === 0) {
      result.push(0);
    }
    return addSlice(new Uint8Array(result));
  }
  if (options2.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    value = value.toHexString();
  }
  if (isHexString(value)) {
    let hex = value.substring(2);
    if (hex.length % 2) {
      if (options2.hexPad === "left") {
        hex = "0" + hex;
      } else if (options2.hexPad === "right") {
        hex += "0";
      } else {
        logger$i.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    const result = [];
    for (let i = 0; i < hex.length; i += 2) {
      result.push(parseInt(hex.substring(i, i + 2), 16));
    }
    return addSlice(new Uint8Array(result));
  }
  if (isBytes(value)) {
    return addSlice(new Uint8Array(value));
  }
  return logger$i.throwArgumentError("invalid arrayify value", "value", value);
}
function concat(items) {
  const objects = items.map((item) => arrayify(item));
  const length = objects.reduce((accum, item) => accum + item.length, 0);
  const result = new Uint8Array(length);
  objects.reduce((offset, object) => {
    result.set(object, offset);
    return offset + object.length;
  }, 0);
  return addSlice(result);
}
function stripZeros(value) {
  let result = arrayify(value);
  if (result.length === 0) {
    return result;
  }
  let start = 0;
  while (start < result.length && result[start] === 0) {
    start++;
  }
  if (start) {
    result = result.slice(start);
  }
  return result;
}
function zeroPad(value, length) {
  value = arrayify(value);
  if (value.length > length) {
    logger$i.throwArgumentError("value out of range", "value", arguments[0]);
  }
  const result = new Uint8Array(length);
  result.set(value, length - value.length);
  return addSlice(result);
}
function isHexString(value, length) {
  if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (length && value.length !== 2 + 2 * length) {
    return false;
  }
  return true;
}
const HexCharacters = "0123456789abcdef";
function hexlify(value, options2) {
  if (!options2) {
    options2 = {};
  }
  if (typeof value === "number") {
    logger$i.checkSafeUint53(value, "invalid hexlify value");
    let hex = "";
    while (value) {
      hex = HexCharacters[value & 15] + hex;
      value = Math.floor(value / 16);
    }
    if (hex.length) {
      if (hex.length % 2) {
        hex = "0" + hex;
      }
      return "0x" + hex;
    }
    return "0x00";
  }
  if (typeof value === "bigint") {
    value = value.toString(16);
    if (value.length % 2) {
      return "0x0" + value;
    }
    return "0x" + value;
  }
  if (options2.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    return value.toHexString();
  }
  if (isHexString(value)) {
    if (value.length % 2) {
      if (options2.hexPad === "left") {
        value = "0x0" + value.substring(2);
      } else if (options2.hexPad === "right") {
        value += "0";
      } else {
        logger$i.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    return value.toLowerCase();
  }
  if (isBytes(value)) {
    let result = "0x";
    for (let i = 0; i < value.length; i++) {
      let v = value[i];
      result += HexCharacters[(v & 240) >> 4] + HexCharacters[v & 15];
    }
    return result;
  }
  return logger$i.throwArgumentError("invalid hexlify value", "value", value);
}
function hexDataLength(data) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    return null;
  }
  return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    logger$i.throwArgumentError("invalid hexData", "value", data);
  }
  offset = 2 + 2 * offset;
  if (endOffset != null) {
    return "0x" + data.substring(offset, 2 + 2 * endOffset);
  }
  return "0x" + data.substring(offset);
}
function hexConcat(items) {
  let result = "0x";
  items.forEach((item) => {
    result += hexlify(item).substring(2);
  });
  return result;
}
function hexValue(value) {
  const trimmed = hexStripZeros(hexlify(value, { hexPad: "left" }));
  if (trimmed === "0x") {
    return "0x0";
  }
  return trimmed;
}
function hexStripZeros(value) {
  if (typeof value !== "string") {
    value = hexlify(value);
  }
  if (!isHexString(value)) {
    logger$i.throwArgumentError("invalid hex string", "value", value);
  }
  value = value.substring(2);
  let offset = 0;
  while (offset < value.length && value[offset] === "0") {
    offset++;
  }
  return "0x" + value.substring(offset);
}
function hexZeroPad(value, length) {
  if (typeof value !== "string") {
    value = hexlify(value);
  } else if (!isHexString(value)) {
    logger$i.throwArgumentError("invalid hex string", "value", value);
  }
  if (value.length > 2 * length + 2) {
    logger$i.throwArgumentError("value out of range", "value", arguments[1]);
  }
  while (value.length < 2 * length + 2) {
    value = "0x0" + value.substring(2);
  }
  return value;
}
function splitSignature(signature2) {
  const result = {
    r: "0x",
    s: "0x",
    _vs: "0x",
    recoveryParam: 0,
    v: 0,
    yParityAndS: "0x",
    compact: "0x"
  };
  if (isBytesLike(signature2)) {
    let bytes = arrayify(signature2);
    if (bytes.length === 64) {
      result.v = 27 + (bytes[32] >> 7);
      bytes[32] &= 127;
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
    } else if (bytes.length === 65) {
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
      result.v = bytes[64];
    } else {
      logger$i.throwArgumentError("invalid signature string", "signature", signature2);
    }
    if (result.v < 27) {
      if (result.v === 0 || result.v === 1) {
        result.v += 27;
      } else {
        logger$i.throwArgumentError("signature invalid v byte", "signature", signature2);
      }
    }
    result.recoveryParam = 1 - result.v % 2;
    if (result.recoveryParam) {
      bytes[32] |= 128;
    }
    result._vs = hexlify(bytes.slice(32, 64));
  } else {
    result.r = signature2.r;
    result.s = signature2.s;
    result.v = signature2.v;
    result.recoveryParam = signature2.recoveryParam;
    result._vs = signature2._vs;
    if (result._vs != null) {
      const vs2 = zeroPad(arrayify(result._vs), 32);
      result._vs = hexlify(vs2);
      const recoveryParam = vs2[0] >= 128 ? 1 : 0;
      if (result.recoveryParam == null) {
        result.recoveryParam = recoveryParam;
      } else if (result.recoveryParam !== recoveryParam) {
        logger$i.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature2);
      }
      vs2[0] &= 127;
      const s2 = hexlify(vs2);
      if (result.s == null) {
        result.s = s2;
      } else if (result.s !== s2) {
        logger$i.throwArgumentError("signature v mismatch _vs", "signature", signature2);
      }
    }
    if (result.recoveryParam == null) {
      if (result.v == null) {
        logger$i.throwArgumentError("signature missing v and recoveryParam", "signature", signature2);
      } else if (result.v === 0 || result.v === 1) {
        result.recoveryParam = result.v;
      } else {
        result.recoveryParam = 1 - result.v % 2;
      }
    } else {
      if (result.v == null) {
        result.v = 27 + result.recoveryParam;
      } else {
        const recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
        if (result.recoveryParam !== recId) {
          logger$i.throwArgumentError("signature recoveryParam mismatch v", "signature", signature2);
        }
      }
    }
    if (result.r == null || !isHexString(result.r)) {
      logger$i.throwArgumentError("signature missing or invalid r", "signature", signature2);
    } else {
      result.r = hexZeroPad(result.r, 32);
    }
    if (result.s == null || !isHexString(result.s)) {
      logger$i.throwArgumentError("signature missing or invalid s", "signature", signature2);
    } else {
      result.s = hexZeroPad(result.s, 32);
    }
    const vs = arrayify(result.s);
    if (vs[0] >= 128) {
      logger$i.throwArgumentError("signature s out of range", "signature", signature2);
    }
    if (result.recoveryParam) {
      vs[0] |= 128;
    }
    const _vs = hexlify(vs);
    if (result._vs) {
      if (!isHexString(result._vs)) {
        logger$i.throwArgumentError("signature invalid _vs", "signature", signature2);
      }
      result._vs = hexZeroPad(result._vs, 32);
    }
    if (result._vs == null) {
      result._vs = _vs;
    } else if (result._vs !== _vs) {
      logger$i.throwArgumentError("signature _vs mismatch v and s", "signature", signature2);
    }
  }
  result.yParityAndS = result._vs;
  result.compact = result.r + result.yParityAndS.substring(2);
  return result;
}
const version$e = "bignumber/5.7.0";
var BN$1 = _BN.BN;
const logger$h = new Logger(version$e);
const _constructorGuard$2 = {};
const MAX_SAFE = 9007199254740991;
function isBigNumberish(value) {
  return value != null && (BigNumber.isBigNumber(value) || typeof value === "number" && value % 1 === 0 || typeof value === "string" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === "bigint" || isBytes(value));
}
let _warnedToStringRadix = false;
class BigNumber {
  constructor(constructorGuard, hex) {
    if (constructorGuard !== _constructorGuard$2) {
      logger$h.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new (BigNumber)"
      });
    }
    this._hex = hex;
    this._isBigNumber = true;
    Object.freeze(this);
  }
  fromTwos(value) {
    return toBigNumber(toBN(this).fromTwos(value));
  }
  toTwos(value) {
    return toBigNumber(toBN(this).toTwos(value));
  }
  abs() {
    if (this._hex[0] === "-") {
      return BigNumber.from(this._hex.substring(1));
    }
    return this;
  }
  add(other) {
    return toBigNumber(toBN(this).add(toBN(other)));
  }
  sub(other) {
    return toBigNumber(toBN(this).sub(toBN(other)));
  }
  div(other) {
    const o = BigNumber.from(other);
    if (o.isZero()) {
      throwFault$1("division-by-zero", "div");
    }
    return toBigNumber(toBN(this).div(toBN(other)));
  }
  mul(other) {
    return toBigNumber(toBN(this).mul(toBN(other)));
  }
  mod(other) {
    const value = toBN(other);
    if (value.isNeg()) {
      throwFault$1("division-by-zero", "mod");
    }
    return toBigNumber(toBN(this).umod(value));
  }
  pow(other) {
    const value = toBN(other);
    if (value.isNeg()) {
      throwFault$1("negative-power", "pow");
    }
    return toBigNumber(toBN(this).pow(value));
  }
  and(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault$1("unbound-bitwise-result", "and");
    }
    return toBigNumber(toBN(this).and(value));
  }
  or(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault$1("unbound-bitwise-result", "or");
    }
    return toBigNumber(toBN(this).or(value));
  }
  xor(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault$1("unbound-bitwise-result", "xor");
    }
    return toBigNumber(toBN(this).xor(value));
  }
  mask(value) {
    if (this.isNegative() || value < 0) {
      throwFault$1("negative-width", "mask");
    }
    return toBigNumber(toBN(this).maskn(value));
  }
  shl(value) {
    if (this.isNegative() || value < 0) {
      throwFault$1("negative-width", "shl");
    }
    return toBigNumber(toBN(this).shln(value));
  }
  shr(value) {
    if (this.isNegative() || value < 0) {
      throwFault$1("negative-width", "shr");
    }
    return toBigNumber(toBN(this).shrn(value));
  }
  eq(other) {
    return toBN(this).eq(toBN(other));
  }
  lt(other) {
    return toBN(this).lt(toBN(other));
  }
  lte(other) {
    return toBN(this).lte(toBN(other));
  }
  gt(other) {
    return toBN(this).gt(toBN(other));
  }
  gte(other) {
    return toBN(this).gte(toBN(other));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return toBN(this).isZero();
  }
  toNumber() {
    try {
      return toBN(this).toNumber();
    } catch (error) {
      throwFault$1("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch (e) {
    }
    return logger$h.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
      value: this.toString()
    });
  }
  toString() {
    if (arguments.length > 0) {
      if (arguments[0] === 10) {
        if (!_warnedToStringRadix) {
          _warnedToStringRadix = true;
          logger$h.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
        }
      } else if (arguments[0] === 16) {
        logger$h.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {});
      } else {
        logger$h.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {});
      }
    }
    return toBN(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(key2) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(value) {
    if (value instanceof BigNumber) {
      return value;
    }
    if (typeof value === "string") {
      if (value.match(/^-?0x[0-9a-f]+$/i)) {
        return new BigNumber(_constructorGuard$2, toHex$1(value));
      }
      if (value.match(/^-?[0-9]+$/)) {
        return new BigNumber(_constructorGuard$2, toHex$1(new BN$1(value)));
      }
      return logger$h.throwArgumentError("invalid BigNumber string", "value", value);
    }
    if (typeof value === "number") {
      if (value % 1) {
        throwFault$1("underflow", "BigNumber.from", value);
      }
      if (value >= MAX_SAFE || value <= -MAX_SAFE) {
        throwFault$1("overflow", "BigNumber.from", value);
      }
      return BigNumber.from(String(value));
    }
    const anyValue = value;
    if (typeof anyValue === "bigint") {
      return BigNumber.from(anyValue.toString());
    }
    if (isBytes(anyValue)) {
      return BigNumber.from(hexlify(anyValue));
    }
    if (anyValue) {
      if (anyValue.toHexString) {
        const hex = anyValue.toHexString();
        if (typeof hex === "string") {
          return BigNumber.from(hex);
        }
      } else {
        let hex = anyValue._hex;
        if (hex == null && anyValue.type === "BigNumber") {
          hex = anyValue.hex;
        }
        if (typeof hex === "string") {
          if (isHexString(hex) || hex[0] === "-" && isHexString(hex.substring(1))) {
            return BigNumber.from(hex);
          }
        }
      }
    }
    return logger$h.throwArgumentError("invalid BigNumber value", "value", value);
  }
  static isBigNumber(value) {
    return !!(value && value._isBigNumber);
  }
}
function toHex$1(value) {
  if (typeof value !== "string") {
    return toHex$1(value.toString(16));
  }
  if (value[0] === "-") {
    value = value.substring(1);
    if (value[0] === "-") {
      logger$h.throwArgumentError("invalid hex", "value", value);
    }
    value = toHex$1(value);
    if (value === "0x00") {
      return value;
    }
    return "-" + value;
  }
  if (value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (value === "0x") {
    return "0x00";
  }
  if (value.length % 2) {
    value = "0x0" + value.substring(2);
  }
  while (value.length > 4 && value.substring(0, 4) === "0x00") {
    value = "0x" + value.substring(4);
  }
  return value;
}
function toBigNumber(value) {
  return BigNumber.from(toHex$1(value));
}
function toBN(value) {
  const hex = BigNumber.from(value).toHexString();
  if (hex[0] === "-") {
    return new BN$1("-" + hex.substring(3), 16);
  }
  return new BN$1(hex.substring(2), 16);
}
function throwFault$1(fault, operation, value) {
  const params = { fault, operation };
  if (value != null) {
    params.value = value;
  }
  return logger$h.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
}
function _base36To16(value) {
  return new BN$1(value, 36).toString(16);
}
const logger$g = new Logger(version$e);
const _constructorGuard$1 = {};
const Zero$2 = BigNumber.from(0);
const NegativeOne$1 = BigNumber.from(-1);
function throwFault(message, fault, operation, value) {
  const params = { fault, operation };
  if (value !== void 0) {
    params.value = value;
  }
  return logger$g.throwError(message, Logger.errors.NUMERIC_FAULT, params);
}
let zeros = "0";
while (zeros.length < 256) {
  zeros += zeros;
}
function getMultiplier(decimals) {
  if (typeof decimals !== "number") {
    try {
      decimals = BigNumber.from(decimals).toNumber();
    } catch (e) {
    }
  }
  if (typeof decimals === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {
    return "1" + zeros.substring(0, decimals);
  }
  return logger$g.throwArgumentError("invalid decimal size", "decimals", decimals);
}
function formatFixed(value, decimals) {
  if (decimals == null) {
    decimals = 0;
  }
  const multiplier = getMultiplier(decimals);
  value = BigNumber.from(value);
  const negative = value.lt(Zero$2);
  if (negative) {
    value = value.mul(NegativeOne$1);
  }
  let fraction = value.mod(multiplier).toString();
  while (fraction.length < multiplier.length - 1) {
    fraction = "0" + fraction;
  }
  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const whole = value.div(multiplier).toString();
  if (multiplier.length === 1) {
    value = whole;
  } else {
    value = whole + "." + fraction;
  }
  if (negative) {
    value = "-" + value;
  }
  return value;
}
function parseFixed(value, decimals) {
  if (decimals == null) {
    decimals = 0;
  }
  const multiplier = getMultiplier(decimals);
  if (typeof value !== "string" || !value.match(/^-?[0-9.]+$/)) {
    logger$g.throwArgumentError("invalid decimal value", "value", value);
  }
  const negative = value.substring(0, 1) === "-";
  if (negative) {
    value = value.substring(1);
  }
  if (value === ".") {
    logger$g.throwArgumentError("missing value", "value", value);
  }
  const comps = value.split(".");
  if (comps.length > 2) {
    logger$g.throwArgumentError("too many decimal points", "value", value);
  }
  let whole = comps[0], fraction = comps[1];
  if (!whole) {
    whole = "0";
  }
  if (!fraction) {
    fraction = "0";
  }
  while (fraction[fraction.length - 1] === "0") {
    fraction = fraction.substring(0, fraction.length - 1);
  }
  if (fraction.length > multiplier.length - 1) {
    throwFault("fractional component exceeds decimals", "underflow", "parseFixed");
  }
  if (fraction === "") {
    fraction = "0";
  }
  while (fraction.length < multiplier.length - 1) {
    fraction += "0";
  }
  const wholeValue = BigNumber.from(whole);
  const fractionValue = BigNumber.from(fraction);
  let wei = wholeValue.mul(multiplier).add(fractionValue);
  if (negative) {
    wei = wei.mul(NegativeOne$1);
  }
  return wei;
}
class FixedFormat {
  constructor(constructorGuard, signed2, width, decimals) {
    if (constructorGuard !== _constructorGuard$1) {
      logger$g.throwError("cannot use FixedFormat constructor; use FixedFormat.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new FixedFormat"
      });
    }
    this.signed = signed2;
    this.width = width;
    this.decimals = decimals;
    this.name = (signed2 ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
    this._multiplier = getMultiplier(decimals);
    Object.freeze(this);
  }
  static from(value) {
    if (value instanceof FixedFormat) {
      return value;
    }
    if (typeof value === "number") {
      value = `fixed128x${value}`;
    }
    let signed2 = true;
    let width = 128;
    let decimals = 18;
    if (typeof value === "string") {
      if (value === "fixed")
        ;
      else if (value === "ufixed") {
        signed2 = false;
      } else {
        const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
        if (!match) {
          logger$g.throwArgumentError("invalid fixed format", "format", value);
        }
        signed2 = match[1] !== "u";
        width = parseInt(match[2]);
        decimals = parseInt(match[3]);
      }
    } else if (value) {
      const check = (key2, type, defaultValue) => {
        if (value[key2] == null) {
          return defaultValue;
        }
        if (typeof value[key2] !== type) {
          logger$g.throwArgumentError("invalid fixed format (" + key2 + " not " + type + ")", "format." + key2, value[key2]);
        }
        return value[key2];
      };
      signed2 = check("signed", "boolean", signed2);
      width = check("width", "number", width);
      decimals = check("decimals", "number", decimals);
    }
    if (width % 8) {
      logger$g.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
    }
    if (decimals > 80) {
      logger$g.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
    }
    return new FixedFormat(_constructorGuard$1, signed2, width, decimals);
  }
}
class FixedNumber {
  constructor(constructorGuard, hex, value, format) {
    if (constructorGuard !== _constructorGuard$1) {
      logger$g.throwError("cannot use FixedNumber constructor; use FixedNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new FixedFormat"
      });
    }
    this.format = format;
    this._hex = hex;
    this._value = value;
    this._isFixedNumber = true;
    Object.freeze(this);
  }
  _checkFormat(other) {
    if (this.format.name !== other.format.name) {
      logger$g.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
    }
  }
  addUnsafe(other) {
    this._checkFormat(other);
    const a = parseFixed(this._value, this.format.decimals);
    const b = parseFixed(other._value, other.format.decimals);
    return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
  }
  subUnsafe(other) {
    this._checkFormat(other);
    const a = parseFixed(this._value, this.format.decimals);
    const b = parseFixed(other._value, other.format.decimals);
    return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
  }
  mulUnsafe(other) {
    this._checkFormat(other);
    const a = parseFixed(this._value, this.format.decimals);
    const b = parseFixed(other._value, other.format.decimals);
    return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(other) {
    this._checkFormat(other);
    const a = parseFixed(this._value, this.format.decimals);
    const b = parseFixed(other._value, other.format.decimals);
    return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
  }
  floor() {
    const comps = this.toString().split(".");
    if (comps.length === 1) {
      comps.push("0");
    }
    let result = FixedNumber.from(comps[0], this.format);
    const hasFraction = !comps[1].match(/^(0*)$/);
    if (this.isNegative() && hasFraction) {
      result = result.subUnsafe(ONE.toFormat(result.format));
    }
    return result;
  }
  ceiling() {
    const comps = this.toString().split(".");
    if (comps.length === 1) {
      comps.push("0");
    }
    let result = FixedNumber.from(comps[0], this.format);
    const hasFraction = !comps[1].match(/^(0*)$/);
    if (!this.isNegative() && hasFraction) {
      result = result.addUnsafe(ONE.toFormat(result.format));
    }
    return result;
  }
  round(decimals) {
    if (decimals == null) {
      decimals = 0;
    }
    const comps = this.toString().split(".");
    if (comps.length === 1) {
      comps.push("0");
    }
    if (decimals < 0 || decimals > 80 || decimals % 1) {
      logger$g.throwArgumentError("invalid decimal count", "decimals", decimals);
    }
    if (comps[1].length <= decimals) {
      return this;
    }
    const factor = FixedNumber.from("1" + zeros.substring(0, decimals), this.format);
    const bump = BUMP.toFormat(this.format);
    return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(width) {
    if (width == null) {
      return this._hex;
    }
    if (width % 8) {
      logger$g.throwArgumentError("invalid byte width", "width", width);
    }
    const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
    return hexZeroPad(hex, width / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(format) {
    return FixedNumber.fromString(this._value, format);
  }
  static fromValue(value, decimals, format) {
    if (format == null && decimals != null && !isBigNumberish(decimals)) {
      format = decimals;
      decimals = null;
    }
    if (decimals == null) {
      decimals = 0;
    }
    if (format == null) {
      format = "fixed";
    }
    return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
  }
  static fromString(value, format) {
    if (format == null) {
      format = "fixed";
    }
    const fixedFormat = FixedFormat.from(format);
    const numeric = parseFixed(value, fixedFormat.decimals);
    if (!fixedFormat.signed && numeric.lt(Zero$2)) {
      throwFault("unsigned value cannot be negative", "overflow", "value", value);
    }
    let hex = null;
    if (fixedFormat.signed) {
      hex = numeric.toTwos(fixedFormat.width).toHexString();
    } else {
      hex = numeric.toHexString();
      hex = hexZeroPad(hex, fixedFormat.width / 8);
    }
    const decimal = formatFixed(numeric, fixedFormat.decimals);
    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);
  }
  static fromBytes(value, format) {
    if (format == null) {
      format = "fixed";
    }
    const fixedFormat = FixedFormat.from(format);
    if (arrayify(value).length > fixedFormat.width / 8) {
      throw new Error("overflow");
    }
    let numeric = BigNumber.from(value);
    if (fixedFormat.signed) {
      numeric = numeric.fromTwos(fixedFormat.width);
    }
    const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
    const decimal = formatFixed(numeric, fixedFormat.decimals);
    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);
  }
  static from(value, format) {
    if (typeof value === "string") {
      return FixedNumber.fromString(value, format);
    }
    if (isBytes(value)) {
      return FixedNumber.fromBytes(value, format);
    }
    try {
      return FixedNumber.fromValue(value, 0, format);
    } catch (error) {
      if (error.code !== Logger.errors.INVALID_ARGUMENT) {
        throw error;
      }
    }
    return logger$g.throwArgumentError("invalid FixedNumber value", "value", value);
  }
  static isFixedNumber(value) {
    return !!(value && value._isFixedNumber);
  }
}
const ONE = FixedNumber.from(1);
const BUMP = FixedNumber.from("0.5");
const version$d = "properties/5.7.0";
var __awaiter$7 = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const logger$f = new Logger(version$d);
function defineReadOnly(object, name2, value) {
  Object.defineProperty(object, name2, {
    enumerable: true,
    value,
    writable: false
  });
}
function getStatic(ctor, key2) {
  for (let i = 0; i < 32; i++) {
    if (ctor[key2]) {
      return ctor[key2];
    }
    if (!ctor.prototype || typeof ctor.prototype !== "object") {
      break;
    }
    ctor = Object.getPrototypeOf(ctor.prototype).constructor;
  }
  return null;
}
function resolveProperties(object) {
  return __awaiter$7(this, void 0, void 0, function* () {
    const promises = Object.keys(object).map((key2) => {
      const value = object[key2];
      return Promise.resolve(value).then((v) => ({ key: key2, value: v }));
    });
    const results = yield Promise.all(promises);
    return results.reduce((accum, result) => {
      accum[result.key] = result.value;
      return accum;
    }, {});
  });
}
function checkProperties(object, properties) {
  if (!object || typeof object !== "object") {
    logger$f.throwArgumentError("invalid object", "object", object);
  }
  Object.keys(object).forEach((key2) => {
    if (!properties[key2]) {
      logger$f.throwArgumentError("invalid object key - " + key2, "transaction:" + key2, object);
    }
  });
}
function shallowCopy(object) {
  const result = {};
  for (const key2 in object) {
    result[key2] = object[key2];
  }
  return result;
}
const opaque = { bigint: true, boolean: true, "function": true, number: true, string: true };
function _isFrozen(object) {
  if (object === void 0 || object === null || opaque[typeof object]) {
    return true;
  }
  if (Array.isArray(object) || typeof object === "object") {
    if (!Object.isFrozen(object)) {
      return false;
    }
    const keys = Object.keys(object);
    for (let i = 0; i < keys.length; i++) {
      let value = null;
      try {
        value = object[keys[i]];
      } catch (error) {
        continue;
      }
      if (!_isFrozen(value)) {
        return false;
      }
    }
    return true;
  }
  return logger$f.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
function _deepCopy(object) {
  if (_isFrozen(object)) {
    return object;
  }
  if (Array.isArray(object)) {
    return Object.freeze(object.map((item) => deepCopy(item)));
  }
  if (typeof object === "object") {
    const result = {};
    for (const key2 in object) {
      const value = object[key2];
      if (value === void 0) {
        continue;
      }
      defineReadOnly(result, key2, deepCopy(value));
    }
    return result;
  }
  return logger$f.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
function deepCopy(object) {
  return _deepCopy(object);
}
class Description {
  constructor(info) {
    for (const key2 in info) {
      this[key2] = deepCopy(info[key2]);
    }
  }
}
var sha3$1 = { exports: {} };
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */
(function(module) {
  (function() {
    var INPUT_ERROR = "input is invalid type";
    var FINALIZE_ERROR = "finalize already called";
    var WINDOW = typeof window === "object";
    var root = WINDOW ? window : {};
    if (root.JS_SHA3_NO_WINDOW) {
      WINDOW = false;
    }
    var WEB_WORKER = !WINDOW && typeof self === "object";
    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node;
    if (NODE_JS) {
      root = commonjsGlobal;
    } else if (WEB_WORKER) {
      root = self;
    }
    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && true && module.exports;
    var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
    var HEX_CHARS = "0123456789abcdef".split("");
    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
    var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
    var KECCAK_PADDING = [1, 256, 65536, 16777216];
    var PADDING = [6, 1536, 393216, 100663296];
    var SHIFT = [0, 8, 16, 24];
    var RC = [
      1,
      0,
      32898,
      0,
      32906,
      2147483648,
      2147516416,
      2147483648,
      32907,
      0,
      2147483649,
      0,
      2147516545,
      2147483648,
      32777,
      2147483648,
      138,
      0,
      136,
      0,
      2147516425,
      0,
      2147483658,
      0,
      2147516555,
      0,
      139,
      2147483648,
      32905,
      2147483648,
      32771,
      2147483648,
      32770,
      2147483648,
      128,
      2147483648,
      32778,
      0,
      2147483658,
      2147483648,
      2147516545,
      2147483648,
      32896,
      2147483648,
      2147483649,
      0,
      2147516424,
      2147483648
    ];
    var BITS = [224, 256, 384, 512];
    var SHAKE_BITS = [128, 256];
    var OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"];
    var CSHAKE_BYTEPAD = {
      "128": 168,
      "256": 136
    };
    if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
      Array.isArray = function(obj) {
        return Object.prototype.toString.call(obj) === "[object Array]";
      };
    }
    if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
      ArrayBuffer.isView = function(obj) {
        return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
      };
    }
    var createOutputMethod = function(bits2, padding2, outputType) {
      return function(message) {
        return new Keccak(bits2, padding2, bits2).update(message)[outputType]();
      };
    };
    var createShakeOutputMethod = function(bits2, padding2, outputType) {
      return function(message, outputBits) {
        return new Keccak(bits2, padding2, outputBits).update(message)[outputType]();
      };
    };
    var createCshakeOutputMethod = function(bits2, padding2, outputType) {
      return function(message, outputBits, n, s2) {
        return methods["cshake" + bits2].update(message, outputBits, n, s2)[outputType]();
      };
    };
    var createKmacOutputMethod = function(bits2, padding2, outputType) {
      return function(key2, message, outputBits, s2) {
        return methods["kmac" + bits2].update(key2, message, outputBits, s2)[outputType]();
      };
    };
    var createOutputMethods = function(method, createMethod2, bits2, padding2) {
      for (var i2 = 0; i2 < OUTPUT_TYPES.length; ++i2) {
        var type = OUTPUT_TYPES[i2];
        method[type] = createMethod2(bits2, padding2, type);
      }
      return method;
    };
    var createMethod = function(bits2, padding2) {
      var method = createOutputMethod(bits2, padding2, "hex");
      method.create = function() {
        return new Keccak(bits2, padding2, bits2);
      };
      method.update = function(message) {
        return method.create().update(message);
      };
      return createOutputMethods(method, createOutputMethod, bits2, padding2);
    };
    var createShakeMethod = function(bits2, padding2) {
      var method = createShakeOutputMethod(bits2, padding2, "hex");
      method.create = function(outputBits) {
        return new Keccak(bits2, padding2, outputBits);
      };
      method.update = function(message, outputBits) {
        return method.create(outputBits).update(message);
      };
      return createOutputMethods(method, createShakeOutputMethod, bits2, padding2);
    };
    var createCshakeMethod = function(bits2, padding2) {
      var w = CSHAKE_BYTEPAD[bits2];
      var method = createCshakeOutputMethod(bits2, padding2, "hex");
      method.create = function(outputBits, n, s2) {
        if (!n && !s2) {
          return methods["shake" + bits2].create(outputBits);
        } else {
          return new Keccak(bits2, padding2, outputBits).bytepad([n, s2], w);
        }
      };
      method.update = function(message, outputBits, n, s2) {
        return method.create(outputBits, n, s2).update(message);
      };
      return createOutputMethods(method, createCshakeOutputMethod, bits2, padding2);
    };
    var createKmacMethod = function(bits2, padding2) {
      var w = CSHAKE_BYTEPAD[bits2];
      var method = createKmacOutputMethod(bits2, padding2, "hex");
      method.create = function(key2, outputBits, s2) {
        return new Kmac(bits2, padding2, outputBits).bytepad(["KMAC", s2], w).bytepad([key2], w);
      };
      method.update = function(key2, message, outputBits, s2) {
        return method.create(key2, outputBits, s2).update(message);
      };
      return createOutputMethods(method, createKmacOutputMethod, bits2, padding2);
    };
    var algorithms = [
      { name: "keccak", padding: KECCAK_PADDING, bits: BITS, createMethod },
      { name: "sha3", padding: PADDING, bits: BITS, createMethod },
      { name: "shake", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
      { name: "cshake", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
      { name: "kmac", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
    ];
    var methods = {}, methodNames = [];
    for (var i = 0; i < algorithms.length; ++i) {
      var algorithm = algorithms[i];
      var bits = algorithm.bits;
      for (var j = 0; j < bits.length; ++j) {
        var methodName = algorithm.name + "_" + bits[j];
        methodNames.push(methodName);
        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
        if (algorithm.name !== "sha3") {
          var newMethodName = algorithm.name + bits[j];
          methodNames.push(newMethodName);
          methods[newMethodName] = methods[methodName];
        }
      }
    }
    function Keccak(bits2, padding2, outputBits) {
      this.blocks = [];
      this.s = [];
      this.padding = padding2;
      this.outputBits = outputBits;
      this.reset = true;
      this.finalized = false;
      this.block = 0;
      this.start = 0;
      this.blockCount = 1600 - (bits2 << 1) >> 5;
      this.byteCount = this.blockCount << 2;
      this.outputBlocks = outputBits >> 5;
      this.extraBytes = (outputBits & 31) >> 3;
      for (var i2 = 0; i2 < 50; ++i2) {
        this.s[i2] = 0;
      }
    }
    Keccak.prototype.update = function(message) {
      if (this.finalized) {
        throw new Error(FINALIZE_ERROR);
      }
      var notString, type = typeof message;
      if (type !== "string") {
        if (type === "object") {
          if (message === null) {
            throw new Error(INPUT_ERROR);
          } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
            message = new Uint8Array(message);
          } else if (!Array.isArray(message)) {
            if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
              throw new Error(INPUT_ERROR);
            }
          }
        } else {
          throw new Error(INPUT_ERROR);
        }
        notString = true;
      }
      var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s2 = this.s, i2, code;
      while (index < length) {
        if (this.reset) {
          this.reset = false;
          blocks[0] = this.block;
          for (i2 = 1; i2 < blockCount + 1; ++i2) {
            blocks[i2] = 0;
          }
        }
        if (notString) {
          for (i2 = this.start; index < length && i2 < byteCount; ++index) {
            blocks[i2 >> 2] |= message[index] << SHIFT[i2++ & 3];
          }
        } else {
          for (i2 = this.start; index < length && i2 < byteCount; ++index) {
            code = message.charCodeAt(index);
            if (code < 128) {
              blocks[i2 >> 2] |= code << SHIFT[i2++ & 3];
            } else if (code < 2048) {
              blocks[i2 >> 2] |= (192 | code >> 6) << SHIFT[i2++ & 3];
              blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
            } else if (code < 55296 || code >= 57344) {
              blocks[i2 >> 2] |= (224 | code >> 12) << SHIFT[i2++ & 3];
              blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
              blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
            } else {
              code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);
              blocks[i2 >> 2] |= (240 | code >> 18) << SHIFT[i2++ & 3];
              blocks[i2 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i2++ & 3];
              blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
              blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
            }
          }
        }
        this.lastByteIndex = i2;
        if (i2 >= byteCount) {
          this.start = i2 - byteCount;
          this.block = blocks[blockCount];
          for (i2 = 0; i2 < blockCount; ++i2) {
            s2[i2] ^= blocks[i2];
          }
          f2(s2);
          this.reset = true;
        } else {
          this.start = i2;
        }
      }
      return this;
    };
    Keccak.prototype.encode = function(x, right) {
      var o = x & 255, n = 1;
      var bytes = [o];
      x = x >> 8;
      o = x & 255;
      while (o > 0) {
        bytes.unshift(o);
        x = x >> 8;
        o = x & 255;
        ++n;
      }
      if (right) {
        bytes.push(n);
      } else {
        bytes.unshift(n);
      }
      this.update(bytes);
      return bytes.length;
    };
    Keccak.prototype.encodeString = function(str) {
      var notString, type = typeof str;
      if (type !== "string") {
        if (type === "object") {
          if (str === null) {
            throw new Error(INPUT_ERROR);
          } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
            str = new Uint8Array(str);
          } else if (!Array.isArray(str)) {
            if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
              throw new Error(INPUT_ERROR);
            }
          }
        } else {
          throw new Error(INPUT_ERROR);
        }
        notString = true;
      }
      var bytes = 0, length = str.length;
      if (notString) {
        bytes = length;
      } else {
        for (var i2 = 0; i2 < str.length; ++i2) {
          var code = str.charCodeAt(i2);
          if (code < 128) {
            bytes += 1;
          } else if (code < 2048) {
            bytes += 2;
          } else if (code < 55296 || code >= 57344) {
            bytes += 3;
          } else {
            code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i2) & 1023);
            bytes += 4;
          }
        }
      }
      bytes += this.encode(bytes * 8);
      this.update(str);
      return bytes;
    };
    Keccak.prototype.bytepad = function(strs, w) {
      var bytes = this.encode(w);
      for (var i2 = 0; i2 < strs.length; ++i2) {
        bytes += this.encodeString(strs[i2]);
      }
      var paddingBytes = w - bytes % w;
      var zeros2 = [];
      zeros2.length = paddingBytes;
      this.update(zeros2);
      return this;
    };
    Keccak.prototype.finalize = function() {
      if (this.finalized) {
        return;
      }
      this.finalized = true;
      var blocks = this.blocks, i2 = this.lastByteIndex, blockCount = this.blockCount, s2 = this.s;
      blocks[i2 >> 2] |= this.padding[i2 & 3];
      if (this.lastByteIndex === this.byteCount) {
        blocks[0] = blocks[blockCount];
        for (i2 = 1; i2 < blockCount + 1; ++i2) {
          blocks[i2] = 0;
        }
      }
      blocks[blockCount - 1] |= 2147483648;
      for (i2 = 0; i2 < blockCount; ++i2) {
        s2[i2] ^= blocks[i2];
      }
      f2(s2);
    };
    Keccak.prototype.toString = Keccak.prototype.hex = function() {
      this.finalize();
      var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
      var hex = "", block;
      while (j2 < outputBlocks) {
        for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
          block = s2[i2];
          hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
        }
        if (j2 % blockCount === 0) {
          f2(s2);
          i2 = 0;
        }
      }
      if (extraBytes) {
        block = s2[i2];
        hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];
        if (extraBytes > 1) {
          hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];
        }
        if (extraBytes > 2) {
          hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];
        }
      }
      return hex;
    };
    Keccak.prototype.arrayBuffer = function() {
      this.finalize();
      var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
      var bytes = this.outputBits >> 3;
      var buffer;
      if (extraBytes) {
        buffer = new ArrayBuffer(outputBlocks + 1 << 2);
      } else {
        buffer = new ArrayBuffer(bytes);
      }
      var array = new Uint32Array(buffer);
      while (j2 < outputBlocks) {
        for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
          array[j2] = s2[i2];
        }
        if (j2 % blockCount === 0) {
          f2(s2);
        }
      }
      if (extraBytes) {
        array[i2] = s2[i2];
        buffer = buffer.slice(0, bytes);
      }
      return buffer;
    };
    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
    Keccak.prototype.digest = Keccak.prototype.array = function() {
      this.finalize();
      var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
      var array = [], offset, block;
      while (j2 < outputBlocks) {
        for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
          offset = j2 << 2;
          block = s2[i2];
          array[offset] = block & 255;
          array[offset + 1] = block >> 8 & 255;
          array[offset + 2] = block >> 16 & 255;
          array[offset + 3] = block >> 24 & 255;
        }
        if (j2 % blockCount === 0) {
          f2(s2);
        }
      }
      if (extraBytes) {
        offset = j2 << 2;
        block = s2[i2];
        array[offset] = block & 255;
        if (extraBytes > 1) {
          array[offset + 1] = block >> 8 & 255;
        }
        if (extraBytes > 2) {
          array[offset + 2] = block >> 16 & 255;
        }
      }
      return array;
    };
    function Kmac(bits2, padding2, outputBits) {
      Keccak.call(this, bits2, padding2, outputBits);
    }
    Kmac.prototype = new Keccak();
    Kmac.prototype.finalize = function() {
      this.encode(this.outputBits, true);
      return Keccak.prototype.finalize.call(this);
    };
    var f2 = function(s2) {
      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
      for (n = 0; n < 48; n += 2) {
        c0 = s2[0] ^ s2[10] ^ s2[20] ^ s2[30] ^ s2[40];
        c1 = s2[1] ^ s2[11] ^ s2[21] ^ s2[31] ^ s2[41];
        c2 = s2[2] ^ s2[12] ^ s2[22] ^ s2[32] ^ s2[42];
        c3 = s2[3] ^ s2[13] ^ s2[23] ^ s2[33] ^ s2[43];
        c4 = s2[4] ^ s2[14] ^ s2[24] ^ s2[34] ^ s2[44];
        c5 = s2[5] ^ s2[15] ^ s2[25] ^ s2[35] ^ s2[45];
        c6 = s2[6] ^ s2[16] ^ s2[26] ^ s2[36] ^ s2[46];
        c7 = s2[7] ^ s2[17] ^ s2[27] ^ s2[37] ^ s2[47];
        c8 = s2[8] ^ s2[18] ^ s2[28] ^ s2[38] ^ s2[48];
        c9 = s2[9] ^ s2[19] ^ s2[29] ^ s2[39] ^ s2[49];
        h = c8 ^ (c2 << 1 | c3 >>> 31);
        l = c9 ^ (c3 << 1 | c2 >>> 31);
        s2[0] ^= h;
        s2[1] ^= l;
        s2[10] ^= h;
        s2[11] ^= l;
        s2[20] ^= h;
        s2[21] ^= l;
        s2[30] ^= h;
        s2[31] ^= l;
        s2[40] ^= h;
        s2[41] ^= l;
        h = c0 ^ (c4 << 1 | c5 >>> 31);
        l = c1 ^ (c5 << 1 | c4 >>> 31);
        s2[2] ^= h;
        s2[3] ^= l;
        s2[12] ^= h;
        s2[13] ^= l;
        s2[22] ^= h;
        s2[23] ^= l;
        s2[32] ^= h;
        s2[33] ^= l;
        s2[42] ^= h;
        s2[43] ^= l;
        h = c2 ^ (c6 << 1 | c7 >>> 31);
        l = c3 ^ (c7 << 1 | c6 >>> 31);
        s2[4] ^= h;
        s2[5] ^= l;
        s2[14] ^= h;
        s2[15] ^= l;
        s2[24] ^= h;
        s2[25] ^= l;
        s2[34] ^= h;
        s2[35] ^= l;
        s2[44] ^= h;
        s2[45] ^= l;
        h = c4 ^ (c8 << 1 | c9 >>> 31);
        l = c5 ^ (c9 << 1 | c8 >>> 31);
        s2[6] ^= h;
        s2[7] ^= l;
        s2[16] ^= h;
        s2[17] ^= l;
        s2[26] ^= h;
        s2[27] ^= l;
        s2[36] ^= h;
        s2[37] ^= l;
        s2[46] ^= h;
        s2[47] ^= l;
        h = c6 ^ (c0 << 1 | c1 >>> 31);
        l = c7 ^ (c1 << 1 | c0 >>> 31);
        s2[8] ^= h;
        s2[9] ^= l;
        s2[18] ^= h;
        s2[19] ^= l;
        s2[28] ^= h;
        s2[29] ^= l;
        s2[38] ^= h;
        s2[39] ^= l;
        s2[48] ^= h;
        s2[49] ^= l;
        b0 = s2[0];
        b1 = s2[1];
        b32 = s2[11] << 4 | s2[10] >>> 28;
        b33 = s2[10] << 4 | s2[11] >>> 28;
        b14 = s2[20] << 3 | s2[21] >>> 29;
        b15 = s2[21] << 3 | s2[20] >>> 29;
        b46 = s2[31] << 9 | s2[30] >>> 23;
        b47 = s2[30] << 9 | s2[31] >>> 23;
        b28 = s2[40] << 18 | s2[41] >>> 14;
        b29 = s2[41] << 18 | s2[40] >>> 14;
        b20 = s2[2] << 1 | s2[3] >>> 31;
        b21 = s2[3] << 1 | s2[2] >>> 31;
        b2 = s2[13] << 12 | s2[12] >>> 20;
        b3 = s2[12] << 12 | s2[13] >>> 20;
        b34 = s2[22] << 10 | s2[23] >>> 22;
        b35 = s2[23] << 10 | s2[22] >>> 22;
        b16 = s2[33] << 13 | s2[32] >>> 19;
        b17 = s2[32] << 13 | s2[33] >>> 19;
        b48 = s2[42] << 2 | s2[43] >>> 30;
        b49 = s2[43] << 2 | s2[42] >>> 30;
        b40 = s2[5] << 30 | s2[4] >>> 2;
        b41 = s2[4] << 30 | s2[5] >>> 2;
        b22 = s2[14] << 6 | s2[15] >>> 26;
        b23 = s2[15] << 6 | s2[14] >>> 26;
        b4 = s2[25] << 11 | s2[24] >>> 21;
        b5 = s2[24] << 11 | s2[25] >>> 21;
        b36 = s2[34] << 15 | s2[35] >>> 17;
        b37 = s2[35] << 15 | s2[34] >>> 17;
        b18 = s2[45] << 29 | s2[44] >>> 3;
        b19 = s2[44] << 29 | s2[45] >>> 3;
        b10 = s2[6] << 28 | s2[7] >>> 4;
        b11 = s2[7] << 28 | s2[6] >>> 4;
        b42 = s2[17] << 23 | s2[16] >>> 9;
        b43 = s2[16] << 23 | s2[17] >>> 9;
        b24 = s2[26] << 25 | s2[27] >>> 7;
        b25 = s2[27] << 25 | s2[26] >>> 7;
        b6 = s2[36] << 21 | s2[37] >>> 11;
        b7 = s2[37] << 21 | s2[36] >>> 11;
        b38 = s2[47] << 24 | s2[46] >>> 8;
        b39 = s2[46] << 24 | s2[47] >>> 8;
        b30 = s2[8] << 27 | s2[9] >>> 5;
        b31 = s2[9] << 27 | s2[8] >>> 5;
        b12 = s2[18] << 20 | s2[19] >>> 12;
        b13 = s2[19] << 20 | s2[18] >>> 12;
        b44 = s2[29] << 7 | s2[28] >>> 25;
        b45 = s2[28] << 7 | s2[29] >>> 25;
        b26 = s2[38] << 8 | s2[39] >>> 24;
        b27 = s2[39] << 8 | s2[38] >>> 24;
        b8 = s2[48] << 14 | s2[49] >>> 18;
        b9 = s2[49] << 14 | s2[48] >>> 18;
        s2[0] = b0 ^ ~b2 & b4;
        s2[1] = b1 ^ ~b3 & b5;
        s2[10] = b10 ^ ~b12 & b14;
        s2[11] = b11 ^ ~b13 & b15;
        s2[20] = b20 ^ ~b22 & b24;
        s2[21] = b21 ^ ~b23 & b25;
        s2[30] = b30 ^ ~b32 & b34;
        s2[31] = b31 ^ ~b33 & b35;
        s2[40] = b40 ^ ~b42 & b44;
        s2[41] = b41 ^ ~b43 & b45;
        s2[2] = b2 ^ ~b4 & b6;
        s2[3] = b3 ^ ~b5 & b7;
        s2[12] = b12 ^ ~b14 & b16;
        s2[13] = b13 ^ ~b15 & b17;
        s2[22] = b22 ^ ~b24 & b26;
        s2[23] = b23 ^ ~b25 & b27;
        s2[32] = b32 ^ ~b34 & b36;
        s2[33] = b33 ^ ~b35 & b37;
        s2[42] = b42 ^ ~b44 & b46;
        s2[43] = b43 ^ ~b45 & b47;
        s2[4] = b4 ^ ~b6 & b8;
        s2[5] = b5 ^ ~b7 & b9;
        s2[14] = b14 ^ ~b16 & b18;
        s2[15] = b15 ^ ~b17 & b19;
        s2[24] = b24 ^ ~b26 & b28;
        s2[25] = b25 ^ ~b27 & b29;
        s2[34] = b34 ^ ~b36 & b38;
        s2[35] = b35 ^ ~b37 & b39;
        s2[44] = b44 ^ ~b46 & b48;
        s2[45] = b45 ^ ~b47 & b49;
        s2[6] = b6 ^ ~b8 & b0;
        s2[7] = b7 ^ ~b9 & b1;
        s2[16] = b16 ^ ~b18 & b10;
        s2[17] = b17 ^ ~b19 & b11;
        s2[26] = b26 ^ ~b28 & b20;
        s2[27] = b27 ^ ~b29 & b21;
        s2[36] = b36 ^ ~b38 & b30;
        s2[37] = b37 ^ ~b39 & b31;
        s2[46] = b46 ^ ~b48 & b40;
        s2[47] = b47 ^ ~b49 & b41;
        s2[8] = b8 ^ ~b0 & b2;
        s2[9] = b9 ^ ~b1 & b3;
        s2[18] = b18 ^ ~b10 & b12;
        s2[19] = b19 ^ ~b11 & b13;
        s2[28] = b28 ^ ~b20 & b22;
        s2[29] = b29 ^ ~b21 & b23;
        s2[38] = b38 ^ ~b30 & b32;
        s2[39] = b39 ^ ~b31 & b33;
        s2[48] = b48 ^ ~b40 & b42;
        s2[49] = b49 ^ ~b41 & b43;
        s2[0] ^= RC[n];
        s2[1] ^= RC[n + 1];
      }
    };
    if (COMMON_JS) {
      module.exports = methods;
    } else {
      for (i = 0; i < methodNames.length; ++i) {
        root[methodNames[i]] = methods[methodNames[i]];
      }
    }
  })();
})(sha3$1);
var sha3 = sha3$1.exports;
function keccak256(data) {
  return "0x" + sha3.keccak_256(arrayify(data));
}
const version$c = "rlp/5.7.0";
const logger$e = new Logger(version$c);
function arrayifyInteger(value) {
  const result = [];
  while (value) {
    result.unshift(value & 255);
    value >>= 8;
  }
  return result;
}
function unarrayifyInteger(data, offset, length) {
  let result = 0;
  for (let i = 0; i < length; i++) {
    result = result * 256 + data[offset + i];
  }
  return result;
}
function _encode(object) {
  if (Array.isArray(object)) {
    let payload = [];
    object.forEach(function(child) {
      payload = payload.concat(_encode(child));
    });
    if (payload.length <= 55) {
      payload.unshift(192 + payload.length);
      return payload;
    }
    const length2 = arrayifyInteger(payload.length);
    length2.unshift(247 + length2.length);
    return length2.concat(payload);
  }
  if (!isBytesLike(object)) {
    logger$e.throwArgumentError("RLP object must be BytesLike", "object", object);
  }
  const data = Array.prototype.slice.call(arrayify(object));
  if (data.length === 1 && data[0] <= 127) {
    return data;
  } else if (data.length <= 55) {
    data.unshift(128 + data.length);
    return data;
  }
  const length = arrayifyInteger(data.length);
  length.unshift(183 + length.length);
  return length.concat(data);
}
function encode$2(object) {
  return hexlify(_encode(object));
}
function _decodeChildren(data, offset, childOffset, length) {
  const result = [];
  while (childOffset < offset + 1 + length) {
    const decoded = _decode(data, childOffset);
    result.push(decoded.result);
    childOffset += decoded.consumed;
    if (childOffset > offset + 1 + length) {
      logger$e.throwError("child data too short", Logger.errors.BUFFER_OVERRUN, {});
    }
  }
  return { consumed: 1 + length, result };
}
function _decode(data, offset) {
  if (data.length === 0) {
    logger$e.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
  }
  if (data[offset] >= 248) {
    const lengthLength = data[offset] - 247;
    if (offset + 1 + lengthLength > data.length) {
      logger$e.throwError("data short segment too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    const length = unarrayifyInteger(data, offset + 1, lengthLength);
    if (offset + 1 + lengthLength + length > data.length) {
      logger$e.throwError("data long segment too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
  } else if (data[offset] >= 192) {
    const length = data[offset] - 192;
    if (offset + 1 + length > data.length) {
      logger$e.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    return _decodeChildren(data, offset, offset + 1, length);
  } else if (data[offset] >= 184) {
    const lengthLength = data[offset] - 183;
    if (offset + 1 + lengthLength > data.length) {
      logger$e.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    const length = unarrayifyInteger(data, offset + 1, lengthLength);
    if (offset + 1 + lengthLength + length > data.length) {
      logger$e.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
    return { consumed: 1 + lengthLength + length, result };
  } else if (data[offset] >= 128) {
    const length = data[offset] - 128;
    if (offset + 1 + length > data.length) {
      logger$e.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    const result = hexlify(data.slice(offset + 1, offset + 1 + length));
    return { consumed: 1 + length, result };
  }
  return { consumed: 1, result: hexlify(data[offset]) };
}
function decode$2(data) {
  const bytes = arrayify(data);
  const decoded = _decode(bytes, 0);
  if (decoded.consumed !== bytes.length) {
    logger$e.throwArgumentError("invalid rlp data", "data", data);
  }
  return decoded.result;
}
const version$b = "address/5.7.0";
const logger$d = new Logger(version$b);
function getChecksumAddress(address) {
  if (!isHexString(address, 20)) {
    logger$d.throwArgumentError("invalid address", "address", address);
  }
  address = address.toLowerCase();
  const chars = address.substring(2).split("");
  const expanded = new Uint8Array(40);
  for (let i = 0; i < 40; i++) {
    expanded[i] = chars[i].charCodeAt(0);
  }
  const hashed = arrayify(keccak256(expanded));
  for (let i = 0; i < 40; i += 2) {
    if (hashed[i >> 1] >> 4 >= 8) {
      chars[i] = chars[i].toUpperCase();
    }
    if ((hashed[i >> 1] & 15) >= 8) {
      chars[i + 1] = chars[i + 1].toUpperCase();
    }
  }
  return "0x" + chars.join("");
}
const MAX_SAFE_INTEGER = 9007199254740991;
function log10(x) {
  if (Math.log10) {
    return Math.log10(x);
  }
  return Math.log(x) / Math.LN10;
}
const ibanLookup = {};
for (let i = 0; i < 10; i++) {
  ibanLookup[String(i)] = String(i);
}
for (let i = 0; i < 26; i++) {
  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
}
const safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
function ibanChecksum(address) {
  address = address.toUpperCase();
  address = address.substring(4) + address.substring(0, 2) + "00";
  let expanded = address.split("").map((c) => {
    return ibanLookup[c];
  }).join("");
  while (expanded.length >= safeDigits) {
    let block = expanded.substring(0, safeDigits);
    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
  }
  let checksum = String(98 - parseInt(expanded, 10) % 97);
  while (checksum.length < 2) {
    checksum = "0" + checksum;
  }
  return checksum;
}
function getAddress$1(address) {
  let result = null;
  if (typeof address !== "string") {
    logger$d.throwArgumentError("invalid address", "address", address);
  }
  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    if (address.substring(0, 2) !== "0x") {
      address = "0x" + address;
    }
    result = getChecksumAddress(address);
    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
      logger$d.throwArgumentError("bad address checksum", "address", address);
    }
  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    if (address.substring(2, 4) !== ibanChecksum(address)) {
      logger$d.throwArgumentError("bad icap checksum", "address", address);
    }
    result = _base36To16(address.substring(4));
    while (result.length < 40) {
      result = "0" + result;
    }
    result = getChecksumAddress("0x" + result);
  } else {
    logger$d.throwArgumentError("invalid address", "address", address);
  }
  return result;
}
function getContractAddress(transaction) {
  let from = null;
  try {
    from = getAddress$1(transaction.from);
  } catch (error) {
    logger$d.throwArgumentError("missing from address", "transaction", transaction);
  }
  const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));
  return getAddress$1(hexDataSlice(keccak256(encode$2([from, nonce])), 12));
}
const AddressZero = "0x0000000000000000000000000000000000000000";
const Zero$1 = /* @__PURE__ */ BigNumber.from(0);
const HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000";
const version$a = "strings/5.7.0";
const logger$c = new Logger(version$a);
var UnicodeNormalizationForm;
(function(UnicodeNormalizationForm2) {
  UnicodeNormalizationForm2["current"] = "";
  UnicodeNormalizationForm2["NFC"] = "NFC";
  UnicodeNormalizationForm2["NFD"] = "NFD";
  UnicodeNormalizationForm2["NFKC"] = "NFKC";
  UnicodeNormalizationForm2["NFKD"] = "NFKD";
})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
var Utf8ErrorReason;
(function(Utf8ErrorReason2) {
  Utf8ErrorReason2["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
  Utf8ErrorReason2["BAD_PREFIX"] = "bad codepoint prefix";
  Utf8ErrorReason2["OVERRUN"] = "string overrun";
  Utf8ErrorReason2["MISSING_CONTINUE"] = "missing continuation byte";
  Utf8ErrorReason2["OUT_OF_RANGE"] = "out of UTF-8 range";
  Utf8ErrorReason2["UTF16_SURROGATE"] = "UTF-16 surrogate";
  Utf8ErrorReason2["OVERLONG"] = "overlong representation";
})(Utf8ErrorReason || (Utf8ErrorReason = {}));
function errorFunc(reason, offset, bytes, output, badCodepoint) {
  return logger$c.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
}
function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
    let i = 0;
    for (let o = offset + 1; o < bytes.length; o++) {
      if (bytes[o] >> 6 !== 2) {
        break;
      }
      i++;
    }
    return i;
  }
  if (reason === Utf8ErrorReason.OVERRUN) {
    return bytes.length - offset - 1;
  }
  return 0;
}
function replaceFunc(reason, offset, bytes, output, badCodepoint) {
  if (reason === Utf8ErrorReason.OVERLONG) {
    output.push(badCodepoint);
    return 0;
  }
  output.push(65533);
  return ignoreFunc(reason, offset, bytes);
}
const Utf8ErrorFuncs = Object.freeze({
  error: errorFunc,
  ignore: ignoreFunc,
  replace: replaceFunc
});
function getUtf8CodePoints(bytes, onError) {
  if (onError == null) {
    onError = Utf8ErrorFuncs.error;
  }
  bytes = arrayify(bytes);
  const result = [];
  let i = 0;
  while (i < bytes.length) {
    const c = bytes[i++];
    if (c >> 7 === 0) {
      result.push(c);
      continue;
    }
    let extraLength = null;
    let overlongMask = null;
    if ((c & 224) === 192) {
      extraLength = 1;
      overlongMask = 127;
    } else if ((c & 240) === 224) {
      extraLength = 2;
      overlongMask = 2047;
    } else if ((c & 248) === 240) {
      extraLength = 3;
      overlongMask = 65535;
    } else {
      if ((c & 192) === 128) {
        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);
      } else {
        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
      }
      continue;
    }
    if (i - 1 + extraLength >= bytes.length) {
      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);
      continue;
    }
    let res = c & (1 << 8 - extraLength - 1) - 1;
    for (let j = 0; j < extraLength; j++) {
      let nextChar = bytes[i];
      if ((nextChar & 192) != 128) {
        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);
        res = null;
        break;
      }
      res = res << 6 | nextChar & 63;
      i++;
    }
    if (res === null) {
      continue;
    }
    if (res > 1114111) {
      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
      continue;
    }
    if (res >= 55296 && res <= 57343) {
      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
      continue;
    }
    if (res <= overlongMask) {
      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);
      continue;
    }
    result.push(res);
  }
  return result;
}
function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {
  if (form != UnicodeNormalizationForm.current) {
    logger$c.checkNormalize();
    str = str.normalize(form);
  }
  let result = [];
  for (let i = 0; i < str.length; i++) {
    const c = str.charCodeAt(i);
    if (c < 128) {
      result.push(c);
    } else if (c < 2048) {
      result.push(c >> 6 | 192);
      result.push(c & 63 | 128);
    } else if ((c & 64512) == 55296) {
      i++;
      const c2 = str.charCodeAt(i);
      if (i >= str.length || (c2 & 64512) !== 56320) {
        throw new Error("invalid utf-8 string");
      }
      const pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);
      result.push(pair >> 18 | 240);
      result.push(pair >> 12 & 63 | 128);
      result.push(pair >> 6 & 63 | 128);
      result.push(pair & 63 | 128);
    } else {
      result.push(c >> 12 | 224);
      result.push(c >> 6 & 63 | 128);
      result.push(c & 63 | 128);
    }
  }
  return arrayify(result);
}
function _toUtf8String(codePoints) {
  return codePoints.map((codePoint) => {
    if (codePoint <= 65535) {
      return String.fromCharCode(codePoint);
    }
    codePoint -= 65536;
    return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);
  }).join("");
}
function toUtf8String(bytes, onError) {
  return _toUtf8String(getUtf8CodePoints(bytes, onError));
}
function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {
  return getUtf8CodePoints(toUtf8Bytes(str, form));
}
function id(text) {
  return keccak256(toUtf8Bytes(text));
}
const version$9 = "hash/5.7.0";
function decode$1(textData) {
  textData = atob(textData);
  const data = [];
  for (let i = 0; i < textData.length; i++) {
    data.push(textData.charCodeAt(i));
  }
  return arrayify(data);
}
function encode$1(data) {
  data = arrayify(data);
  let textData = "";
  for (let i = 0; i < data.length; i++) {
    textData += String.fromCharCode(data[i]);
  }
  return btoa(textData);
}
function flat(array, depth) {
  if (depth == null) {
    depth = 1;
  }
  const result = [];
  const forEach = result.forEach;
  const flatDeep = function(arr, depth2) {
    forEach.call(arr, function(val) {
      if (depth2 > 0 && Array.isArray(val)) {
        flatDeep(val, depth2 - 1);
      } else {
        result.push(val);
      }
    });
  };
  flatDeep(array, depth);
  return result;
}
function fromEntries(array) {
  const result = {};
  for (let i = 0; i < array.length; i++) {
    const value = array[i];
    result[value[0]] = value[1];
  }
  return result;
}
function decode_arithmetic(bytes) {
  let pos = 0;
  function u16() {
    return bytes[pos++] << 8 | bytes[pos++];
  }
  let symbol_count = u16();
  let total = 1;
  let acc = [0, 1];
  for (let i = 1; i < symbol_count; i++) {
    acc.push(total += u16());
  }
  let skip = u16();
  let pos_payload = pos;
  pos += skip;
  let read_width = 0;
  let read_buffer = 0;
  function read_bit() {
    if (read_width == 0) {
      read_buffer = read_buffer << 8 | bytes[pos++];
      read_width = 8;
    }
    return read_buffer >> --read_width & 1;
  }
  const N = 31;
  const FULL = Math.pow(2, N);
  const HALF = FULL >>> 1;
  const QRTR = HALF >> 1;
  const MASK = FULL - 1;
  let register = 0;
  for (let i = 0; i < N; i++)
    register = register << 1 | read_bit();
  let symbols = [];
  let low = 0;
  let range = FULL;
  while (true) {
    let value = Math.floor(((register - low + 1) * total - 1) / range);
    let start = 0;
    let end = symbol_count;
    while (end - start > 1) {
      let mid = start + end >>> 1;
      if (value < acc[mid]) {
        end = mid;
      } else {
        start = mid;
      }
    }
    if (start == 0)
      break;
    symbols.push(start);
    let a = low + Math.floor(range * acc[start] / total);
    let b = low + Math.floor(range * acc[start + 1] / total) - 1;
    while (((a ^ b) & HALF) == 0) {
      register = register << 1 & MASK | read_bit();
      a = a << 1 & MASK;
      b = b << 1 & MASK | 1;
    }
    while (a & ~b & QRTR) {
      register = register & HALF | register << 1 & MASK >>> 1 | read_bit();
      a = a << 1 ^ HALF;
      b = (b ^ HALF) << 1 | HALF | 1;
    }
    low = a;
    range = 1 + b - a;
  }
  let offset = symbol_count - 4;
  return symbols.map((x) => {
    switch (x - offset) {
      case 3:
        return offset + 65792 + (bytes[pos_payload++] << 16 | bytes[pos_payload++] << 8 | bytes[pos_payload++]);
      case 2:
        return offset + 256 + (bytes[pos_payload++] << 8 | bytes[pos_payload++]);
      case 1:
        return offset + bytes[pos_payload++];
      default:
        return x - 1;
    }
  });
}
function read_payload(v) {
  let pos = 0;
  return () => v[pos++];
}
function read_compressed_payload(bytes) {
  return read_payload(decode_arithmetic(bytes));
}
function signed(i) {
  return i & 1 ? ~i >> 1 : i >> 1;
}
function read_counts(n, next) {
  let v = Array(n);
  for (let i = 0; i < n; i++)
    v[i] = 1 + next();
  return v;
}
function read_ascending(n, next) {
  let v = Array(n);
  for (let i = 0, x = -1; i < n; i++)
    v[i] = x += 1 + next();
  return v;
}
function read_deltas(n, next) {
  let v = Array(n);
  for (let i = 0, x = 0; i < n; i++)
    v[i] = x += signed(next());
  return v;
}
function read_member_array(next, lookup) {
  let v = read_ascending(next(), next);
  let n = next();
  let vX = read_ascending(n, next);
  let vN = read_counts(n, next);
  for (let i = 0; i < n; i++) {
    for (let j = 0; j < vN[i]; j++) {
      v.push(vX[i] + j);
    }
  }
  return lookup ? v.map((x) => lookup[x]) : v;
}
function read_mapped_map(next) {
  let ret = [];
  while (true) {
    let w = next();
    if (w == 0)
      break;
    ret.push(read_linear_table(w, next));
  }
  while (true) {
    let w = next() - 1;
    if (w < 0)
      break;
    ret.push(read_replacement_table(w, next));
  }
  return fromEntries(flat(ret));
}
function read_zero_terminated_array(next) {
  let v = [];
  while (true) {
    let i = next();
    if (i == 0)
      break;
    v.push(i);
  }
  return v;
}
function read_transposed(n, w, next) {
  let m = Array(n).fill(void 0).map(() => []);
  for (let i = 0; i < w; i++) {
    read_deltas(n, next).forEach((x, j) => m[j].push(x));
  }
  return m;
}
function read_linear_table(w, next) {
  let dx = 1 + next();
  let dy = next();
  let vN = read_zero_terminated_array(next);
  let m = read_transposed(vN.length, 1 + w, next);
  return flat(m.map((v, i) => {
    const x = v[0], ys = v.slice(1);
    return Array(vN[i]).fill(void 0).map((_, j) => {
      let j_dy = j * dy;
      return [x + j * dx, ys.map((y) => y + j_dy)];
    });
  }));
}
function read_replacement_table(w, next) {
  let n = 1 + next();
  let m = read_transposed(n, 1 + w, next);
  return m.map((v) => [v[0], v.slice(1)]);
}
function read_emoji_trie(next) {
  let sorted = read_member_array(next).sort((a, b) => a - b);
  return read();
  function read() {
    let branches = [];
    while (true) {
      let keys = read_member_array(next, sorted);
      if (keys.length == 0)
        break;
      branches.push({ set: new Set(keys), node: read() });
    }
    branches.sort((a, b) => b.set.size - a.set.size);
    let temp = next();
    let valid = temp % 3;
    temp = temp / 3 | 0;
    let fe0f = !!(temp & 1);
    temp >>= 1;
    let save = temp == 1;
    let check = temp == 2;
    return { branches, valid, fe0f, save, check };
  }
}
function getData() {
  return read_compressed_payload(decode$1(""));
}
const r$1 = getData();
const VALID = new Set(read_member_array(r$1));
const IGNORED = new Set(read_member_array(r$1));
const MAPPED = read_mapped_map(r$1);
const EMOJI_ROOT = read_emoji_trie(r$1);
const HYPHEN = 45;
const UNDERSCORE = 95;
function explode_cp(name2) {
  return toUtf8CodePoints(name2);
}
function filter_fe0f(cps) {
  return cps.filter((cp) => cp != 65039);
}
function ens_normalize_post_check(name2) {
  for (let label of name2.split(".")) {
    let cps = explode_cp(label);
    try {
      for (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {
        if (cps[i] !== UNDERSCORE) {
          throw new Error(`underscore only allowed at start`);
        }
      }
      if (cps.length >= 4 && cps.every((cp) => cp < 128) && cps[2] === HYPHEN && cps[3] === HYPHEN) {
        throw new Error(`invalid label extension`);
      }
    } catch (err) {
      throw new Error(`Invalid label "${label}": ${err.message}`);
    }
  }
  return name2;
}
function ens_normalize(name2) {
  return ens_normalize_post_check(normalize(name2, filter_fe0f));
}
function normalize(name2, emoji_filter) {
  let input = explode_cp(name2).reverse();
  let output = [];
  while (input.length) {
    let emoji = consume_emoji_reversed(input);
    if (emoji) {
      output.push(...emoji_filter(emoji));
      continue;
    }
    let cp = input.pop();
    if (VALID.has(cp)) {
      output.push(cp);
      continue;
    }
    if (IGNORED.has(cp)) {
      continue;
    }
    let cps = MAPPED[cp];
    if (cps) {
      output.push(...cps);
      continue;
    }
    throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);
  }
  return ens_normalize_post_check(nfc(String.fromCodePoint(...output)));
}
function nfc(s2) {
  return s2.normalize("NFC");
}
function consume_emoji_reversed(cps, eaten) {
  var _a;
  let node = EMOJI_ROOT;
  let emoji;
  let saved;
  let stack = [];
  let pos = cps.length;
  if (eaten)
    eaten.length = 0;
  while (pos) {
    let cp = cps[--pos];
    node = (_a = node.branches.find((x) => x.set.has(cp))) === null || _a === void 0 ? void 0 : _a.node;
    if (!node)
      break;
    if (node.save) {
      saved = cp;
    } else if (node.check) {
      if (cp === saved)
        break;
    }
    stack.push(cp);
    if (node.fe0f) {
      stack.push(65039);
      if (pos > 0 && cps[pos - 1] == 65039)
        pos--;
    }
    if (node.valid) {
      emoji = stack.slice();
      if (node.valid == 2)
        emoji.splice(1, 1);
      if (eaten)
        eaten.push(...cps.slice(pos).reverse());
      cps.length = pos;
    }
  }
  return emoji;
}
const logger$b = new Logger(version$9);
const Zeros = new Uint8Array(32);
Zeros.fill(0);
function checkComponent(comp) {
  if (comp.length === 0) {
    throw new Error("invalid ENS name; empty component");
  }
  return comp;
}
function ensNameSplit(name2) {
  const bytes = toUtf8Bytes(ens_normalize(name2));
  const comps = [];
  if (name2.length === 0) {
    return comps;
  }
  let last = 0;
  for (let i = 0; i < bytes.length; i++) {
    const d = bytes[i];
    if (d === 46) {
      comps.push(checkComponent(bytes.slice(last, i)));
      last = i + 1;
    }
  }
  if (last >= bytes.length) {
    throw new Error("invalid ENS name; empty component");
  }
  comps.push(checkComponent(bytes.slice(last)));
  return comps;
}
function namehash(name2) {
  if (typeof name2 !== "string") {
    logger$b.throwArgumentError("invalid ENS name; not a string", "name", name2);
  }
  let result = Zeros;
  const comps = ensNameSplit(name2);
  while (comps.length) {
    result = keccak256(concat([result, keccak256(comps.pop())]));
  }
  return hexlify(result);
}
function dnsEncode(name2) {
  return hexlify(concat(ensNameSplit(name2).map((comp) => {
    if (comp.length > 63) {
      throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
    }
    const bytes = new Uint8Array(comp.length + 1);
    bytes.set(comp, 1);
    bytes[0] = bytes.length - 1;
    return bytes;
  }))) + "00";
}
var __awaiter$6 = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const logger$a = new Logger(version$9);
const padding = new Uint8Array(32);
padding.fill(0);
const NegativeOne = BigNumber.from(-1);
const Zero = BigNumber.from(0);
const One = BigNumber.from(1);
const MaxUint256 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function hexPadRight(value) {
  const bytes = arrayify(value);
  const padOffset = bytes.length % 32;
  if (padOffset) {
    return hexConcat([bytes, padding.slice(padOffset)]);
  }
  return hexlify(bytes);
}
const hexTrue = hexZeroPad(One.toHexString(), 32);
const hexFalse = hexZeroPad(Zero.toHexString(), 32);
const domainFieldTypes = {
  name: "string",
  version: "string",
  chainId: "uint256",
  verifyingContract: "address",
  salt: "bytes32"
};
const domainFieldNames = [
  "name",
  "version",
  "chainId",
  "verifyingContract",
  "salt"
];
function checkString(key2) {
  return function(value) {
    if (typeof value !== "string") {
      logger$a.throwArgumentError(`invalid domain value for ${JSON.stringify(key2)}`, `domain.${key2}`, value);
    }
    return value;
  };
}
const domainChecks = {
  name: checkString("name"),
  version: checkString("version"),
  chainId: function(value) {
    try {
      return BigNumber.from(value).toString();
    } catch (error) {
    }
    return logger$a.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
  },
  verifyingContract: function(value) {
    try {
      return getAddress$1(value).toLowerCase();
    } catch (error) {
    }
    return logger$a.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
  },
  salt: function(value) {
    try {
      const bytes = arrayify(value);
      if (bytes.length !== 32) {
        throw new Error("bad length");
      }
      return hexlify(bytes);
    } catch (error) {
    }
    return logger$a.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
  }
};
function getBaseEncoder(type) {
  {
    const match = type.match(/^(u?)int(\d*)$/);
    if (match) {
      const signed2 = match[1] === "";
      const width = parseInt(match[2] || "256");
      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {
        logger$a.throwArgumentError("invalid numeric width", "type", type);
      }
      const boundsUpper = MaxUint256.mask(signed2 ? width - 1 : width);
      const boundsLower = signed2 ? boundsUpper.add(One).mul(NegativeOne) : Zero;
      return function(value) {
        const v = BigNumber.from(value);
        if (v.lt(boundsLower) || v.gt(boundsUpper)) {
          logger$a.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
        }
        return hexZeroPad(v.toTwos(256).toHexString(), 32);
      };
    }
  }
  {
    const match = type.match(/^bytes(\d+)$/);
    if (match) {
      const width = parseInt(match[1]);
      if (width === 0 || width > 32 || match[1] !== String(width)) {
        logger$a.throwArgumentError("invalid bytes width", "type", type);
      }
      return function(value) {
        const bytes = arrayify(value);
        if (bytes.length !== width) {
          logger$a.throwArgumentError(`invalid length for ${type}`, "value", value);
        }
        return hexPadRight(value);
      };
    }
  }
  switch (type) {
    case "address":
      return function(value) {
        return hexZeroPad(getAddress$1(value), 32);
      };
    case "bool":
      return function(value) {
        return !value ? hexFalse : hexTrue;
      };
    case "bytes":
      return function(value) {
        return keccak256(value);
      };
    case "string":
      return function(value) {
        return id(value);
      };
  }
  return null;
}
function encodeType(name2, fields) {
  return `${name2}(${fields.map(({ name: name3, type }) => type + " " + name3).join(",")})`;
}
class TypedDataEncoder {
  constructor(types) {
    defineReadOnly(this, "types", Object.freeze(deepCopy(types)));
    defineReadOnly(this, "_encoderCache", {});
    defineReadOnly(this, "_types", {});
    const links = {};
    const parents = {};
    const subtypes = {};
    Object.keys(types).forEach((type) => {
      links[type] = {};
      parents[type] = [];
      subtypes[type] = {};
    });
    for (const name2 in types) {
      const uniqueNames = {};
      types[name2].forEach((field) => {
        if (uniqueNames[field.name]) {
          logger$a.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name2)}`, "types", types);
        }
        uniqueNames[field.name] = true;
        const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
        if (baseType === name2) {
          logger$a.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
        }
        const encoder = getBaseEncoder(baseType);
        if (encoder) {
          return;
        }
        if (!parents[baseType]) {
          logger$a.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
        }
        parents[baseType].push(name2);
        links[name2][baseType] = true;
      });
    }
    const primaryTypes = Object.keys(parents).filter((n) => parents[n].length === 0);
    if (primaryTypes.length === 0) {
      logger$a.throwArgumentError("missing primary type", "types", types);
    } else if (primaryTypes.length > 1) {
      logger$a.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(", ")}`, "types", types);
    }
    defineReadOnly(this, "primaryType", primaryTypes[0]);
    function checkCircular(type, found) {
      if (found[type]) {
        logger$a.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
      }
      found[type] = true;
      Object.keys(links[type]).forEach((child) => {
        if (!parents[child]) {
          return;
        }
        checkCircular(child, found);
        Object.keys(found).forEach((subtype) => {
          subtypes[subtype][child] = true;
        });
      });
      delete found[type];
    }
    checkCircular(this.primaryType, {});
    for (const name2 in subtypes) {
      const st = Object.keys(subtypes[name2]);
      st.sort();
      this._types[name2] = encodeType(name2, types[name2]) + st.map((t) => encodeType(t, types[t])).join("");
    }
  }
  getEncoder(type) {
    let encoder = this._encoderCache[type];
    if (!encoder) {
      encoder = this._encoderCache[type] = this._getEncoder(type);
    }
    return encoder;
  }
  _getEncoder(type) {
    {
      const encoder = getBaseEncoder(type);
      if (encoder) {
        return encoder;
      }
    }
    const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (match) {
      const subtype = match[1];
      const subEncoder = this.getEncoder(subtype);
      const length = parseInt(match[3]);
      return (value) => {
        if (length >= 0 && value.length !== length) {
          logger$a.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
        }
        let result = value.map(subEncoder);
        if (this._types[subtype]) {
          result = result.map(keccak256);
        }
        return keccak256(hexConcat(result));
      };
    }
    const fields = this.types[type];
    if (fields) {
      const encodedType = id(this._types[type]);
      return (value) => {
        const values = fields.map(({ name: name2, type: type2 }) => {
          const result = this.getEncoder(type2)(value[name2]);
          if (this._types[type2]) {
            return keccak256(result);
          }
          return result;
        });
        values.unshift(encodedType);
        return hexConcat(values);
      };
    }
    return logger$a.throwArgumentError(`unknown type: ${type}`, "type", type);
  }
  encodeType(name2) {
    const result = this._types[name2];
    if (!result) {
      logger$a.throwArgumentError(`unknown type: ${JSON.stringify(name2)}`, "name", name2);
    }
    return result;
  }
  encodeData(type, value) {
    return this.getEncoder(type)(value);
  }
  hashStruct(name2, value) {
    return keccak256(this.encodeData(name2, value));
  }
  encode(value) {
    return this.encodeData(this.primaryType, value);
  }
  hash(value) {
    return this.hashStruct(this.primaryType, value);
  }
  _visit(type, value, callback) {
    {
      const encoder = getBaseEncoder(type);
      if (encoder) {
        return callback(type, value);
      }
    }
    const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (match) {
      const subtype = match[1];
      const length = parseInt(match[3]);
      if (length >= 0 && value.length !== length) {
        logger$a.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
      }
      return value.map((v) => this._visit(subtype, v, callback));
    }
    const fields = this.types[type];
    if (fields) {
      return fields.reduce((accum, { name: name2, type: type2 }) => {
        accum[name2] = this._visit(type2, value[name2], callback);
        return accum;
      }, {});
    }
    return logger$a.throwArgumentError(`unknown type: ${type}`, "type", type);
  }
  visit(value, callback) {
    return this._visit(this.primaryType, value, callback);
  }
  static from(types) {
    return new TypedDataEncoder(types);
  }
  static getPrimaryType(types) {
    return TypedDataEncoder.from(types).primaryType;
  }
  static hashStruct(name2, types, value) {
    return TypedDataEncoder.from(types).hashStruct(name2, value);
  }
  static hashDomain(domain) {
    const domainFields = [];
    for (const name2 in domain) {
      const type = domainFieldTypes[name2];
      if (!type) {
        logger$a.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name2)}`, "domain", domain);
      }
      domainFields.push({ name: name2, type });
    }
    domainFields.sort((a, b) => {
      return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
    });
    return TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
  }
  static encode(domain, types, value) {
    return hexConcat([
      "0x1901",
      TypedDataEncoder.hashDomain(domain),
      TypedDataEncoder.from(types).hash(value)
    ]);
  }
  static hash(domain, types, value) {
    return keccak256(TypedDataEncoder.encode(domain, types, value));
  }
  static resolveNames(domain, types, value, resolveName) {
    return __awaiter$6(this, void 0, void 0, function* () {
      domain = shallowCopy(domain);
      const ensCache = {};
      if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {
        ensCache[domain.verifyingContract] = "0x";
      }
      const encoder = TypedDataEncoder.from(types);
      encoder.visit(value, (type, value2) => {
        if (type === "address" && !isHexString(value2, 20)) {
          ensCache[value2] = "0x";
        }
        return value2;
      });
      for (const name2 in ensCache) {
        ensCache[name2] = yield resolveName(name2);
      }
      if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
        domain.verifyingContract = ensCache[domain.verifyingContract];
      }
      value = encoder.visit(value, (type, value2) => {
        if (type === "address" && ensCache[value2]) {
          return ensCache[value2];
        }
        return value2;
      });
      return { domain, value };
    });
  }
  static getPayload(domain, types, value) {
    TypedDataEncoder.hashDomain(domain);
    const domainValues = {};
    const domainTypes = [];
    domainFieldNames.forEach((name2) => {
      const value2 = domain[name2];
      if (value2 == null) {
        return;
      }
      domainValues[name2] = domainChecks[name2](value2);
      domainTypes.push({ name: name2, type: domainFieldTypes[name2] });
    });
    const encoder = TypedDataEncoder.from(types);
    const typesWithDomain = shallowCopy(types);
    if (typesWithDomain.EIP712Domain) {
      logger$a.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
    } else {
      typesWithDomain.EIP712Domain = domainTypes;
    }
    encoder.encode(value);
    return {
      types: typesWithDomain,
      domain: domainValues,
      primaryType: encoder.primaryType,
      message: encoder.visit(value, (type, value2) => {
        if (type.match(/^bytes(\d*)/)) {
          return hexlify(arrayify(value2));
        }
        if (type.match(/^u?int/)) {
          return BigNumber.from(value2).toString();
        }
        switch (type) {
          case "address":
            return value2.toLowerCase();
          case "bool":
            return !!value2;
          case "string":
            if (typeof value2 !== "string") {
              logger$a.throwArgumentError(`invalid string`, "value", value2);
            }
            return value2;
        }
        return logger$a.throwArgumentError("unsupported type", "type", type);
      })
    };
  }
}
const version$8 = "abstract-provider/5.7.0";
var __awaiter$5 = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const logger$9 = new Logger(version$8);
class ForkEvent extends Description {
  static isForkEvent(value) {
    return !!(value && value._isForkEvent);
  }
}
class Provider {
  constructor() {
    logger$9.checkAbstract(new.target, Provider);
    defineReadOnly(this, "_isProvider", true);
  }
  getFeeData() {
    return __awaiter$5(this, void 0, void 0, function* () {
      const { block, gasPrice } = yield resolveProperties({
        block: this.getBlock("latest"),
        gasPrice: this.getGasPrice().catch((error) => {
          return null;
        })
      });
      let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;
      if (block && block.baseFeePerGas) {
        lastBaseFeePerGas = block.baseFeePerGas;
        maxPriorityFeePerGas = BigNumber.from("1500000000");
        maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
      }
      return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };
    });
  }
  addListener(eventName, listener) {
    return this.on(eventName, listener);
  }
  removeListener(eventName, listener) {
    return this.off(eventName, listener);
  }
  static isProvider(value) {
    return !!(value && value._isProvider);
  }
}
const version$7 = "abstract-signer/5.7.0";
var __awaiter$4 = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const logger$8 = new Logger(version$7);
const allowedTransactionKeys$1 = [
  "accessList",
  "ccipReadEnabled",
  "chainId",
  "customData",
  "data",
  "from",
  "gasLimit",
  "gasPrice",
  "maxFeePerGas",
  "maxPriorityFeePerGas",
  "nonce",
  "to",
  "type",
  "value"
];
const forwardErrors = [
  Logger.errors.INSUFFICIENT_FUNDS,
  Logger.errors.NONCE_EXPIRED,
  Logger.errors.REPLACEMENT_UNDERPRICED
];
class Signer {
  constructor() {
    logger$8.checkAbstract(new.target, Signer);
    defineReadOnly(this, "_isSigner", true);
  }
  getBalance(blockTag) {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("getBalance");
      return yield this.provider.getBalance(this.getAddress(), blockTag);
    });
  }
  getTransactionCount(blockTag) {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("getTransactionCount");
      return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
    });
  }
  estimateGas(transaction) {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("estimateGas");
      const tx = yield resolveProperties(this.checkTransaction(transaction));
      return yield this.provider.estimateGas(tx);
    });
  }
  call(transaction, blockTag) {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("call");
      const tx = yield resolveProperties(this.checkTransaction(transaction));
      return yield this.provider.call(tx, blockTag);
    });
  }
  sendTransaction(transaction) {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("sendTransaction");
      const tx = yield this.populateTransaction(transaction);
      const signedTx = yield this.signTransaction(tx);
      return yield this.provider.sendTransaction(signedTx);
    });
  }
  getChainId() {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("getChainId");
      const network = yield this.provider.getNetwork();
      return network.chainId;
    });
  }
  getGasPrice() {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("getGasPrice");
      return yield this.provider.getGasPrice();
    });
  }
  getFeeData() {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("getFeeData");
      return yield this.provider.getFeeData();
    });
  }
  resolveName(name2) {
    return __awaiter$4(this, void 0, void 0, function* () {
      this._checkProvider("resolveName");
      return yield this.provider.resolveName(name2);
    });
  }
  checkTransaction(transaction) {
    for (const key2 in transaction) {
      if (allowedTransactionKeys$1.indexOf(key2) === -1) {
        logger$8.throwArgumentError("invalid transaction key: " + key2, "transaction", transaction);
      }
    }
    const tx = shallowCopy(transaction);
    if (tx.from == null) {
      tx.from = this.getAddress();
    } else {
      tx.from = Promise.all([
        Promise.resolve(tx.from),
        this.getAddress()
      ]).then((result) => {
        if (result[0].toLowerCase() !== result[1].toLowerCase()) {
          logger$8.throwArgumentError("from address mismatch", "transaction", transaction);
        }
        return result[0];
      });
    }
    return tx;
  }
  populateTransaction(transaction) {
    return __awaiter$4(this, void 0, void 0, function* () {
      const tx = yield resolveProperties(this.checkTransaction(transaction));
      if (tx.to != null) {
        tx.to = Promise.resolve(tx.to).then((to) => __awaiter$4(this, void 0, void 0, function* () {
          if (to == null) {
            return null;
          }
          const address = yield this.resolveName(to);
          if (address == null) {
            logger$8.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
          }
          return address;
        }));
        tx.to.catch((error) => {
        });
      }
      const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;
      if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
        logger$8.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
      } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
        logger$8.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
      }
      if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
        tx.type = 2;
      } else if (tx.type === 0 || tx.type === 1) {
        if (tx.gasPrice == null) {
          tx.gasPrice = this.getGasPrice();
        }
      } else {
        const feeData = yield this.getFeeData();
        if (tx.type == null) {
          if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
            tx.type = 2;
            if (tx.gasPrice != null) {
              const gasPrice = tx.gasPrice;
              delete tx.gasPrice;
              tx.maxFeePerGas = gasPrice;
              tx.maxPriorityFeePerGas = gasPrice;
            } else {
              if (tx.maxFeePerGas == null) {
                tx.maxFeePerGas = feeData.maxFeePerGas;
              }
              if (tx.maxPriorityFeePerGas == null) {
                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
              }
            }
          } else if (feeData.gasPrice != null) {
            if (hasEip1559) {
              logger$8.throwError("network does not support EIP-1559", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "populateTransaction"
              });
            }
            if (tx.gasPrice == null) {
              tx.gasPrice = feeData.gasPrice;
            }
            tx.type = 0;
          } else {
            logger$8.throwError("failed to get consistent fee data", Logger.errors.UNSUPPORTED_OPERATION, {
              operation: "signer.getFeeData"
            });
          }
        } else if (tx.type === 2) {
          if (tx.maxFeePerGas == null) {
            tx.maxFeePerGas = feeData.maxFeePerGas;
          }
          if (tx.maxPriorityFeePerGas == null) {
            tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
          }
        }
      }
      if (tx.nonce == null) {
        tx.nonce = this.getTransactionCount("pending");
      }
      if (tx.gasLimit == null) {
        tx.gasLimit = this.estimateGas(tx).catch((error) => {
          if (forwardErrors.indexOf(error.code) >= 0) {
            throw error;
          }
          return logger$8.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
            error,
            tx
          });
        });
      }
      if (tx.chainId == null) {
        tx.chainId = this.getChainId();
      } else {
        tx.chainId = Promise.all([
          Promise.resolve(tx.chainId),
          this.getChainId()
        ]).then((results) => {
          if (results[1] !== 0 && results[0] !== results[1]) {
            logger$8.throwArgumentError("chainId address mismatch", "transaction", transaction);
          }
          return results[0];
        });
      }
      return yield resolveProperties(tx);
    });
  }
  _checkProvider(operation) {
    if (!this.provider) {
      logger$8.throwError("missing provider", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: operation || "_checkProvider"
      });
    }
  }
  static isSigner(value) {
    return !!(value && value._isSigner);
  }
}
var bn = { exports: {} };
(function(module) {
  (function(module2, exports) {
    function assert2(val, msg) {
      if (!val)
        throw new Error(msg || "Assertion failed");
    }
    function inherits2(ctor, superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function() {
      };
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
    function BN2(number, base2, endian) {
      if (BN2.isBN(number)) {
        return number;
      }
      this.negative = 0;
      this.words = null;
      this.length = 0;
      this.red = null;
      if (number !== null) {
        if (base2 === "le" || base2 === "be") {
          endian = base2;
          base2 = 10;
        }
        this._init(number || 0, base2 || 10, endian || "be");
      }
    }
    if (typeof module2 === "object") {
      module2.exports = BN2;
    } else {
      exports.BN = BN2;
    }
    BN2.BN = BN2;
    BN2.wordSize = 26;
    var Buffer;
    try {
      if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
        Buffer = window.Buffer;
      } else {
        Buffer = require("buffer").Buffer;
      }
    } catch (e) {
    }
    BN2.isBN = function isBN(num) {
      if (num instanceof BN2) {
        return true;
      }
      return num !== null && typeof num === "object" && num.constructor.wordSize === BN2.wordSize && Array.isArray(num.words);
    };
    BN2.max = function max(left, right) {
      if (left.cmp(right) > 0)
        return left;
      return right;
    };
    BN2.min = function min(left, right) {
      if (left.cmp(right) < 0)
        return left;
      return right;
    };
    BN2.prototype._init = function init3(number, base2, endian) {
      if (typeof number === "number") {
        return this._initNumber(number, base2, endian);
      }
      if (typeof number === "object") {
        return this._initArray(number, base2, endian);
      }
      if (base2 === "hex") {
        base2 = 16;
      }
      assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
      number = number.toString().replace(/\s+/g, "");
      var start = 0;
      if (number[0] === "-") {
        start++;
        this.negative = 1;
      }
      if (start < number.length) {
        if (base2 === 16) {
          this._parseHex(number, start, endian);
        } else {
          this._parseBase(number, base2, start);
          if (endian === "le") {
            this._initArray(this.toArray(), base2, endian);
          }
        }
      }
    };
    BN2.prototype._initNumber = function _initNumber(number, base2, endian) {
      if (number < 0) {
        this.negative = 1;
        number = -number;
      }
      if (number < 67108864) {
        this.words = [number & 67108863];
        this.length = 1;
      } else if (number < 4503599627370496) {
        this.words = [
          number & 67108863,
          number / 67108864 & 67108863
        ];
        this.length = 2;
      } else {
        assert2(number < 9007199254740992);
        this.words = [
          number & 67108863,
          number / 67108864 & 67108863,
          1
        ];
        this.length = 3;
      }
      if (endian !== "le")
        return;
      this._initArray(this.toArray(), base2, endian);
    };
    BN2.prototype._initArray = function _initArray(number, base2, endian) {
      assert2(typeof number.length === "number");
      if (number.length <= 0) {
        this.words = [0];
        this.length = 1;
        return this;
      }
      this.length = Math.ceil(number.length / 3);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }
      var j, w;
      var off = 0;
      if (endian === "be") {
        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] = w >>> 26 - off & 67108863;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      } else if (endian === "le") {
        for (i = 0, j = 0; i < number.length; i += 3) {
          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] = w >>> 26 - off & 67108863;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      }
      return this._strip();
    };
    function parseHex4Bits(string, index) {
      var c = string.charCodeAt(index);
      if (c >= 48 && c <= 57) {
        return c - 48;
      } else if (c >= 65 && c <= 70) {
        return c - 55;
      } else if (c >= 97 && c <= 102) {
        return c - 87;
      } else {
        assert2(false, "Invalid character in " + string);
      }
    }
    function parseHexByte(string, lowerBound, index) {
      var r2 = parseHex4Bits(string, index);
      if (index - 1 >= lowerBound) {
        r2 |= parseHex4Bits(string, index - 1) << 4;
      }
      return r2;
    }
    BN2.prototype._parseHex = function _parseHex(number, start, endian) {
      this.length = Math.ceil((number.length - start) / 6);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }
      var off = 0;
      var j = 0;
      var w;
      if (endian === "be") {
        for (i = number.length - 1; i >= start; i -= 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 67108863;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      } else {
        var parseLength = number.length - start;
        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 67108863;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      }
      this._strip();
    };
    function parseBase(str, start, end, mul3) {
      var r2 = 0;
      var b = 0;
      var len = Math.min(str.length, end);
      for (var i = start; i < len; i++) {
        var c = str.charCodeAt(i) - 48;
        r2 *= mul3;
        if (c >= 49) {
          b = c - 49 + 10;
        } else if (c >= 17) {
          b = c - 17 + 10;
        } else {
          b = c;
        }
        assert2(c >= 0 && b < mul3, "Invalid character");
        r2 += b;
      }
      return r2;
    }
    BN2.prototype._parseBase = function _parseBase(number, base2, start) {
      this.words = [0];
      this.length = 1;
      for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
        limbLen++;
      }
      limbLen--;
      limbPow = limbPow / base2 | 0;
      var total = number.length - start;
      var mod = total % limbLen;
      var end = Math.min(total, total - mod) + start;
      var word = 0;
      for (var i = start; i < end; i += limbLen) {
        word = parseBase(number, i, i + limbLen, base2);
        this.imuln(limbPow);
        if (this.words[0] + word < 67108864) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      if (mod !== 0) {
        var pow2 = 1;
        word = parseBase(number, i, number.length, base2);
        for (i = 0; i < mod; i++) {
          pow2 *= base2;
        }
        this.imuln(pow2);
        if (this.words[0] + word < 67108864) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      this._strip();
    };
    BN2.prototype.copy = function copy(dest) {
      dest.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        dest.words[i] = this.words[i];
      }
      dest.length = this.length;
      dest.negative = this.negative;
      dest.red = this.red;
    };
    function move(dest, src) {
      dest.words = src.words;
      dest.length = src.length;
      dest.negative = src.negative;
      dest.red = src.red;
    }
    BN2.prototype._move = function _move(dest) {
      move(dest, this);
    };
    BN2.prototype.clone = function clone() {
      var r2 = new BN2(null);
      this.copy(r2);
      return r2;
    };
    BN2.prototype._expand = function _expand(size) {
      while (this.length < size) {
        this.words[this.length++] = 0;
      }
      return this;
    };
    BN2.prototype._strip = function strip() {
      while (this.length > 1 && this.words[this.length - 1] === 0) {
        this.length--;
      }
      return this._normSign();
    };
    BN2.prototype._normSign = function _normSign() {
      if (this.length === 1 && this.words[0] === 0) {
        this.negative = 0;
      }
      return this;
    };
    if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
      try {
        BN2.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect4;
      } catch (e) {
        BN2.prototype.inspect = inspect4;
      }
    } else {
      BN2.prototype.inspect = inspect4;
    }
    function inspect4() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var zeros2 = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ];
    var groupSizes = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ];
    var groupBases = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    BN2.prototype.toString = function toString(base2, padding2) {
      base2 = base2 || 10;
      padding2 = padding2 | 0 || 1;
      var out;
      if (base2 === 16 || base2 === "hex") {
        out = "";
        var off = 0;
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = this.words[i];
          var word = ((w << off | carry) & 16777215).toString(16);
          carry = w >>> 24 - off & 16777215;
          off += 2;
          if (off >= 26) {
            off -= 26;
            i--;
          }
          if (carry !== 0 || i !== this.length - 1) {
            out = zeros2[6 - word.length] + word + out;
          } else {
            out = word + out;
          }
        }
        if (carry !== 0) {
          out = carry.toString(16) + out;
        }
        while (out.length % padding2 !== 0) {
          out = "0" + out;
        }
        if (this.negative !== 0) {
          out = "-" + out;
        }
        return out;
      }
      if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
        var groupSize = groupSizes[base2];
        var groupBase = groupBases[base2];
        out = "";
        var c = this.clone();
        c.negative = 0;
        while (!c.isZero()) {
          var r2 = c.modrn(groupBase).toString(base2);
          c = c.idivn(groupBase);
          if (!c.isZero()) {
            out = zeros2[groupSize - r2.length] + r2 + out;
          } else {
            out = r2 + out;
          }
        }
        if (this.isZero()) {
          out = "0" + out;
        }
        while (out.length % padding2 !== 0) {
          out = "0" + out;
        }
        if (this.negative !== 0) {
          out = "-" + out;
        }
        return out;
      }
      assert2(false, "Base should be between 2 and 36");
    };
    BN2.prototype.toNumber = function toNumber() {
      var ret = this.words[0];
      if (this.length === 2) {
        ret += this.words[1] * 67108864;
      } else if (this.length === 3 && this.words[2] === 1) {
        ret += 4503599627370496 + this.words[1] * 67108864;
      } else if (this.length > 2) {
        assert2(false, "Number can only safely store up to 53 bits");
      }
      return this.negative !== 0 ? -ret : ret;
    };
    BN2.prototype.toJSON = function toJSON2() {
      return this.toString(16, 2);
    };
    if (Buffer) {
      BN2.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
      };
    }
    BN2.prototype.toArray = function toArray2(endian, length) {
      return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate2(ArrayType, size) {
      if (ArrayType.allocUnsafe) {
        return ArrayType.allocUnsafe(size);
      }
      return new ArrayType(size);
    };
    BN2.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
      this._strip();
      var byteLength = this.byteLength();
      var reqLength = length || Math.max(1, byteLength);
      assert2(byteLength <= reqLength, "byte array longer than desired length");
      assert2(reqLength > 0, "Requested array length <= 0");
      var res = allocate(ArrayType, reqLength);
      var postfix = endian === "le" ? "LE" : "BE";
      this["_toArrayLike" + postfix](res, byteLength);
      return res;
    };
    BN2.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
      var position = 0;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position++] = word & 255;
        if (position < res.length) {
          res[position++] = word >> 8 & 255;
        }
        if (position < res.length) {
          res[position++] = word >> 16 & 255;
        }
        if (shift === 6) {
          if (position < res.length) {
            res[position++] = word >> 24 & 255;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position < res.length) {
        res[position++] = carry;
        while (position < res.length) {
          res[position++] = 0;
        }
      }
    };
    BN2.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
      var position = res.length - 1;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position--] = word & 255;
        if (position >= 0) {
          res[position--] = word >> 8 & 255;
        }
        if (position >= 0) {
          res[position--] = word >> 16 & 255;
        }
        if (shift === 6) {
          if (position >= 0) {
            res[position--] = word >> 24 & 255;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position >= 0) {
        res[position--] = carry;
        while (position >= 0) {
          res[position--] = 0;
        }
      }
    };
    if (Math.clz32) {
      BN2.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
      };
    } else {
      BN2.prototype._countBits = function _countBits(w) {
        var t = w;
        var r2 = 0;
        if (t >= 4096) {
          r2 += 13;
          t >>>= 13;
        }
        if (t >= 64) {
          r2 += 7;
          t >>>= 7;
        }
        if (t >= 8) {
          r2 += 4;
          t >>>= 4;
        }
        if (t >= 2) {
          r2 += 2;
          t >>>= 2;
        }
        return r2 + t;
      };
    }
    BN2.prototype._zeroBits = function _zeroBits(w) {
      if (w === 0)
        return 26;
      var t = w;
      var r2 = 0;
      if ((t & 8191) === 0) {
        r2 += 13;
        t >>>= 13;
      }
      if ((t & 127) === 0) {
        r2 += 7;
        t >>>= 7;
      }
      if ((t & 15) === 0) {
        r2 += 4;
        t >>>= 4;
      }
      if ((t & 3) === 0) {
        r2 += 2;
        t >>>= 2;
      }
      if ((t & 1) === 0) {
        r2++;
      }
      return r2;
    };
    BN2.prototype.bitLength = function bitLength() {
      var w = this.words[this.length - 1];
      var hi = this._countBits(w);
      return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
      var w = new Array(num.bitLength());
      for (var bit = 0; bit < w.length; bit++) {
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        w[bit] = num.words[off] >>> wbit & 1;
      }
      return w;
    }
    BN2.prototype.zeroBits = function zeroBits() {
      if (this.isZero())
        return 0;
      var r2 = 0;
      for (var i = 0; i < this.length; i++) {
        var b = this._zeroBits(this.words[i]);
        r2 += b;
        if (b !== 26)
          break;
      }
      return r2;
    };
    BN2.prototype.byteLength = function byteLength() {
      return Math.ceil(this.bitLength() / 8);
    };
    BN2.prototype.toTwos = function toTwos(width) {
      if (this.negative !== 0) {
        return this.abs().inotn(width).iaddn(1);
      }
      return this.clone();
    };
    BN2.prototype.fromTwos = function fromTwos(width) {
      if (this.testn(width - 1)) {
        return this.notn(width).iaddn(1).ineg();
      }
      return this.clone();
    };
    BN2.prototype.isNeg = function isNeg() {
      return this.negative !== 0;
    };
    BN2.prototype.neg = function neg3() {
      return this.clone().ineg();
    };
    BN2.prototype.ineg = function ineg() {
      if (!this.isZero()) {
        this.negative ^= 1;
      }
      return this;
    };
    BN2.prototype.iuor = function iuor(num) {
      while (this.length < num.length) {
        this.words[this.length++] = 0;
      }
      for (var i = 0; i < num.length; i++) {
        this.words[i] = this.words[i] | num.words[i];
      }
      return this._strip();
    };
    BN2.prototype.ior = function ior(num) {
      assert2((this.negative | num.negative) === 0);
      return this.iuor(num);
    };
    BN2.prototype.or = function or(num) {
      if (this.length > num.length)
        return this.clone().ior(num);
      return num.clone().ior(this);
    };
    BN2.prototype.uor = function uor(num) {
      if (this.length > num.length)
        return this.clone().iuor(num);
      return num.clone().iuor(this);
    };
    BN2.prototype.iuand = function iuand(num) {
      var b;
      if (this.length > num.length) {
        b = num;
      } else {
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = this.words[i] & num.words[i];
      }
      this.length = b.length;
      return this._strip();
    };
    BN2.prototype.iand = function iand(num) {
      assert2((this.negative | num.negative) === 0);
      return this.iuand(num);
    };
    BN2.prototype.and = function and(num) {
      if (this.length > num.length)
        return this.clone().iand(num);
      return num.clone().iand(this);
    };
    BN2.prototype.uand = function uand(num) {
      if (this.length > num.length)
        return this.clone().iuand(num);
      return num.clone().iuand(this);
    };
    BN2.prototype.iuxor = function iuxor(num) {
      var a;
      var b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = a.words[i] ^ b.words[i];
      }
      if (this !== a) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = a.length;
      return this._strip();
    };
    BN2.prototype.ixor = function ixor(num) {
      assert2((this.negative | num.negative) === 0);
      return this.iuxor(num);
    };
    BN2.prototype.xor = function xor(num) {
      if (this.length > num.length)
        return this.clone().ixor(num);
      return num.clone().ixor(this);
    };
    BN2.prototype.uxor = function uxor(num) {
      if (this.length > num.length)
        return this.clone().iuxor(num);
      return num.clone().iuxor(this);
    };
    BN2.prototype.inotn = function inotn(width) {
      assert2(typeof width === "number" && width >= 0);
      var bytesNeeded = Math.ceil(width / 26) | 0;
      var bitsLeft = width % 26;
      this._expand(bytesNeeded);
      if (bitsLeft > 0) {
        bytesNeeded--;
      }
      for (var i = 0; i < bytesNeeded; i++) {
        this.words[i] = ~this.words[i] & 67108863;
      }
      if (bitsLeft > 0) {
        this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
      }
      return this._strip();
    };
    BN2.prototype.notn = function notn(width) {
      return this.clone().inotn(width);
    };
    BN2.prototype.setn = function setn(bit, val) {
      assert2(typeof bit === "number" && bit >= 0);
      var off = bit / 26 | 0;
      var wbit = bit % 26;
      this._expand(off + 1);
      if (val) {
        this.words[off] = this.words[off] | 1 << wbit;
      } else {
        this.words[off] = this.words[off] & ~(1 << wbit);
      }
      return this._strip();
    };
    BN2.prototype.iadd = function iadd(num) {
      var r2;
      if (this.negative !== 0 && num.negative === 0) {
        this.negative = 0;
        r2 = this.isub(num);
        this.negative ^= 1;
        return this._normSign();
      } else if (this.negative === 0 && num.negative !== 0) {
        num.negative = 0;
        r2 = this.isub(num);
        num.negative = 1;
        return r2._normSign();
      }
      var a, b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r2 = (a.words[i] | 0) + (b.words[i] | 0) + carry;
        this.words[i] = r2 & 67108863;
        carry = r2 >>> 26;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r2 = (a.words[i] | 0) + carry;
        this.words[i] = r2 & 67108863;
        carry = r2 >>> 26;
      }
      this.length = a.length;
      if (carry !== 0) {
        this.words[this.length] = carry;
        this.length++;
      } else if (a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      return this;
    };
    BN2.prototype.add = function add3(num) {
      var res;
      if (num.negative !== 0 && this.negative === 0) {
        num.negative = 0;
        res = this.sub(num);
        num.negative ^= 1;
        return res;
      } else if (num.negative === 0 && this.negative !== 0) {
        this.negative = 0;
        res = num.sub(this);
        this.negative = 1;
        return res;
      }
      if (this.length > num.length)
        return this.clone().iadd(num);
      return num.clone().iadd(this);
    };
    BN2.prototype.isub = function isub(num) {
      if (num.negative !== 0) {
        num.negative = 0;
        var r2 = this.iadd(num);
        num.negative = 1;
        return r2._normSign();
      } else if (this.negative !== 0) {
        this.negative = 0;
        this.iadd(num);
        this.negative = 1;
        return this._normSign();
      }
      var cmp = this.cmp(num);
      if (cmp === 0) {
        this.negative = 0;
        this.length = 1;
        this.words[0] = 0;
        return this;
      }
      var a, b;
      if (cmp > 0) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r2 = (a.words[i] | 0) - (b.words[i] | 0) + carry;
        carry = r2 >> 26;
        this.words[i] = r2 & 67108863;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r2 = (a.words[i] | 0) + carry;
        carry = r2 >> 26;
        this.words[i] = r2 & 67108863;
      }
      if (carry === 0 && i < a.length && a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = Math.max(this.length, i);
      if (a !== this) {
        this.negative = 1;
      }
      return this._strip();
    };
    BN2.prototype.sub = function sub(num) {
      return this.clone().isub(num);
    };
    function smallMulTo(self2, num, out) {
      out.negative = num.negative ^ self2.negative;
      var len = self2.length + num.length | 0;
      out.length = len;
      len = len - 1 | 0;
      var a = self2.words[0] | 0;
      var b = num.words[0] | 0;
      var r2 = a * b;
      var lo = r2 & 67108863;
      var carry = r2 / 67108864 | 0;
      out.words[0] = lo;
      for (var k = 1; k < len; k++) {
        var ncarry = carry >>> 26;
        var rword = carry & 67108863;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
          var i = k - j | 0;
          a = self2.words[i] | 0;
          b = num.words[j] | 0;
          r2 = a * b + rword;
          ncarry += r2 / 67108864 | 0;
          rword = r2 & 67108863;
        }
        out.words[k] = rword | 0;
        carry = ncarry | 0;
      }
      if (carry !== 0) {
        out.words[k] = carry | 0;
      } else {
        out.length--;
      }
      return out._strip();
    }
    var comb10MulTo = function comb10MulTo2(self2, num, out) {
      var a = self2.words;
      var b = num.words;
      var o = out.words;
      var c = 0;
      var lo;
      var mid;
      var hi;
      var a0 = a[0] | 0;
      var al0 = a0 & 8191;
      var ah0 = a0 >>> 13;
      var a1 = a[1] | 0;
      var al1 = a1 & 8191;
      var ah1 = a1 >>> 13;
      var a2 = a[2] | 0;
      var al2 = a2 & 8191;
      var ah2 = a2 >>> 13;
      var a3 = a[3] | 0;
      var al3 = a3 & 8191;
      var ah3 = a3 >>> 13;
      var a4 = a[4] | 0;
      var al4 = a4 & 8191;
      var ah4 = a4 >>> 13;
      var a5 = a[5] | 0;
      var al5 = a5 & 8191;
      var ah5 = a5 >>> 13;
      var a6 = a[6] | 0;
      var al6 = a6 & 8191;
      var ah6 = a6 >>> 13;
      var a7 = a[7] | 0;
      var al7 = a7 & 8191;
      var ah7 = a7 >>> 13;
      var a8 = a[8] | 0;
      var al8 = a8 & 8191;
      var ah8 = a8 >>> 13;
      var a9 = a[9] | 0;
      var al9 = a9 & 8191;
      var ah9 = a9 >>> 13;
      var b0 = b[0] | 0;
      var bl0 = b0 & 8191;
      var bh0 = b0 >>> 13;
      var b1 = b[1] | 0;
      var bl1 = b1 & 8191;
      var bh1 = b1 >>> 13;
      var b2 = b[2] | 0;
      var bl2 = b2 & 8191;
      var bh2 = b2 >>> 13;
      var b3 = b[3] | 0;
      var bl3 = b3 & 8191;
      var bh3 = b3 >>> 13;
      var b4 = b[4] | 0;
      var bl4 = b4 & 8191;
      var bh4 = b4 >>> 13;
      var b5 = b[5] | 0;
      var bl5 = b5 & 8191;
      var bh5 = b5 >>> 13;
      var b6 = b[6] | 0;
      var bl6 = b6 & 8191;
      var bh6 = b6 >>> 13;
      var b7 = b[7] | 0;
      var bl7 = b7 & 8191;
      var bh7 = b7 >>> 13;
      var b8 = b[8] | 0;
      var bl8 = b8 & 8191;
      var bh8 = b8 >>> 13;
      var b9 = b[9] | 0;
      var bl9 = b9 & 8191;
      var bh9 = b9 >>> 13;
      out.negative = self2.negative ^ num.negative;
      out.length = 19;
      lo = Math.imul(al0, bl0);
      mid = Math.imul(al0, bh0);
      mid = mid + Math.imul(ah0, bl0) | 0;
      hi = Math.imul(ah0, bh0);
      var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
      w0 &= 67108863;
      lo = Math.imul(al1, bl0);
      mid = Math.imul(al1, bh0);
      mid = mid + Math.imul(ah1, bl0) | 0;
      hi = Math.imul(ah1, bh0);
      lo = lo + Math.imul(al0, bl1) | 0;
      mid = mid + Math.imul(al0, bh1) | 0;
      mid = mid + Math.imul(ah0, bl1) | 0;
      hi = hi + Math.imul(ah0, bh1) | 0;
      var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
      w1 &= 67108863;
      lo = Math.imul(al2, bl0);
      mid = Math.imul(al2, bh0);
      mid = mid + Math.imul(ah2, bl0) | 0;
      hi = Math.imul(ah2, bh0);
      lo = lo + Math.imul(al1, bl1) | 0;
      mid = mid + Math.imul(al1, bh1) | 0;
      mid = mid + Math.imul(ah1, bl1) | 0;
      hi = hi + Math.imul(ah1, bh1) | 0;
      lo = lo + Math.imul(al0, bl2) | 0;
      mid = mid + Math.imul(al0, bh2) | 0;
      mid = mid + Math.imul(ah0, bl2) | 0;
      hi = hi + Math.imul(ah0, bh2) | 0;
      var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
      w2 &= 67108863;
      lo = Math.imul(al3, bl0);
      mid = Math.imul(al3, bh0);
      mid = mid + Math.imul(ah3, bl0) | 0;
      hi = Math.imul(ah3, bh0);
      lo = lo + Math.imul(al2, bl1) | 0;
      mid = mid + Math.imul(al2, bh1) | 0;
      mid = mid + Math.imul(ah2, bl1) | 0;
      hi = hi + Math.imul(ah2, bh1) | 0;
      lo = lo + Math.imul(al1, bl2) | 0;
      mid = mid + Math.imul(al1, bh2) | 0;
      mid = mid + Math.imul(ah1, bl2) | 0;
      hi = hi + Math.imul(ah1, bh2) | 0;
      lo = lo + Math.imul(al0, bl3) | 0;
      mid = mid + Math.imul(al0, bh3) | 0;
      mid = mid + Math.imul(ah0, bl3) | 0;
      hi = hi + Math.imul(ah0, bh3) | 0;
      var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
      w3 &= 67108863;
      lo = Math.imul(al4, bl0);
      mid = Math.imul(al4, bh0);
      mid = mid + Math.imul(ah4, bl0) | 0;
      hi = Math.imul(ah4, bh0);
      lo = lo + Math.imul(al3, bl1) | 0;
      mid = mid + Math.imul(al3, bh1) | 0;
      mid = mid + Math.imul(ah3, bl1) | 0;
      hi = hi + Math.imul(ah3, bh1) | 0;
      lo = lo + Math.imul(al2, bl2) | 0;
      mid = mid + Math.imul(al2, bh2) | 0;
      mid = mid + Math.imul(ah2, bl2) | 0;
      hi = hi + Math.imul(ah2, bh2) | 0;
      lo = lo + Math.imul(al1, bl3) | 0;
      mid = mid + Math.imul(al1, bh3) | 0;
      mid = mid + Math.imul(ah1, bl3) | 0;
      hi = hi + Math.imul(ah1, bh3) | 0;
      lo = lo + Math.imul(al0, bl4) | 0;
      mid = mid + Math.imul(al0, bh4) | 0;
      mid = mid + Math.imul(ah0, bl4) | 0;
      hi = hi + Math.imul(ah0, bh4) | 0;
      var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
      w4 &= 67108863;
      lo = Math.imul(al5, bl0);
      mid = Math.imul(al5, bh0);
      mid = mid + Math.imul(ah5, bl0) | 0;
      hi = Math.imul(ah5, bh0);
      lo = lo + Math.imul(al4, bl1) | 0;
      mid = mid + Math.imul(al4, bh1) | 0;
      mid = mid + Math.imul(ah4, bl1) | 0;
      hi = hi + Math.imul(ah4, bh1) | 0;
      lo = lo + Math.imul(al3, bl2) | 0;
      mid = mid + Math.imul(al3, bh2) | 0;
      mid = mid + Math.imul(ah3, bl2) | 0;
      hi = hi + Math.imul(ah3, bh2) | 0;
      lo = lo + Math.imul(al2, bl3) | 0;
      mid = mid + Math.imul(al2, bh3) | 0;
      mid = mid + Math.imul(ah2, bl3) | 0;
      hi = hi + Math.imul(ah2, bh3) | 0;
      lo = lo + Math.imul(al1, bl4) | 0;
      mid = mid + Math.imul(al1, bh4) | 0;
      mid = mid + Math.imul(ah1, bl4) | 0;
      hi = hi + Math.imul(ah1, bh4) | 0;
      lo = lo + Math.imul(al0, bl5) | 0;
      mid = mid + Math.imul(al0, bh5) | 0;
      mid = mid + Math.imul(ah0, bl5) | 0;
      hi = hi + Math.imul(ah0, bh5) | 0;
      var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
      w5 &= 67108863;
      lo = Math.imul(al6, bl0);
      mid = Math.imul(al6, bh0);
      mid = mid + Math.imul(ah6, bl0) | 0;
      hi = Math.imul(ah6, bh0);
      lo = lo + Math.imul(al5, bl1) | 0;
      mid = mid + Math.imul(al5, bh1) | 0;
      mid = mid + Math.imul(ah5, bl1) | 0;
      hi = hi + Math.imul(ah5, bh1) | 0;
      lo = lo + Math.imul(al4, bl2) | 0;
      mid = mid + Math.imul(al4, bh2) | 0;
      mid = mid + Math.imul(ah4, bl2) | 0;
      hi = hi + Math.imul(ah4, bh2) | 0;
      lo = lo + Math.imul(al3, bl3) | 0;
      mid = mid + Math.imul(al3, bh3) | 0;
      mid = mid + Math.imul(ah3, bl3) | 0;
      hi = hi + Math.imul(ah3, bh3) | 0;
      lo = lo + Math.imul(al2, bl4) | 0;
      mid = mid + Math.imul(al2, bh4) | 0;
      mid = mid + Math.imul(ah2, bl4) | 0;
      hi = hi + Math.imul(ah2, bh4) | 0;
      lo = lo + Math.imul(al1, bl5) | 0;
      mid = mid + Math.imul(al1, bh5) | 0;
      mid = mid + Math.imul(ah1, bl5) | 0;
      hi = hi + Math.imul(ah1, bh5) | 0;
      lo = lo + Math.imul(al0, bl6) | 0;
      mid = mid + Math.imul(al0, bh6) | 0;
      mid = mid + Math.imul(ah0, bl6) | 0;
      hi = hi + Math.imul(ah0, bh6) | 0;
      var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
      w6 &= 67108863;
      lo = Math.imul(al7, bl0);
      mid = Math.imul(al7, bh0);
      mid = mid + Math.imul(ah7, bl0) | 0;
      hi = Math.imul(ah7, bh0);
      lo = lo + Math.imul(al6, bl1) | 0;
      mid = mid + Math.imul(al6, bh1) | 0;
      mid = mid + Math.imul(ah6, bl1) | 0;
      hi = hi + Math.imul(ah6, bh1) | 0;
      lo = lo + Math.imul(al5, bl2) | 0;
      mid = mid + Math.imul(al5, bh2) | 0;
      mid = mid + Math.imul(ah5, bl2) | 0;
      hi = hi + Math.imul(ah5, bh2) | 0;
      lo = lo + Math.imul(al4, bl3) | 0;
      mid = mid + Math.imul(al4, bh3) | 0;
      mid = mid + Math.imul(ah4, bl3) | 0;
      hi = hi + Math.imul(ah4, bh3) | 0;
      lo = lo + Math.imul(al3, bl4) | 0;
      mid = mid + Math.imul(al3, bh4) | 0;
      mid = mid + Math.imul(ah3, bl4) | 0;
      hi = hi + Math.imul(ah3, bh4) | 0;
      lo = lo + Math.imul(al2, bl5) | 0;
      mid = mid + Math.imul(al2, bh5) | 0;
      mid = mid + Math.imul(ah2, bl5) | 0;
      hi = hi + Math.imul(ah2, bh5) | 0;
      lo = lo + Math.imul(al1, bl6) | 0;
      mid = mid + Math.imul(al1, bh6) | 0;
      mid = mid + Math.imul(ah1, bl6) | 0;
      hi = hi + Math.imul(ah1, bh6) | 0;
      lo = lo + Math.imul(al0, bl7) | 0;
      mid = mid + Math.imul(al0, bh7) | 0;
      mid = mid + Math.imul(ah0, bl7) | 0;
      hi = hi + Math.imul(ah0, bh7) | 0;
      var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
      w7 &= 67108863;
      lo = Math.imul(al8, bl0);
      mid = Math.imul(al8, bh0);
      mid = mid + Math.imul(ah8, bl0) | 0;
      hi = Math.imul(ah8, bh0);
      lo = lo + Math.imul(al7, bl1) | 0;
      mid = mid + Math.imul(al7, bh1) | 0;
      mid = mid + Math.imul(ah7, bl1) | 0;
      hi = hi + Math.imul(ah7, bh1) | 0;
      lo = lo + Math.imul(al6, bl2) | 0;
      mid = mid + Math.imul(al6, bh2) | 0;
      mid = mid + Math.imul(ah6, bl2) | 0;
      hi = hi + Math.imul(ah6, bh2) | 0;
      lo = lo + Math.imul(al5, bl3) | 0;
      mid = mid + Math.imul(al5, bh3) | 0;
      mid = mid + Math.imul(ah5, bl3) | 0;
      hi = hi + Math.imul(ah5, bh3) | 0;
      lo = lo + Math.imul(al4, bl4) | 0;
      mid = mid + Math.imul(al4, bh4) | 0;
      mid = mid + Math.imul(ah4, bl4) | 0;
      hi = hi + Math.imul(ah4, bh4) | 0;
      lo = lo + Math.imul(al3, bl5) | 0;
      mid = mid + Math.imul(al3, bh5) | 0;
      mid = mid + Math.imul(ah3, bl5) | 0;
      hi = hi + Math.imul(ah3, bh5) | 0;
      lo = lo + Math.imul(al2, bl6) | 0;
      mid = mid + Math.imul(al2, bh6) | 0;
      mid = mid + Math.imul(ah2, bl6) | 0;
      hi = hi + Math.imul(ah2, bh6) | 0;
      lo = lo + Math.imul(al1, bl7) | 0;
      mid = mid + Math.imul(al1, bh7) | 0;
      mid = mid + Math.imul(ah1, bl7) | 0;
      hi = hi + Math.imul(ah1, bh7) | 0;
      lo = lo + Math.imul(al0, bl8) | 0;
      mid = mid + Math.imul(al0, bh8) | 0;
      mid = mid + Math.imul(ah0, bl8) | 0;
      hi = hi + Math.imul(ah0, bh8) | 0;
      var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
      w8 &= 67108863;
      lo = Math.imul(al9, bl0);
      mid = Math.imul(al9, bh0);
      mid = mid + Math.imul(ah9, bl0) | 0;
      hi = Math.imul(ah9, bh0);
      lo = lo + Math.imul(al8, bl1) | 0;
      mid = mid + Math.imul(al8, bh1) | 0;
      mid = mid + Math.imul(ah8, bl1) | 0;
      hi = hi + Math.imul(ah8, bh1) | 0;
      lo = lo + Math.imul(al7, bl2) | 0;
      mid = mid + Math.imul(al7, bh2) | 0;
      mid = mid + Math.imul(ah7, bl2) | 0;
      hi = hi + Math.imul(ah7, bh2) | 0;
      lo = lo + Math.imul(al6, bl3) | 0;
      mid = mid + Math.imul(al6, bh3) | 0;
      mid = mid + Math.imul(ah6, bl3) | 0;
      hi = hi + Math.imul(ah6, bh3) | 0;
      lo = lo + Math.imul(al5, bl4) | 0;
      mid = mid + Math.imul(al5, bh4) | 0;
      mid = mid + Math.imul(ah5, bl4) | 0;
      hi = hi + Math.imul(ah5, bh4) | 0;
      lo = lo + Math.imul(al4, bl5) | 0;
      mid = mid + Math.imul(al4, bh5) | 0;
      mid = mid + Math.imul(ah4, bl5) | 0;
      hi = hi + Math.imul(ah4, bh5) | 0;
      lo = lo + Math.imul(al3, bl6) | 0;
      mid = mid + Math.imul(al3, bh6) | 0;
      mid = mid + Math.imul(ah3, bl6) | 0;
      hi = hi + Math.imul(ah3, bh6) | 0;
      lo = lo + Math.imul(al2, bl7) | 0;
      mid = mid + Math.imul(al2, bh7) | 0;
      mid = mid + Math.imul(ah2, bl7) | 0;
      hi = hi + Math.imul(ah2, bh7) | 0;
      lo = lo + Math.imul(al1, bl8) | 0;
      mid = mid + Math.imul(al1, bh8) | 0;
      mid = mid + Math.imul(ah1, bl8) | 0;
      hi = hi + Math.imul(ah1, bh8) | 0;
      lo = lo + Math.imul(al0, bl9) | 0;
      mid = mid + Math.imul(al0, bh9) | 0;
      mid = mid + Math.imul(ah0, bl9) | 0;
      hi = hi + Math.imul(ah0, bh9) | 0;
      var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
      w9 &= 67108863;
      lo = Math.imul(al9, bl1);
      mid = Math.imul(al9, bh1);
      mid = mid + Math.imul(ah9, bl1) | 0;
      hi = Math.imul(ah9, bh1);
      lo = lo + Math.imul(al8, bl2) | 0;
      mid = mid + Math.imul(al8, bh2) | 0;
      mid = mid + Math.imul(ah8, bl2) | 0;
      hi = hi + Math.imul(ah8, bh2) | 0;
      lo = lo + Math.imul(al7, bl3) | 0;
      mid = mid + Math.imul(al7, bh3) | 0;
      mid = mid + Math.imul(ah7, bl3) | 0;
      hi = hi + Math.imul(ah7, bh3) | 0;
      lo = lo + Math.imul(al6, bl4) | 0;
      mid = mid + Math.imul(al6, bh4) | 0;
      mid = mid + Math.imul(ah6, bl4) | 0;
      hi = hi + Math.imul(ah6, bh4) | 0;
      lo = lo + Math.imul(al5, bl5) | 0;
      mid = mid + Math.imul(al5, bh5) | 0;
      mid = mid + Math.imul(ah5, bl5) | 0;
      hi = hi + Math.imul(ah5, bh5) | 0;
      lo = lo + Math.imul(al4, bl6) | 0;
      mid = mid + Math.imul(al4, bh6) | 0;
      mid = mid + Math.imul(ah4, bl6) | 0;
      hi = hi + Math.imul(ah4, bh6) | 0;
      lo = lo + Math.imul(al3, bl7) | 0;
      mid = mid + Math.imul(al3, bh7) | 0;
      mid = mid + Math.imul(ah3, bl7) | 0;
      hi = hi + Math.imul(ah3, bh7) | 0;
      lo = lo + Math.imul(al2, bl8) | 0;
      mid = mid + Math.imul(al2, bh8) | 0;
      mid = mid + Math.imul(ah2, bl8) | 0;
      hi = hi + Math.imul(ah2, bh8) | 0;
      lo = lo + Math.imul(al1, bl9) | 0;
      mid = mid + Math.imul(al1, bh9) | 0;
      mid = mid + Math.imul(ah1, bl9) | 0;
      hi = hi + Math.imul(ah1, bh9) | 0;
      var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
      w10 &= 67108863;
      lo = Math.imul(al9, bl2);
      mid = Math.imul(al9, bh2);
      mid = mid + Math.imul(ah9, bl2) | 0;
      hi = Math.imul(ah9, bh2);
      lo = lo + Math.imul(al8, bl3) | 0;
      mid = mid + Math.imul(al8, bh3) | 0;
      mid = mid + Math.imul(ah8, bl3) | 0;
      hi = hi + Math.imul(ah8, bh3) | 0;
      lo = lo + Math.imul(al7, bl4) | 0;
      mid = mid + Math.imul(al7, bh4) | 0;
      mid = mid + Math.imul(ah7, bl4) | 0;
      hi = hi + Math.imul(ah7, bh4) | 0;
      lo = lo + Math.imul(al6, bl5) | 0;
      mid = mid + Math.imul(al6, bh5) | 0;
      mid = mid + Math.imul(ah6, bl5) | 0;
      hi = hi + Math.imul(ah6, bh5) | 0;
      lo = lo + Math.imul(al5, bl6) | 0;
      mid = mid + Math.imul(al5, bh6) | 0;
      mid = mid + Math.imul(ah5, bl6) | 0;
      hi = hi + Math.imul(ah5, bh6) | 0;
      lo = lo + Math.imul(al4, bl7) | 0;
      mid = mid + Math.imul(al4, bh7) | 0;
      mid = mid + Math.imul(ah4, bl7) | 0;
      hi = hi + Math.imul(ah4, bh7) | 0;
      lo = lo + Math.imul(al3, bl8) | 0;
      mid = mid + Math.imul(al3, bh8) | 0;
      mid = mid + Math.imul(ah3, bl8) | 0;
      hi = hi + Math.imul(ah3, bh8) | 0;
      lo = lo + Math.imul(al2, bl9) | 0;
      mid = mid + Math.imul(al2, bh9) | 0;
      mid = mid + Math.imul(ah2, bl9) | 0;
      hi = hi + Math.imul(ah2, bh9) | 0;
      var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
      w11 &= 67108863;
      lo = Math.imul(al9, bl3);
      mid = Math.imul(al9, bh3);
      mid = mid + Math.imul(ah9, bl3) | 0;
      hi = Math.imul(ah9, bh3);
      lo = lo + Math.imul(al8, bl4) | 0;
      mid = mid + Math.imul(al8, bh4) | 0;
      mid = mid + Math.imul(ah8, bl4) | 0;
      hi = hi + Math.imul(ah8, bh4) | 0;
      lo = lo + Math.imul(al7, bl5) | 0;
      mid = mid + Math.imul(al7, bh5) | 0;
      mid = mid + Math.imul(ah7, bl5) | 0;
      hi = hi + Math.imul(ah7, bh5) | 0;
      lo = lo + Math.imul(al6, bl6) | 0;
      mid = mid + Math.imul(al6, bh6) | 0;
      mid = mid + Math.imul(ah6, bl6) | 0;
      hi = hi + Math.imul(ah6, bh6) | 0;
      lo = lo + Math.imul(al5, bl7) | 0;
      mid = mid + Math.imul(al5, bh7) | 0;
      mid = mid + Math.imul(ah5, bl7) | 0;
      hi = hi + Math.imul(ah5, bh7) | 0;
      lo = lo + Math.imul(al4, bl8) | 0;
      mid = mid + Math.imul(al4, bh8) | 0;
      mid = mid + Math.imul(ah4, bl8) | 0;
      hi = hi + Math.imul(ah4, bh8) | 0;
      lo = lo + Math.imul(al3, bl9) | 0;
      mid = mid + Math.imul(al3, bh9) | 0;
      mid = mid + Math.imul(ah3, bl9) | 0;
      hi = hi + Math.imul(ah3, bh9) | 0;
      var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
      w12 &= 67108863;
      lo = Math.imul(al9, bl4);
      mid = Math.imul(al9, bh4);
      mid = mid + Math.imul(ah9, bl4) | 0;
      hi = Math.imul(ah9, bh4);
      lo = lo + Math.imul(al8, bl5) | 0;
      mid = mid + Math.imul(al8, bh5) | 0;
      mid = mid + Math.imul(ah8, bl5) | 0;
      hi = hi + Math.imul(ah8, bh5) | 0;
      lo = lo + Math.imul(al7, bl6) | 0;
      mid = mid + Math.imul(al7, bh6) | 0;
      mid = mid + Math.imul(ah7, bl6) | 0;
      hi = hi + Math.imul(ah7, bh6) | 0;
      lo = lo + Math.imul(al6, bl7) | 0;
      mid = mid + Math.imul(al6, bh7) | 0;
      mid = mid + Math.imul(ah6, bl7) | 0;
      hi = hi + Math.imul(ah6, bh7) | 0;
      lo = lo + Math.imul(al5, bl8) | 0;
      mid = mid + Math.imul(al5, bh8) | 0;
      mid = mid + Math.imul(ah5, bl8) | 0;
      hi = hi + Math.imul(ah5, bh8) | 0;
      lo = lo + Math.imul(al4, bl9) | 0;
      mid = mid + Math.imul(al4, bh9) | 0;
      mid = mid + Math.imul(ah4, bl9) | 0;
      hi = hi + Math.imul(ah4, bh9) | 0;
      var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
      w13 &= 67108863;
      lo = Math.imul(al9, bl5);
      mid = Math.imul(al9, bh5);
      mid = mid + Math.imul(ah9, bl5) | 0;
      hi = Math.imul(ah9, bh5);
      lo = lo + Math.imul(al8, bl6) | 0;
      mid = mid + Math.imul(al8, bh6) | 0;
      mid = mid + Math.imul(ah8, bl6) | 0;
      hi = hi + Math.imul(ah8, bh6) | 0;
      lo = lo + Math.imul(al7, bl7) | 0;
      mid = mid + Math.imul(al7, bh7) | 0;
      mid = mid + Math.imul(ah7, bl7) | 0;
      hi = hi + Math.imul(ah7, bh7) | 0;
      lo = lo + Math.imul(al6, bl8) | 0;
      mid = mid + Math.imul(al6, bh8) | 0;
      mid = mid + Math.imul(ah6, bl8) | 0;
      hi = hi + Math.imul(ah6, bh8) | 0;
      lo = lo + Math.imul(al5, bl9) | 0;
      mid = mid + Math.imul(al5, bh9) | 0;
      mid = mid + Math.imul(ah5, bl9) | 0;
      hi = hi + Math.imul(ah5, bh9) | 0;
      var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
      w14 &= 67108863;
      lo = Math.imul(al9, bl6);
      mid = Math.imul(al9, bh6);
      mid = mid + Math.imul(ah9, bl6) | 0;
      hi = Math.imul(ah9, bh6);
      lo = lo + Math.imul(al8, bl7) | 0;
      mid = mid + Math.imul(al8, bh7) | 0;
      mid = mid + Math.imul(ah8, bl7) | 0;
      hi = hi + Math.imul(ah8, bh7) | 0;
      lo = lo + Math.imul(al7, bl8) | 0;
      mid = mid + Math.imul(al7, bh8) | 0;
      mid = mid + Math.imul(ah7, bl8) | 0;
      hi = hi + Math.imul(ah7, bh8) | 0;
      lo = lo + Math.imul(al6, bl9) | 0;
      mid = mid + Math.imul(al6, bh9) | 0;
      mid = mid + Math.imul(ah6, bl9) | 0;
      hi = hi + Math.imul(ah6, bh9) | 0;
      var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
      w15 &= 67108863;
      lo = Math.imul(al9, bl7);
      mid = Math.imul(al9, bh7);
      mid = mid + Math.imul(ah9, bl7) | 0;
      hi = Math.imul(ah9, bh7);
      lo = lo + Math.imul(al8, bl8) | 0;
      mid = mid + Math.imul(al8, bh8) | 0;
      mid = mid + Math.imul(ah8, bl8) | 0;
      hi = hi + Math.imul(ah8, bh8) | 0;
      lo = lo + Math.imul(al7, bl9) | 0;
      mid = mid + Math.imul(al7, bh9) | 0;
      mid = mid + Math.imul(ah7, bl9) | 0;
      hi = hi + Math.imul(ah7, bh9) | 0;
      var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
      w16 &= 67108863;
      lo = Math.imul(al9, bl8);
      mid = Math.imul(al9, bh8);
      mid = mid + Math.imul(ah9, bl8) | 0;
      hi = Math.imul(ah9, bh8);
      lo = lo + Math.imul(al8, bl9) | 0;
      mid = mid + Math.imul(al8, bh9) | 0;
      mid = mid + Math.imul(ah8, bl9) | 0;
      hi = hi + Math.imul(ah8, bh9) | 0;
      var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
      w17 &= 67108863;
      lo = Math.imul(al9, bl9);
      mid = Math.imul(al9, bh9);
      mid = mid + Math.imul(ah9, bl9) | 0;
      hi = Math.imul(ah9, bh9);
      var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
      w18 &= 67108863;
      o[0] = w0;
      o[1] = w1;
      o[2] = w2;
      o[3] = w3;
      o[4] = w4;
      o[5] = w5;
      o[6] = w6;
      o[7] = w7;
      o[8] = w8;
      o[9] = w9;
      o[10] = w10;
      o[11] = w11;
      o[12] = w12;
      o[13] = w13;
      o[14] = w14;
      o[15] = w15;
      o[16] = w16;
      o[17] = w17;
      o[18] = w18;
      if (c !== 0) {
        o[19] = c;
        out.length++;
      }
      return out;
    };
    if (!Math.imul) {
      comb10MulTo = smallMulTo;
    }
    function bigMulTo(self2, num, out) {
      out.negative = num.negative ^ self2.negative;
      out.length = self2.length + num.length;
      var carry = 0;
      var hncarry = 0;
      for (var k = 0; k < out.length - 1; k++) {
        var ncarry = hncarry;
        hncarry = 0;
        var rword = carry & 67108863;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
          var i = k - j;
          var a = self2.words[i] | 0;
          var b = num.words[j] | 0;
          var r2 = a * b;
          var lo = r2 & 67108863;
          ncarry = ncarry + (r2 / 67108864 | 0) | 0;
          lo = lo + rword | 0;
          rword = lo & 67108863;
          ncarry = ncarry + (lo >>> 26) | 0;
          hncarry += ncarry >>> 26;
          ncarry &= 67108863;
        }
        out.words[k] = rword;
        carry = ncarry;
        ncarry = hncarry;
      }
      if (carry !== 0) {
        out.words[k] = carry;
      } else {
        out.length--;
      }
      return out._strip();
    }
    function jumboMulTo(self2, num, out) {
      return bigMulTo(self2, num, out);
    }
    BN2.prototype.mulTo = function mulTo(num, out) {
      var res;
      var len = this.length + num.length;
      if (this.length === 10 && num.length === 10) {
        res = comb10MulTo(this, num, out);
      } else if (len < 63) {
        res = smallMulTo(this, num, out);
      } else if (len < 1024) {
        res = bigMulTo(this, num, out);
      } else {
        res = jumboMulTo(this, num, out);
      }
      return res;
    };
    BN2.prototype.mul = function mul3(num) {
      var out = new BN2(null);
      out.words = new Array(this.length + num.length);
      return this.mulTo(num, out);
    };
    BN2.prototype.mulf = function mulf(num) {
      var out = new BN2(null);
      out.words = new Array(this.length + num.length);
      return jumboMulTo(this, num, out);
    };
    BN2.prototype.imul = function imul(num) {
      return this.clone().mulTo(num, this);
    };
    BN2.prototype.imuln = function imuln(num) {
      var isNegNum = num < 0;
      if (isNegNum)
        num = -num;
      assert2(typeof num === "number");
      assert2(num < 67108864);
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = (this.words[i] | 0) * num;
        var lo = (w & 67108863) + (carry & 67108863);
        carry >>= 26;
        carry += w / 67108864 | 0;
        carry += lo >>> 26;
        this.words[i] = lo & 67108863;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return isNegNum ? this.ineg() : this;
    };
    BN2.prototype.muln = function muln(num) {
      return this.clone().imuln(num);
    };
    BN2.prototype.sqr = function sqr() {
      return this.mul(this);
    };
    BN2.prototype.isqr = function isqr() {
      return this.imul(this.clone());
    };
    BN2.prototype.pow = function pow2(num) {
      var w = toBitArray(num);
      if (w.length === 0)
        return new BN2(1);
      var res = this;
      for (var i = 0; i < w.length; i++, res = res.sqr()) {
        if (w[i] !== 0)
          break;
      }
      if (++i < w.length) {
        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
          if (w[i] === 0)
            continue;
          res = res.mul(q);
        }
      }
      return res;
    };
    BN2.prototype.iushln = function iushln(bits) {
      assert2(typeof bits === "number" && bits >= 0);
      var r2 = bits % 26;
      var s2 = (bits - r2) / 26;
      var carryMask = 67108863 >>> 26 - r2 << 26 - r2;
      var i;
      if (r2 !== 0) {
        var carry = 0;
        for (i = 0; i < this.length; i++) {
          var newCarry = this.words[i] & carryMask;
          var c = (this.words[i] | 0) - newCarry << r2;
          this.words[i] = c | carry;
          carry = newCarry >>> 26 - r2;
        }
        if (carry) {
          this.words[i] = carry;
          this.length++;
        }
      }
      if (s2 !== 0) {
        for (i = this.length - 1; i >= 0; i--) {
          this.words[i + s2] = this.words[i];
        }
        for (i = 0; i < s2; i++) {
          this.words[i] = 0;
        }
        this.length += s2;
      }
      return this._strip();
    };
    BN2.prototype.ishln = function ishln(bits) {
      assert2(this.negative === 0);
      return this.iushln(bits);
    };
    BN2.prototype.iushrn = function iushrn(bits, hint, extended) {
      assert2(typeof bits === "number" && bits >= 0);
      var h;
      if (hint) {
        h = (hint - hint % 26) / 26;
      } else {
        h = 0;
      }
      var r2 = bits % 26;
      var s2 = Math.min((bits - r2) / 26, this.length);
      var mask = 67108863 ^ 67108863 >>> r2 << r2;
      var maskedWords = extended;
      h -= s2;
      h = Math.max(0, h);
      if (maskedWords) {
        for (var i = 0; i < s2; i++) {
          maskedWords.words[i] = this.words[i];
        }
        maskedWords.length = s2;
      }
      if (s2 === 0)
        ;
      else if (this.length > s2) {
        this.length -= s2;
        for (i = 0; i < this.length; i++) {
          this.words[i] = this.words[i + s2];
        }
      } else {
        this.words[0] = 0;
        this.length = 1;
      }
      var carry = 0;
      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
        var word = this.words[i] | 0;
        this.words[i] = carry << 26 - r2 | word >>> r2;
        carry = word & mask;
      }
      if (maskedWords && carry !== 0) {
        maskedWords.words[maskedWords.length++] = carry;
      }
      if (this.length === 0) {
        this.words[0] = 0;
        this.length = 1;
      }
      return this._strip();
    };
    BN2.prototype.ishrn = function ishrn(bits, hint, extended) {
      assert2(this.negative === 0);
      return this.iushrn(bits, hint, extended);
    };
    BN2.prototype.shln = function shln(bits) {
      return this.clone().ishln(bits);
    };
    BN2.prototype.ushln = function ushln(bits) {
      return this.clone().iushln(bits);
    };
    BN2.prototype.shrn = function shrn(bits) {
      return this.clone().ishrn(bits);
    };
    BN2.prototype.ushrn = function ushrn(bits) {
      return this.clone().iushrn(bits);
    };
    BN2.prototype.testn = function testn(bit) {
      assert2(typeof bit === "number" && bit >= 0);
      var r2 = bit % 26;
      var s2 = (bit - r2) / 26;
      var q = 1 << r2;
      if (this.length <= s2)
        return false;
      var w = this.words[s2];
      return !!(w & q);
    };
    BN2.prototype.imaskn = function imaskn(bits) {
      assert2(typeof bits === "number" && bits >= 0);
      var r2 = bits % 26;
      var s2 = (bits - r2) / 26;
      assert2(this.negative === 0, "imaskn works only with positive numbers");
      if (this.length <= s2) {
        return this;
      }
      if (r2 !== 0) {
        s2++;
      }
      this.length = Math.min(s2, this.length);
      if (r2 !== 0) {
        var mask = 67108863 ^ 67108863 >>> r2 << r2;
        this.words[this.length - 1] &= mask;
      }
      return this._strip();
    };
    BN2.prototype.maskn = function maskn(bits) {
      return this.clone().imaskn(bits);
    };
    BN2.prototype.iaddn = function iaddn(num) {
      assert2(typeof num === "number");
      assert2(num < 67108864);
      if (num < 0)
        return this.isubn(-num);
      if (this.negative !== 0) {
        if (this.length === 1 && (this.words[0] | 0) <= num) {
          this.words[0] = num - (this.words[0] | 0);
          this.negative = 0;
          return this;
        }
        this.negative = 0;
        this.isubn(num);
        this.negative = 1;
        return this;
      }
      return this._iaddn(num);
    };
    BN2.prototype._iaddn = function _iaddn(num) {
      this.words[0] += num;
      for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
        this.words[i] -= 67108864;
        if (i === this.length - 1) {
          this.words[i + 1] = 1;
        } else {
          this.words[i + 1]++;
        }
      }
      this.length = Math.max(this.length, i + 1);
      return this;
    };
    BN2.prototype.isubn = function isubn(num) {
      assert2(typeof num === "number");
      assert2(num < 67108864);
      if (num < 0)
        return this.iaddn(-num);
      if (this.negative !== 0) {
        this.negative = 0;
        this.iaddn(num);
        this.negative = 1;
        return this;
      }
      this.words[0] -= num;
      if (this.length === 1 && this.words[0] < 0) {
        this.words[0] = -this.words[0];
        this.negative = 1;
      } else {
        for (var i = 0; i < this.length && this.words[i] < 0; i++) {
          this.words[i] += 67108864;
          this.words[i + 1] -= 1;
        }
      }
      return this._strip();
    };
    BN2.prototype.addn = function addn(num) {
      return this.clone().iaddn(num);
    };
    BN2.prototype.subn = function subn(num) {
      return this.clone().isubn(num);
    };
    BN2.prototype.iabs = function iabs() {
      this.negative = 0;
      return this;
    };
    BN2.prototype.abs = function abs2() {
      return this.clone().iabs();
    };
    BN2.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
      var len = num.length + shift;
      var i;
      this._expand(len);
      var w;
      var carry = 0;
      for (i = 0; i < num.length; i++) {
        w = (this.words[i + shift] | 0) + carry;
        var right = (num.words[i] | 0) * mul3;
        w -= right & 67108863;
        carry = (w >> 26) - (right / 67108864 | 0);
        this.words[i + shift] = w & 67108863;
      }
      for (; i < this.length - shift; i++) {
        w = (this.words[i + shift] | 0) + carry;
        carry = w >> 26;
        this.words[i + shift] = w & 67108863;
      }
      if (carry === 0)
        return this._strip();
      assert2(carry === -1);
      carry = 0;
      for (i = 0; i < this.length; i++) {
        w = -(this.words[i] | 0) + carry;
        carry = w >> 26;
        this.words[i] = w & 67108863;
      }
      this.negative = 1;
      return this._strip();
    };
    BN2.prototype._wordDiv = function _wordDiv(num, mode) {
      var shift = this.length - num.length;
      var a = this.clone();
      var b = num;
      var bhi = b.words[b.length - 1] | 0;
      var bhiBits = this._countBits(bhi);
      shift = 26 - bhiBits;
      if (shift !== 0) {
        b = b.ushln(shift);
        a.iushln(shift);
        bhi = b.words[b.length - 1] | 0;
      }
      var m = a.length - b.length;
      var q;
      if (mode !== "mod") {
        q = new BN2(null);
        q.length = m + 1;
        q.words = new Array(q.length);
        for (var i = 0; i < q.length; i++) {
          q.words[i] = 0;
        }
      }
      var diff = a.clone()._ishlnsubmul(b, 1, m);
      if (diff.negative === 0) {
        a = diff;
        if (q) {
          q.words[m] = 1;
        }
      }
      for (var j = m - 1; j >= 0; j--) {
        var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
        qj = Math.min(qj / bhi | 0, 67108863);
        a._ishlnsubmul(b, qj, j);
        while (a.negative !== 0) {
          qj--;
          a.negative = 0;
          a._ishlnsubmul(b, 1, j);
          if (!a.isZero()) {
            a.negative ^= 1;
          }
        }
        if (q) {
          q.words[j] = qj;
        }
      }
      if (q) {
        q._strip();
      }
      a._strip();
      if (mode !== "div" && shift !== 0) {
        a.iushrn(shift);
      }
      return {
        div: q || null,
        mod: a
      };
    };
    BN2.prototype.divmod = function divmod(num, mode, positive) {
      assert2(!num.isZero());
      if (this.isZero()) {
        return {
          div: new BN2(0),
          mod: new BN2(0)
        };
      }
      var div2, mod, res;
      if (this.negative !== 0 && num.negative === 0) {
        res = this.neg().divmod(num, mode);
        if (mode !== "mod") {
          div2 = res.div.neg();
        }
        if (mode !== "div") {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.iadd(num);
          }
        }
        return {
          div: div2,
          mod
        };
      }
      if (this.negative === 0 && num.negative !== 0) {
        res = this.divmod(num.neg(), mode);
        if (mode !== "mod") {
          div2 = res.div.neg();
        }
        return {
          div: div2,
          mod: res.mod
        };
      }
      if ((this.negative & num.negative) !== 0) {
        res = this.neg().divmod(num.neg(), mode);
        if (mode !== "div") {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.isub(num);
          }
        }
        return {
          div: res.div,
          mod
        };
      }
      if (num.length > this.length || this.cmp(num) < 0) {
        return {
          div: new BN2(0),
          mod: this
        };
      }
      if (num.length === 1) {
        if (mode === "div") {
          return {
            div: this.divn(num.words[0]),
            mod: null
          };
        }
        if (mode === "mod") {
          return {
            div: null,
            mod: new BN2(this.modrn(num.words[0]))
          };
        }
        return {
          div: this.divn(num.words[0]),
          mod: new BN2(this.modrn(num.words[0]))
        };
      }
      return this._wordDiv(num, mode);
    };
    BN2.prototype.div = function div2(num) {
      return this.divmod(num, "div", false).div;
    };
    BN2.prototype.mod = function mod(num) {
      return this.divmod(num, "mod", false).mod;
    };
    BN2.prototype.umod = function umod(num) {
      return this.divmod(num, "mod", true).mod;
    };
    BN2.prototype.divRound = function divRound(num) {
      var dm = this.divmod(num);
      if (dm.mod.isZero())
        return dm.div;
      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
      var half = num.ushrn(1);
      var r2 = num.andln(1);
      var cmp = mod.cmp(half);
      if (cmp < 0 || r2 === 1 && cmp === 0)
        return dm.div;
      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN2.prototype.modrn = function modrn(num) {
      var isNegNum = num < 0;
      if (isNegNum)
        num = -num;
      assert2(num <= 67108863);
      var p = (1 << 26) % num;
      var acc = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        acc = (p * acc + (this.words[i] | 0)) % num;
      }
      return isNegNum ? -acc : acc;
    };
    BN2.prototype.modn = function modn(num) {
      return this.modrn(num);
    };
    BN2.prototype.idivn = function idivn(num) {
      var isNegNum = num < 0;
      if (isNegNum)
        num = -num;
      assert2(num <= 67108863);
      var carry = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var w = (this.words[i] | 0) + carry * 67108864;
        this.words[i] = w / num | 0;
        carry = w % num;
      }
      this._strip();
      return isNegNum ? this.ineg() : this;
    };
    BN2.prototype.divn = function divn(num) {
      return this.clone().idivn(num);
    };
    BN2.prototype.egcd = function egcd(p) {
      assert2(p.negative === 0);
      assert2(!p.isZero());
      var x = this;
      var y = p.clone();
      if (x.negative !== 0) {
        x = x.umod(p);
      } else {
        x = x.clone();
      }
      var A = new BN2(1);
      var B = new BN2(0);
      var C = new BN2(0);
      var D = new BN2(1);
      var g = 0;
      while (x.isEven() && y.isEven()) {
        x.iushrn(1);
        y.iushrn(1);
        ++g;
      }
      var yp = y.clone();
      var xp = x.clone();
      while (!x.isZero()) {
        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
          ;
        if (i > 0) {
          x.iushrn(i);
          while (i-- > 0) {
            if (A.isOdd() || B.isOdd()) {
              A.iadd(yp);
              B.isub(xp);
            }
            A.iushrn(1);
            B.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
          ;
        if (j > 0) {
          y.iushrn(j);
          while (j-- > 0) {
            if (C.isOdd() || D.isOdd()) {
              C.iadd(yp);
              D.isub(xp);
            }
            C.iushrn(1);
            D.iushrn(1);
          }
        }
        if (x.cmp(y) >= 0) {
          x.isub(y);
          A.isub(C);
          B.isub(D);
        } else {
          y.isub(x);
          C.isub(A);
          D.isub(B);
        }
      }
      return {
        a: C,
        b: D,
        gcd: y.iushln(g)
      };
    };
    BN2.prototype._invmp = function _invmp(p) {
      assert2(p.negative === 0);
      assert2(!p.isZero());
      var a = this;
      var b = p.clone();
      if (a.negative !== 0) {
        a = a.umod(p);
      } else {
        a = a.clone();
      }
      var x1 = new BN2(1);
      var x2 = new BN2(0);
      var delta = b.clone();
      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
          ;
        if (i > 0) {
          a.iushrn(i);
          while (i-- > 0) {
            if (x1.isOdd()) {
              x1.iadd(delta);
            }
            x1.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
          ;
        if (j > 0) {
          b.iushrn(j);
          while (j-- > 0) {
            if (x2.isOdd()) {
              x2.iadd(delta);
            }
            x2.iushrn(1);
          }
        }
        if (a.cmp(b) >= 0) {
          a.isub(b);
          x1.isub(x2);
        } else {
          b.isub(a);
          x2.isub(x1);
        }
      }
      var res;
      if (a.cmpn(1) === 0) {
        res = x1;
      } else {
        res = x2;
      }
      if (res.cmpn(0) < 0) {
        res.iadd(p);
      }
      return res;
    };
    BN2.prototype.gcd = function gcd(num) {
      if (this.isZero())
        return num.abs();
      if (num.isZero())
        return this.abs();
      var a = this.clone();
      var b = num.clone();
      a.negative = 0;
      b.negative = 0;
      for (var shift = 0; a.isEven() && b.isEven(); shift++) {
        a.iushrn(1);
        b.iushrn(1);
      }
      do {
        while (a.isEven()) {
          a.iushrn(1);
        }
        while (b.isEven()) {
          b.iushrn(1);
        }
        var r2 = a.cmp(b);
        if (r2 < 0) {
          var t = a;
          a = b;
          b = t;
        } else if (r2 === 0 || b.cmpn(1) === 0) {
          break;
        }
        a.isub(b);
      } while (true);
      return b.iushln(shift);
    };
    BN2.prototype.invm = function invm(num) {
      return this.egcd(num).a.umod(num);
    };
    BN2.prototype.isEven = function isEven() {
      return (this.words[0] & 1) === 0;
    };
    BN2.prototype.isOdd = function isOdd() {
      return (this.words[0] & 1) === 1;
    };
    BN2.prototype.andln = function andln(num) {
      return this.words[0] & num;
    };
    BN2.prototype.bincn = function bincn(bit) {
      assert2(typeof bit === "number");
      var r2 = bit % 26;
      var s2 = (bit - r2) / 26;
      var q = 1 << r2;
      if (this.length <= s2) {
        this._expand(s2 + 1);
        this.words[s2] |= q;
        return this;
      }
      var carry = q;
      for (var i = s2; carry !== 0 && i < this.length; i++) {
        var w = this.words[i] | 0;
        w += carry;
        carry = w >>> 26;
        w &= 67108863;
        this.words[i] = w;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return this;
    };
    BN2.prototype.isZero = function isZero() {
      return this.length === 1 && this.words[0] === 0;
    };
    BN2.prototype.cmpn = function cmpn(num) {
      var negative = num < 0;
      if (this.negative !== 0 && !negative)
        return -1;
      if (this.negative === 0 && negative)
        return 1;
      this._strip();
      var res;
      if (this.length > 1) {
        res = 1;
      } else {
        if (negative) {
          num = -num;
        }
        assert2(num <= 67108863, "Number is too big");
        var w = this.words[0] | 0;
        res = w === num ? 0 : w < num ? -1 : 1;
      }
      if (this.negative !== 0)
        return -res | 0;
      return res;
    };
    BN2.prototype.cmp = function cmp(num) {
      if (this.negative !== 0 && num.negative === 0)
        return -1;
      if (this.negative === 0 && num.negative !== 0)
        return 1;
      var res = this.ucmp(num);
      if (this.negative !== 0)
        return -res | 0;
      return res;
    };
    BN2.prototype.ucmp = function ucmp(num) {
      if (this.length > num.length)
        return 1;
      if (this.length < num.length)
        return -1;
      var res = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var a = this.words[i] | 0;
        var b = num.words[i] | 0;
        if (a === b)
          continue;
        if (a < b) {
          res = -1;
        } else if (a > b) {
          res = 1;
        }
        break;
      }
      return res;
    };
    BN2.prototype.gtn = function gtn(num) {
      return this.cmpn(num) === 1;
    };
    BN2.prototype.gt = function gt2(num) {
      return this.cmp(num) === 1;
    };
    BN2.prototype.gten = function gten(num) {
      return this.cmpn(num) >= 0;
    };
    BN2.prototype.gte = function gte2(num) {
      return this.cmp(num) >= 0;
    };
    BN2.prototype.ltn = function ltn(num) {
      return this.cmpn(num) === -1;
    };
    BN2.prototype.lt = function lt2(num) {
      return this.cmp(num) === -1;
    };
    BN2.prototype.lten = function lten(num) {
      return this.cmpn(num) <= 0;
    };
    BN2.prototype.lte = function lte2(num) {
      return this.cmp(num) <= 0;
    };
    BN2.prototype.eqn = function eqn(num) {
      return this.cmpn(num) === 0;
    };
    BN2.prototype.eq = function eq5(num) {
      return this.cmp(num) === 0;
    };
    BN2.red = function red(num) {
      return new Red(num);
    };
    BN2.prototype.toRed = function toRed(ctx) {
      assert2(!this.red, "Already a number in reduction context");
      assert2(this.negative === 0, "red works only with positives");
      return ctx.convertTo(this)._forceRed(ctx);
    };
    BN2.prototype.fromRed = function fromRed() {
      assert2(this.red, "fromRed works only with numbers in reduction context");
      return this.red.convertFrom(this);
    };
    BN2.prototype._forceRed = function _forceRed(ctx) {
      this.red = ctx;
      return this;
    };
    BN2.prototype.forceRed = function forceRed(ctx) {
      assert2(!this.red, "Already a number in reduction context");
      return this._forceRed(ctx);
    };
    BN2.prototype.redAdd = function redAdd(num) {
      assert2(this.red, "redAdd works only with red numbers");
      return this.red.add(this, num);
    };
    BN2.prototype.redIAdd = function redIAdd(num) {
      assert2(this.red, "redIAdd works only with red numbers");
      return this.red.iadd(this, num);
    };
    BN2.prototype.redSub = function redSub(num) {
      assert2(this.red, "redSub works only with red numbers");
      return this.red.sub(this, num);
    };
    BN2.prototype.redISub = function redISub(num) {
      assert2(this.red, "redISub works only with red numbers");
      return this.red.isub(this, num);
    };
    BN2.prototype.redShl = function redShl(num) {
      assert2(this.red, "redShl works only with red numbers");
      return this.red.shl(this, num);
    };
    BN2.prototype.redMul = function redMul(num) {
      assert2(this.red, "redMul works only with red numbers");
      this.red._verify2(this, num);
      return this.red.mul(this, num);
    };
    BN2.prototype.redIMul = function redIMul(num) {
      assert2(this.red, "redMul works only with red numbers");
      this.red._verify2(this, num);
      return this.red.imul(this, num);
    };
    BN2.prototype.redSqr = function redSqr() {
      assert2(this.red, "redSqr works only with red numbers");
      this.red._verify1(this);
      return this.red.sqr(this);
    };
    BN2.prototype.redISqr = function redISqr() {
      assert2(this.red, "redISqr works only with red numbers");
      this.red._verify1(this);
      return this.red.isqr(this);
    };
    BN2.prototype.redSqrt = function redSqrt() {
      assert2(this.red, "redSqrt works only with red numbers");
      this.red._verify1(this);
      return this.red.sqrt(this);
    };
    BN2.prototype.redInvm = function redInvm() {
      assert2(this.red, "redInvm works only with red numbers");
      this.red._verify1(this);
      return this.red.invm(this);
    };
    BN2.prototype.redNeg = function redNeg() {
      assert2(this.red, "redNeg works only with red numbers");
      this.red._verify1(this);
      return this.red.neg(this);
    };
    BN2.prototype.redPow = function redPow(num) {
      assert2(this.red && !num.red, "redPow(normalNum)");
      this.red._verify1(this);
      return this.red.pow(this, num);
    };
    var primes = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function MPrime(name2, p) {
      this.name = name2;
      this.p = new BN2(p, 16);
      this.n = this.p.bitLength();
      this.k = new BN2(1).iushln(this.n).isub(this.p);
      this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
      var tmp = new BN2(null);
      tmp.words = new Array(Math.ceil(this.n / 13));
      return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
      var r2 = num;
      var rlen;
      do {
        this.split(r2, this.tmp);
        r2 = this.imulK(r2);
        r2 = r2.iadd(this.tmp);
        rlen = r2.bitLength();
      } while (rlen > this.n);
      var cmp = rlen < this.n ? -1 : r2.ucmp(this.p);
      if (cmp === 0) {
        r2.words[0] = 0;
        r2.length = 1;
      } else if (cmp > 0) {
        r2.isub(this.p);
      } else {
        if (r2.strip !== void 0) {
          r2.strip();
        } else {
          r2._strip();
        }
      }
      return r2;
    };
    MPrime.prototype.split = function split(input, out) {
      input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
      return num.imul(this.k);
    };
    function K256() {
      MPrime.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    inherits2(K256, MPrime);
    K256.prototype.split = function split(input, output) {
      var mask = 4194303;
      var outLen = Math.min(input.length, 9);
      for (var i = 0; i < outLen; i++) {
        output.words[i] = input.words[i];
      }
      output.length = outLen;
      if (input.length <= 9) {
        input.words[0] = 0;
        input.length = 1;
        return;
      }
      var prev = input.words[9];
      output.words[output.length++] = prev & mask;
      for (i = 10; i < input.length; i++) {
        var next = input.words[i] | 0;
        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
        prev = next;
      }
      prev >>>= 22;
      input.words[i - 10] = prev;
      if (prev === 0 && input.length > 10) {
        input.length -= 10;
      } else {
        input.length -= 9;
      }
    };
    K256.prototype.imulK = function imulK(num) {
      num.words[num.length] = 0;
      num.words[num.length + 1] = 0;
      num.length += 2;
      var lo = 0;
      for (var i = 0; i < num.length; i++) {
        var w = num.words[i] | 0;
        lo += w * 977;
        num.words[i] = lo & 67108863;
        lo = w * 64 + (lo / 67108864 | 0);
      }
      if (num.words[num.length - 1] === 0) {
        num.length--;
        if (num.words[num.length - 1] === 0) {
          num.length--;
        }
      }
      return num;
    };
    function P224() {
      MPrime.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    inherits2(P224, MPrime);
    function P192() {
      MPrime.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    inherits2(P192, MPrime);
    function P25519() {
      MPrime.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    inherits2(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
      var carry = 0;
      for (var i = 0; i < num.length; i++) {
        var hi = (num.words[i] | 0) * 19 + carry;
        var lo = hi & 67108863;
        hi >>>= 26;
        num.words[i] = lo;
        carry = hi;
      }
      if (carry !== 0) {
        num.words[num.length++] = carry;
      }
      return num;
    };
    BN2._prime = function prime(name2) {
      if (primes[name2])
        return primes[name2];
      var prime2;
      if (name2 === "k256") {
        prime2 = new K256();
      } else if (name2 === "p224") {
        prime2 = new P224();
      } else if (name2 === "p192") {
        prime2 = new P192();
      } else if (name2 === "p25519") {
        prime2 = new P25519();
      } else {
        throw new Error("Unknown prime " + name2);
      }
      primes[name2] = prime2;
      return prime2;
    };
    function Red(m) {
      if (typeof m === "string") {
        var prime = BN2._prime(m);
        this.m = prime.p;
        this.prime = prime;
      } else {
        assert2(m.gtn(1), "modulus must be greater than 1");
        this.m = m;
        this.prime = null;
      }
    }
    Red.prototype._verify1 = function _verify1(a) {
      assert2(a.negative === 0, "red works only with positives");
      assert2(a.red, "red works only with red numbers");
    };
    Red.prototype._verify2 = function _verify2(a, b) {
      assert2((a.negative | b.negative) === 0, "red works only with positives");
      assert2(
        a.red && a.red === b.red,
        "red works only with red numbers"
      );
    };
    Red.prototype.imod = function imod(a) {
      if (this.prime)
        return this.prime.ireduce(a)._forceRed(this);
      move(a, a.umod(this.m)._forceRed(this));
      return a;
    };
    Red.prototype.neg = function neg3(a) {
      if (a.isZero()) {
        return a.clone();
      }
      return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add3(a, b) {
      this._verify2(a, b);
      var res = a.add(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
      this._verify2(a, b);
      var res = a.iadd(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res;
    };
    Red.prototype.sub = function sub(a, b) {
      this._verify2(a, b);
      var res = a.sub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
      this._verify2(a, b);
      var res = a.isub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res;
    };
    Red.prototype.shl = function shl(a, num) {
      this._verify1(a);
      return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
      this._verify2(a, b);
      return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul3(a, b) {
      this._verify2(a, b);
      return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
      return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
      return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
      if (a.isZero())
        return a.clone();
      var mod3 = this.m.andln(3);
      assert2(mod3 % 2 === 1);
      if (mod3 === 3) {
        var pow2 = this.m.add(new BN2(1)).iushrn(2);
        return this.pow(a, pow2);
      }
      var q = this.m.subn(1);
      var s2 = 0;
      while (!q.isZero() && q.andln(1) === 0) {
        s2++;
        q.iushrn(1);
      }
      assert2(!q.isZero());
      var one = new BN2(1).toRed(this);
      var nOne = one.redNeg();
      var lpow = this.m.subn(1).iushrn(1);
      var z = this.m.bitLength();
      z = new BN2(2 * z * z).toRed(this);
      while (this.pow(z, lpow).cmp(nOne) !== 0) {
        z.redIAdd(nOne);
      }
      var c = this.pow(z, q);
      var r2 = this.pow(a, q.addn(1).iushrn(1));
      var t = this.pow(a, q);
      var m = s2;
      while (t.cmp(one) !== 0) {
        var tmp = t;
        for (var i = 0; tmp.cmp(one) !== 0; i++) {
          tmp = tmp.redSqr();
        }
        assert2(i < m);
        var b = this.pow(c, new BN2(1).iushln(m - i - 1));
        r2 = r2.redMul(b);
        c = b.redSqr();
        t = t.redMul(c);
        m = i;
      }
      return r2;
    };
    Red.prototype.invm = function invm(a) {
      var inv = a._invmp(this.m);
      if (inv.negative !== 0) {
        inv.negative = 0;
        return this.imod(inv).redNeg();
      } else {
        return this.imod(inv);
      }
    };
    Red.prototype.pow = function pow2(a, num) {
      if (num.isZero())
        return new BN2(1).toRed(this);
      if (num.cmpn(1) === 0)
        return a.clone();
      var windowSize = 4;
      var wnd = new Array(1 << windowSize);
      wnd[0] = new BN2(1).toRed(this);
      wnd[1] = a;
      for (var i = 2; i < wnd.length; i++) {
        wnd[i] = this.mul(wnd[i - 1], a);
      }
      var res = wnd[0];
      var current = 0;
      var currentLen = 0;
      var start = num.bitLength() % 26;
      if (start === 0) {
        start = 26;
      }
      for (i = num.length - 1; i >= 0; i--) {
        var word = num.words[i];
        for (var j = start - 1; j >= 0; j--) {
          var bit = word >> j & 1;
          if (res !== wnd[0]) {
            res = this.sqr(res);
          }
          if (bit === 0 && current === 0) {
            currentLen = 0;
            continue;
          }
          current <<= 1;
          current |= bit;
          currentLen++;
          if (currentLen !== windowSize && (i !== 0 || j !== 0))
            continue;
          res = this.mul(res, wnd[current]);
          currentLen = 0;
          current = 0;
        }
        start = 26;
      }
      return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
      var r2 = num.umod(this.m);
      return r2 === num ? r2.clone() : r2;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
      var res = num.clone();
      res.red = null;
      return res;
    };
    BN2.mont = function mont(num) {
      return new Mont(num);
    };
    function Mont(m) {
      Red.call(this, m);
      this.shift = this.m.bitLength();
      if (this.shift % 26 !== 0) {
        this.shift += 26 - this.shift % 26;
      }
      this.r = new BN2(1).iushln(this.shift);
      this.r2 = this.imod(this.r.sqr());
      this.rinv = this.r._invmp(this.m);
      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
      this.minv = this.minv.umod(this.r);
      this.minv = this.r.sub(this.minv);
    }
    inherits2(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
      return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
      var r2 = this.imod(num.mul(this.rinv));
      r2.red = null;
      return r2;
    };
    Mont.prototype.imul = function imul(a, b) {
      if (a.isZero() || b.isZero()) {
        a.words[0] = 0;
        a.length = 1;
        return a;
      }
      var t = a.imul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.mul = function mul3(a, b) {
      if (a.isZero() || b.isZero())
        return new BN2(0)._forceRed(this);
      var t = a.mul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
      var res = this.imod(a._invmp(this.m).mul(this.r2));
      return res._forceRed(this);
    };
  })(module, commonjsGlobal);
})(bn);
var BN = bn.exports;
var hash$1 = {};
var utils$9 = {};
var minimalisticAssert$1 = assert$b;
function assert$b(val, msg) {
  if (!val)
    throw new Error(msg || "Assertion failed");
}
assert$b.equal = function assertEqual(l, r2, msg) {
  if (l != r2)
    throw new Error(msg || "Assertion failed: " + l + " != " + r2);
};
var inherits_browser$1 = { exports: {} };
if (typeof Object.create === "function") {
  inherits_browser$1.exports = function inherits2(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  inherits_browser$1.exports = function inherits2(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function() {
      };
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}
var assert$a = minimalisticAssert$1;
var inherits = inherits_browser$1.exports;
utils$9.inherits = inherits;
function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 64512) !== 55296) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 64512) === 56320;
}
function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === "string") {
    if (!enc) {
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = c >> 6 | 192;
          res[p++] = c & 63 | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
          res[p++] = c >> 18 | 240;
          res[p++] = c >> 12 & 63 | 128;
          res[p++] = c >> 6 & 63 | 128;
          res[p++] = c & 63 | 128;
        } else {
          res[p++] = c >> 12 | 224;
          res[p++] = c >> 6 & 63 | 128;
          res[p++] = c & 63 | 128;
        }
      }
    } else if (enc === "hex") {
      msg = msg.replace(/[^a-z0-9]+/ig, "");
      if (msg.length % 2 !== 0)
        msg = "0" + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
utils$9.toArray = toArray;
function toHex(msg) {
  var res = "";
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils$9.toHex = toHex;
function htonl(w) {
  var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
  return res >>> 0;
}
utils$9.htonl = htonl;
function toHex32(msg, endian) {
  var res = "";
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === "little")
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
utils$9.toHex32 = toHex32;
function zero2(word) {
  if (word.length === 1)
    return "0" + word;
  else
    return word;
}
utils$9.zero2 = zero2;
function zero8(word) {
  if (word.length === 7)
    return "0" + word;
  else if (word.length === 6)
    return "00" + word;
  else if (word.length === 5)
    return "000" + word;
  else if (word.length === 4)
    return "0000" + word;
  else if (word.length === 3)
    return "00000" + word;
  else if (word.length === 2)
    return "000000" + word;
  else if (word.length === 1)
    return "0000000" + word;
  else
    return word;
}
utils$9.zero8 = zero8;
function join32(msg, start, end, endian) {
  var len = end - start;
  assert$a(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === "big")
      w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
    else
      w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
utils$9.join32 = join32;
function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === "big") {
      res[k] = m >>> 24;
      res[k + 1] = m >>> 16 & 255;
      res[k + 2] = m >>> 8 & 255;
      res[k + 3] = m & 255;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = m >>> 16 & 255;
      res[k + 1] = m >>> 8 & 255;
      res[k] = m & 255;
    }
  }
  return res;
}
utils$9.split32 = split32;
function rotr32$1(w, b) {
  return w >>> b | w << 32 - b;
}
utils$9.rotr32 = rotr32$1;
function rotl32$2(w, b) {
  return w << b | w >>> 32 - b;
}
utils$9.rotl32 = rotl32$2;
function sum32$3(a, b) {
  return a + b >>> 0;
}
utils$9.sum32 = sum32$3;
function sum32_3$1(a, b, c) {
  return a + b + c >>> 0;
}
utils$9.sum32_3 = sum32_3$1;
function sum32_4$2(a, b, c, d) {
  return a + b + c + d >>> 0;
}
utils$9.sum32_4 = sum32_4$2;
function sum32_5$2(a, b, c, d, e) {
  return a + b + c + d + e >>> 0;
}
utils$9.sum32_5 = sum32_5$2;
function sum64$1(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];
  var lo = al + bl >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
utils$9.sum64 = sum64$1;
function sum64_hi$1(ah, al, bh, bl) {
  var lo = al + bl >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
utils$9.sum64_hi = sum64_hi$1;
function sum64_lo$1(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
utils$9.sum64_lo = sum64_lo$1;
function sum64_4_hi$1(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = lo + bl >>> 0;
  carry += lo < al ? 1 : 0;
  lo = lo + cl >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = lo + dl >>> 0;
  carry += lo < dl ? 1 : 0;
  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
utils$9.sum64_4_hi = sum64_4_hi$1;
function sum64_4_lo$1(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
utils$9.sum64_4_lo = sum64_4_lo$1;
function sum64_5_hi$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = lo + bl >>> 0;
  carry += lo < al ? 1 : 0;
  lo = lo + cl >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = lo + dl >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = lo + el >>> 0;
  carry += lo < el ? 1 : 0;
  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
utils$9.sum64_5_hi = sum64_5_hi$1;
function sum64_5_lo$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;
  return lo >>> 0;
}
utils$9.sum64_5_lo = sum64_5_lo$1;
function rotr64_hi$1(ah, al, num) {
  var r2 = al << 32 - num | ah >>> num;
  return r2 >>> 0;
}
utils$9.rotr64_hi = rotr64_hi$1;
function rotr64_lo$1(ah, al, num) {
  var r2 = ah << 32 - num | al >>> num;
  return r2 >>> 0;
}
utils$9.rotr64_lo = rotr64_lo$1;
function shr64_hi$1(ah, al, num) {
  return ah >>> num;
}
utils$9.shr64_hi = shr64_hi$1;
function shr64_lo$1(ah, al, num) {
  var r2 = ah << 32 - num | al >>> num;
  return r2 >>> 0;
}
utils$9.shr64_lo = shr64_lo$1;
var common$5 = {};
var utils$8 = utils$9;
var assert$9 = minimalisticAssert$1;
function BlockHash$4() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = "big";
  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
common$5.BlockHash = BlockHash$4;
BlockHash$4.prototype.update = function update(msg, enc) {
  msg = utils$8.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;
  if (this.pending.length >= this._delta8) {
    msg = this.pending;
    var r2 = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r2, msg.length);
    if (this.pending.length === 0)
      this.pending = null;
    msg = utils$8.join32(msg, 0, msg.length - r2, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }
  return this;
};
BlockHash$4.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert$9(this.pending === null);
  return this._digest(enc);
};
BlockHash$4.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - (len + this.padLength) % bytes;
  var res = new Array(k + this.padLength);
  res[0] = 128;
  for (var i = 1; i < k; i++)
    res[i] = 0;
  len <<= 3;
  if (this.endian === "big") {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = len >>> 24 & 255;
    res[i++] = len >>> 16 & 255;
    res[i++] = len >>> 8 & 255;
    res[i++] = len & 255;
  } else {
    res[i++] = len & 255;
    res[i++] = len >>> 8 & 255;
    res[i++] = len >>> 16 & 255;
    res[i++] = len >>> 24 & 255;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }
  return res;
};
var sha = {};
var common$4 = {};
var utils$7 = utils$9;
var rotr32 = utils$7.rotr32;
function ft_1$1(s2, x, y, z) {
  if (s2 === 0)
    return ch32$1(x, y, z);
  if (s2 === 1 || s2 === 3)
    return p32(x, y, z);
  if (s2 === 2)
    return maj32$1(x, y, z);
}
common$4.ft_1 = ft_1$1;
function ch32$1(x, y, z) {
  return x & y ^ ~x & z;
}
common$4.ch32 = ch32$1;
function maj32$1(x, y, z) {
  return x & y ^ x & z ^ y & z;
}
common$4.maj32 = maj32$1;
function p32(x, y, z) {
  return x ^ y ^ z;
}
common$4.p32 = p32;
function s0_256$1(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
common$4.s0_256 = s0_256$1;
function s1_256$1(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
common$4.s1_256 = s1_256$1;
function g0_256$1(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
}
common$4.g0_256 = g0_256$1;
function g1_256$1(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
}
common$4.g1_256 = g1_256$1;
var utils$6 = utils$9;
var common$3 = common$5;
var shaCommon$1 = common$4;
var rotl32$1 = utils$6.rotl32;
var sum32$2 = utils$6.sum32;
var sum32_5$1 = utils$6.sum32_5;
var ft_1 = shaCommon$1.ft_1;
var BlockHash$3 = common$3.BlockHash;
var sha1_K = [
  1518500249,
  1859775393,
  2400959708,
  3395469782
];
function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();
  BlockHash$3.call(this);
  this.h = [
    1732584193,
    4023233417,
    2562383102,
    271733878,
    3285377520
  ];
  this.W = new Array(80);
}
utils$6.inherits(SHA1, BlockHash$3);
var _1 = SHA1;
SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;
SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;
  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  for (i = 0; i < W.length; i++) {
    var s2 = ~~(i / 20);
    var t = sum32_5$1(rotl32$1(a, 5), ft_1(s2, b, c, d), e, W[i], sha1_K[s2]);
    e = d;
    d = c;
    c = rotl32$1(b, 30);
    b = a;
    a = t;
  }
  this.h[0] = sum32$2(this.h[0], a);
  this.h[1] = sum32$2(this.h[1], b);
  this.h[2] = sum32$2(this.h[2], c);
  this.h[3] = sum32$2(this.h[3], d);
  this.h[4] = sum32$2(this.h[4], e);
};
SHA1.prototype._digest = function digest2(enc) {
  if (enc === "hex")
    return utils$6.toHex32(this.h, "big");
  else
    return utils$6.split32(this.h, "big");
};
var utils$5 = utils$9;
var common$2 = common$5;
var shaCommon = common$4;
var assert$8 = minimalisticAssert$1;
var sum32$1 = utils$5.sum32;
var sum32_4$1 = utils$5.sum32_4;
var sum32_5 = utils$5.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;
var BlockHash$2 = common$2.BlockHash;
var sha256_K = [
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
];
function SHA256$1() {
  if (!(this instanceof SHA256$1))
    return new SHA256$1();
  BlockHash$2.call(this);
  this.h = [
    1779033703,
    3144134277,
    1013904242,
    2773480762,
    1359893119,
    2600822924,
    528734635,
    1541459225
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils$5.inherits(SHA256$1, BlockHash$2);
var _256 = SHA256$1;
SHA256$1.blockSize = 512;
SHA256$1.outSize = 256;
SHA256$1.hmacStrength = 192;
SHA256$1.padLength = 64;
SHA256$1.prototype._update = function _update2(msg, start) {
  var W = this.W;
  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4$1(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f2 = this.h[5];
  var g = this.h[6];
  var h = this.h[7];
  assert$8(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f2, g), this.k[i], W[i]);
    var T2 = sum32$1(s0_256(a), maj32(a, b, c));
    h = g;
    g = f2;
    f2 = e;
    e = sum32$1(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32$1(T1, T2);
  }
  this.h[0] = sum32$1(this.h[0], a);
  this.h[1] = sum32$1(this.h[1], b);
  this.h[2] = sum32$1(this.h[2], c);
  this.h[3] = sum32$1(this.h[3], d);
  this.h[4] = sum32$1(this.h[4], e);
  this.h[5] = sum32$1(this.h[5], f2);
  this.h[6] = sum32$1(this.h[6], g);
  this.h[7] = sum32$1(this.h[7], h);
};
SHA256$1.prototype._digest = function digest3(enc) {
  if (enc === "hex")
    return utils$5.toHex32(this.h, "big");
  else
    return utils$5.split32(this.h, "big");
};
var utils$4 = utils$9;
var SHA256 = _256;
function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();
  SHA256.call(this);
  this.h = [
    3238371032,
    914150663,
    812702999,
    4144912697,
    4290775857,
    1750603025,
    1694076839,
    3204075428
  ];
}
utils$4.inherits(SHA224, SHA256);
var _224 = SHA224;
SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;
SHA224.prototype._digest = function digest4(enc) {
  if (enc === "hex")
    return utils$4.toHex32(this.h.slice(0, 7), "big");
  else
    return utils$4.split32(this.h.slice(0, 7), "big");
};
var utils$3 = utils$9;
var common$1 = common$5;
var assert$7 = minimalisticAssert$1;
var rotr64_hi = utils$3.rotr64_hi;
var rotr64_lo = utils$3.rotr64_lo;
var shr64_hi = utils$3.shr64_hi;
var shr64_lo = utils$3.shr64_lo;
var sum64 = utils$3.sum64;
var sum64_hi = utils$3.sum64_hi;
var sum64_lo = utils$3.sum64_lo;
var sum64_4_hi = utils$3.sum64_4_hi;
var sum64_4_lo = utils$3.sum64_4_lo;
var sum64_5_hi = utils$3.sum64_5_hi;
var sum64_5_lo = utils$3.sum64_5_lo;
var BlockHash$1 = common$1.BlockHash;
var sha512_K = [
  1116352408,
  3609767458,
  1899447441,
  602891725,
  3049323471,
  3964484399,
  3921009573,
  2173295548,
  961987163,
  4081628472,
  1508970993,
  3053834265,
  2453635748,
  2937671579,
  2870763221,
  3664609560,
  3624381080,
  2734883394,
  310598401,
  1164996542,
  607225278,
  1323610764,
  1426881987,
  3590304994,
  1925078388,
  4068182383,
  2162078206,
  991336113,
  2614888103,
  633803317,
  3248222580,
  3479774868,
  3835390401,
  2666613458,
  4022224774,
  944711139,
  264347078,
  2341262773,
  604807628,
  2007800933,
  770255983,
  1495990901,
  1249150122,
  1856431235,
  1555081692,
  3175218132,
  1996064986,
  2198950837,
  2554220882,
  3999719339,
  2821834349,
  766784016,
  2952996808,
  2566594879,
  3210313671,
  3203337956,
  3336571891,
  1034457026,
  3584528711,
  2466948901,
  113926993,
  3758326383,
  338241895,
  168717936,
  666307205,
  1188179964,
  773529912,
  1546045734,
  1294757372,
  1522805485,
  1396182291,
  2643833823,
  1695183700,
  2343527390,
  1986661051,
  1014477480,
  2177026350,
  1206759142,
  2456956037,
  344077627,
  2730485921,
  1290863460,
  2820302411,
  3158454273,
  3259730800,
  3505952657,
  3345764771,
  106217008,
  3516065817,
  3606008344,
  3600352804,
  1432725776,
  4094571909,
  1467031594,
  275423344,
  851169720,
  430227734,
  3100823752,
  506948616,
  1363258195,
  659060556,
  3750685593,
  883997877,
  3785050280,
  958139571,
  3318307427,
  1322822218,
  3812723403,
  1537002063,
  2003034995,
  1747873779,
  3602036899,
  1955562222,
  1575990012,
  2024104815,
  1125592928,
  2227730452,
  2716904306,
  2361852424,
  442776044,
  2428436474,
  593698344,
  2756734187,
  3733110249,
  3204031479,
  2999351573,
  3329325298,
  3815920427,
  3391569614,
  3928383900,
  3515267271,
  566280711,
  3940187606,
  3454069534,
  4118630271,
  4000239992,
  116418474,
  1914138554,
  174292421,
  2731055270,
  289380356,
  3203993006,
  460393269,
  320620315,
  685471733,
  587496836,
  852142971,
  1086792851,
  1017036298,
  365543100,
  1126000580,
  2618297676,
  1288033470,
  3409855158,
  1501505948,
  4234509866,
  1607167915,
  987167468,
  1816402316,
  1246189591
];
function SHA512$1() {
  if (!(this instanceof SHA512$1))
    return new SHA512$1();
  BlockHash$1.call(this);
  this.h = [
    1779033703,
    4089235720,
    3144134277,
    2227873595,
    1013904242,
    4271175723,
    2773480762,
    1595750129,
    1359893119,
    2917565137,
    2600822924,
    725511199,
    528734635,
    4215389547,
    1541459225,
    327033209
  ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils$3.inherits(SHA512$1, BlockHash$1);
var _512 = SHA512$1;
SHA512$1.blockSize = 1024;
SHA512$1.outSize = 512;
SHA512$1.hmacStrength = 192;
SHA512$1.padLength = 128;
SHA512$1.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];
    var c3_lo = W[i - 31];
    W[i] = sum64_4_hi(
      c0_hi,
      c0_lo,
      c1_hi,
      c1_lo,
      c2_hi,
      c2_lo,
      c3_hi,
      c3_lo
    );
    W[i + 1] = sum64_4_lo(
      c0_hi,
      c0_lo,
      c1_hi,
      c1_lo,
      c2_hi,
      c2_lo,
      c3_hi,
      c3_lo
    );
  }
};
SHA512$1.prototype._update = function _update3(msg, start) {
  this._prepareBlock(msg, start);
  var W = this.W;
  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];
  assert$7(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];
    var T1_hi = sum64_5_hi(
      c0_hi,
      c0_lo,
      c1_hi,
      c1_lo,
      c2_hi,
      c2_lo,
      c3_hi,
      c3_lo,
      c4_hi,
      c4_lo
    );
    var T1_lo = sum64_5_lo(
      c0_hi,
      c0_lo,
      c1_hi,
      c1_lo,
      c2_hi,
      c2_lo,
      c3_hi,
      c3_lo,
      c4_hi,
      c4_lo
    );
    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
    hh = gh;
    hl = gl;
    gh = fh;
    gl = fl;
    fh = eh;
    fl = el;
    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);
    dh = ch;
    dl = cl;
    ch = bh;
    cl = bl;
    bh = ah;
    bl = al;
    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }
  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};
SHA512$1.prototype._digest = function digest5(enc) {
  if (enc === "hex")
    return utils$3.toHex32(this.h, "big");
  else
    return utils$3.split32(this.h, "big");
};
function ch64_hi(xh, xl, yh, yl, zh) {
  var r2 = xh & yh ^ ~xh & zh;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r2 = xl & yl ^ ~xl & zl;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function maj64_hi(xh, xl, yh, yl, zh) {
  var r2 = xh & yh ^ xh & zh ^ yh & zh;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r2 = xl & yl ^ xl & zl ^ yl & zl;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);
  var c2_hi = rotr64_hi(xl, xh, 7);
  var r2 = c0_hi ^ c1_hi ^ c2_hi;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);
  var c2_lo = rotr64_lo(xl, xh, 7);
  var r2 = c0_lo ^ c1_lo ^ c2_lo;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);
  var r2 = c0_hi ^ c1_hi ^ c2_hi;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);
  var r2 = c0_lo ^ c1_lo ^ c2_lo;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);
  var r2 = c0_hi ^ c1_hi ^ c2_hi;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);
  var r2 = c0_lo ^ c1_lo ^ c2_lo;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);
  var c2_hi = shr64_hi(xh, xl, 6);
  var r2 = c0_hi ^ c1_hi ^ c2_hi;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);
  var c2_lo = shr64_lo(xh, xl, 6);
  var r2 = c0_lo ^ c1_lo ^ c2_lo;
  if (r2 < 0)
    r2 += 4294967296;
  return r2;
}
var utils$2 = utils$9;
var SHA512 = _512;
function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();
  SHA512.call(this);
  this.h = [
    3418070365,
    3238371032,
    1654270250,
    914150663,
    2438529370,
    812702999,
    355462360,
    4144912697,
    1731405415,
    4290775857,
    2394180231,
    1750603025,
    3675008525,
    1694076839,
    1203062813,
    3204075428
  ];
}
utils$2.inherits(SHA384, SHA512);
var _384 = SHA384;
SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;
SHA384.prototype._digest = function digest6(enc) {
  if (enc === "hex")
    return utils$2.toHex32(this.h.slice(0, 12), "big");
  else
    return utils$2.split32(this.h.slice(0, 12), "big");
};
sha.sha1 = _1;
sha.sha224 = _224;
sha.sha256 = _256;
sha.sha384 = _384;
sha.sha512 = _512;
var ripemd = {};
var utils$1 = utils$9;
var common = common$5;
var rotl32 = utils$1.rotl32;
var sum32 = utils$1.sum32;
var sum32_3 = utils$1.sum32_3;
var sum32_4 = utils$1.sum32_4;
var BlockHash = common.BlockHash;
function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();
  BlockHash.call(this);
  this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  this.endian = "little";
}
utils$1.inherits(RIPEMD160, BlockHash);
ripemd.ripemd160 = RIPEMD160;
RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;
RIPEMD160.prototype._update = function update2(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]
      ),
      E
    );
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]
      ),
      Eh
    );
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};
RIPEMD160.prototype._digest = function digest7(enc) {
  if (enc === "hex")
    return utils$1.toHex32(this.h, "little");
  else
    return utils$1.split32(this.h, "little");
};
function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return x & y | ~x & z;
  else if (j <= 47)
    return (x | ~y) ^ z;
  else if (j <= 63)
    return x & z | y & ~z;
  else
    return x ^ (y | ~z);
}
function K(j) {
  if (j <= 15)
    return 0;
  else if (j <= 31)
    return 1518500249;
  else if (j <= 47)
    return 1859775393;
  else if (j <= 63)
    return 2400959708;
  else
    return 2840853838;
}
function Kh(j) {
  if (j <= 15)
    return 1352829926;
  else if (j <= 31)
    return 1548603684;
  else if (j <= 47)
    return 1836072691;
  else if (j <= 63)
    return 2053994217;
  else
    return 0;
}
var r = [
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  7,
  4,
  13,
  1,
  10,
  6,
  15,
  3,
  12,
  0,
  9,
  5,
  2,
  14,
  11,
  8,
  3,
  10,
  14,
  4,
  9,
  15,
  8,
  1,
  2,
  7,
  0,
  6,
  13,
  11,
  5,
  12,
  1,
  9,
  11,
  10,
  0,
  8,
  12,
  4,
  13,
  3,
  7,
  15,
  14,
  5,
  6,
  2,
  4,
  0,
  5,
  9,
  7,
  12,
  2,
  10,
  14,
  1,
  3,
  8,
  11,
  6,
  15,
  13
];
var rh = [
  5,
  14,
  7,
  0,
  9,
  2,
  11,
  4,
  13,
  6,
  15,
  8,
  1,
  10,
  3,
  12,
  6,
  11,
  3,
  7,
  0,
  13,
  5,
  10,
  14,
  15,
  8,
  12,
  4,
  9,
  1,
  2,
  15,
  5,
  1,
  3,
  7,
  14,
  6,
  9,
  11,
  8,
  12,
  2,
  10,
  0,
  4,
  13,
  8,
  6,
  4,
  1,
  3,
  11,
  15,
  0,
  5,
  12,
  2,
  13,
  9,
  7,
  10,
  14,
  12,
  15,
  10,
  4,
  1,
  5,
  8,
  7,
  6,
  2,
  13,
  14,
  0,
  3,
  9,
  11
];
var s = [
  11,
  14,
  15,
  12,
  5,
  8,
  7,
  9,
  11,
  13,
  14,
  15,
  6,
  7,
  9,
  8,
  7,
  6,
  8,
  13,
  11,
  9,
  7,
  15,
  7,
  12,
  15,
  9,
  11,
  7,
  13,
  12,
  11,
  13,
  6,
  7,
  14,
  9,
  13,
  15,
  14,
  8,
  13,
  6,
  5,
  12,
  7,
  5,
  11,
  12,
  14,
  15,
  14,
  15,
  9,
  8,
  9,
  14,
  5,
  6,
  8,
  6,
  5,
  12,
  9,
  15,
  5,
  11,
  6,
  8,
  13,
  12,
  5,
  12,
  13,
  14,
  11,
  8,
  5,
  6
];
var sh = [
  8,
  9,
  9,
  11,
  13,
  15,
  15,
  5,
  7,
  7,
  8,
  11,
  14,
  14,
  12,
  6,
  9,
  13,
  15,
  7,
  12,
  8,
  9,
  11,
  7,
  7,
  12,
  7,
  6,
  15,
  13,
  11,
  9,
  7,
  15,
  11,
  8,
  6,
  6,
  14,
  12,
  13,
  5,
  14,
  13,
  13,
  7,
  5,
  15,
  5,
  8,
  11,
  14,
  14,
  6,
  14,
  6,
  9,
  12,
  9,
  12,
  5,
  15,
  8,
  8,
  5,
  12,
  9,
  12,
  5,
  14,
  6,
  8,
  13,
  6,
  5,
  15,
  13,
  11,
  11
];
var utils = utils$9;
var assert$6 = minimalisticAssert$1;
function Hmac(hash2, key2, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash2, key2, enc);
  this.Hash = hash2;
  this.blockSize = hash2.blockSize / 8;
  this.outSize = hash2.outSize / 8;
  this.inner = null;
  this.outer = null;
  this._init(utils.toArray(key2, enc));
}
var hmac = Hmac;
Hmac.prototype._init = function init(key2) {
  if (key2.length > this.blockSize)
    key2 = new this.Hash().update(key2).digest();
  assert$6(key2.length <= this.blockSize);
  for (var i = key2.length; i < this.blockSize; i++)
    key2.push(0);
  for (i = 0; i < key2.length; i++)
    key2[i] ^= 54;
  this.inner = new this.Hash().update(key2);
  for (i = 0; i < key2.length; i++)
    key2[i] ^= 106;
  this.outer = new this.Hash().update(key2);
};
Hmac.prototype.update = function update3(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};
Hmac.prototype.digest = function digest8(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};
(function(exports) {
  var hash2 = exports;
  hash2.utils = utils$9;
  hash2.common = common$5;
  hash2.sha = sha;
  hash2.ripemd = ripemd;
  hash2.hmac = hmac;
  hash2.sha1 = hash2.sha.sha1;
  hash2.sha256 = hash2.sha.sha256;
  hash2.sha224 = hash2.sha.sha224;
  hash2.sha384 = hash2.sha.sha384;
  hash2.sha512 = hash2.sha.sha512;
  hash2.ripemd160 = hash2.ripemd.ripemd160;
})(hash$1);
var hash = hash$1;
function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path, base2) {
      return commonjsRequire(path, base2 === void 0 || base2 === null ? module.path : base2);
    }
  }, fn(module, module.exports), module.exports;
}
function commonjsRequire() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var minimalisticAssert = assert;
function assert(val, msg) {
  if (!val)
    throw new Error(msg || "Assertion failed");
}
assert.equal = function assertEqual2(l, r2, msg) {
  if (l != r2)
    throw new Error(msg || "Assertion failed: " + l + " != " + r2);
};
var utils_1 = createCommonjsModule(function(module, exports) {
  var utils2 = exports;
  function toArray2(msg, enc) {
    if (Array.isArray(msg))
      return msg.slice();
    if (!msg)
      return [];
    var res = [];
    if (typeof msg !== "string") {
      for (var i = 0; i < msg.length; i++)
        res[i] = msg[i] | 0;
      return res;
    }
    if (enc === "hex") {
      msg = msg.replace(/[^a-z0-9]+/ig, "");
      if (msg.length % 2 !== 0)
        msg = "0" + msg;
      for (var i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    } else {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 255;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    }
    return res;
  }
  utils2.toArray = toArray2;
  function zero22(word) {
    if (word.length === 1)
      return "0" + word;
    else
      return word;
  }
  utils2.zero2 = zero22;
  function toHex2(msg) {
    var res = "";
    for (var i = 0; i < msg.length; i++)
      res += zero22(msg[i].toString(16));
    return res;
  }
  utils2.toHex = toHex2;
  utils2.encode = function encode3(arr, enc) {
    if (enc === "hex")
      return toHex2(arr);
    else
      return arr;
  };
});
var utils_1$1 = createCommonjsModule(function(module, exports) {
  var utils2 = exports;
  utils2.assert = minimalisticAssert;
  utils2.toArray = utils_1.toArray;
  utils2.zero2 = utils_1.zero2;
  utils2.toHex = utils_1.toHex;
  utils2.encode = utils_1.encode;
  function getNAF2(num, w, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    naf.fill(0);
    var ws = 1 << w + 1;
    var k = num.clone();
    for (var i = 0; i < naf.length; i++) {
      var z;
      var mod = k.andln(ws - 1);
      if (k.isOdd()) {
        if (mod > (ws >> 1) - 1)
          z = (ws >> 1) - mod;
        else
          z = mod;
        k.isubn(z);
      } else {
        z = 0;
      }
      naf[i] = z;
      k.iushrn(1);
    }
    return naf;
  }
  utils2.getNAF = getNAF2;
  function getJSF2(k1, k2) {
    var jsf = [
      [],
      []
    ];
    k1 = k1.clone();
    k2 = k2.clone();
    var d1 = 0;
    var d2 = 0;
    var m8;
    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
      var m14 = k1.andln(3) + d1 & 3;
      var m24 = k2.andln(3) + d2 & 3;
      if (m14 === 3)
        m14 = -1;
      if (m24 === 3)
        m24 = -1;
      var u1;
      if ((m14 & 1) === 0) {
        u1 = 0;
      } else {
        m8 = k1.andln(7) + d1 & 7;
        if ((m8 === 3 || m8 === 5) && m24 === 2)
          u1 = -m14;
        else
          u1 = m14;
      }
      jsf[0].push(u1);
      var u2;
      if ((m24 & 1) === 0) {
        u2 = 0;
      } else {
        m8 = k2.andln(7) + d2 & 7;
        if ((m8 === 3 || m8 === 5) && m14 === 2)
          u2 = -m24;
        else
          u2 = m24;
      }
      jsf[1].push(u2);
      if (2 * d1 === u1 + 1)
        d1 = 1 - d1;
      if (2 * d2 === u2 + 1)
        d2 = 1 - d2;
      k1.iushrn(1);
      k2.iushrn(1);
    }
    return jsf;
  }
  utils2.getJSF = getJSF2;
  function cachedProperty(obj, name2, computer) {
    var key2 = "_" + name2;
    obj.prototype[name2] = function cachedProperty2() {
      return this[key2] !== void 0 ? this[key2] : this[key2] = computer.call(this);
    };
  }
  utils2.cachedProperty = cachedProperty;
  function parseBytes(bytes) {
    return typeof bytes === "string" ? utils2.toArray(bytes, "hex") : bytes;
  }
  utils2.parseBytes = parseBytes;
  function intFromLE(bytes) {
    return new BN(bytes, "hex", "le");
  }
  utils2.intFromLE = intFromLE;
});
var getNAF = utils_1$1.getNAF;
var getJSF = utils_1$1.getJSF;
var assert$1 = utils_1$1.assert;
function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
  this._bitLength = this.n ? this.n.bitLength() : 0;
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base = BaseCurve;
BaseCurve.prototype.point = function point() {
  throw new Error("Not implemented");
};
BaseCurve.prototype.validate = function validate() {
  throw new Error("Not implemented");
};
BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$1(p.precomputed);
  var doubles = p._getDoubles();
  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }
  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};
BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;
  var naf = getNAF(k, w, this._bitLength);
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);
    if (i < 0)
      break;
    var z = naf[i];
    assert$1(z !== 0);
    if (p.type === "affine") {
      if (z > 0)
        acc = acc.mixedAdd(wnd[z - 1 >> 1]);
      else
        acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
    } else {
      if (z > 0)
        acc = acc.add(wnd[z - 1 >> 1]);
      else
        acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
  }
  return p.type === "affine" ? acc.toP() : acc;
};
BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }
    var comb = [
      points[a],
      null,
      null,
      points[b]
    ];
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }
    var index = [
      -3,
      -1,
      -5,
      -7,
      0,
      7,
      5,
      1,
      3
    ];
    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;
      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }
  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;
    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;
    for (j = 0; j < len; j++) {
      var z = tmp[j];
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][z - 1 >> 1];
      else if (z < 0)
        p = wnd[j][-z - 1 >> 1].neg();
      if (p.type === "affine")
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  for (i = 0; i < len; i++)
    wnd[i] = null;
  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};
function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;
BasePoint.prototype.eq = function eq() {
  throw new Error("Not implemented");
};
BasePoint.prototype.validate = function validate2() {
  return this.curve.validate(this);
};
BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils_1$1.toArray(bytes, enc);
  var len = this.p.byteLength();
  if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
    if (bytes[0] === 6)
      assert$1(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 7)
      assert$1(bytes[bytes.length - 1] % 2 === 1);
    var res = this.point(
      bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len)
    );
    return res;
  } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
  }
  throw new Error("Unknown point format");
};
BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};
BasePoint.prototype._encode = function _encode2(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray("be", len);
  if (compact)
    return [this.getY().isEven() ? 2 : 3].concat(x);
  return [4].concat(x, this.getY().toArray("be", len));
};
BasePoint.prototype.encode = function encode(enc, compact) {
  return utils_1$1.encode(this._encode(compact), enc);
};
BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;
  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;
  return this;
};
BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;
  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;
  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;
  var doubles = [this];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step,
    points: doubles
  };
};
BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;
  var res = [this];
  var max = (1 << wnd) - 1;
  var dbl3 = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl3);
  return {
    wnd,
    points: res
  };
};
BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};
BasePoint.prototype.dblp = function dblp(k) {
  var r2 = this;
  for (var i = 0; i < k; i++)
    r2 = r2.dbl();
  return r2;
};
var inherits_browser = createCommonjsModule(function(module) {
  if (typeof Object.create === "function") {
    module.exports = function inherits2(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    };
  } else {
    module.exports = function inherits2(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
    };
  }
});
var assert$2 = utils_1$1.assert;
function ShortCurve(conf) {
  base.call(this, "short", conf);
  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();
  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits_browser(ShortCurve, base);
var short_1 = ShortCurve;
ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }
  return {
    beta,
    lambda,
    basis
  };
};
ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var s2 = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
  var l1 = ntinv.redAdd(s2).fromRed();
  var l2 = ntinv.redSub(s2).fromRed();
  return [l1, l2];
};
ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);
  var a0;
  var b0;
  var a1;
  var b1;
  var a2;
  var b2;
  var prevR;
  var i = 0;
  var r2;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r2 = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));
    if (!a1 && r2.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r2.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r2;
    v = u;
    u = r2;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r2.neg();
  b2 = x;
  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }
  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};
ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];
  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);
  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1, k2 };
};
ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);
  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();
  return this.point(x, y);
};
ShortCurve.prototype.validate = function validate3(point3) {
  if (point3.inf)
    return true;
  var x = point3.x;
  var y = point3.y;
  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();
    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }
    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};
function Point(curve, x, y, isRed) {
  base.BasePoint.call(this, curve, "affine");
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits_browser(Point, base.BasePoint);
ShortCurve.prototype.point = function point2(x, y, isRed) {
  return new Point(this, x, y, isRed);
};
ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};
Point.prototype._getBeta = function _getBeta2() {
  if (!this.curve.endo)
    return;
  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;
  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};
Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [this.x, this.y];
  return [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};
Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === "string")
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;
  function obj2point(obj2) {
    return curve.point(obj2[0], obj2[1], red);
  }
  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [res].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [res].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};
Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return "<EC Point Infinity>";
  return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};
Point.prototype.add = function add(p) {
  if (this.inf)
    return p;
  if (p.inf)
    return this;
  if (this.eq(p))
    return this.dbl();
  if (this.neg().eq(p))
    return this.curve.point(null, null);
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);
  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);
  var a = this.curve.a;
  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point.prototype.getX = function getX() {
  return this.x.fromRed();
};
Point.prototype.getY = function getY() {
  return this.y.fromRed();
};
Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([this], [k]);
  else
    return this.curve._wnafMul(this, k);
};
Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point.prototype.eq = function eq2(p) {
  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;
  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};
Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);
  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};
function JPoint(curve, x, y, z) {
  base.BasePoint.call(this, curve, "jacobian");
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);
  this.zOne = this.z === this.curve.one;
}
inherits_browser(JPoint, base.BasePoint);
ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};
JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);
  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);
  return this.curve.point(ax, ay);
};
JPoint.prototype.neg = function neg2() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint.prototype.add = function add2(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));
  var h = u1.redSub(u2);
  var r2 = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r2.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r2.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r2.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mixedAdd = function mixedAdd(p) {
  if (this.isInfinity())
    return p.toJ();
  if (p.isInfinity())
    return this;
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);
  var h = u1.redSub(u2);
  var r2 = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r2.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r2.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r2.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.dblp = function dblp2(pow2) {
  if (pow2 === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow2)
    return this.dbl();
  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r2 = this;
    for (i = 0; i < pow2; i++)
      r2 = r2.dbl();
    return r2;
  }
  var a = this.curve.a;
  var tinv = this.curve.tinv;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow2; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow2)
      jz4 = jz4.redMul(jyd4);
    jx = nx;
    jz = nz;
    jyd = dny;
  }
  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint.prototype.dbl = function dbl2() {
  if (this.isInfinity())
    return this;
  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};
JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  if (this.zOne) {
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var yyyy = yy.redSqr();
    var s2 = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s2 = s2.redIAdd(s2);
    var m = xx.redAdd(xx).redIAdd(xx);
    var t = m.redSqr().redISub(s2).redISub(s2);
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    nx = t;
    ny = m.redMul(s2.redISub(t)).redISub(yyyy8);
    nz = this.y.redAdd(this.y);
  } else {
    var a = this.x.redSqr();
    var b = this.y.redSqr();
    var c = b.redSqr();
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    var e = a.redAdd(a).redIAdd(a);
    var f2 = e.redSqr();
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);
    nx = f2.redISub(d).redISub(d);
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  if (this.zOne) {
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var yyyy = yy.redSqr();
    var s2 = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s2 = s2.redIAdd(s2);
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    var t = m.redSqr().redISub(s2).redISub(s2);
    nx = t;
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s2.redISub(t)).redISub(yyyy8);
    nz = this.y.redAdd(this.y);
  } else {
    var delta = this.z.redSqr();
    var gamma = this.y.redSqr();
    var beta = this.x.redMul(gamma);
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();
  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);
  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);
  var xx = this.x.redSqr();
  var yy = this.y.redSqr();
  var zz = this.z.redSqr();
  var yyyy = yy.redSqr();
  var m = xx.redAdd(xx).redIAdd(xx);
  var mm = m.redSqr();
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  var ee = e.redSqr();
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mul = function mul2(k, kbase) {
  k = new BN(k, kbase);
  return this.curve._wnafMul(this, k);
};
JPoint.prototype.eq = function eq3(p) {
  if (p.type === "affine")
    return this.eq(p.toJ());
  if (this === p)
    return true;
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (; ; ) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};
JPoint.prototype.inspect = function inspect2() {
  if (this.isInfinity())
    return "<EC JPoint Infinity>";
  return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
JPoint.prototype.isInfinity = function isInfinity2() {
  return this.z.cmpn(0) === 0;
};
var curve_1 = createCommonjsModule(function(module, exports) {
  var curve = exports;
  curve.base = base;
  curve.short = short_1;
  curve.mont = null;
  curve.edwards = null;
});
var curves_1 = createCommonjsModule(function(module, exports) {
  var curves = exports;
  var assert2 = utils_1$1.assert;
  function PresetCurve(options2) {
    if (options2.type === "short")
      this.curve = new curve_1.short(options2);
    else if (options2.type === "edwards")
      this.curve = new curve_1.edwards(options2);
    else
      this.curve = new curve_1.mont(options2);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options2.hash;
    assert2(this.g.validate(), "Invalid curve");
    assert2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  curves.PresetCurve = PresetCurve;
  function defineCurve(name2, options2) {
    Object.defineProperty(curves, name2, {
      configurable: true,
      enumerable: true,
      get: function() {
        var curve = new PresetCurve(options2);
        Object.defineProperty(curves, name2, {
          configurable: true,
          enumerable: true,
          value: curve
        });
        return curve;
      }
    });
  }
  defineCurve("p192", {
    type: "short",
    prime: "p192",
    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
    hash: hash.sha256,
    gRed: false,
    g: [
      "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
      "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
    ]
  });
  defineCurve("p224", {
    type: "short",
    prime: "p224",
    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
    hash: hash.sha256,
    gRed: false,
    g: [
      "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
      "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
    ]
  });
  defineCurve("p256", {
    type: "short",
    prime: null,
    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
    hash: hash.sha256,
    gRed: false,
    g: [
      "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
      "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
    ]
  });
  defineCurve("p384", {
    type: "short",
    prime: null,
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
    hash: hash.sha384,
    gRed: false,
    g: [
      "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
      "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
    ]
  });
  defineCurve("p521", {
    type: "short",
    prime: null,
    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
    hash: hash.sha512,
    gRed: false,
    g: [
      "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
      "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
    ]
  });
  defineCurve("curve25519", {
    type: "mont",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "76d06",
    b: "1",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: hash.sha256,
    gRed: false,
    g: [
      "9"
    ]
  });
  defineCurve("ed25519", {
    type: "edwards",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "-1",
    c: "1",
    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: hash.sha256,
    gRed: false,
    g: [
      "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
      "6666666666666666666666666666666666666666666666666666666666666658"
    ]
  });
  var pre;
  try {
    pre = null.crash();
  } catch (e) {
    pre = void 0;
  }
  defineCurve("secp256k1", {
    type: "short",
    prime: "k256",
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
    a: "0",
    b: "7",
    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
    h: "1",
    hash: hash.sha256,
    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
    basis: [
      {
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      },
      {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      }
    ],
    gRed: false,
    g: [
      "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
      "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
      pre
    ]
  });
});
function HmacDRBG(options2) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options2);
  this.hash = options2.hash;
  this.predResist = !!options2.predResist;
  this.outLen = this.hash.outSize;
  this.minEntropy = options2.minEntropy || this.hash.hmacStrength;
  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;
  var entropy = utils_1.toArray(options2.entropy, options2.entropyEnc || "hex");
  var nonce = utils_1.toArray(options2.nonce, options2.nonceEnc || "hex");
  var pers = utils_1.toArray(options2.pers, options2.persEnc || "hex");
  minimalisticAssert(
    entropy.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  );
  this._init(entropy, nonce, pers);
}
var hmacDrbg = HmacDRBG;
HmacDRBG.prototype._init = function init2(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);
  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0;
    this.V[i] = 1;
  }
  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 281474976710656;
};
HmacDRBG.prototype._hmac = function hmac2() {
  return new hash.hmac(this.hash, this.K);
};
HmacDRBG.prototype._update = function update4(seed) {
  var kmac = this._hmac().update(this.V).update([0]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;
  this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
  this.V = this._hmac().update(this.V).digest();
};
HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add3, addEnc) {
  if (typeof entropyEnc !== "string") {
    addEnc = add3;
    add3 = entropyEnc;
    entropyEnc = null;
  }
  entropy = utils_1.toArray(entropy, entropyEnc);
  add3 = utils_1.toArray(add3, addEnc);
  minimalisticAssert(
    entropy.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  );
  this._update(entropy.concat(add3 || []));
  this._reseed = 1;
};
HmacDRBG.prototype.generate = function generate(len, enc, add3, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error("Reseed is required");
  if (typeof enc !== "string") {
    addEnc = add3;
    add3 = enc;
    enc = null;
  }
  if (add3) {
    add3 = utils_1.toArray(add3, addEnc || "hex");
    this._update(add3);
  }
  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }
  var res = temp.slice(0, len);
  this._update(add3);
  this._reseed++;
  return utils_1.encode(res, enc);
};
var assert$3 = utils_1$1.assert;
function KeyPair(ec2, options2) {
  this.ec = ec2;
  this.priv = null;
  this.pub = null;
  if (options2.priv)
    this._importPrivate(options2.priv, options2.privEnc);
  if (options2.pub)
    this._importPublic(options2.pub, options2.pubEnc);
}
var key = KeyPair;
KeyPair.fromPublic = function fromPublic(ec2, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(ec2, {
    pub,
    pubEnc: enc
  });
};
KeyPair.fromPrivate = function fromPrivate(ec2, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;
  return new KeyPair(ec2, {
    priv,
    privEnc: enc
  });
};
KeyPair.prototype.validate = function validate4() {
  var pub = this.getPublic();
  if (pub.isInfinity())
    return { result: false, reason: "Invalid public key" };
  if (!pub.validate())
    return { result: false, reason: "Public key is not a point" };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: "Public key * N != O" };
  return { result: true, reason: null };
};
KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  if (typeof compact === "string") {
    enc = compact;
    compact = null;
  }
  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);
  if (!enc)
    return this.pub;
  return this.pub.encode(enc, compact);
};
KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === "hex")
    return this.priv.toString(16, 2);
  else
    return this.priv;
};
KeyPair.prototype._importPrivate = function _importPrivate(key2, enc) {
  this.priv = new BN(key2, enc || 16);
  this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair.prototype._importPublic = function _importPublic(key2, enc) {
  if (key2.x || key2.y) {
    if (this.ec.curve.type === "mont") {
      assert$3(key2.x, "Need x coordinate");
    } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
      assert$3(key2.x && key2.y, "Need both x and y coordinate");
    }
    this.pub = this.ec.curve.point(key2.x, key2.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key2, enc);
};
KeyPair.prototype.derive = function derive(pub) {
  if (!pub.validate()) {
    assert$3(pub.validate(), "public point not validated");
  }
  return pub.mul(this.priv).getX();
};
KeyPair.prototype.sign = function sign(msg, enc, options2) {
  return this.ec.sign(msg, this, enc, options2);
};
KeyPair.prototype.verify = function verify(msg, signature2) {
  return this.ec.verify(msg, signature2, this);
};
KeyPair.prototype.inspect = function inspect3() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var assert$4 = utils_1$1.assert;
function Signature(options2, enc) {
  if (options2 instanceof Signature)
    return options2;
  if (this._importDER(options2, enc))
    return;
  assert$4(options2.r && options2.s, "Signature without r or s");
  this.r = new BN(options2.r, 16);
  this.s = new BN(options2.s, 16);
  if (options2.recoveryParam === void 0)
    this.recoveryParam = null;
  else
    this.recoveryParam = options2.recoveryParam;
}
var signature = Signature;
function Position() {
  this.place = 0;
}
function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 128)) {
    return initial;
  }
  var octetLen = initial & 15;
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }
  if (val <= 127) {
    return false;
  }
  p.place = off;
  return val;
}
function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}
Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils_1$1.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 48) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if (len + p.place !== data.length) {
    return false;
  }
  if (data[p.place++] !== 2) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r2 = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 2) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s2 = data.slice(p.place, slen + p.place);
  if (r2[0] === 0) {
    if (r2[1] & 128) {
      r2 = r2.slice(1);
    } else {
      return false;
    }
  }
  if (s2[0] === 0) {
    if (s2[1] & 128) {
      s2 = s2.slice(1);
    } else {
      return false;
    }
  }
  this.r = new BN(r2);
  this.s = new BN(s2);
  this.recoveryParam = null;
  return true;
};
function constructLength(arr, len) {
  if (len < 128) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 128);
  while (--octets) {
    arr.push(len >>> (octets << 3) & 255);
  }
  arr.push(len);
}
Signature.prototype.toDER = function toDER(enc) {
  var r2 = this.r.toArray();
  var s2 = this.s.toArray();
  if (r2[0] & 128)
    r2 = [0].concat(r2);
  if (s2[0] & 128)
    s2 = [0].concat(s2);
  r2 = rmPadding(r2);
  s2 = rmPadding(s2);
  while (!s2[0] && !(s2[1] & 128)) {
    s2 = s2.slice(1);
  }
  var arr = [2];
  constructLength(arr, r2.length);
  arr = arr.concat(r2);
  arr.push(2);
  constructLength(arr, s2.length);
  var backHalf = arr.concat(s2);
  var res = [48];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils_1$1.encode(res, enc);
};
var rand = function() {
  throw new Error("unsupported");
};
var assert$5 = utils_1$1.assert;
function EC(options2) {
  if (!(this instanceof EC))
    return new EC(options2);
  if (typeof options2 === "string") {
    assert$5(
      Object.prototype.hasOwnProperty.call(curves_1, options2),
      "Unknown curve " + options2
    );
    options2 = curves_1[options2];
  }
  if (options2 instanceof curves_1.PresetCurve)
    options2 = { curve: options2 };
  this.curve = options2.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;
  this.g = options2.curve.g;
  this.g.precompute(options2.curve.n.bitLength() + 1);
  this.hash = options2.hash || options2.curve.hash;
}
var ec = EC;
EC.prototype.keyPair = function keyPair(options2) {
  return new key(this, options2);
};
EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return key.fromPrivate(this, priv, enc);
};
EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return key.fromPublic(this, pub, enc);
};
EC.prototype.genKeyPair = function genKeyPair(options2) {
  if (!options2)
    options2 = {};
  var drbg = new hmacDrbg({
    hash: this.hash,
    pers: options2.pers,
    persEnc: options2.persEnc || "utf8",
    entropy: options2.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options2.entropy && options2.entropyEnc || "utf8",
    nonce: this.n.toArray()
  });
  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (; ; ) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;
    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};
EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};
EC.prototype.sign = function sign2(msg, key2, enc, options2) {
  if (typeof enc === "object") {
    options2 = enc;
    enc = null;
  }
  if (!options2)
    options2 = {};
  key2 = this.keyFromPrivate(key2, enc);
  msg = this._truncateToN(new BN(msg, 16));
  var bytes = this.n.byteLength();
  var bkey = key2.getPrivate().toArray("be", bytes);
  var nonce = msg.toArray("be", bytes);
  var drbg = new hmacDrbg({
    hash: this.hash,
    entropy: bkey,
    nonce,
    pers: options2.pers,
    persEnc: options2.persEnc || "utf8"
  });
  var ns1 = this.n.sub(new BN(1));
  for (var iter = 0; ; iter++) {
    var k = options2.k ? options2.k(iter) : new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;
    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;
    var kpX = kp.getX();
    var r2 = kpX.umod(this.n);
    if (r2.cmpn(0) === 0)
      continue;
    var s2 = k.invm(this.n).mul(r2.mul(key2.getPrivate()).iadd(msg));
    s2 = s2.umod(this.n);
    if (s2.cmpn(0) === 0)
      continue;
    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r2) !== 0 ? 2 : 0);
    if (options2.canonical && s2.cmp(this.nh) > 0) {
      s2 = this.n.sub(s2);
      recoveryParam ^= 1;
    }
    return new signature({ r: r2, s: s2, recoveryParam });
  }
};
EC.prototype.verify = function verify2(msg, signature$1, key2, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key2 = this.keyFromPublic(key2, enc);
  signature$1 = new signature(signature$1, "hex");
  var r2 = signature$1.r;
  var s2 = signature$1.s;
  if (r2.cmpn(1) < 0 || r2.cmp(this.n) >= 0)
    return false;
  if (s2.cmpn(1) < 0 || s2.cmp(this.n) >= 0)
    return false;
  var sinv = s2.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r2).umod(this.n);
  var p;
  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key2.getPublic(), u2);
    if (p.isInfinity())
      return false;
    return p.getX().umod(this.n).cmp(r2) === 0;
  }
  p = this.g.jmulAdd(u1, key2.getPublic(), u2);
  if (p.isInfinity())
    return false;
  return p.eqXToP(r2);
};
EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
  assert$5((3 & j) === j, "The recovery param is more than two bits");
  signature$1 = new signature(signature$1, enc);
  var n = this.n;
  var e = new BN(msg);
  var r2 = signature$1.r;
  var s2 = signature$1.s;
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r2.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error("Unable to find sencond key candinate");
  if (isSecondKey)
    r2 = this.curve.pointFromX(r2.add(this.curve.n), isYOdd);
  else
    r2 = this.curve.pointFromX(r2, isYOdd);
  var rInv = signature$1.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s22 = s2.mul(rInv).umod(n);
  return this.g.mulAdd(s1, r2, s22);
};
EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
  signature$1 = new signature(signature$1, enc);
  if (signature$1.recoveryParam !== null)
    return signature$1.recoveryParam;
  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature$1, i);
    } catch (e2) {
      continue;
    }
    if (Qprime.eq(Q))
      return i;
  }
  throw new Error("Unable to find valid recovery factor");
};
var elliptic_1 = createCommonjsModule(function(module, exports) {
  var elliptic = exports;
  elliptic.version = { version: "6.5.4" }.version;
  elliptic.utils = utils_1$1;
  elliptic.rand = function() {
    throw new Error("unsupported");
  };
  elliptic.curve = curve_1;
  elliptic.curves = curves_1;
  elliptic.ec = ec;
  elliptic.eddsa = null;
});
var EC$1 = elliptic_1.ec;
const version$6 = "signing-key/5.7.0";
const logger$7 = new Logger(version$6);
let _curve = null;
function getCurve() {
  if (!_curve) {
    _curve = new EC$1("secp256k1");
  }
  return _curve;
}
class SigningKey {
  constructor(privateKey) {
    defineReadOnly(this, "curve", "secp256k1");
    defineReadOnly(this, "privateKey", hexlify(privateKey));
    if (hexDataLength(this.privateKey) !== 32) {
      logger$7.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    }
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    defineReadOnly(this, "publicKey", "0x" + keyPair2.getPublic(false, "hex"));
    defineReadOnly(this, "compressedPublicKey", "0x" + keyPair2.getPublic(true, "hex"));
    defineReadOnly(this, "_isSigningKey", true);
  }
  _addPoint(other) {
    const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));
    const p1 = getCurve().keyFromPublic(arrayify(other));
    return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
  }
  signDigest(digest9) {
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    const digestBytes = arrayify(digest9);
    if (digestBytes.length !== 32) {
      logger$7.throwArgumentError("bad digest length", "digest", digest9);
    }
    const signature2 = keyPair2.sign(digestBytes, { canonical: true });
    return splitSignature({
      recoveryParam: signature2.recoveryParam,
      r: hexZeroPad("0x" + signature2.r.toString(16), 32),
      s: hexZeroPad("0x" + signature2.s.toString(16), 32)
    });
  }
  computeSharedSecret(otherKey) {
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
    return hexZeroPad("0x" + keyPair2.derive(otherKeyPair.getPublic()).toString(16), 32);
  }
  static isSigningKey(value) {
    return !!(value && value._isSigningKey);
  }
}
function recoverPublicKey(digest9, signature2) {
  const sig = splitSignature(signature2);
  const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };
  return "0x" + getCurve().recoverPubKey(arrayify(digest9), rs, sig.recoveryParam).encode("hex", false);
}
function computePublicKey(key2, compressed) {
  const bytes = arrayify(key2);
  if (bytes.length === 32) {
    const signingKey = new SigningKey(bytes);
    if (compressed) {
      return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
    }
    return signingKey.publicKey;
  } else if (bytes.length === 33) {
    if (compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
  } else if (bytes.length === 65) {
    if (!compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
  }
  return logger$7.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
const version$5 = "transactions/5.7.0";
const logger$6 = new Logger(version$5);
var TransactionTypes;
(function(TransactionTypes2) {
  TransactionTypes2[TransactionTypes2["legacy"] = 0] = "legacy";
  TransactionTypes2[TransactionTypes2["eip2930"] = 1] = "eip2930";
  TransactionTypes2[TransactionTypes2["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));
function handleAddress(value) {
  if (value === "0x") {
    return null;
  }
  return getAddress$1(value);
}
function handleNumber(value) {
  if (value === "0x") {
    return Zero$1;
  }
  return BigNumber.from(value);
}
function computeAddress(key2) {
  const publicKey = computePublicKey(key2);
  return getAddress$1(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));
}
function recoverAddress(digest9, signature2) {
  return computeAddress(recoverPublicKey(arrayify(digest9), signature2));
}
function formatNumber$1(value, name2) {
  const result = stripZeros(BigNumber.from(value).toHexString());
  if (result.length > 32) {
    logger$6.throwArgumentError("invalid length for " + name2, "transaction:" + name2, value);
  }
  return result;
}
function accessSetify(addr, storageKeys) {
  return {
    address: getAddress$1(addr),
    storageKeys: (storageKeys || []).map((storageKey, index) => {
      if (hexDataLength(storageKey) !== 32) {
        logger$6.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey);
      }
      return storageKey.toLowerCase();
    })
  };
}
function accessListify(value) {
  if (Array.isArray(value)) {
    return value.map((set, index) => {
      if (Array.isArray(set)) {
        if (set.length > 2) {
          logger$6.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set);
        }
        return accessSetify(set[0], set[1]);
      }
      return accessSetify(set.address, set.storageKeys);
    });
  }
  const result = Object.keys(value).map((addr) => {
    const storageKeys = value[addr].reduce((accum, storageKey) => {
      accum[storageKey] = true;
      return accum;
    }, {});
    return accessSetify(addr, Object.keys(storageKeys).sort());
  });
  result.sort((a, b) => a.address.localeCompare(b.address));
  return result;
}
function formatAccessList(value) {
  return accessListify(value).map((set) => [set.address, set.storageKeys]);
}
function _serializeEip1559(transaction, signature2) {
  if (transaction.gasPrice != null) {
    const gasPrice = BigNumber.from(transaction.gasPrice);
    const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);
    if (!gasPrice.eq(maxFeePerGas)) {
      logger$6.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
        gasPrice,
        maxFeePerGas
      });
    }
  }
  const fields = [
    formatNumber$1(transaction.chainId || 0, "chainId"),
    formatNumber$1(transaction.nonce || 0, "nonce"),
    formatNumber$1(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
    formatNumber$1(transaction.maxFeePerGas || 0, "maxFeePerGas"),
    formatNumber$1(transaction.gasLimit || 0, "gasLimit"),
    transaction.to != null ? getAddress$1(transaction.to) : "0x",
    formatNumber$1(transaction.value || 0, "value"),
    transaction.data || "0x",
    formatAccessList(transaction.accessList || [])
  ];
  if (signature2) {
    const sig = splitSignature(signature2);
    fields.push(formatNumber$1(sig.recoveryParam, "recoveryParam"));
    fields.push(stripZeros(sig.r));
    fields.push(stripZeros(sig.s));
  }
  return hexConcat(["0x02", encode$2(fields)]);
}
function _serializeEip2930(transaction, signature2) {
  const fields = [
    formatNumber$1(transaction.chainId || 0, "chainId"),
    formatNumber$1(transaction.nonce || 0, "nonce"),
    formatNumber$1(transaction.gasPrice || 0, "gasPrice"),
    formatNumber$1(transaction.gasLimit || 0, "gasLimit"),
    transaction.to != null ? getAddress$1(transaction.to) : "0x",
    formatNumber$1(transaction.value || 0, "value"),
    transaction.data || "0x",
    formatAccessList(transaction.accessList || [])
  ];
  if (signature2) {
    const sig = splitSignature(signature2);
    fields.push(formatNumber$1(sig.recoveryParam, "recoveryParam"));
    fields.push(stripZeros(sig.r));
    fields.push(stripZeros(sig.s));
  }
  return hexConcat(["0x01", encode$2(fields)]);
}
function _parseEipSignature(tx, fields, serialize) {
  try {
    const recid = handleNumber(fields[0]).toNumber();
    if (recid !== 0 && recid !== 1) {
      throw new Error("bad recid");
    }
    tx.v = recid;
  } catch (error) {
    logger$6.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
  }
  tx.r = hexZeroPad(fields[1], 32);
  tx.s = hexZeroPad(fields[2], 32);
  try {
    const digest9 = keccak256(serialize(tx));
    tx.from = recoverAddress(digest9, { r: tx.r, s: tx.s, recoveryParam: tx.v });
  } catch (error) {
  }
}
function _parseEip1559(payload) {
  const transaction = decode$2(payload.slice(1));
  if (transaction.length !== 9 && transaction.length !== 12) {
    logger$6.throwArgumentError("invalid component count for transaction type: 2", "payload", hexlify(payload));
  }
  const maxPriorityFeePerGas = handleNumber(transaction[2]);
  const maxFeePerGas = handleNumber(transaction[3]);
  const tx = {
    type: 2,
    chainId: handleNumber(transaction[0]).toNumber(),
    nonce: handleNumber(transaction[1]).toNumber(),
    maxPriorityFeePerGas,
    maxFeePerGas,
    gasPrice: null,
    gasLimit: handleNumber(transaction[4]),
    to: handleAddress(transaction[5]),
    value: handleNumber(transaction[6]),
    data: transaction[7],
    accessList: accessListify(transaction[8])
  };
  if (transaction.length === 9) {
    return tx;
  }
  tx.hash = keccak256(payload);
  _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);
  return tx;
}
function _parseEip2930(payload) {
  const transaction = decode$2(payload.slice(1));
  if (transaction.length !== 8 && transaction.length !== 11) {
    logger$6.throwArgumentError("invalid component count for transaction type: 1", "payload", hexlify(payload));
  }
  const tx = {
    type: 1,
    chainId: handleNumber(transaction[0]).toNumber(),
    nonce: handleNumber(transaction[1]).toNumber(),
    gasPrice: handleNumber(transaction[2]),
    gasLimit: handleNumber(transaction[3]),
    to: handleAddress(transaction[4]),
    value: handleNumber(transaction[5]),
    data: transaction[6],
    accessList: accessListify(transaction[7])
  };
  if (transaction.length === 8) {
    return tx;
  }
  tx.hash = keccak256(payload);
  _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);
  return tx;
}
function _parse(rawTransaction) {
  const transaction = decode$2(rawTransaction);
  if (transaction.length !== 9 && transaction.length !== 6) {
    logger$6.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
  }
  const tx = {
    nonce: handleNumber(transaction[0]).toNumber(),
    gasPrice: handleNumber(transaction[1]),
    gasLimit: handleNumber(transaction[2]),
    to: handleAddress(transaction[3]),
    value: handleNumber(transaction[4]),
    data: transaction[5],
    chainId: 0
  };
  if (transaction.length === 6) {
    return tx;
  }
  try {
    tx.v = BigNumber.from(transaction[6]).toNumber();
  } catch (error) {
    return tx;
  }
  tx.r = hexZeroPad(transaction[7], 32);
  tx.s = hexZeroPad(transaction[8], 32);
  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {
    tx.chainId = tx.v;
    tx.v = 0;
  } else {
    tx.chainId = Math.floor((tx.v - 35) / 2);
    if (tx.chainId < 0) {
      tx.chainId = 0;
    }
    let recoveryParam = tx.v - 27;
    const raw = transaction.slice(0, 6);
    if (tx.chainId !== 0) {
      raw.push(hexlify(tx.chainId));
      raw.push("0x");
      raw.push("0x");
      recoveryParam -= tx.chainId * 2 + 8;
    }
    const digest9 = keccak256(encode$2(raw));
    try {
      tx.from = recoverAddress(digest9, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam });
    } catch (error) {
    }
    tx.hash = keccak256(rawTransaction);
  }
  tx.type = null;
  return tx;
}
function parse(rawTransaction) {
  const payload = arrayify(rawTransaction);
  if (payload[0] > 127) {
    return _parse(payload);
  }
  switch (payload[0]) {
    case 1:
      return _parseEip2930(payload);
    case 2:
      return _parseEip1559(payload);
  }
  return logger$6.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {
    operation: "parseTransaction",
    transactionType: payload[0]
  });
}
class BaseX {
  constructor(alphabet) {
    defineReadOnly(this, "alphabet", alphabet);
    defineReadOnly(this, "base", alphabet.length);
    defineReadOnly(this, "_alphabetMap", {});
    defineReadOnly(this, "_leader", alphabet.charAt(0));
    for (let i = 0; i < alphabet.length; i++) {
      this._alphabetMap[alphabet.charAt(i)] = i;
    }
  }
  encode(value) {
    let source = arrayify(value);
    if (source.length === 0) {
      return "";
    }
    let digits = [0];
    for (let i = 0; i < source.length; ++i) {
      let carry = source[i];
      for (let j = 0; j < digits.length; ++j) {
        carry += digits[j] << 8;
        digits[j] = carry % this.base;
        carry = carry / this.base | 0;
      }
      while (carry > 0) {
        digits.push(carry % this.base);
        carry = carry / this.base | 0;
      }
    }
    let string = "";
    for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {
      string += this._leader;
    }
    for (let q = digits.length - 1; q >= 0; --q) {
      string += this.alphabet[digits[q]];
    }
    return string;
  }
  decode(value) {
    if (typeof value !== "string") {
      throw new TypeError("Expected String");
    }
    let bytes = [];
    if (value.length === 0) {
      return new Uint8Array(bytes);
    }
    bytes.push(0);
    for (let i = 0; i < value.length; i++) {
      let byte = this._alphabetMap[value[i]];
      if (byte === void 0) {
        throw new Error("Non-base" + this.base + " character");
      }
      let carry = byte;
      for (let j = 0; j < bytes.length; ++j) {
        carry += bytes[j] * this.base;
        bytes[j] = carry & 255;
        carry >>= 8;
      }
      while (carry > 0) {
        bytes.push(carry & 255);
        carry >>= 8;
      }
    }
    for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
      bytes.push(0);
    }
    return arrayify(new Uint8Array(bytes.reverse()));
  }
}
new BaseX("abcdefghijklmnopqrstuvwxyz234567");
const Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
const version$4 = "sha2/5.7.0";
new Logger(version$4);
function sha256(data) {
  return "0x" + hash.sha256().update(arrayify(data)).digest("hex");
}
const version$3 = "networks/5.7.1";
const logger$5 = new Logger(version$3);
function isRenetworkable(value) {
  return value && typeof value.renetwork === "function";
}
function ethDefaultProvider(network) {
  const func = function(providers, options2) {
    if (options2 == null) {
      options2 = {};
    }
    const providerList = [];
    if (providers.InfuraProvider && options2.infura !== "-") {
      try {
        providerList.push(new providers.InfuraProvider(network, options2.infura));
      } catch (error) {
      }
    }
    if (providers.EtherscanProvider && options2.etherscan !== "-") {
      try {
        providerList.push(new providers.EtherscanProvider(network, options2.etherscan));
      } catch (error) {
      }
    }
    if (providers.AlchemyProvider && options2.alchemy !== "-") {
      try {
        providerList.push(new providers.AlchemyProvider(network, options2.alchemy));
      } catch (error) {
      }
    }
    if (providers.PocketProvider && options2.pocket !== "-") {
      const skip = ["goerli", "ropsten", "rinkeby", "sepolia"];
      try {
        const provider = new providers.PocketProvider(network, options2.pocket);
        if (provider.network && skip.indexOf(provider.network.name) === -1) {
          providerList.push(provider);
        }
      } catch (error) {
      }
    }
    if (providers.CloudflareProvider && options2.cloudflare !== "-") {
      try {
        providerList.push(new providers.CloudflareProvider(network));
      } catch (error) {
      }
    }
    if (providers.AnkrProvider && options2.ankr !== "-") {
      try {
        const skip = ["ropsten"];
        const provider = new providers.AnkrProvider(network, options2.ankr);
        if (provider.network && skip.indexOf(provider.network.name) === -1) {
          providerList.push(provider);
        }
      } catch (error) {
      }
    }
    if (providerList.length === 0) {
      return null;
    }
    if (providers.FallbackProvider) {
      let quorum = 1;
      if (options2.quorum != null) {
        quorum = options2.quorum;
      } else if (network === "homestead") {
        quorum = 2;
      }
      return new providers.FallbackProvider(providerList, quorum);
    }
    return providerList[0];
  };
  func.renetwork = function(network2) {
    return ethDefaultProvider(network2);
  };
  return func;
}
function etcDefaultProvider(url, network) {
  const func = function(providers, options2) {
    if (providers.JsonRpcProvider) {
      return new providers.JsonRpcProvider(url, network);
    }
    return null;
  };
  func.renetwork = function(network2) {
    return etcDefaultProvider(url, network2);
  };
  return func;
}
const homestead = {
  chainId: 1,
  ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
  name: "homestead",
  _defaultProvider: ethDefaultProvider("homestead")
};
const ropsten = {
  chainId: 3,
  ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
  name: "ropsten",
  _defaultProvider: ethDefaultProvider("ropsten")
};
const classicMordor = {
  chainId: 63,
  name: "classicMordor",
  _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
};
const networks = {
  unspecified: { chainId: 0, name: "unspecified" },
  homestead,
  mainnet: homestead,
  morden: { chainId: 2, name: "morden" },
  ropsten,
  testnet: ropsten,
  rinkeby: {
    chainId: 4,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "rinkeby",
    _defaultProvider: ethDefaultProvider("rinkeby")
  },
  kovan: {
    chainId: 42,
    name: "kovan",
    _defaultProvider: ethDefaultProvider("kovan")
  },
  goerli: {
    chainId: 5,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "goerli",
    _defaultProvider: ethDefaultProvider("goerli")
  },
  kintsugi: { chainId: 1337702, name: "kintsugi" },
  sepolia: {
    chainId: 11155111,
    name: "sepolia",
    _defaultProvider: ethDefaultProvider("sepolia")
  },
  classic: {
    chainId: 61,
    name: "classic",
    _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/etc", "classic")
  },
  classicMorden: { chainId: 62, name: "classicMorden" },
  classicMordor,
  classicTestnet: classicMordor,
  classicKotti: {
    chainId: 6,
    name: "classicKotti",
    _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/kotti", "classicKotti")
  },
  xdai: { chainId: 100, name: "xdai" },
  matic: {
    chainId: 137,
    name: "matic",
    _defaultProvider: ethDefaultProvider("matic")
  },
  maticmum: { chainId: 80001, name: "maticmum" },
  optimism: {
    chainId: 10,
    name: "optimism",
    _defaultProvider: ethDefaultProvider("optimism")
  },
  "optimism-kovan": { chainId: 69, name: "optimism-kovan" },
  "optimism-goerli": { chainId: 420, name: "optimism-goerli" },
  arbitrum: { chainId: 42161, name: "arbitrum" },
  "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" },
  "arbitrum-goerli": { chainId: 421613, name: "arbitrum-goerli" },
  bnb: { chainId: 56, name: "bnb" },
  bnbt: { chainId: 97, name: "bnbt" }
};
function getNetwork(network) {
  if (network == null) {
    return null;
  }
  if (typeof network === "number") {
    for (const name2 in networks) {
      const standard2 = networks[name2];
      if (standard2.chainId === network) {
        return {
          name: standard2.name,
          chainId: standard2.chainId,
          ensAddress: standard2.ensAddress || null,
          _defaultProvider: standard2._defaultProvider || null
        };
      }
    }
    return {
      chainId: network,
      name: "unknown"
    };
  }
  if (typeof network === "string") {
    const standard2 = networks[network];
    if (standard2 == null) {
      return null;
    }
    return {
      name: standard2.name,
      chainId: standard2.chainId,
      ensAddress: standard2.ensAddress,
      _defaultProvider: standard2._defaultProvider || null
    };
  }
  const standard = networks[network.name];
  if (!standard) {
    if (typeof network.chainId !== "number") {
      logger$5.throwArgumentError("invalid network chainId", "network", network);
    }
    return network;
  }
  if (network.chainId !== 0 && network.chainId !== standard.chainId) {
    logger$5.throwArgumentError("network chainId mismatch", "network", network);
  }
  let defaultProvider = network._defaultProvider || null;
  if (defaultProvider == null && standard._defaultProvider) {
    if (isRenetworkable(standard._defaultProvider)) {
      defaultProvider = standard._defaultProvider.renetwork(network);
    } else {
      defaultProvider = standard._defaultProvider;
    }
  }
  return {
    name: network.name,
    chainId: standard.chainId,
    ensAddress: network.ensAddress || standard.ensAddress || null,
    _defaultProvider: defaultProvider
  };
}
const version$2 = "web/5.7.1";
var __awaiter$3 = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
function getUrl(href, options2) {
  return __awaiter$3(this, void 0, void 0, function* () {
    if (options2 == null) {
      options2 = {};
    }
    const request = {
      method: options2.method || "GET",
      headers: options2.headers || {},
      body: options2.body || void 0
    };
    if (options2.skipFetchSetup !== true) {
      request.mode = "cors";
      request.cache = "no-cache";
      request.credentials = "same-origin";
      request.redirect = "follow";
      request.referrer = "client";
    }
    if (options2.fetchOptions != null) {
      const opts = options2.fetchOptions;
      if (opts.mode) {
        request.mode = opts.mode;
      }
      if (opts.cache) {
        request.cache = opts.cache;
      }
      if (opts.credentials) {
        request.credentials = opts.credentials;
      }
      if (opts.redirect) {
        request.redirect = opts.redirect;
      }
      if (opts.referrer) {
        request.referrer = opts.referrer;
      }
    }
    const response = yield fetch(href, request);
    const body = yield response.arrayBuffer();
    const headers = {};
    if (response.headers.forEach) {
      response.headers.forEach((value, key2) => {
        headers[key2.toLowerCase()] = value;
      });
    } else {
      response.headers.keys().forEach((key2) => {
        headers[key2.toLowerCase()] = response.headers.get(key2);
      });
    }
    return {
      headers,
      statusCode: response.status,
      statusMessage: response.statusText,
      body: arrayify(new Uint8Array(body))
    };
  });
}
var __awaiter$2 = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const logger$4 = new Logger(version$2);
function staller(duration) {
  return new Promise((resolve) => {
    setTimeout(resolve, duration);
  });
}
function bodyify(value, type) {
  if (value == null) {
    return null;
  }
  if (typeof value === "string") {
    return value;
  }
  if (isBytesLike(value)) {
    if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) {
      try {
        return toUtf8String(value);
      } catch (error) {
      }
    }
    return hexlify(value);
  }
  return value;
}
function unpercent(value) {
  return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {
    return String.fromCharCode(parseInt(code, 16));
  }));
}
function _fetchData(connection, body, processFunc) {
  const attemptLimit = typeof connection === "object" && connection.throttleLimit != null ? connection.throttleLimit : 12;
  logger$4.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
  const throttleCallback = typeof connection === "object" ? connection.throttleCallback : null;
  const throttleSlotInterval = typeof connection === "object" && typeof connection.throttleSlotInterval === "number" ? connection.throttleSlotInterval : 100;
  logger$4.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
  const errorPassThrough = typeof connection === "object" ? !!connection.errorPassThrough : false;
  const headers = {};
  let url = null;
  const options2 = {
    method: "GET"
  };
  let allow304 = false;
  let timeout = 2 * 60 * 1e3;
  if (typeof connection === "string") {
    url = connection;
  } else if (typeof connection === "object") {
    if (connection == null || connection.url == null) {
      logger$4.throwArgumentError("missing URL", "connection.url", connection);
    }
    url = connection.url;
    if (typeof connection.timeout === "number" && connection.timeout > 0) {
      timeout = connection.timeout;
    }
    if (connection.headers) {
      for (const key2 in connection.headers) {
        headers[key2.toLowerCase()] = { key: key2, value: String(connection.headers[key2]) };
        if (["if-none-match", "if-modified-since"].indexOf(key2.toLowerCase()) >= 0) {
          allow304 = true;
        }
      }
    }
    options2.allowGzip = !!connection.allowGzip;
    if (connection.user != null && connection.password != null) {
      if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) {
        logger$4.throwError("basic authentication requires a secure https url", Logger.errors.INVALID_ARGUMENT, { argument: "url", url, user: connection.user, password: "[REDACTED]" });
      }
      const authorization = connection.user + ":" + connection.password;
      headers["authorization"] = {
        key: "Authorization",
        value: "Basic " + encode$1(toUtf8Bytes(authorization))
      };
    }
    if (connection.skipFetchSetup != null) {
      options2.skipFetchSetup = !!connection.skipFetchSetup;
    }
    if (connection.fetchOptions != null) {
      options2.fetchOptions = shallowCopy(connection.fetchOptions);
    }
  }
  const reData = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i");
  const dataMatch = url ? url.match(reData) : null;
  if (dataMatch) {
    try {
      const response = {
        statusCode: 200,
        statusMessage: "OK",
        headers: { "content-type": dataMatch[1] || "text/plain" },
        body: dataMatch[2] ? decode$1(dataMatch[3]) : unpercent(dataMatch[3])
      };
      let result = response.body;
      if (processFunc) {
        result = processFunc(response.body, response);
      }
      return Promise.resolve(result);
    } catch (error) {
      logger$4.throwError("processing response error", Logger.errors.SERVER_ERROR, {
        body: bodyify(dataMatch[1], dataMatch[2]),
        error,
        requestBody: null,
        requestMethod: "GET",
        url
      });
    }
  }
  if (body) {
    options2.method = "POST";
    options2.body = body;
    if (headers["content-type"] == null) {
      headers["content-type"] = { key: "Content-Type", value: "application/octet-stream" };
    }
    if (headers["content-length"] == null) {
      headers["content-length"] = { key: "Content-Length", value: String(body.length) };
    }
  }
  const flatHeaders = {};
  Object.keys(headers).forEach((key2) => {
    const header = headers[key2];
    flatHeaders[header.key] = header.value;
  });
  options2.headers = flatHeaders;
  const runningTimeout = function() {
    let timer2 = null;
    const promise = new Promise(function(resolve, reject) {
      if (timeout) {
        timer2 = setTimeout(() => {
          if (timer2 == null) {
            return;
          }
          timer2 = null;
          reject(logger$4.makeError("timeout", Logger.errors.TIMEOUT, {
            requestBody: bodyify(options2.body, flatHeaders["content-type"]),
            requestMethod: options2.method,
            timeout,
            url
          }));
        }, timeout);
      }
    });
    const cancel = function() {
      if (timer2 == null) {
        return;
      }
      clearTimeout(timer2);
      timer2 = null;
    };
    return { promise, cancel };
  }();
  const runningFetch = function() {
    return __awaiter$2(this, void 0, void 0, function* () {
      for (let attempt = 0; attempt < attemptLimit; attempt++) {
        let response = null;
        try {
          response = yield getUrl(url, options2);
          if (attempt < attemptLimit) {
            if (response.statusCode === 301 || response.statusCode === 302) {
              const location = response.headers.location || "";
              if (options2.method === "GET" && location.match(/^https:/)) {
                url = response.headers.location;
                continue;
              }
            } else if (response.statusCode === 429) {
              let tryAgain = true;
              if (throttleCallback) {
                tryAgain = yield throttleCallback(attempt, url);
              }
              if (tryAgain) {
                let stall2 = 0;
                const retryAfter = response.headers["retry-after"];
                if (typeof retryAfter === "string" && retryAfter.match(/^[1-9][0-9]*$/)) {
                  stall2 = parseInt(retryAfter) * 1e3;
                } else {
                  stall2 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                }
                yield staller(stall2);
                continue;
              }
            }
          }
        } catch (error) {
          response = error.response;
          if (response == null) {
            runningTimeout.cancel();
            logger$4.throwError("missing response", Logger.errors.SERVER_ERROR, {
              requestBody: bodyify(options2.body, flatHeaders["content-type"]),
              requestMethod: options2.method,
              serverError: error,
              url
            });
          }
        }
        let body2 = response.body;
        if (allow304 && response.statusCode === 304) {
          body2 = null;
        } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {
          runningTimeout.cancel();
          logger$4.throwError("bad response", Logger.errors.SERVER_ERROR, {
            status: response.statusCode,
            headers: response.headers,
            body: bodyify(body2, response.headers ? response.headers["content-type"] : null),
            requestBody: bodyify(options2.body, flatHeaders["content-type"]),
            requestMethod: options2.method,
            url
          });
        }
        if (processFunc) {
          try {
            const result = yield processFunc(body2, response);
            runningTimeout.cancel();
            return result;
          } catch (error) {
            if (error.throttleRetry && attempt < attemptLimit) {
              let tryAgain = true;
              if (throttleCallback) {
                tryAgain = yield throttleCallback(attempt, url);
              }
              if (tryAgain) {
                const timeout2 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                yield staller(timeout2);
                continue;
              }
            }
            runningTimeout.cancel();
            logger$4.throwError("processing response error", Logger.errors.SERVER_ERROR, {
              body: bodyify(body2, response.headers ? response.headers["content-type"] : null),
              error,
              requestBody: bodyify(options2.body, flatHeaders["content-type"]),
              requestMethod: options2.method,
              url
            });
          }
        }
        runningTimeout.cancel();
        return body2;
      }
      return logger$4.throwError("failed response", Logger.errors.SERVER_ERROR, {
        requestBody: bodyify(options2.body, flatHeaders["content-type"]),
        requestMethod: options2.method,
        url
      });
    });
  }();
  return Promise.race([runningTimeout.promise, runningFetch]);
}
function fetchJson(connection, json, processFunc) {
  let processJsonFunc = (value, response) => {
    let result = null;
    if (value != null) {
      try {
        result = JSON.parse(toUtf8String(value));
      } catch (error) {
        logger$4.throwError("invalid JSON", Logger.errors.SERVER_ERROR, {
          body: value,
          error
        });
      }
    }
    if (processFunc) {
      result = processFunc(result, response);
    }
    return result;
  };
  let body = null;
  if (json != null) {
    body = toUtf8Bytes(json);
    const updated = typeof connection === "string" ? { url: connection } : shallowCopy(connection);
    if (updated.headers) {
      const hasContentType = Object.keys(updated.headers).filter((k) => k.toLowerCase() === "content-type").length !== 0;
      if (!hasContentType) {
        updated.headers = shallowCopy(updated.headers);
        updated.headers["content-type"] = "application/json";
      }
    } else {
      updated.headers = { "content-type": "application/json" };
    }
    connection = updated;
  }
  return _fetchData(connection, body, processJsonFunc);
}
function poll(func, options2) {
  if (!options2) {
    options2 = {};
  }
  options2 = shallowCopy(options2);
  if (options2.floor == null) {
    options2.floor = 0;
  }
  if (options2.ceiling == null) {
    options2.ceiling = 1e4;
  }
  if (options2.interval == null) {
    options2.interval = 250;
  }
  return new Promise(function(resolve, reject) {
    let timer2 = null;
    let done = false;
    const cancel = () => {
      if (done) {
        return false;
      }
      done = true;
      if (timer2) {
        clearTimeout(timer2);
      }
      return true;
    };
    if (options2.timeout) {
      timer2 = setTimeout(() => {
        if (cancel()) {
          reject(new Error("timeout"));
        }
      }, options2.timeout);
    }
    const retryLimit = options2.retryLimit;
    let attempt = 0;
    function check() {
      return func().then(function(result) {
        if (result !== void 0) {
          if (cancel()) {
            resolve(result);
          }
        } else if (options2.oncePoll) {
          options2.oncePoll.once("poll", check);
        } else if (options2.onceBlock) {
          options2.onceBlock.once("block", check);
        } else if (!done) {
          attempt++;
          if (attempt > retryLimit) {
            if (cancel()) {
              reject(new Error("retry limit reached"));
            }
            return;
          }
          let timeout = options2.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
          if (timeout < options2.floor) {
            timeout = options2.floor;
          }
          if (timeout > options2.ceiling) {
            timeout = options2.ceiling;
          }
          setTimeout(check, timeout);
        }
        return null;
      }, function(error) {
        if (cancel()) {
          reject(error);
        }
      });
    }
    check();
  });
}
var ALPHABET = "qpzry9x8gf2tvdw0s3jn54khce6mua7l";
var ALPHABET_MAP = {};
for (var z = 0; z < ALPHABET.length; z++) {
  var x = ALPHABET.charAt(z);
  if (ALPHABET_MAP[x] !== void 0)
    throw new TypeError(x + " is ambiguous");
  ALPHABET_MAP[x] = z;
}
function polymodStep(pre) {
  var b = pre >> 25;
  return (pre & 33554431) << 5 ^ -(b >> 0 & 1) & 996825010 ^ -(b >> 1 & 1) & 642813549 ^ -(b >> 2 & 1) & 513874426 ^ -(b >> 3 & 1) & 1027748829 ^ -(b >> 4 & 1) & 705979059;
}
function prefixChk(prefix) {
  var chk = 1;
  for (var i = 0; i < prefix.length; ++i) {
    var c = prefix.charCodeAt(i);
    if (c < 33 || c > 126)
      return "Invalid prefix (" + prefix + ")";
    chk = polymodStep(chk) ^ c >> 5;
  }
  chk = polymodStep(chk);
  for (i = 0; i < prefix.length; ++i) {
    var v = prefix.charCodeAt(i);
    chk = polymodStep(chk) ^ v & 31;
  }
  return chk;
}
function encode2(prefix, words, LIMIT) {
  LIMIT = LIMIT || 90;
  if (prefix.length + 7 + words.length > LIMIT)
    throw new TypeError("Exceeds length limit");
  prefix = prefix.toLowerCase();
  var chk = prefixChk(prefix);
  if (typeof chk === "string")
    throw new Error(chk);
  var result = prefix + "1";
  for (var i = 0; i < words.length; ++i) {
    var x = words[i];
    if (x >> 5 !== 0)
      throw new Error("Non 5-bit word");
    chk = polymodStep(chk) ^ x;
    result += ALPHABET.charAt(x);
  }
  for (i = 0; i < 6; ++i) {
    chk = polymodStep(chk);
  }
  chk ^= 1;
  for (i = 0; i < 6; ++i) {
    var v = chk >> (5 - i) * 5 & 31;
    result += ALPHABET.charAt(v);
  }
  return result;
}
function __decode(str, LIMIT) {
  LIMIT = LIMIT || 90;
  if (str.length < 8)
    return str + " too short";
  if (str.length > LIMIT)
    return "Exceeds length limit";
  var lowered = str.toLowerCase();
  var uppered = str.toUpperCase();
  if (str !== lowered && str !== uppered)
    return "Mixed-case string " + str;
  str = lowered;
  var split = str.lastIndexOf("1");
  if (split === -1)
    return "No separator character for " + str;
  if (split === 0)
    return "Missing prefix for " + str;
  var prefix = str.slice(0, split);
  var wordChars = str.slice(split + 1);
  if (wordChars.length < 6)
    return "Data too short";
  var chk = prefixChk(prefix);
  if (typeof chk === "string")
    return chk;
  var words = [];
  for (var i = 0; i < wordChars.length; ++i) {
    var c = wordChars.charAt(i);
    var v = ALPHABET_MAP[c];
    if (v === void 0)
      return "Unknown character " + c;
    chk = polymodStep(chk) ^ v;
    if (i + 6 >= wordChars.length)
      continue;
    words.push(v);
  }
  if (chk !== 1)
    return "Invalid checksum for " + str;
  return { prefix, words };
}
function decodeUnsafe() {
  var res = __decode.apply(null, arguments);
  if (typeof res === "object")
    return res;
}
function decode(str) {
  var res = __decode.apply(null, arguments);
  if (typeof res === "object")
    return res;
  throw new Error(res);
}
function convert(data, inBits, outBits, pad2) {
  var value = 0;
  var bits = 0;
  var maxV = (1 << outBits) - 1;
  var result = [];
  for (var i = 0; i < data.length; ++i) {
    value = value << inBits | data[i];
    bits += inBits;
    while (bits >= outBits) {
      bits -= outBits;
      result.push(value >> bits & maxV);
    }
  }
  if (pad2) {
    if (bits > 0) {
      result.push(value << outBits - bits & maxV);
    }
  } else {
    if (bits >= inBits)
      return "Excess padding";
    if (value << outBits - bits & maxV)
      return "Non-zero padding";
  }
  return result;
}
function toWordsUnsafe(bytes) {
  var res = convert(bytes, 8, 5, true);
  if (Array.isArray(res))
    return res;
}
function toWords(bytes) {
  var res = convert(bytes, 8, 5, true);
  if (Array.isArray(res))
    return res;
  throw new Error(res);
}
function fromWordsUnsafe(words) {
  var res = convert(words, 5, 8, false);
  if (Array.isArray(res))
    return res;
}
function fromWords(words) {
  var res = convert(words, 5, 8, false);
  if (Array.isArray(res))
    return res;
  throw new Error(res);
}
var bech32 = {
  decodeUnsafe,
  decode,
  encode: encode2,
  toWordsUnsafe,
  toWords,
  fromWordsUnsafe,
  fromWords
};
const version$1 = "providers/5.7.2";
const logger$3 = new Logger(version$1);
class Formatter {
  constructor() {
    this.formats = this.getDefaultFormats();
  }
  getDefaultFormats() {
    const formats = {};
    const address = this.address.bind(this);
    const bigNumber = this.bigNumber.bind(this);
    const blockTag = this.blockTag.bind(this);
    const data = this.data.bind(this);
    const hash2 = this.hash.bind(this);
    const hex = this.hex.bind(this);
    const number = this.number.bind(this);
    const type = this.type.bind(this);
    const strictData = (v) => {
      return this.data(v, true);
    };
    formats.transaction = {
      hash: hash2,
      type,
      accessList: Formatter.allowNull(this.accessList.bind(this), null),
      blockHash: Formatter.allowNull(hash2, null),
      blockNumber: Formatter.allowNull(number, null),
      transactionIndex: Formatter.allowNull(number, null),
      confirmations: Formatter.allowNull(number, null),
      from: address,
      gasPrice: Formatter.allowNull(bigNumber),
      maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
      maxFeePerGas: Formatter.allowNull(bigNumber),
      gasLimit: bigNumber,
      to: Formatter.allowNull(address, null),
      value: bigNumber,
      nonce: number,
      data,
      r: Formatter.allowNull(this.uint256),
      s: Formatter.allowNull(this.uint256),
      v: Formatter.allowNull(number),
      creates: Formatter.allowNull(address, null),
      raw: Formatter.allowNull(data)
    };
    formats.transactionRequest = {
      from: Formatter.allowNull(address),
      nonce: Formatter.allowNull(number),
      gasLimit: Formatter.allowNull(bigNumber),
      gasPrice: Formatter.allowNull(bigNumber),
      maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
      maxFeePerGas: Formatter.allowNull(bigNumber),
      to: Formatter.allowNull(address),
      value: Formatter.allowNull(bigNumber),
      data: Formatter.allowNull(strictData),
      type: Formatter.allowNull(number),
      accessList: Formatter.allowNull(this.accessList.bind(this), null)
    };
    formats.receiptLog = {
      transactionIndex: number,
      blockNumber: number,
      transactionHash: hash2,
      address,
      topics: Formatter.arrayOf(hash2),
      data,
      logIndex: number,
      blockHash: hash2
    };
    formats.receipt = {
      to: Formatter.allowNull(this.address, null),
      from: Formatter.allowNull(this.address, null),
      contractAddress: Formatter.allowNull(address, null),
      transactionIndex: number,
      root: Formatter.allowNull(hex),
      gasUsed: bigNumber,
      logsBloom: Formatter.allowNull(data),
      blockHash: hash2,
      transactionHash: hash2,
      logs: Formatter.arrayOf(this.receiptLog.bind(this)),
      blockNumber: number,
      confirmations: Formatter.allowNull(number, null),
      cumulativeGasUsed: bigNumber,
      effectiveGasPrice: Formatter.allowNull(bigNumber),
      status: Formatter.allowNull(number),
      type
    };
    formats.block = {
      hash: Formatter.allowNull(hash2),
      parentHash: hash2,
      number,
      timestamp: number,
      nonce: Formatter.allowNull(hex),
      difficulty: this.difficulty.bind(this),
      gasLimit: bigNumber,
      gasUsed: bigNumber,
      miner: Formatter.allowNull(address),
      extraData: data,
      transactions: Formatter.allowNull(Formatter.arrayOf(hash2)),
      baseFeePerGas: Formatter.allowNull(bigNumber)
    };
    formats.blockWithTransactions = shallowCopy(formats.block);
    formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));
    formats.filter = {
      fromBlock: Formatter.allowNull(blockTag, void 0),
      toBlock: Formatter.allowNull(blockTag, void 0),
      blockHash: Formatter.allowNull(hash2, void 0),
      address: Formatter.allowNull(address, void 0),
      topics: Formatter.allowNull(this.topics.bind(this), void 0)
    };
    formats.filterLog = {
      blockNumber: Formatter.allowNull(number),
      blockHash: Formatter.allowNull(hash2),
      transactionIndex: number,
      removed: Formatter.allowNull(this.boolean.bind(this)),
      address,
      data: Formatter.allowFalsish(data, "0x"),
      topics: Formatter.arrayOf(hash2),
      transactionHash: hash2,
      logIndex: number
    };
    return formats;
  }
  accessList(accessList) {
    return accessListify(accessList || []);
  }
  number(number) {
    if (number === "0x") {
      return 0;
    }
    return BigNumber.from(number).toNumber();
  }
  type(number) {
    if (number === "0x" || number == null) {
      return 0;
    }
    return BigNumber.from(number).toNumber();
  }
  bigNumber(value) {
    return BigNumber.from(value);
  }
  boolean(value) {
    if (typeof value === "boolean") {
      return value;
    }
    if (typeof value === "string") {
      value = value.toLowerCase();
      if (value === "true") {
        return true;
      }
      if (value === "false") {
        return false;
      }
    }
    throw new Error("invalid boolean - " + value);
  }
  hex(value, strict) {
    if (typeof value === "string") {
      if (!strict && value.substring(0, 2) !== "0x") {
        value = "0x" + value;
      }
      if (isHexString(value)) {
        return value.toLowerCase();
      }
    }
    return logger$3.throwArgumentError("invalid hash", "value", value);
  }
  data(value, strict) {
    const result = this.hex(value, strict);
    if (result.length % 2 !== 0) {
      throw new Error("invalid data; odd-length - " + value);
    }
    return result;
  }
  address(value) {
    return getAddress$1(value);
  }
  callAddress(value) {
    if (!isHexString(value, 32)) {
      return null;
    }
    const address = getAddress$1(hexDataSlice(value, 12));
    return address === AddressZero ? null : address;
  }
  contractAddress(value) {
    return getContractAddress(value);
  }
  blockTag(blockTag) {
    if (blockTag == null) {
      return "latest";
    }
    if (blockTag === "earliest") {
      return "0x0";
    }
    switch (blockTag) {
      case "earliest":
        return "0x0";
      case "latest":
      case "pending":
      case "safe":
      case "finalized":
        return blockTag;
    }
    if (typeof blockTag === "number" || isHexString(blockTag)) {
      return hexValue(blockTag);
    }
    throw new Error("invalid blockTag");
  }
  hash(value, strict) {
    const result = this.hex(value, strict);
    if (hexDataLength(result) !== 32) {
      return logger$3.throwArgumentError("invalid hash", "value", value);
    }
    return result;
  }
  difficulty(value) {
    if (value == null) {
      return null;
    }
    const v = BigNumber.from(value);
    try {
      return v.toNumber();
    } catch (error) {
    }
    return null;
  }
  uint256(value) {
    if (!isHexString(value)) {
      throw new Error("invalid uint256");
    }
    return hexZeroPad(value, 32);
  }
  _block(value, format) {
    if (value.author != null && value.miner == null) {
      value.miner = value.author;
    }
    const difficulty = value._difficulty != null ? value._difficulty : value.difficulty;
    const result = Formatter.check(format, value);
    result._difficulty = difficulty == null ? null : BigNumber.from(difficulty);
    return result;
  }
  block(value) {
    return this._block(value, this.formats.block);
  }
  blockWithTransactions(value) {
    return this._block(value, this.formats.blockWithTransactions);
  }
  transactionRequest(value) {
    return Formatter.check(this.formats.transactionRequest, value);
  }
  transactionResponse(transaction) {
    if (transaction.gas != null && transaction.gasLimit == null) {
      transaction.gasLimit = transaction.gas;
    }
    if (transaction.to && BigNumber.from(transaction.to).isZero()) {
      transaction.to = "0x0000000000000000000000000000000000000000";
    }
    if (transaction.input != null && transaction.data == null) {
      transaction.data = transaction.input;
    }
    if (transaction.to == null && transaction.creates == null) {
      transaction.creates = this.contractAddress(transaction);
    }
    if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {
      transaction.accessList = [];
    }
    const result = Formatter.check(this.formats.transaction, transaction);
    if (transaction.chainId != null) {
      let chainId = transaction.chainId;
      if (isHexString(chainId)) {
        chainId = BigNumber.from(chainId).toNumber();
      }
      result.chainId = chainId;
    } else {
      let chainId = transaction.networkId;
      if (chainId == null && result.v == null) {
        chainId = transaction.chainId;
      }
      if (isHexString(chainId)) {
        chainId = BigNumber.from(chainId).toNumber();
      }
      if (typeof chainId !== "number" && result.v != null) {
        chainId = (result.v - 35) / 2;
        if (chainId < 0) {
          chainId = 0;
        }
        chainId = parseInt(chainId);
      }
      if (typeof chainId !== "number") {
        chainId = 0;
      }
      result.chainId = chainId;
    }
    if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") {
      result.blockHash = null;
    }
    return result;
  }
  transaction(value) {
    return parse(value);
  }
  receiptLog(value) {
    return Formatter.check(this.formats.receiptLog, value);
  }
  receipt(value) {
    const result = Formatter.check(this.formats.receipt, value);
    if (result.root != null) {
      if (result.root.length <= 4) {
        const value2 = BigNumber.from(result.root).toNumber();
        if (value2 === 0 || value2 === 1) {
          if (result.status != null && result.status !== value2) {
            logger$3.throwArgumentError("alt-root-status/status mismatch", "value", { root: result.root, status: result.status });
          }
          result.status = value2;
          delete result.root;
        } else {
          logger$3.throwArgumentError("invalid alt-root-status", "value.root", result.root);
        }
      } else if (result.root.length !== 66) {
        logger$3.throwArgumentError("invalid root hash", "value.root", result.root);
      }
    }
    if (result.status != null) {
      result.byzantium = true;
    }
    return result;
  }
  topics(value) {
    if (Array.isArray(value)) {
      return value.map((v) => this.topics(v));
    } else if (value != null) {
      return this.hash(value, true);
    }
    return null;
  }
  filter(value) {
    return Formatter.check(this.formats.filter, value);
  }
  filterLog(value) {
    return Formatter.check(this.formats.filterLog, value);
  }
  static check(format, object) {
    const result = {};
    for (const key2 in format) {
      try {
        const value = format[key2](object[key2]);
        if (value !== void 0) {
          result[key2] = value;
        }
      } catch (error) {
        error.checkKey = key2;
        error.checkValue = object[key2];
        throw error;
      }
    }
    return result;
  }
  static allowNull(format, nullValue) {
    return function(value) {
      if (value == null) {
        return nullValue;
      }
      return format(value);
    };
  }
  static allowFalsish(format, replaceValue) {
    return function(value) {
      if (!value) {
        return replaceValue;
      }
      return format(value);
    };
  }
  static arrayOf(format) {
    return function(array) {
      if (!Array.isArray(array)) {
        throw new Error("not an array");
      }
      const result = [];
      array.forEach(function(value) {
        result.push(format(value));
      });
      return result;
    };
  }
}
var __awaiter$1 = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const logger$2 = new Logger(version$1);
const MAX_CCIP_REDIRECTS = 10;
function checkTopic(topic) {
  if (topic == null) {
    return "null";
  }
  if (hexDataLength(topic) !== 32) {
    logger$2.throwArgumentError("invalid topic", "topic", topic);
  }
  return topic.toLowerCase();
}
function serializeTopics(topics) {
  topics = topics.slice();
  while (topics.length > 0 && topics[topics.length - 1] == null) {
    topics.pop();
  }
  return topics.map((topic) => {
    if (Array.isArray(topic)) {
      const unique = {};
      topic.forEach((topic2) => {
        unique[checkTopic(topic2)] = true;
      });
      const sorted = Object.keys(unique);
      sorted.sort();
      return sorted.join("|");
    } else {
      return checkTopic(topic);
    }
  }).join("&");
}
function deserializeTopics(data) {
  if (data === "") {
    return [];
  }
  return data.split(/&/g).map((topic) => {
    if (topic === "") {
      return [];
    }
    const comps = topic.split("|").map((topic2) => {
      return topic2 === "null" ? null : topic2;
    });
    return comps.length === 1 ? comps[0] : comps;
  });
}
function getEventTag(eventName) {
  if (typeof eventName === "string") {
    eventName = eventName.toLowerCase();
    if (hexDataLength(eventName) === 32) {
      return "tx:" + eventName;
    }
    if (eventName.indexOf(":") === -1) {
      return eventName;
    }
  } else if (Array.isArray(eventName)) {
    return "filter:*:" + serializeTopics(eventName);
  } else if (ForkEvent.isForkEvent(eventName)) {
    logger$2.warn("not implemented");
    throw new Error("not implemented");
  } else if (eventName && typeof eventName === "object") {
    return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
  }
  throw new Error("invalid event - " + eventName);
}
function getTime() {
  return new Date().getTime();
}
function stall(duration) {
  return new Promise((resolve) => {
    setTimeout(resolve, duration);
  });
}
const PollableEvents = ["block", "network", "pending", "poll"];
class Event$1 {
  constructor(tag, listener, once) {
    defineReadOnly(this, "tag", tag);
    defineReadOnly(this, "listener", listener);
    defineReadOnly(this, "once", once);
    this._lastBlockNumber = -2;
    this._inflight = false;
  }
  get event() {
    switch (this.type) {
      case "tx":
        return this.hash;
      case "filter":
        return this.filter;
    }
    return this.tag;
  }
  get type() {
    return this.tag.split(":")[0];
  }
  get hash() {
    const comps = this.tag.split(":");
    if (comps[0] !== "tx") {
      return null;
    }
    return comps[1];
  }
  get filter() {
    const comps = this.tag.split(":");
    if (comps[0] !== "filter") {
      return null;
    }
    const address = comps[1];
    const topics = deserializeTopics(comps[2]);
    const filter = {};
    if (topics.length > 0) {
      filter.topics = topics;
    }
    if (address && address !== "*") {
      filter.address = address;
    }
    return filter;
  }
  pollable() {
    return this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0;
  }
}
const coinInfos = {
  "0": { symbol: "btc", p2pkh: 0, p2sh: 5, prefix: "bc" },
  "2": { symbol: "ltc", p2pkh: 48, p2sh: 50, prefix: "ltc" },
  "3": { symbol: "doge", p2pkh: 30, p2sh: 22 },
  "60": { symbol: "eth", ilk: "eth" },
  "61": { symbol: "etc", ilk: "eth" },
  "700": { symbol: "xdai", ilk: "eth" }
};
function bytes32ify(value) {
  return hexZeroPad(BigNumber.from(value).toHexString(), 32);
}
function base58Encode(data) {
  return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));
}
const matcherIpfs = new RegExp("^(ipfs)://(.*)$", "i");
const matchers = [
  new RegExp("^(https)://(.*)$", "i"),
  new RegExp("^(data):(.*)$", "i"),
  matcherIpfs,
  new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")
];
function _parseString(result, start) {
  try {
    return toUtf8String(_parseBytes(result, start));
  } catch (error) {
  }
  return null;
}
function _parseBytes(result, start) {
  if (result === "0x") {
    return null;
  }
  const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();
  const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();
  return hexDataSlice(result, offset + 32, offset + 32 + length);
}
function getIpfsLink(link) {
  if (link.match(/^ipfs:\/\/ipfs\//i)) {
    link = link.substring(12);
  } else if (link.match(/^ipfs:\/\//i)) {
    link = link.substring(7);
  } else {
    logger$2.throwArgumentError("unsupported IPFS format", "link", link);
  }
  return `https://gateway.ipfs.io/ipfs/${link}`;
}
function numPad(value) {
  const result = arrayify(value);
  if (result.length > 32) {
    throw new Error("internal; should not happen");
  }
  const padded = new Uint8Array(32);
  padded.set(result, 32 - result.length);
  return padded;
}
function bytesPad(value) {
  if (value.length % 32 === 0) {
    return value;
  }
  const result = new Uint8Array(Math.ceil(value.length / 32) * 32);
  result.set(value);
  return result;
}
function encodeBytes(datas) {
  const result = [];
  let byteCount = 0;
  for (let i = 0; i < datas.length; i++) {
    result.push(null);
    byteCount += 32;
  }
  for (let i = 0; i < datas.length; i++) {
    const data = arrayify(datas[i]);
    result[i] = numPad(byteCount);
    result.push(numPad(data.length));
    result.push(bytesPad(data));
    byteCount += 32 + Math.ceil(data.length / 32) * 32;
  }
  return hexConcat(result);
}
class Resolver {
  constructor(provider, address, name2, resolvedAddress) {
    defineReadOnly(this, "provider", provider);
    defineReadOnly(this, "name", name2);
    defineReadOnly(this, "address", provider.formatter.address(address));
    defineReadOnly(this, "_resolvedAddress", resolvedAddress);
  }
  supportsWildcard() {
    if (!this._supportsEip2544) {
      this._supportsEip2544 = this.provider.call({
        to: this.address,
        data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
      }).then((result) => {
        return BigNumber.from(result).eq(1);
      }).catch((error) => {
        if (error.code === Logger.errors.CALL_EXCEPTION) {
          return false;
        }
        this._supportsEip2544 = null;
        throw error;
      });
    }
    return this._supportsEip2544;
  }
  _fetch(selector, parameters) {
    return __awaiter$1(this, void 0, void 0, function* () {
      const tx = {
        to: this.address,
        ccipReadEnabled: true,
        data: hexConcat([selector, namehash(this.name), parameters || "0x"])
      };
      let parseBytes = false;
      if (yield this.supportsWildcard()) {
        parseBytes = true;
        tx.data = hexConcat(["0x9061b923", encodeBytes([dnsEncode(this.name), tx.data])]);
      }
      try {
        let result = yield this.provider.call(tx);
        if (arrayify(result).length % 32 === 4) {
          logger$2.throwError("resolver threw error", Logger.errors.CALL_EXCEPTION, {
            transaction: tx,
            data: result
          });
        }
        if (parseBytes) {
          result = _parseBytes(result, 0);
        }
        return result;
      } catch (error) {
        if (error.code === Logger.errors.CALL_EXCEPTION) {
          return null;
        }
        throw error;
      }
    });
  }
  _fetchBytes(selector, parameters) {
    return __awaiter$1(this, void 0, void 0, function* () {
      const result = yield this._fetch(selector, parameters);
      if (result != null) {
        return _parseBytes(result, 0);
      }
      return null;
    });
  }
  _getAddress(coinType, hexBytes) {
    const coinInfo = coinInfos[String(coinType)];
    if (coinInfo == null) {
      logger$2.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {
        operation: `getAddress(${coinType})`
      });
    }
    if (coinInfo.ilk === "eth") {
      return this.provider.formatter.address(hexBytes);
    }
    const bytes = arrayify(hexBytes);
    if (coinInfo.p2pkh != null) {
      const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
      if (p2pkh) {
        const length = parseInt(p2pkh[1], 16);
        if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {
          return base58Encode(concat([[coinInfo.p2pkh], "0x" + p2pkh[2]]));
        }
      }
    }
    if (coinInfo.p2sh != null) {
      const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
      if (p2sh) {
        const length = parseInt(p2sh[1], 16);
        if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {
          return base58Encode(concat([[coinInfo.p2sh], "0x" + p2sh[2]]));
        }
      }
    }
    if (coinInfo.prefix != null) {
      const length = bytes[1];
      let version2 = bytes[0];
      if (version2 === 0) {
        if (length !== 20 && length !== 32) {
          version2 = -1;
        }
      } else {
        version2 = -1;
      }
      if (version2 >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {
        const words = bech32.toWords(bytes.slice(2));
        words.unshift(version2);
        return bech32.encode(coinInfo.prefix, words);
      }
    }
    return null;
  }
  getAddress(coinType) {
    return __awaiter$1(this, void 0, void 0, function* () {
      if (coinType == null) {
        coinType = 60;
      }
      if (coinType === 60) {
        try {
          const result = yield this._fetch("0x3b3b57de");
          if (result === "0x" || result === HashZero) {
            return null;
          }
          return this.provider.formatter.callAddress(result);
        } catch (error) {
          if (error.code === Logger.errors.CALL_EXCEPTION) {
            return null;
          }
          throw error;
        }
      }
      const hexBytes = yield this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));
      if (hexBytes == null || hexBytes === "0x") {
        return null;
      }
      const address = this._getAddress(coinType, hexBytes);
      if (address == null) {
        logger$2.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {
          operation: `getAddress(${coinType})`,
          coinType,
          data: hexBytes
        });
      }
      return address;
    });
  }
  getAvatar() {
    return __awaiter$1(this, void 0, void 0, function* () {
      const linkage = [{ type: "name", content: this.name }];
      try {
        const avatar = yield this.getText("avatar");
        if (avatar == null) {
          return null;
        }
        for (let i = 0; i < matchers.length; i++) {
          const match = avatar.match(matchers[i]);
          if (match == null) {
            continue;
          }
          const scheme = match[1].toLowerCase();
          switch (scheme) {
            case "https":
              linkage.push({ type: "url", content: avatar });
              return { linkage, url: avatar };
            case "data":
              linkage.push({ type: "data", content: avatar });
              return { linkage, url: avatar };
            case "ipfs":
              linkage.push({ type: "ipfs", content: avatar });
              return { linkage, url: getIpfsLink(avatar) };
            case "erc721":
            case "erc1155": {
              const selector = scheme === "erc721" ? "0xc87b56dd" : "0x0e89341c";
              linkage.push({ type: scheme, content: avatar });
              const owner = this._resolvedAddress || (yield this.getAddress());
              const comps = (match[2] || "").split("/");
              if (comps.length !== 2) {
                return null;
              }
              const addr = yield this.provider.formatter.address(comps[0]);
              const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);
              if (scheme === "erc721") {
                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({
                  to: addr,
                  data: hexConcat(["0x6352211e", tokenId])
                }));
                if (owner !== tokenOwner) {
                  return null;
                }
                linkage.push({ type: "owner", content: tokenOwner });
              } else if (scheme === "erc1155") {
                const balance = BigNumber.from(yield this.provider.call({
                  to: addr,
                  data: hexConcat(["0x00fdd58e", hexZeroPad(owner, 32), tokenId])
                }));
                if (balance.isZero()) {
                  return null;
                }
                linkage.push({ type: "balance", content: balance.toString() });
              }
              const tx = {
                to: this.provider.formatter.address(comps[0]),
                data: hexConcat([selector, tokenId])
              };
              let metadataUrl = _parseString(yield this.provider.call(tx), 0);
              if (metadataUrl == null) {
                return null;
              }
              linkage.push({ type: "metadata-url-base", content: metadataUrl });
              if (scheme === "erc1155") {
                metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                linkage.push({ type: "metadata-url-expanded", content: metadataUrl });
              }
              if (metadataUrl.match(/^ipfs:/i)) {
                metadataUrl = getIpfsLink(metadataUrl);
              }
              linkage.push({ type: "metadata-url", content: metadataUrl });
              const metadata = yield fetchJson(metadataUrl);
              if (!metadata) {
                return null;
              }
              linkage.push({ type: "metadata", content: JSON.stringify(metadata) });
              let imageUrl = metadata.image;
              if (typeof imageUrl !== "string") {
                return null;
              }
              if (imageUrl.match(/^(https:\/\/|data:)/i)) {
              } else {
                const ipfs = imageUrl.match(matcherIpfs);
                if (ipfs == null) {
                  return null;
                }
                linkage.push({ type: "url-ipfs", content: imageUrl });
                imageUrl = getIpfsLink(imageUrl);
              }
              linkage.push({ type: "url", content: imageUrl });
              return { linkage, url: imageUrl };
            }
          }
        }
      } catch (error) {
      }
      return null;
    });
  }
  getContentHash() {
    return __awaiter$1(this, void 0, void 0, function* () {
      const hexBytes = yield this._fetchBytes("0xbc1c58d1");
      if (hexBytes == null || hexBytes === "0x") {
        return null;
      }
      const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
      if (ipfs) {
        const length = parseInt(ipfs[3], 16);
        if (ipfs[4].length === length * 2) {
          return "ipfs://" + Base58.encode("0x" + ipfs[1]);
        }
      }
      const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
      if (ipns) {
        const length = parseInt(ipns[3], 16);
        if (ipns[4].length === length * 2) {
          return "ipns://" + Base58.encode("0x" + ipns[1]);
        }
      }
      const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
      if (swarm) {
        if (swarm[1].length === 32 * 2) {
          return "bzz://" + swarm[1];
        }
      }
      const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);
      if (skynet) {
        if (skynet[1].length === 34 * 2) {
          const urlSafe = { "=": "", "+": "-", "/": "_" };
          const hash2 = encode$1("0x" + skynet[1]).replace(/[=+\/]/g, (a) => urlSafe[a]);
          return "sia://" + hash2;
        }
      }
      return logger$2.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "getContentHash()",
        data: hexBytes
      });
    });
  }
  getText(key2) {
    return __awaiter$1(this, void 0, void 0, function* () {
      let keyBytes = toUtf8Bytes(key2);
      keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);
      if (keyBytes.length % 32 !== 0) {
        keyBytes = concat([keyBytes, hexZeroPad("0x", 32 - key2.length % 32)]);
      }
      const hexBytes = yield this._fetchBytes("0x59d1d43c", hexlify(keyBytes));
      if (hexBytes == null || hexBytes === "0x") {
        return null;
      }
      return toUtf8String(hexBytes);
    });
  }
}
let defaultFormatter = null;
let nextPollId = 1;
class BaseProvider extends Provider {
  constructor(network) {
    super();
    this._events = [];
    this._emitted = { block: -2 };
    this.disableCcipRead = false;
    this.formatter = new.target.getFormatter();
    defineReadOnly(this, "anyNetwork", network === "any");
    if (this.anyNetwork) {
      network = this.detectNetwork();
    }
    if (network instanceof Promise) {
      this._networkPromise = network;
      network.catch((error) => {
      });
      this._ready().catch((error) => {
      });
    } else {
      const knownNetwork = getStatic(new.target, "getNetwork")(network);
      if (knownNetwork) {
        defineReadOnly(this, "_network", knownNetwork);
        this.emit("network", knownNetwork, null);
      } else {
        logger$2.throwArgumentError("invalid network", "network", network);
      }
    }
    this._maxInternalBlockNumber = -1024;
    this._lastBlockNumber = -2;
    this._maxFilterBlockRange = 10;
    this._pollingInterval = 4e3;
    this._fastQueryDate = 0;
  }
  _ready() {
    return __awaiter$1(this, void 0, void 0, function* () {
      if (this._network == null) {
        let network = null;
        if (this._networkPromise) {
          try {
            network = yield this._networkPromise;
          } catch (error) {
          }
        }
        if (network == null) {
          network = yield this.detectNetwork();
        }
        if (!network) {
          logger$2.throwError("no network detected", Logger.errors.UNKNOWN_ERROR, {});
        }
        if (this._network == null) {
          if (this.anyNetwork) {
            this._network = network;
          } else {
            defineReadOnly(this, "_network", network);
          }
          this.emit("network", network, null);
        }
      }
      return this._network;
    });
  }
  get ready() {
    return poll(() => {
      return this._ready().then((network) => {
        return network;
      }, (error) => {
        if (error.code === Logger.errors.NETWORK_ERROR && error.event === "noNetwork") {
          return void 0;
        }
        throw error;
      });
    });
  }
  static getFormatter() {
    if (defaultFormatter == null) {
      defaultFormatter = new Formatter();
    }
    return defaultFormatter;
  }
  static getNetwork(network) {
    return getNetwork(network == null ? "homestead" : network);
  }
  ccipReadFetch(tx, calldata, urls) {
    return __awaiter$1(this, void 0, void 0, function* () {
      if (this.disableCcipRead || urls.length === 0) {
        return null;
      }
      const sender = tx.to.toLowerCase();
      const data = calldata.toLowerCase();
      const errorMessages = [];
      for (let i = 0; i < urls.length; i++) {
        const url = urls[i];
        const href = url.replace("{sender}", sender).replace("{data}", data);
        const json = url.indexOf("{data}") >= 0 ? null : JSON.stringify({ data, sender });
        const result = yield fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {
          value.status = response.statusCode;
          return value;
        });
        if (result.data) {
          return result.data;
        }
        const errorMessage = result.message || "unknown error";
        if (result.status >= 400 && result.status < 500) {
          return logger$2.throwError(`response not found during CCIP fetch: ${errorMessage}`, Logger.errors.SERVER_ERROR, { url, errorMessage });
        }
        errorMessages.push(errorMessage);
      }
      return logger$2.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(", ")}`, Logger.errors.SERVER_ERROR, {
        urls,
        errorMessages
      });
    });
  }
  _getInternalBlockNumber(maxAge) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this._ready();
      if (maxAge > 0) {
        while (this._internalBlockNumber) {
          const internalBlockNumber = this._internalBlockNumber;
          try {
            const result = yield internalBlockNumber;
            if (getTime() - result.respTime <= maxAge) {
              return result.blockNumber;
            }
            break;
          } catch (error) {
            if (this._internalBlockNumber === internalBlockNumber) {
              break;
            }
          }
        }
      }
      const reqTime = getTime();
      const checkInternalBlockNumber = resolveProperties({
        blockNumber: this.perform("getBlockNumber", {}),
        networkError: this.getNetwork().then((network) => null, (error) => error)
      }).then(({ blockNumber, networkError }) => {
        if (networkError) {
          if (this._internalBlockNumber === checkInternalBlockNumber) {
            this._internalBlockNumber = null;
          }
          throw networkError;
        }
        const respTime = getTime();
        blockNumber = BigNumber.from(blockNumber).toNumber();
        if (blockNumber < this._maxInternalBlockNumber) {
          blockNumber = this._maxInternalBlockNumber;
        }
        this._maxInternalBlockNumber = blockNumber;
        this._setFastBlockNumber(blockNumber);
        return { blockNumber, reqTime, respTime };
      });
      this._internalBlockNumber = checkInternalBlockNumber;
      checkInternalBlockNumber.catch((error) => {
        if (this._internalBlockNumber === checkInternalBlockNumber) {
          this._internalBlockNumber = null;
        }
      });
      return (yield checkInternalBlockNumber).blockNumber;
    });
  }
  poll() {
    return __awaiter$1(this, void 0, void 0, function* () {
      const pollId = nextPollId++;
      const runners = [];
      let blockNumber = null;
      try {
        blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
      } catch (error) {
        this.emit("error", error);
        return;
      }
      this._setFastBlockNumber(blockNumber);
      this.emit("poll", pollId, blockNumber);
      if (blockNumber === this._lastBlockNumber) {
        this.emit("didPoll", pollId);
        return;
      }
      if (this._emitted.block === -2) {
        this._emitted.block = blockNumber - 1;
      }
      if (Math.abs(this._emitted.block - blockNumber) > 1e3) {
        logger$2.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);
        this.emit("error", logger$2.makeError("network block skew detected", Logger.errors.NETWORK_ERROR, {
          blockNumber,
          event: "blockSkew",
          previousBlockNumber: this._emitted.block
        }));
        this.emit("block", blockNumber);
      } else {
        for (let i = this._emitted.block + 1; i <= blockNumber; i++) {
          this.emit("block", i);
        }
      }
      if (this._emitted.block !== blockNumber) {
        this._emitted.block = blockNumber;
        Object.keys(this._emitted).forEach((key2) => {
          if (key2 === "block") {
            return;
          }
          const eventBlockNumber = this._emitted[key2];
          if (eventBlockNumber === "pending") {
            return;
          }
          if (blockNumber - eventBlockNumber > 12) {
            delete this._emitted[key2];
          }
        });
      }
      if (this._lastBlockNumber === -2) {
        this._lastBlockNumber = blockNumber - 1;
      }
      this._events.forEach((event) => {
        switch (event.type) {
          case "tx": {
            const hash2 = event.hash;
            let runner = this.getTransactionReceipt(hash2).then((receipt) => {
              if (!receipt || receipt.blockNumber == null) {
                return null;
              }
              this._emitted["t:" + hash2] = receipt.blockNumber;
              this.emit(hash2, receipt);
              return null;
            }).catch((error) => {
              this.emit("error", error);
            });
            runners.push(runner);
            break;
          }
          case "filter": {
            if (!event._inflight) {
              event._inflight = true;
              if (event._lastBlockNumber === -2) {
                event._lastBlockNumber = blockNumber - 1;
              }
              const filter = event.filter;
              filter.fromBlock = event._lastBlockNumber + 1;
              filter.toBlock = blockNumber;
              const minFromBlock = filter.toBlock - this._maxFilterBlockRange;
              if (minFromBlock > filter.fromBlock) {
                filter.fromBlock = minFromBlock;
              }
              if (filter.fromBlock < 0) {
                filter.fromBlock = 0;
              }
              const runner = this.getLogs(filter).then((logs) => {
                event._inflight = false;
                if (logs.length === 0) {
                  return;
                }
                logs.forEach((log) => {
                  if (log.blockNumber > event._lastBlockNumber) {
                    event._lastBlockNumber = log.blockNumber;
                  }
                  this._emitted["b:" + log.blockHash] = log.blockNumber;
                  this._emitted["t:" + log.transactionHash] = log.blockNumber;
                  this.emit(filter, log);
                });
              }).catch((error) => {
                this.emit("error", error);
                event._inflight = false;
              });
              runners.push(runner);
            }
            break;
          }
        }
      });
      this._lastBlockNumber = blockNumber;
      Promise.all(runners).then(() => {
        this.emit("didPoll", pollId);
      }).catch((error) => {
        this.emit("error", error);
      });
      return;
    });
  }
  resetEventsBlock(blockNumber) {
    this._lastBlockNumber = blockNumber - 1;
    if (this.polling) {
      this.poll();
    }
  }
  get network() {
    return this._network;
  }
  detectNetwork() {
    return __awaiter$1(this, void 0, void 0, function* () {
      return logger$2.throwError("provider does not support network detection", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "provider.detectNetwork"
      });
    });
  }
  getNetwork() {
    return __awaiter$1(this, void 0, void 0, function* () {
      const network = yield this._ready();
      const currentNetwork = yield this.detectNetwork();
      if (network.chainId !== currentNetwork.chainId) {
        if (this.anyNetwork) {
          this._network = currentNetwork;
          this._lastBlockNumber = -2;
          this._fastBlockNumber = null;
          this._fastBlockNumberPromise = null;
          this._fastQueryDate = 0;
          this._emitted.block = -2;
          this._maxInternalBlockNumber = -1024;
          this._internalBlockNumber = null;
          this.emit("network", currentNetwork, network);
          yield stall(0);
          return this._network;
        }
        const error = logger$2.makeError("underlying network changed", Logger.errors.NETWORK_ERROR, {
          event: "changed",
          network,
          detectedNetwork: currentNetwork
        });
        this.emit("error", error);
        throw error;
      }
      return network;
    });
  }
  get blockNumber() {
    this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {
      this._setFastBlockNumber(blockNumber);
    }, (error) => {
    });
    return this._fastBlockNumber != null ? this._fastBlockNumber : -1;
  }
  get polling() {
    return this._poller != null;
  }
  set polling(value) {
    if (value && !this._poller) {
      this._poller = setInterval(() => {
        this.poll();
      }, this.pollingInterval);
      if (!this._bootstrapPoll) {
        this._bootstrapPoll = setTimeout(() => {
          this.poll();
          this._bootstrapPoll = setTimeout(() => {
            if (!this._poller) {
              this.poll();
            }
            this._bootstrapPoll = null;
          }, this.pollingInterval);
        }, 0);
      }
    } else if (!value && this._poller) {
      clearInterval(this._poller);
      this._poller = null;
    }
  }
  get pollingInterval() {
    return this._pollingInterval;
  }
  set pollingInterval(value) {
    if (typeof value !== "number" || value <= 0 || parseInt(String(value)) != value) {
      throw new Error("invalid polling interval");
    }
    this._pollingInterval = value;
    if (this._poller) {
      clearInterval(this._poller);
      this._poller = setInterval(() => {
        this.poll();
      }, this._pollingInterval);
    }
  }
  _getFastBlockNumber() {
    const now = getTime();
    if (now - this._fastQueryDate > 2 * this._pollingInterval) {
      this._fastQueryDate = now;
      this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {
        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
          this._fastBlockNumber = blockNumber;
        }
        return this._fastBlockNumber;
      });
    }
    return this._fastBlockNumberPromise;
  }
  _setFastBlockNumber(blockNumber) {
    if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {
      return;
    }
    this._fastQueryDate = getTime();
    if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
      this._fastBlockNumber = blockNumber;
      this._fastBlockNumberPromise = Promise.resolve(blockNumber);
    }
  }
  waitForTransaction(transactionHash, confirmations, timeout) {
    return __awaiter$1(this, void 0, void 0, function* () {
      return this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null);
    });
  }
  _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
    return __awaiter$1(this, void 0, void 0, function* () {
      const receipt = yield this.getTransactionReceipt(transactionHash);
      if ((receipt ? receipt.confirmations : 0) >= confirmations) {
        return receipt;
      }
      return new Promise((resolve, reject) => {
        const cancelFuncs = [];
        let done = false;
        const alreadyDone = function() {
          if (done) {
            return true;
          }
          done = true;
          cancelFuncs.forEach((func) => {
            func();
          });
          return false;
        };
        const minedHandler = (receipt2) => {
          if (receipt2.confirmations < confirmations) {
            return;
          }
          if (alreadyDone()) {
            return;
          }
          resolve(receipt2);
        };
        this.on(transactionHash, minedHandler);
        cancelFuncs.push(() => {
          this.removeListener(transactionHash, minedHandler);
        });
        if (replaceable) {
          let lastBlockNumber = replaceable.startBlock;
          let scannedBlock = null;
          const replaceHandler = (blockNumber) => __awaiter$1(this, void 0, void 0, function* () {
            if (done) {
              return;
            }
            yield stall(1e3);
            this.getTransactionCount(replaceable.from).then((nonce) => __awaiter$1(this, void 0, void 0, function* () {
              if (done) {
                return;
              }
              if (nonce <= replaceable.nonce) {
                lastBlockNumber = blockNumber;
              } else {
                {
                  const mined = yield this.getTransaction(transactionHash);
                  if (mined && mined.blockNumber != null) {
                    return;
                  }
                }
                if (scannedBlock == null) {
                  scannedBlock = lastBlockNumber - 3;
                  if (scannedBlock < replaceable.startBlock) {
                    scannedBlock = replaceable.startBlock;
                  }
                }
                while (scannedBlock <= blockNumber) {
                  if (done) {
                    return;
                  }
                  const block = yield this.getBlockWithTransactions(scannedBlock);
                  for (let ti = 0; ti < block.transactions.length; ti++) {
                    const tx = block.transactions[ti];
                    if (tx.hash === transactionHash) {
                      return;
                    }
                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                      if (done) {
                        return;
                      }
                      const receipt2 = yield this.waitForTransaction(tx.hash, confirmations);
                      if (alreadyDone()) {
                        return;
                      }
                      let reason = "replaced";
                      if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {
                        reason = "repriced";
                      } else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) {
                        reason = "cancelled";
                      }
                      reject(logger$2.makeError("transaction was replaced", Logger.errors.TRANSACTION_REPLACED, {
                        cancelled: reason === "replaced" || reason === "cancelled",
                        reason,
                        replacement: this._wrapTransaction(tx),
                        hash: transactionHash,
                        receipt: receipt2
                      }));
                      return;
                    }
                  }
                  scannedBlock++;
                }
              }
              if (done) {
                return;
              }
              this.once("block", replaceHandler);
            }), (error) => {
              if (done) {
                return;
              }
              this.once("block", replaceHandler);
            });
          });
          if (done) {
            return;
          }
          this.once("block", replaceHandler);
          cancelFuncs.push(() => {
            this.removeListener("block", replaceHandler);
          });
        }
        if (typeof timeout === "number" && timeout > 0) {
          const timer2 = setTimeout(() => {
            if (alreadyDone()) {
              return;
            }
            reject(logger$2.makeError("timeout exceeded", Logger.errors.TIMEOUT, { timeout }));
          }, timeout);
          if (timer2.unref) {
            timer2.unref();
          }
          cancelFuncs.push(() => {
            clearTimeout(timer2);
          });
        }
      });
    });
  }
  getBlockNumber() {
    return __awaiter$1(this, void 0, void 0, function* () {
      return this._getInternalBlockNumber(0);
    });
  }
  getGasPrice() {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const result = yield this.perform("getGasPrice", {});
      try {
        return BigNumber.from(result);
      } catch (error) {
        return logger$2.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
          method: "getGasPrice",
          result,
          error
        });
      }
    });
  }
  getBalance(addressOrName, blockTag) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const params = yield resolveProperties({
        address: this._getAddress(addressOrName),
        blockTag: this._getBlockTag(blockTag)
      });
      const result = yield this.perform("getBalance", params);
      try {
        return BigNumber.from(result);
      } catch (error) {
        return logger$2.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
          method: "getBalance",
          params,
          result,
          error
        });
      }
    });
  }
  getTransactionCount(addressOrName, blockTag) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const params = yield resolveProperties({
        address: this._getAddress(addressOrName),
        blockTag: this._getBlockTag(blockTag)
      });
      const result = yield this.perform("getTransactionCount", params);
      try {
        return BigNumber.from(result).toNumber();
      } catch (error) {
        return logger$2.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
          method: "getTransactionCount",
          params,
          result,
          error
        });
      }
    });
  }
  getCode(addressOrName, blockTag) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const params = yield resolveProperties({
        address: this._getAddress(addressOrName),
        blockTag: this._getBlockTag(blockTag)
      });
      const result = yield this.perform("getCode", params);
      try {
        return hexlify(result);
      } catch (error) {
        return logger$2.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
          method: "getCode",
          params,
          result,
          error
        });
      }
    });
  }
  getStorageAt(addressOrName, position, blockTag) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const params = yield resolveProperties({
        address: this._getAddress(addressOrName),
        blockTag: this._getBlockTag(blockTag),
        position: Promise.resolve(position).then((p) => hexValue(p))
      });
      const result = yield this.perform("getStorageAt", params);
      try {
        return hexlify(result);
      } catch (error) {
        return logger$2.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
          method: "getStorageAt",
          params,
          result,
          error
        });
      }
    });
  }
  _wrapTransaction(tx, hash2, startBlock) {
    if (hash2 != null && hexDataLength(hash2) !== 32) {
      throw new Error("invalid response - sendTransaction");
    }
    const result = tx;
    if (hash2 != null && tx.hash !== hash2) {
      logger$2.throwError("Transaction hash mismatch from Provider.sendTransaction.", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash2 });
    }
    result.wait = (confirms, timeout) => __awaiter$1(this, void 0, void 0, function* () {
      if (confirms == null) {
        confirms = 1;
      }
      if (timeout == null) {
        timeout = 0;
      }
      let replacement = void 0;
      if (confirms !== 0 && startBlock != null) {
        replacement = {
          data: tx.data,
          from: tx.from,
          nonce: tx.nonce,
          to: tx.to,
          value: tx.value,
          startBlock
        };
      }
      const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
      if (receipt == null && confirms === 0) {
        return null;
      }
      this._emitted["t:" + tx.hash] = receipt.blockNumber;
      if (receipt.status === 0) {
        logger$2.throwError("transaction failed", Logger.errors.CALL_EXCEPTION, {
          transactionHash: tx.hash,
          transaction: tx,
          receipt
        });
      }
      return receipt;
    });
    return result;
  }
  sendTransaction(signedTransaction) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const hexTx = yield Promise.resolve(signedTransaction).then((t) => hexlify(t));
      const tx = this.formatter.transaction(signedTransaction);
      if (tx.confirmations == null) {
        tx.confirmations = 0;
      }
      const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
      try {
        const hash2 = yield this.perform("sendTransaction", { signedTransaction: hexTx });
        return this._wrapTransaction(tx, hash2, blockNumber);
      } catch (error) {
        error.transaction = tx;
        error.transactionHash = tx.hash;
        throw error;
      }
    });
  }
  _getTransactionRequest(transaction) {
    return __awaiter$1(this, void 0, void 0, function* () {
      const values = yield transaction;
      const tx = {};
      ["from", "to"].forEach((key2) => {
        if (values[key2] == null) {
          return;
        }
        tx[key2] = Promise.resolve(values[key2]).then((v) => v ? this._getAddress(v) : null);
      });
      ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((key2) => {
        if (values[key2] == null) {
          return;
        }
        tx[key2] = Promise.resolve(values[key2]).then((v) => v ? BigNumber.from(v) : null);
      });
      ["type"].forEach((key2) => {
        if (values[key2] == null) {
          return;
        }
        tx[key2] = Promise.resolve(values[key2]).then((v) => v != null ? v : null);
      });
      if (values.accessList) {
        tx.accessList = this.formatter.accessList(values.accessList);
      }
      ["data"].forEach((key2) => {
        if (values[key2] == null) {
          return;
        }
        tx[key2] = Promise.resolve(values[key2]).then((v) => v ? hexlify(v) : null);
      });
      return this.formatter.transactionRequest(yield resolveProperties(tx));
    });
  }
  _getFilter(filter) {
    return __awaiter$1(this, void 0, void 0, function* () {
      filter = yield filter;
      const result = {};
      if (filter.address != null) {
        result.address = this._getAddress(filter.address);
      }
      ["blockHash", "topics"].forEach((key2) => {
        if (filter[key2] == null) {
          return;
        }
        result[key2] = filter[key2];
      });
      ["fromBlock", "toBlock"].forEach((key2) => {
        if (filter[key2] == null) {
          return;
        }
        result[key2] = this._getBlockTag(filter[key2]);
      });
      return this.formatter.filter(yield resolveProperties(result));
    });
  }
  _call(transaction, blockTag, attempt) {
    return __awaiter$1(this, void 0, void 0, function* () {
      if (attempt >= MAX_CCIP_REDIRECTS) {
        logger$2.throwError("CCIP read exceeded maximum redirections", Logger.errors.SERVER_ERROR, {
          redirects: attempt,
          transaction
        });
      }
      const txSender = transaction.to;
      const result = yield this.perform("call", { transaction, blockTag });
      if (attempt >= 0 && blockTag === "latest" && txSender != null && result.substring(0, 10) === "0x556f1830" && hexDataLength(result) % 32 === 4) {
        try {
          const data = hexDataSlice(result, 4);
          const sender = hexDataSlice(data, 0, 32);
          if (!BigNumber.from(sender).eq(txSender)) {
            logger$2.throwError("CCIP Read sender did not match", Logger.errors.CALL_EXCEPTION, {
              name: "OffchainLookup",
              signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
              transaction,
              data: result
            });
          }
          const urls = [];
          const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();
          const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();
          const urlsData = hexDataSlice(data, urlsOffset + 32);
          for (let u = 0; u < urlsLength; u++) {
            const url = _parseString(urlsData, u * 32);
            if (url == null) {
              logger$2.throwError("CCIP Read contained corrupt URL string", Logger.errors.CALL_EXCEPTION, {
                name: "OffchainLookup",
                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                transaction,
                data: result
              });
            }
            urls.push(url);
          }
          const calldata = _parseBytes(data, 64);
          if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {
            logger$2.throwError("CCIP Read callback selector included junk", Logger.errors.CALL_EXCEPTION, {
              name: "OffchainLookup",
              signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
              transaction,
              data: result
            });
          }
          const callbackSelector = hexDataSlice(data, 96, 100);
          const extraData = _parseBytes(data, 128);
          const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);
          if (ccipResult == null) {
            logger$2.throwError("CCIP Read disabled or provided no URLs", Logger.errors.CALL_EXCEPTION, {
              name: "OffchainLookup",
              signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
              transaction,
              data: result
            });
          }
          const tx = {
            to: txSender,
            data: hexConcat([callbackSelector, encodeBytes([ccipResult, extraData])])
          };
          return this._call(tx, blockTag, attempt + 1);
        } catch (error) {
          if (error.code === Logger.errors.SERVER_ERROR) {
            throw error;
          }
        }
      }
      try {
        return hexlify(result);
      } catch (error) {
        return logger$2.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
          method: "call",
          params: { transaction, blockTag },
          result,
          error
        });
      }
    });
  }
  call(transaction, blockTag) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const resolved = yield resolveProperties({
        transaction: this._getTransactionRequest(transaction),
        blockTag: this._getBlockTag(blockTag),
        ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)
      });
      return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);
    });
  }
  estimateGas(transaction) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const params = yield resolveProperties({
        transaction: this._getTransactionRequest(transaction)
      });
      const result = yield this.perform("estimateGas", params);
      try {
        return BigNumber.from(result);
      } catch (error) {
        return logger$2.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
          method: "estimateGas",
          params,
          result,
          error
        });
      }
    });
  }
  _getAddress(addressOrName) {
    return __awaiter$1(this, void 0, void 0, function* () {
      addressOrName = yield addressOrName;
      if (typeof addressOrName !== "string") {
        logger$2.throwArgumentError("invalid address or ENS name", "name", addressOrName);
      }
      const address = yield this.resolveName(addressOrName);
      if (address == null) {
        logger$2.throwError("ENS name not configured", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: `resolveName(${JSON.stringify(addressOrName)})`
        });
      }
      return address;
    });
  }
  _getBlock(blockHashOrBlockTag, includeTransactions) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      blockHashOrBlockTag = yield blockHashOrBlockTag;
      let blockNumber = -128;
      const params = {
        includeTransactions: !!includeTransactions
      };
      if (isHexString(blockHashOrBlockTag, 32)) {
        params.blockHash = blockHashOrBlockTag;
      } else {
        try {
          params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);
          if (isHexString(params.blockTag)) {
            blockNumber = parseInt(params.blockTag.substring(2), 16);
          }
        } catch (error) {
          logger$2.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
        }
      }
      return poll(() => __awaiter$1(this, void 0, void 0, function* () {
        const block = yield this.perform("getBlock", params);
        if (block == null) {
          if (params.blockHash != null) {
            if (this._emitted["b:" + params.blockHash] == null) {
              return null;
            }
          }
          if (params.blockTag != null) {
            if (blockNumber > this._emitted.block) {
              return null;
            }
          }
          return void 0;
        }
        if (includeTransactions) {
          let blockNumber2 = null;
          for (let i = 0; i < block.transactions.length; i++) {
            const tx = block.transactions[i];
            if (tx.blockNumber == null) {
              tx.confirmations = 0;
            } else if (tx.confirmations == null) {
              if (blockNumber2 == null) {
                blockNumber2 = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
              }
              let confirmations = blockNumber2 - tx.blockNumber + 1;
              if (confirmations <= 0) {
                confirmations = 1;
              }
              tx.confirmations = confirmations;
            }
          }
          const blockWithTxs = this.formatter.blockWithTransactions(block);
          blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));
          return blockWithTxs;
        }
        return this.formatter.block(block);
      }), { oncePoll: this });
    });
  }
  getBlock(blockHashOrBlockTag) {
    return this._getBlock(blockHashOrBlockTag, false);
  }
  getBlockWithTransactions(blockHashOrBlockTag) {
    return this._getBlock(blockHashOrBlockTag, true);
  }
  getTransaction(transactionHash) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      transactionHash = yield transactionHash;
      const params = { transactionHash: this.formatter.hash(transactionHash, true) };
      return poll(() => __awaiter$1(this, void 0, void 0, function* () {
        const result = yield this.perform("getTransaction", params);
        if (result == null) {
          if (this._emitted["t:" + transactionHash] == null) {
            return null;
          }
          return void 0;
        }
        const tx = this.formatter.transactionResponse(result);
        if (tx.blockNumber == null) {
          tx.confirmations = 0;
        } else if (tx.confirmations == null) {
          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
          let confirmations = blockNumber - tx.blockNumber + 1;
          if (confirmations <= 0) {
            confirmations = 1;
          }
          tx.confirmations = confirmations;
        }
        return this._wrapTransaction(tx);
      }), { oncePoll: this });
    });
  }
  getTransactionReceipt(transactionHash) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      transactionHash = yield transactionHash;
      const params = { transactionHash: this.formatter.hash(transactionHash, true) };
      return poll(() => __awaiter$1(this, void 0, void 0, function* () {
        const result = yield this.perform("getTransactionReceipt", params);
        if (result == null) {
          if (this._emitted["t:" + transactionHash] == null) {
            return null;
          }
          return void 0;
        }
        if (result.blockHash == null) {
          return void 0;
        }
        const receipt = this.formatter.receipt(result);
        if (receipt.blockNumber == null) {
          receipt.confirmations = 0;
        } else if (receipt.confirmations == null) {
          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
          let confirmations = blockNumber - receipt.blockNumber + 1;
          if (confirmations <= 0) {
            confirmations = 1;
          }
          receipt.confirmations = confirmations;
        }
        return receipt;
      }), { oncePoll: this });
    });
  }
  getLogs(filter) {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const params = yield resolveProperties({ filter: this._getFilter(filter) });
      const logs = yield this.perform("getLogs", params);
      logs.forEach((log) => {
        if (log.removed == null) {
          log.removed = false;
        }
      });
      return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);
    });
  }
  getEtherPrice() {
    return __awaiter$1(this, void 0, void 0, function* () {
      yield this.getNetwork();
      return this.perform("getEtherPrice", {});
    });
  }
  _getBlockTag(blockTag) {
    return __awaiter$1(this, void 0, void 0, function* () {
      blockTag = yield blockTag;
      if (typeof blockTag === "number" && blockTag < 0) {
        if (blockTag % 1) {
          logger$2.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
        }
        let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
        blockNumber += blockTag;
        if (blockNumber < 0) {
          blockNumber = 0;
        }
        return this.formatter.blockTag(blockNumber);
      }
      return this.formatter.blockTag(blockTag);
    });
  }
  getResolver(name2) {
    return __awaiter$1(this, void 0, void 0, function* () {
      let currentName = name2;
      while (true) {
        if (currentName === "" || currentName === ".") {
          return null;
        }
        if (name2 !== "eth" && currentName === "eth") {
          return null;
        }
        const addr = yield this._getResolver(currentName, "getResolver");
        if (addr != null) {
          const resolver = new Resolver(this, addr, name2);
          if (currentName !== name2 && !(yield resolver.supportsWildcard())) {
            return null;
          }
          return resolver;
        }
        currentName = currentName.split(".").slice(1).join(".");
      }
    });
  }
  _getResolver(name2, operation) {
    return __awaiter$1(this, void 0, void 0, function* () {
      if (operation == null) {
        operation = "ENS";
      }
      const network = yield this.getNetwork();
      if (!network.ensAddress) {
        logger$2.throwError("network does not support ENS", Logger.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });
      }
      try {
        const addrData = yield this.call({
          to: network.ensAddress,
          data: "0x0178b8bf" + namehash(name2).substring(2)
        });
        return this.formatter.callAddress(addrData);
      } catch (error) {
      }
      return null;
    });
  }
  resolveName(name2) {
    return __awaiter$1(this, void 0, void 0, function* () {
      name2 = yield name2;
      try {
        return Promise.resolve(this.formatter.address(name2));
      } catch (error) {
        if (isHexString(name2)) {
          throw error;
        }
      }
      if (typeof name2 !== "string") {
        logger$2.throwArgumentError("invalid ENS name", "name", name2);
      }
      const resolver = yield this.getResolver(name2);
      if (!resolver) {
        return null;
      }
      return yield resolver.getAddress();
    });
  }
  lookupAddress(address) {
    return __awaiter$1(this, void 0, void 0, function* () {
      address = yield address;
      address = this.formatter.address(address);
      const node = address.substring(2).toLowerCase() + ".addr.reverse";
      const resolverAddr = yield this._getResolver(node, "lookupAddress");
      if (resolverAddr == null) {
        return null;
      }
      const name2 = _parseString(yield this.call({
        to: resolverAddr,
        data: "0x691f3431" + namehash(node).substring(2)
      }), 0);
      const addr = yield this.resolveName(name2);
      if (addr != address) {
        return null;
      }
      return name2;
    });
  }
  getAvatar(nameOrAddress) {
    return __awaiter$1(this, void 0, void 0, function* () {
      let resolver = null;
      if (isHexString(nameOrAddress)) {
        const address = this.formatter.address(nameOrAddress);
        const node = address.substring(2).toLowerCase() + ".addr.reverse";
        const resolverAddress = yield this._getResolver(node, "getAvatar");
        if (!resolverAddress) {
          return null;
        }
        resolver = new Resolver(this, resolverAddress, node);
        try {
          const avatar2 = yield resolver.getAvatar();
          if (avatar2) {
            return avatar2.url;
          }
        } catch (error) {
          if (error.code !== Logger.errors.CALL_EXCEPTION) {
            throw error;
          }
        }
        try {
          const name2 = _parseString(yield this.call({
            to: resolverAddress,
            data: "0x691f3431" + namehash(node).substring(2)
          }), 0);
          resolver = yield this.getResolver(name2);
        } catch (error) {
          if (error.code !== Logger.errors.CALL_EXCEPTION) {
            throw error;
          }
          return null;
        }
      } else {
        resolver = yield this.getResolver(nameOrAddress);
        if (!resolver) {
          return null;
        }
      }
      const avatar = yield resolver.getAvatar();
      if (avatar == null) {
        return null;
      }
      return avatar.url;
    });
  }
  perform(method, params) {
    return logger$2.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, { operation: method });
  }
  _startEvent(event) {
    this.polling = this._events.filter((e) => e.pollable()).length > 0;
  }
  _stopEvent(event) {
    this.polling = this._events.filter((e) => e.pollable()).length > 0;
  }
  _addEventListener(eventName, listener, once) {
    const event = new Event$1(getEventTag(eventName), listener, once);
    this._events.push(event);
    this._startEvent(event);
    return this;
  }
  on(eventName, listener) {
    return this._addEventListener(eventName, listener, false);
  }
  once(eventName, listener) {
    return this._addEventListener(eventName, listener, true);
  }
  emit(eventName, ...args) {
    let result = false;
    let stopped = [];
    let eventTag = getEventTag(eventName);
    this._events = this._events.filter((event) => {
      if (event.tag !== eventTag) {
        return true;
      }
      setTimeout(() => {
        event.listener.apply(this, args);
      }, 0);
      result = true;
      if (event.once) {
        stopped.push(event);
        return false;
      }
      return true;
    });
    stopped.forEach((event) => {
      this._stopEvent(event);
    });
    return result;
  }
  listenerCount(eventName) {
    if (!eventName) {
      return this._events.length;
    }
    let eventTag = getEventTag(eventName);
    return this._events.filter((event) => {
      return event.tag === eventTag;
    }).length;
  }
  listeners(eventName) {
    if (eventName == null) {
      return this._events.map((event) => event.listener);
    }
    let eventTag = getEventTag(eventName);
    return this._events.filter((event) => event.tag === eventTag).map((event) => event.listener);
  }
  off(eventName, listener) {
    if (listener == null) {
      return this.removeAllListeners(eventName);
    }
    const stopped = [];
    let found = false;
    let eventTag = getEventTag(eventName);
    this._events = this._events.filter((event) => {
      if (event.tag !== eventTag || event.listener != listener) {
        return true;
      }
      if (found) {
        return true;
      }
      found = true;
      stopped.push(event);
      return false;
    });
    stopped.forEach((event) => {
      this._stopEvent(event);
    });
    return this;
  }
  removeAllListeners(eventName) {
    let stopped = [];
    if (eventName == null) {
      stopped = this._events;
      this._events = [];
    } else {
      const eventTag = getEventTag(eventName);
      this._events = this._events.filter((event) => {
        if (event.tag !== eventTag) {
          return true;
        }
        stopped.push(event);
        return false;
      });
    }
    stopped.forEach((event) => {
      this._stopEvent(event);
    });
    return this;
  }
}
var __awaiter = globalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const logger$1 = new Logger(version$1);
const errorGas = ["call", "estimateGas"];
function spelunk(value, requireData) {
  if (value == null) {
    return null;
  }
  if (typeof value.message === "string" && value.message.match("reverted")) {
    const data = isHexString(value.data) ? value.data : null;
    if (!requireData || data) {
      return { message: value.message, data };
    }
  }
  if (typeof value === "object") {
    for (const key2 in value) {
      const result = spelunk(value[key2], requireData);
      if (result) {
        return result;
      }
    }
    return null;
  }
  if (typeof value === "string") {
    try {
      return spelunk(JSON.parse(value), requireData);
    } catch (error) {
    }
  }
  return null;
}
function checkError(method, error, params) {
  const transaction = params.transaction || params.signedTransaction;
  if (method === "call") {
    const result = spelunk(error, true);
    if (result) {
      return result.data;
    }
    logger$1.throwError("missing revert data in call exception; Transaction reverted without a reason string", Logger.errors.CALL_EXCEPTION, {
      data: "0x",
      transaction,
      error
    });
  }
  if (method === "estimateGas") {
    let result = spelunk(error.body, false);
    if (result == null) {
      result = spelunk(error, false);
    }
    if (result) {
      logger$1.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
        reason: result.message,
        method,
        transaction,
        error
      });
    }
  }
  let message = error.message;
  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === "string") {
    message = error.error.message;
  } else if (typeof error.body === "string") {
    message = error.body;
  } else if (typeof error.responseText === "string") {
    message = error.responseText;
  }
  message = (message || "").toLowerCase();
  if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {
    logger$1.throwError("insufficient funds for intrinsic transaction cost", Logger.errors.INSUFFICIENT_FUNDS, {
      error,
      method,
      transaction
    });
  }
  if (message.match(/nonce (is )?too low/i)) {
    logger$1.throwError("nonce has already been used", Logger.errors.NONCE_EXPIRED, {
      error,
      method,
      transaction
    });
  }
  if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {
    logger$1.throwError("replacement fee too low", Logger.errors.REPLACEMENT_UNDERPRICED, {
      error,
      method,
      transaction
    });
  }
  if (message.match(/only replay-protected/i)) {
    logger$1.throwError("legacy pre-eip-155 transactions not supported", Logger.errors.UNSUPPORTED_OPERATION, {
      error,
      method,
      transaction
    });
  }
  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {
    logger$1.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
      error,
      method,
      transaction
    });
  }
  throw error;
}
function timer(timeout) {
  return new Promise(function(resolve) {
    setTimeout(resolve, timeout);
  });
}
function getResult(payload) {
  if (payload.error) {
    const error = new Error(payload.error.message);
    error.code = payload.error.code;
    error.data = payload.error.data;
    throw error;
  }
  return payload.result;
}
function getLowerCase(value) {
  if (value) {
    return value.toLowerCase();
  }
  return value;
}
const _constructorGuard = {};
class JsonRpcSigner extends Signer {
  constructor(constructorGuard, provider, addressOrIndex) {
    super();
    if (constructorGuard !== _constructorGuard) {
      throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
    }
    defineReadOnly(this, "provider", provider);
    if (addressOrIndex == null) {
      addressOrIndex = 0;
    }
    if (typeof addressOrIndex === "string") {
      defineReadOnly(this, "_address", this.provider.formatter.address(addressOrIndex));
      defineReadOnly(this, "_index", null);
    } else if (typeof addressOrIndex === "number") {
      defineReadOnly(this, "_index", addressOrIndex);
      defineReadOnly(this, "_address", null);
    } else {
      logger$1.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
    }
  }
  connect(provider) {
    return logger$1.throwError("cannot alter JSON-RPC Signer connection", Logger.errors.UNSUPPORTED_OPERATION, {
      operation: "connect"
    });
  }
  connectUnchecked() {
    return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);
  }
  getAddress() {
    if (this._address) {
      return Promise.resolve(this._address);
    }
    return this.provider.send("eth_accounts", []).then((accounts) => {
      if (accounts.length <= this._index) {
        logger$1.throwError("unknown account #" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "getAddress"
        });
      }
      return this.provider.formatter.address(accounts[this._index]);
    });
  }
  sendUncheckedTransaction(transaction) {
    transaction = shallowCopy(transaction);
    const fromAddress = this.getAddress().then((address) => {
      if (address) {
        address = address.toLowerCase();
      }
      return address;
    });
    if (transaction.gasLimit == null) {
      const estimate = shallowCopy(transaction);
      estimate.from = fromAddress;
      transaction.gasLimit = this.provider.estimateGas(estimate);
    }
    if (transaction.to != null) {
      transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {
        if (to == null) {
          return null;
        }
        const address = yield this.provider.resolveName(to);
        if (address == null) {
          logger$1.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
        }
        return address;
      }));
    }
    return resolveProperties({
      tx: resolveProperties(transaction),
      sender: fromAddress
    }).then(({ tx, sender }) => {
      if (tx.from != null) {
        if (tx.from.toLowerCase() !== sender) {
          logger$1.throwArgumentError("from address mismatch", "transaction", transaction);
        }
      } else {
        tx.from = sender;
      }
      const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });
      return this.provider.send("eth_sendTransaction", [hexTx]).then((hash2) => {
        return hash2;
      }, (error) => {
        if (typeof error.message === "string" && error.message.match(/user denied/i)) {
          logger$1.throwError("user rejected transaction", Logger.errors.ACTION_REJECTED, {
            action: "sendTransaction",
            transaction: tx
          });
        }
        return checkError("sendTransaction", error, hexTx);
      });
    });
  }
  signTransaction(transaction) {
    return logger$1.throwError("signing transactions is unsupported", Logger.errors.UNSUPPORTED_OPERATION, {
      operation: "signTransaction"
    });
  }
  sendTransaction(transaction) {
    return __awaiter(this, void 0, void 0, function* () {
      const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
      const hash2 = yield this.sendUncheckedTransaction(transaction);
      try {
        return yield poll(() => __awaiter(this, void 0, void 0, function* () {
          const tx = yield this.provider.getTransaction(hash2);
          if (tx === null) {
            return void 0;
          }
          return this.provider._wrapTransaction(tx, hash2, blockNumber);
        }), { oncePoll: this.provider });
      } catch (error) {
        error.transactionHash = hash2;
        throw error;
      }
    });
  }
  signMessage(message) {
    return __awaiter(this, void 0, void 0, function* () {
      const data = typeof message === "string" ? toUtf8Bytes(message) : message;
      const address = yield this.getAddress();
      try {
        return yield this.provider.send("personal_sign", [hexlify(data), address.toLowerCase()]);
      } catch (error) {
        if (typeof error.message === "string" && error.message.match(/user denied/i)) {
          logger$1.throwError("user rejected signing", Logger.errors.ACTION_REJECTED, {
            action: "signMessage",
            from: address,
            messageData: message
          });
        }
        throw error;
      }
    });
  }
  _legacySignMessage(message) {
    return __awaiter(this, void 0, void 0, function* () {
      const data = typeof message === "string" ? toUtf8Bytes(message) : message;
      const address = yield this.getAddress();
      try {
        return yield this.provider.send("eth_sign", [address.toLowerCase(), hexlify(data)]);
      } catch (error) {
        if (typeof error.message === "string" && error.message.match(/user denied/i)) {
          logger$1.throwError("user rejected signing", Logger.errors.ACTION_REJECTED, {
            action: "_legacySignMessage",
            from: address,
            messageData: message
          });
        }
        throw error;
      }
    });
  }
  _signTypedData(domain, types, value) {
    return __awaiter(this, void 0, void 0, function* () {
      const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name2) => {
        return this.provider.resolveName(name2);
      });
      const address = yield this.getAddress();
      try {
        return yield this.provider.send("eth_signTypedData_v4", [
          address.toLowerCase(),
          JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))
        ]);
      } catch (error) {
        if (typeof error.message === "string" && error.message.match(/user denied/i)) {
          logger$1.throwError("user rejected signing", Logger.errors.ACTION_REJECTED, {
            action: "_signTypedData",
            from: address,
            messageData: { domain: populated.domain, types, value: populated.value }
          });
        }
        throw error;
      }
    });
  }
  unlock(password) {
    return __awaiter(this, void 0, void 0, function* () {
      const provider = this.provider;
      const address = yield this.getAddress();
      return provider.send("personal_unlockAccount", [address.toLowerCase(), password, null]);
    });
  }
}
class UncheckedJsonRpcSigner extends JsonRpcSigner {
  sendTransaction(transaction) {
    return this.sendUncheckedTransaction(transaction).then((hash2) => {
      return {
        hash: hash2,
        nonce: null,
        gasLimit: null,
        gasPrice: null,
        data: null,
        value: null,
        chainId: null,
        confirmations: 0,
        from: null,
        wait: (confirmations) => {
          return this.provider.waitForTransaction(hash2, confirmations);
        }
      };
    });
  }
}
const allowedTransactionKeys = {
  chainId: true,
  data: true,
  gasLimit: true,
  gasPrice: true,
  nonce: true,
  to: true,
  value: true,
  type: true,
  accessList: true,
  maxFeePerGas: true,
  maxPriorityFeePerGas: true
};
class JsonRpcProvider extends BaseProvider {
  constructor(url, network) {
    let networkOrReady = network;
    if (networkOrReady == null) {
      networkOrReady = new Promise((resolve, reject) => {
        setTimeout(() => {
          this.detectNetwork().then((network2) => {
            resolve(network2);
          }, (error) => {
            reject(error);
          });
        }, 0);
      });
    }
    super(networkOrReady);
    if (!url) {
      url = getStatic(this.constructor, "defaultUrl")();
    }
    if (typeof url === "string") {
      defineReadOnly(this, "connection", Object.freeze({
        url
      }));
    } else {
      defineReadOnly(this, "connection", Object.freeze(shallowCopy(url)));
    }
    this._nextId = 42;
  }
  get _cache() {
    if (this._eventLoopCache == null) {
      this._eventLoopCache = {};
    }
    return this._eventLoopCache;
  }
  static defaultUrl() {
    return "http://localhost:8545";
  }
  detectNetwork() {
    if (!this._cache["detectNetwork"]) {
      this._cache["detectNetwork"] = this._uncachedDetectNetwork();
      setTimeout(() => {
        this._cache["detectNetwork"] = null;
      }, 0);
    }
    return this._cache["detectNetwork"];
  }
  _uncachedDetectNetwork() {
    return __awaiter(this, void 0, void 0, function* () {
      yield timer(0);
      let chainId = null;
      try {
        chainId = yield this.send("eth_chainId", []);
      } catch (error) {
        try {
          chainId = yield this.send("net_version", []);
        } catch (error2) {
        }
      }
      if (chainId != null) {
        const getNetwork2 = getStatic(this.constructor, "getNetwork");
        try {
          return getNetwork2(BigNumber.from(chainId).toNumber());
        } catch (error) {
          return logger$1.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
            chainId,
            event: "invalidNetwork",
            serverError: error
          });
        }
      }
      return logger$1.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
        event: "noNetwork"
      });
    });
  }
  getSigner(addressOrIndex) {
    return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);
  }
  getUncheckedSigner(addressOrIndex) {
    return this.getSigner(addressOrIndex).connectUnchecked();
  }
  listAccounts() {
    return this.send("eth_accounts", []).then((accounts) => {
      return accounts.map((a) => this.formatter.address(a));
    });
  }
  send(method, params) {
    const request = {
      method,
      params,
      id: this._nextId++,
      jsonrpc: "2.0"
    };
    this.emit("debug", {
      action: "request",
      request: deepCopy(request),
      provider: this
    });
    const cache = ["eth_chainId", "eth_blockNumber"].indexOf(method) >= 0;
    if (cache && this._cache[method]) {
      return this._cache[method];
    }
    const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result2) => {
      this.emit("debug", {
        action: "response",
        request,
        response: result2,
        provider: this
      });
      return result2;
    }, (error) => {
      this.emit("debug", {
        action: "response",
        error,
        request,
        provider: this
      });
      throw error;
    });
    if (cache) {
      this._cache[method] = result;
      setTimeout(() => {
        this._cache[method] = null;
      }, 0);
    }
    return result;
  }
  prepareRequest(method, params) {
    switch (method) {
      case "getBlockNumber":
        return ["eth_blockNumber", []];
      case "getGasPrice":
        return ["eth_gasPrice", []];
      case "getBalance":
        return ["eth_getBalance", [getLowerCase(params.address), params.blockTag]];
      case "getTransactionCount":
        return ["eth_getTransactionCount", [getLowerCase(params.address), params.blockTag]];
      case "getCode":
        return ["eth_getCode", [getLowerCase(params.address), params.blockTag]];
      case "getStorageAt":
        return ["eth_getStorageAt", [getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag]];
      case "sendTransaction":
        return ["eth_sendRawTransaction", [params.signedTransaction]];
      case "getBlock":
        if (params.blockTag) {
          return ["eth_getBlockByNumber", [params.blockTag, !!params.includeTransactions]];
        } else if (params.blockHash) {
          return ["eth_getBlockByHash", [params.blockHash, !!params.includeTransactions]];
        }
        return null;
      case "getTransaction":
        return ["eth_getTransactionByHash", [params.transactionHash]];
      case "getTransactionReceipt":
        return ["eth_getTransactionReceipt", [params.transactionHash]];
      case "call": {
        const hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");
        return ["eth_call", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];
      }
      case "estimateGas": {
        const hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");
        return ["eth_estimateGas", [hexlifyTransaction(params.transaction, { from: true })]];
      }
      case "getLogs":
        if (params.filter && params.filter.address != null) {
          params.filter.address = getLowerCase(params.filter.address);
        }
        return ["eth_getLogs", [params.filter]];
    }
    return null;
  }
  perform(method, params) {
    return __awaiter(this, void 0, void 0, function* () {
      if (method === "call" || method === "estimateGas") {
        const tx = params.transaction;
        if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {
          if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {
            const feeData = yield this.getFeeData();
            if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
              params = shallowCopy(params);
              params.transaction = shallowCopy(tx);
              delete params.transaction.type;
            }
          }
        }
      }
      const args = this.prepareRequest(method, params);
      if (args == null) {
        logger$1.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, { operation: method });
      }
      try {
        return yield this.send(args[0], args[1]);
      } catch (error) {
        return checkError(method, error, params);
      }
    });
  }
  _startEvent(event) {
    if (event.tag === "pending") {
      this._startPending();
    }
    super._startEvent(event);
  }
  _startPending() {
    if (this._pendingFilter != null) {
      return;
    }
    const self2 = this;
    const pendingFilter = this.send("eth_newPendingTransactionFilter", []);
    this._pendingFilter = pendingFilter;
    pendingFilter.then(function(filterId) {
      function poll2() {
        self2.send("eth_getFilterChanges", [filterId]).then(function(hashes) {
          if (self2._pendingFilter != pendingFilter) {
            return null;
          }
          let seq = Promise.resolve();
          hashes.forEach(function(hash2) {
            self2._emitted["t:" + hash2.toLowerCase()] = "pending";
            seq = seq.then(function() {
              return self2.getTransaction(hash2).then(function(tx) {
                self2.emit("pending", tx);
                return null;
              });
            });
          });
          return seq.then(function() {
            return timer(1e3);
          });
        }).then(function() {
          if (self2._pendingFilter != pendingFilter) {
            self2.send("eth_uninstallFilter", [filterId]);
            return;
          }
          setTimeout(function() {
            poll2();
          }, 0);
          return null;
        }).catch((error) => {
        });
      }
      poll2();
      return filterId;
    }).catch((error) => {
    });
  }
  _stopEvent(event) {
    if (event.tag === "pending" && this.listenerCount("pending") === 0) {
      this._pendingFilter = null;
    }
    super._stopEvent(event);
  }
  static hexlifyTransaction(transaction, allowExtra) {
    const allowed = shallowCopy(allowedTransactionKeys);
    if (allowExtra) {
      for (const key2 in allowExtra) {
        if (allowExtra[key2]) {
          allowed[key2] = true;
        }
      }
    }
    checkProperties(transaction, allowed);
    const result = {};
    ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(key2) {
      if (transaction[key2] == null) {
        return;
      }
      const value = hexValue(BigNumber.from(transaction[key2]));
      if (key2 === "gasLimit") {
        key2 = "gas";
      }
      result[key2] = value;
    });
    ["from", "to", "data"].forEach(function(key2) {
      if (transaction[key2] == null) {
        return;
      }
      result[key2] = hexlify(transaction[key2]);
    });
    if (transaction.accessList) {
      result["accessList"] = accessListify(transaction.accessList);
    }
    return result;
  }
}
const logger = new Logger(version$1);
let _nextId = 1;
function buildWeb3LegacyFetcher(provider, sendFunc) {
  const fetcher = "Web3LegacyFetcher";
  return function(method, params) {
    const request = {
      method,
      params,
      id: _nextId++,
      jsonrpc: "2.0"
    };
    return new Promise((resolve, reject) => {
      this.emit("debug", {
        action: "request",
        fetcher,
        request: deepCopy(request),
        provider: this
      });
      sendFunc(request, (error, response) => {
        if (error) {
          this.emit("debug", {
            action: "response",
            fetcher,
            error,
            request,
            provider: this
          });
          return reject(error);
        }
        this.emit("debug", {
          action: "response",
          fetcher,
          request,
          response,
          provider: this
        });
        if (response.error) {
          const error2 = new Error(response.error.message);
          error2.code = response.error.code;
          error2.data = response.error.data;
          return reject(error2);
        }
        resolve(response.result);
      });
    });
  };
}
function buildEip1193Fetcher(provider) {
  return function(method, params) {
    if (params == null) {
      params = [];
    }
    const request = { method, params };
    this.emit("debug", {
      action: "request",
      fetcher: "Eip1193Fetcher",
      request: deepCopy(request),
      provider: this
    });
    return provider.request(request).then((response) => {
      this.emit("debug", {
        action: "response",
        fetcher: "Eip1193Fetcher",
        request,
        response,
        provider: this
      });
      return response;
    }, (error) => {
      this.emit("debug", {
        action: "response",
        fetcher: "Eip1193Fetcher",
        request,
        error,
        provider: this
      });
      throw error;
    });
  };
}
class Web3Provider extends JsonRpcProvider {
  constructor(provider, network) {
    if (provider == null) {
      logger.throwArgumentError("missing provider", "provider", provider);
    }
    let path = null;
    let jsonRpcFetchFunc = null;
    let subprovider = null;
    if (typeof provider === "function") {
      path = "unknown:";
      jsonRpcFetchFunc = provider;
    } else {
      path = provider.host || provider.path || "";
      if (!path && provider.isMetaMask) {
        path = "metamask";
      }
      subprovider = provider;
      if (provider.request) {
        if (path === "") {
          path = "eip-1193:";
        }
        jsonRpcFetchFunc = buildEip1193Fetcher(provider);
      } else if (provider.sendAsync) {
        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));
      } else if (provider.send) {
        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));
      } else {
        logger.throwArgumentError("unsupported provider", "provider", provider);
      }
      if (!path) {
        path = "unknown:";
      }
    }
    super(path, network);
    defineReadOnly(this, "jsonRpcFetchFunc", jsonRpcFetchFunc);
    defineReadOnly(this, "provider", subprovider);
  }
  send(method, params) {
    return this.jsonRpcFetchFunc(method, params);
  }
}
const version = "units/5.7.0";
new Logger(version);
const names = [
  "wei",
  "kwei",
  "mwei",
  "gwei",
  "szabo",
  "finney",
  "ether"
];
function formatUnits(value, unitName) {
  if (typeof unitName === "string") {
    const index = names.indexOf(unitName);
    if (index !== -1) {
      unitName = 3 * index;
    }
  }
  return formatFixed(value, unitName != null ? unitName : 18);
}
function formatEther(wei) {
  return formatUnits(wei, 18);
}
let _env;
const envs = ["prod", "test"];
const setEnv = (env = "prod") => {
  if (envs.includes(env)) {
    _env = env;
  }
};
const getEnv = () => {
  return _env;
};
const options = {
  test: {
    chainId: "0x61",
    chainName: "BSC Testnet",
    rpcUrl: "https://data-seed-prebsc-1-s1.binance.org:8545/",
    blockExplorerUrl: "https://testnet.bscscan.com/",
    currencyName: "tBNB",
    currencySymbol: "tBNB",
    currencyDecimals: 18,
    serverAddress: "0xeA085D9698651e76750F07d0dE0464476187b3ca",
    btcbAddress: "0x6ce8dA28E2f864420840cF74474eFf5fD80E65B8",
    tokenAddress: "0x16B052D944c1b7731d7C240b6072530929C93b40",
    minterAddress: "0x6fB8a6D63a577401F75B6f8d9A4b82c6a0586404",
    vaultAddress: "0xF786c6D64fFEaDB387D8a3aD81607E4076E96EcD",
    vaultName: "BSC Testnet",
    vaultVersion: "1"
  },
  prod: {
    chainId: "0x38",
    chainName: "Binance Smart Chain Mainnet",
    rpcUrl: "https://bsc-dataseed1.binance.org",
    blockExplorerUrl: "https://bscscan.com/",
    currencyName: "BNB",
    currencySymbol: "BNB",
    currencyDecimals: 18,
    serverAddress: "0x85313b3910937D0975883fEFc98205dED8bA6482",
    btcbAddress: "0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c",
    tokenAddress: "0x9Dd75154Ddb9a4869a49735fafc680a0e4d67398",
    minterAddress: "0x8B8105AaC990e8E7420Ef78947F65C639977Fa41",
    vaultAddress: "0xF3155acda1219F4b1D3D28f200E61E2951e1c175",
    vaultName: "BSC Vault Mainnet",
    vaultVersion: "1"
  }
};
const _handleChainChanged = async (chainId) => {
  try {
    const checkIsRightNet = await isRightNet();
    if (checkIsRightNet) {
      emitEvent(eventType.chainChanged, { chainId });
    } else {
      emitErrorEvent(eventType.chainChanged, { chainId });
    }
  } catch {
    emitErrorEvent(eventType.chainChanged, { chainId });
  }
};
const initMetamask = () => {
  const web3Provider = getWeb3Provider();
  if (web3Provider) {
    if (!web3Provider.chainId) {
      web3Provider.chainId = options[getEnv()].chainId;
    }
    web3Provider.on("accountsChanged", async (accounts) => {
      console.log("#### - Metamask: accountsChanged - accounts", accounts);
      emitEvent(eventType.accountsChanged, { accounts });
    });
    web3Provider.on("chainChanged", async (chainId) => {
      console.log("#### - Metamask: chainChanged", chainId);
      await _handleChainChanged(chainId);
    });
    web3Provider.on("error", async (error) => {
      console.log("#### - Metamask: error", error);
      emitErrorEvent(eventType.error, error);
    });
  }
};
const _getAccount = async () => {
  if (!isMetamaskInstalled()) {
    throw new Error("Metamask is not installed");
  }
  const web3Provider = getWeb3Provider();
  const accounts = await web3Provider.request({ method: "eth_requestAccounts" });
  if (accounts && accounts[0]) {
    return accounts[0];
  } else {
    throw new Error("Can't get address");
  }
};
const isMetamaskInstalled = () => {
  return typeof window.ethereum !== "undefined" && window.ethereum.isMetaMask;
};
const getAddress = async () => {
  if (!isMetamaskInstalled()) {
    const errorMessage = "Metamask is not installed, unable to get user address";
    emitErrorEvent(eventType.metamaskNotInstalled, errorMessage);
    throw new Error(errorMessage);
  }
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.wrongNetworkOnGetAddress, error);
    throw new Error(error);
  }
  try {
    const address = await _getAccount();
    return { address };
  } catch (error) {
    emitErrorEvent(eventType.address, error);
    throw new Error(error);
  }
};
const signTypedData = async (msg, from) => {
  await checkRightNetwork();
  const web3Provider = getWeb3Provider();
  return await web3Provider.request({
    method: "eth_signTypedData_v4",
    params: [from, JSON.stringify(msg)],
    from
  });
};
setTimeout(initMetamask, 1e3);
const checkRightNetwork = async () => {
  if (!isMetamaskInstalled()) {
    emitErrorEvent(eventType.metamaskNotInstalled, "Metamask is not installed");
    throw new Error("Metamask is not installed");
  }
  const web3Provider = getWeb3Provider();
  if (web3Provider) {
    const rightNet = options[getEnv()].chainId;
    const networkID = Number(await web3Provider.request({ method: "eth_chainId" }));
    if (Number(networkID) !== Number(rightNet)) {
      throw new Error("Please change your network on Metamask");
    }
    return true;
  }
  return false;
};
const isRightNet = async () => {
  if (!isMetamaskInstalled()) {
    emitErrorEvent(eventType.metamaskNotInstalled, "Metamask is not installed");
    return false;
  }
  try {
    const result = await checkRightNetwork();
    emitEvent(eventType.network, result);
    return result;
  } catch (error) {
    emitErrorEvent(eventType.network, error);
    return false;
  }
};
const setRightNet = async () => {
  if (!isMetamaskInstalled()) {
    emitErrorEvent(eventType.network, "Metamask is not installed");
    throw new Error("Metamask is not installed");
  }
  const ethereum2 = getWeb3Provider();
  try {
    await ethereum2.request({
      method: "wallet_switchEthereumChain",
      params: [{
        chainId: options[getEnv()].chainId
      }]
    });
  } catch (switchError) {
    if (switchError.code === 4902) {
      const chainIdHex = options[getEnv()].chainId;
      const data = [{
        chainId: chainIdHex,
        chainName: options[getEnv()].chainName,
        nativeCurrency: {
          name: options[getEnv()].currencyName,
          symbol: options[getEnv()].currencySymbol,
          decimals: parseInt(options[getEnv()].currencyDecimals)
        },
        rpcUrls: [options[getEnv()].rpcUrl],
        blockExplorerUrls: [options[getEnv()].blockExplorerUrl]
      }];
      try {
        await ethereum2.request({ method: "wallet_addEthereumChain", params: data });
        const isRightNetResult = checkRightNetwork();
        if (isRightNetResult) {
          emitEvent(eventType.network, "Success, network is set to the right one");
        } else {
          emitErrorEvent(eventType.network, "Add net error: network is not changed");
        }
      } catch (error) {
        emitErrorEvent(eventType.network, error.message ? error.message : error);
      }
    }
  }
};
const getWeb3Provider = (original = false) => {
  return original ? new Web3Provider(window.ethereum) : new Web3Provider(window.ethereum).provider;
};
const getDomain = () => ({
  name: options[getEnv()].vaultName,
  version: options[getEnv()].vaultVersion,
  chainId: options[getEnv()].chainId,
  verifyingContract: options[getEnv()].vaultAddress
});
const _buildTypedSignin = (challenge) => {
  const message = {
    method: "signin",
    text: challenge
  };
  return {
    types: {
      EIP712Domain: [
        { name: "name", type: "string" },
        { name: "version", type: "string" },
        { name: "chainId", type: "uint256" },
        { name: "verifyingContract", type: "address" }
      ],
      Signin: [
        { name: "method", type: "string" },
        { name: "text", type: "string" }
      ]
    },
    domain: getDomain(),
    primaryType: "Signin",
    message
  };
};
const signChallenge = async (challenge, address) => {
  const msg = _buildTypedSignin(challenge);
  try {
    const response = await signTypedData(msg, address);
    emitEvent(eventType.challengeSigned, { signature: response });
    return response;
  } catch (error) {
    emitErrorEvent(eventType.challengeNotSigned, error);
    throw error;
  }
};
const authToken = "authToken";
const expireToken = "expireToken";
const expirationPeriod = 12e5;
const authTokenName = (address) => `${authToken}_${address.toLowerCase()}`;
const expireTokenName = (address) => `${expireToken}_${address.toLowerCase()}`;
const setToken = (address, token2) => {
  try {
    localStorage.setItem(authTokenName(address), token2);
    localStorage.setItem(expireTokenName(address), Date.now() + expirationPeriod);
    emitEvent(eventType.token, "JWT token received");
  } catch (error) {
    emitErrorEvent(eventType.token, error);
  }
};
const getToken = (address) => {
  return localStorage.getItem(authTokenName(address));
};
const isLogged = (address) => {
  const token2 = getToken(address);
  if (token2) {
    const expirationTime = localStorage.getItem(expireTokenName(address));
    if (expirationTime && expirationTime > Date.now()) {
      return true;
    }
  }
  return false;
};
var token = {
  signChallenge,
  setToken,
  getToken,
  isLogged
};
const ALICE = 0;
const BOB = 1;
const savedClameType = {
  claimConfirmed: "claimConfirmed",
  claimAlice: "claimAlice"
};
const claimConfirmedName = (address) => {
  if (typeof address === "undefined") {
    return null;
  }
  return `${savedClameType.claimConfirmed}_${address.toLowerCase()}`;
};
const claimAliceName = (address) => `${savedClameType.claimAlice}_${address.toLowerCase()}`;
const saveConfirmedClaim = (claim) => {
  localStorage.setItem(claimConfirmedName(claim.addresses[ALICE]), JSON.stringify(claim));
};
const getConfirmedClaim = (address) => {
  if (!address) {
    return null;
  }
  return JSON.parse(localStorage.getItem(claimConfirmedName(address)));
};
const saveClaimAlice = (claim) => {
  localStorage.setItem(claimAliceName(claim.addresses[ALICE]), JSON.stringify(claim));
};
const getClaimAlice = (address) => {
  if (!address) {
    return null;
  }
  return JSON.parse(localStorage.getItem(claimAliceName(address)));
};
const downloadLastClaim = (address) => {
  const lastClaim2 = localStorage.getItem(claimConfirmedName(address));
  if (!lastClaim2) {
    return;
  }
  const text = _prepareJsonContent(lastClaim2);
  const element = document.createElement("a");
  const filename = `lastConfirmedClaim-${new Date().toISOString()}.json`;
  element.setAttribute("href", "data:application/json;charset=utf-8," + encodeURIComponent(text));
  element.setAttribute("download", filename);
  element.style.display = "none";
  document.body.appendChild(element);
  element.click();
  document.body.removeChild(element);
};
const _prepareJsonContent = (jsonString) => {
  jsonString = jsonString.replace("{", "{\n");
  jsonString = jsonString.replace("}", "\n}");
  jsonString = jsonString.replaceAll(",", ",\n");
  return jsonString;
};
var claimStorage = {
  saveConfirmedClaim,
  getConfirmedClaim,
  saveClaimAlice,
  getClaimAlice,
  downloadLastClaim
};
const toFixed = (value, decimal = 2) => {
  const aBN = new BigNumber$1(value + "");
  return aBN.toFixed(decimal);
};
const minus = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.minus(bBN).toFixed();
};
const plus = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.plus(bBN).toFixed();
};
const roundDecimals = (a, decimals = 2) => {
  const aBN = new BigNumber$1(a + "");
  return aBN.toFixed(decimals);
};
const roundUpToTen = (a) => {
  if (a === "0" || a === 0) {
    return "10";
  } else if (lt(a, 1)) {
    const a2 = a.replace("0.", "");
    const l = a2.length;
    console.log("l", l);
    const p = pow(10, l);
    console.log({ p });
    const b = times(a, p);
    console.log({ b });
    const c = roundUpToTen(b);
    console.log({ c });
    const d = div(c, p);
    console.log({ d });
    return d;
  } else {
    const b = times(div(a, 10, 0, BigNumber$1.ROUND_UP), 10);
    return b === a + "" ? roundUpToTen(plus(a, 1)) : b;
  }
};
const times = (a, b, decimals = 18, type = BigNumber$1.ROUND_FLOOR) => {
  let aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  aBN = aBN.times(bBN).toFixed();
  decimals = parseInt(decimals);
  return dp(aBN, decimals, type);
};
const timesFloor = (a, b, decimals = 18) => {
  return times(a, b, decimals);
};
const div = (a, b, decimals = 18, type = BigNumber$1.ROUND_FLOOR) => {
  let aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  aBN = aBN.div(bBN).toFixed();
  decimals = parseInt(decimals);
  return dp(aBN, decimals, type);
};
const divFloor = (a, b, decimals = 18) => {
  return div(a, b, decimals);
};
const pow = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.pow(bBN);
};
const eq4 = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.eq(bBN);
};
const lt = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.lt(bBN);
};
const gt = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.gt(bBN);
};
const lte = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.lte(bBN);
};
const gte = (a, b) => {
  const aBN = new BigNumber$1(a + "");
  const bBN = new BigNumber$1(b + "");
  return aBN.gte(bBN);
};
const isNaN$1 = (a) => {
  const aBN = new BigNumber$1(a + "");
  return aBN.isNaN();
};
const dp = (a, n, type) => {
  const aBN = new BigNumber$1(a + "");
  return aBN.dp(parseInt(n), type).toFixed();
};
const negated = (a) => {
  const aBN = new BigNumber$1(a + "");
  return aBN.negated().toFixed();
};
const abs = (a) => {
  const aBN = new BigNumber$1(a + "");
  return aBN.abs().toFixed();
};
var bnUtils = {
  minus,
  plus,
  times,
  div,
  pow,
  eq: eq4,
  lt,
  gt,
  lte,
  gte,
  isNaN: isNaN$1,
  dp,
  negated,
  timesFloor,
  divFloor,
  toFixed,
  roundUpToTen,
  roundDecimals,
  abs
};
const formatNumber = (number, reduceDecimalTo = 18) => {
  if (!number)
    return;
  const x = formatEther(number);
  const a = x.split(".");
  const integer = a[0].toString().replace(/\b0+(?!$)/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  if (a[1]) {
    if (reduceDecimalTo) {
      const decimals = a[1].substring(0, reduceDecimalTo).replace(/0+$/, "");
      return integer + `${decimals ? "." + decimals : ""}`;
    } else {
      return integer + "." + a[1];
    }
  } else {
    return integer;
  }
};
const isValidNewClaim = (claim) => {
  const lastClaim2 = claimStorage.getConfirmedClaim(claim.addresses[ALICE]);
  if (lastClaim2) {
    const wasWithdraw = lastClaim2.closed === 1;
    const id2 = wasWithdraw ? lastClaim2.id + 1 : lastClaim2.id;
    const nonce = wasWithdraw ? 1 : lastClaim2.nonce + 1;
    if (id2 !== claim.id) {
      throw new Error(`Invalid claim id: ${claim.id} - last claim id: ${lastClaim2.id}${wasWithdraw ? ". id must change after withdraw" : ""}`);
    }
    if (nonce !== claim.nonce) {
      throw new Error(`Invalid claim nonce: ${claim.nonce} ${wasWithdraw ? " - channel id is changed" : `- last claim nonce: ${lastClaim2.nonce}`}`);
    }
    if (claim.addresses[BOB] !== options[getEnv()].serverAddress) {
      throw new Error(`Invalid address of Server: ${claim.addresses[BOB]} - expected: ${options[getEnv()].serverAddress}`);
    }
    const balance = wasWithdraw ? claim.amount : bnUtils.plus(bnUtils.minus(lastClaim2.cumulativeDebits[BOB], lastClaim2.cumulativeDebits[ALICE]), claim.amount);
    _controlDebits(balance, claim.cumulativeDebits);
  } else {
    if (claim.id !== 1) {
      throw new Error(`Invalid claim id: ${claim.id}`);
    }
    if (claim.nonce !== 1) {
      throw new Error(`Invalid claim nonce: ${claim.nonce}`);
    }
    if (claim.addresses[BOB] !== options[getEnv()].serverAddress) {
      throw new Error(`Invalid address of Server: ${claim.addresses[BOB]} - expected: ${options[getEnv()].serverAddress}`);
    }
    const balance = claim.amount;
    _controlDebits(balance, claim.cumulativeDebits);
  }
  _controlMesssage(claim);
  return true;
};
const _controlMesssage = (claim) => {
  if (claim.closed === 0) {
    const messageForAlice = `You ${bnUtils.gt(claim.amount, "0") ? "receive" : "spend"}: ${formatNumber(bnUtils.abs(claim.amount))} DE.GA`;
    if (claim.messageForAlice !== messageForAlice) {
      throw new Error(`Invalid message for Alice: ${claim.messageForAlice} - expected: ${messageForAlice}`);
    }
  }
};
const _controlDebits = (balance, cumulativeDebits) => {
  if (bnUtils.gt(balance, 0)) {
    if (!bnUtils.eq(cumulativeDebits[ALICE], 0)) {
      throw new Error(`Invalid claim cumulative debit of Client: ${cumulativeDebits[ALICE]} - expected: 0`);
    }
    if (!bnUtils.eq(cumulativeDebits[BOB], balance)) {
      throw new Error(`Invalid claim cumulative debit of Server: ${cumulativeDebits[BOB]} - expected: ${balance}`);
    }
  } else {
    if (!bnUtils.eq(cumulativeDebits[ALICE], bnUtils.negated(balance))) {
      throw new Error(`Invalid claim cumulative debit of Client: ${cumulativeDebits[ALICE]} - expected: ${-balance}`);
    }
    if (!bnUtils.eq(cumulativeDebits[BOB], 0)) {
      throw new Error(`Invalid claim cumulative debit of Server: ${cumulativeDebits[BOB]} - expected: 0`);
    }
  }
};
const isValidClaimAlice = (claim) => {
  let isValid = isValidNewClaim(claim);
  if (isValid) {
    const savedClaim = claimStorage.getClaimAlice(claim.addresses[ALICE]);
    if (savedClaim) {
      isValid = areEqualClaims(claim, savedClaim);
    }
  }
  return isValid;
};
const areEqualClaims = (claim, savedClaim, isWithdraw = false) => {
  if (isWithdraw && savedClaim.closed === 1) {
    if (savedClaim.id + 1 !== claim.id) {
      throw new Error(`Invalid claim id: ${claim.id} - channel was closed and saved claim id: ${savedClaim.id}`);
    }
  } else if (savedClaim.id !== claim.id) {
    throw new Error(`Invalid claim id: ${claim.id} - saved claim id: ${savedClaim.id}`);
  }
  if (isWithdraw && savedClaim.closed === 1) {
    if (claim.nonce !== 1) {
      throw new Error(`Invalid claim nonce: ${claim.nonce} - channel was closed`);
    }
  } else {
    const nonce = isWithdraw ? claim.nonce - 1 : claim.nonce;
    if (savedClaim.nonce !== nonce) {
      throw new Error(`Invalid claim nonce: ${claim.nonce} - saved claim nonce: ${savedClaim.nonce}`);
    }
  }
  if (savedClaim.cumulativeDebits[ALICE] !== claim.cumulativeDebits[ALICE]) {
    throw new Error(`Invalid claim cumulative debit of Client: ${claim.cumulativeDebits[ALICE]} - saved claim: ${savedClaim.cumulativeDebits[ALICE]}`);
  }
  if (savedClaim.cumulativeDebits[BOB] !== claim.cumulativeDebits[BOB]) {
    throw new Error(`Invalid claim cumulative debit of Server: ${claim.cumulativeDebits[BOB]} - saved claim: ${savedClaim.cumulativeDebits[BOB]}`);
  }
  if (savedClaim.addresses[ALICE] !== claim.addresses[ALICE]) {
    throw new Error(`Invalid address of Client: ${claim.addresses[ALICE]} - saved claim: ${savedClaim.addresses[ALICE]}`);
  }
  if (savedClaim.addresses[BOB] !== claim.addresses[BOB]) {
    throw new Error(`Invalid address of Server: ${claim.addresses[BOB]} - saved claim: ${savedClaim.addresses[BOB]}`);
  }
  if (!isWithdraw && savedClaim.timestamp !== claim.timestamp) {
    throw new Error(`Invalid timestamp of Server: ${claim.timestamp} - saved claim: ${savedClaim.timestamp}`);
  }
  if (!isWithdraw && savedClaim.messageForAlice !== claim.messageForAlice) {
    throw new Error(`Invalid message for Alice: ${claim.messageForAlice} - expected: ${savedClaim.messageForAlice}`);
  }
  return true;
};
const isValidWithdraw = (claim, balance) => {
  _controlWithdrawMessage(claim, balance);
  const savedClaim = claimStorage.getConfirmedClaim(claim.addresses[ALICE]);
  if (savedClaim) {
    return areEqualClaims(claim, savedClaim, true);
  }
  return true;
};
const _controlWithdrawMessage = (claim, balance) => {
  const balanceToWithdraw = bnUtils.plus(balance, bnUtils.minus(claim.cumulativeDebits[BOB], claim.cumulativeDebits[ALICE]));
  const messageForAlice = `You are withdrawing: ${formatNumber(balanceToWithdraw)} DE.GA`;
  if (claim.messageForAlice !== messageForAlice) {
    throw new Error(`Invalid message for Alice: ${claim.messageForAlice} - expected: ${messageForAlice}`);
  }
};
var claimControls = {
  isValidNewClaim,
  isValidClaimAlice,
  areEqualClaims,
  isValidWithdraw
};
var web3_min = { exports: {} };
(function(module, exports) {
  !function(e, t) {
    module.exports = t();
  }(window, function() {
    return function(e) {
      var t = {};
      function r2(n) {
        if (t[n])
          return t[n].exports;
        var i = t[n] = { i: n, l: false, exports: {} };
        return e[n].call(i.exports, i, i.exports, r2), i.l = true, i.exports;
      }
      return r2.m = e, r2.c = t, r2.d = function(e2, t2, n) {
        r2.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: n });
      }, r2.r = function(e2) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      }, r2.t = function(e2, t2) {
        if (1 & t2 && (e2 = r2(e2)), 8 & t2)
          return e2;
        if (4 & t2 && "object" == typeof e2 && e2 && e2.__esModule)
          return e2;
        var n = /* @__PURE__ */ Object.create(null);
        if (r2.r(n), Object.defineProperty(n, "default", { enumerable: true, value: e2 }), 2 & t2 && "string" != typeof e2)
          for (var i in e2)
            r2.d(n, i, function(t3) {
              return e2[t3];
            }.bind(null, i));
        return n;
      }, r2.n = function(e2) {
        var t2 = e2 && e2.__esModule ? function() {
          return e2.default;
        } : function() {
          return e2;
        };
        return r2.d(t2, "a", t2), t2;
      }, r2.o = function(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }, r2.p = "", r2(r2.s = 252);
    }([function(e, t, r2) {
      e.exports = function(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      (function(e2) {
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <http://feross.org>
         * @license  MIT
         */
        var n = r2(262), i = r2(263), o = r2(130);
        function a() {
          return f2.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
        }
        function s2(e3, t2) {
          if (a() < t2)
            throw new RangeError("Invalid typed array length");
          return f2.TYPED_ARRAY_SUPPORT ? (e3 = new Uint8Array(t2)).__proto__ = f2.prototype : (null === e3 && (e3 = new f2(t2)), e3.length = t2), e3;
        }
        function f2(e3, t2, r3) {
          if (!(f2.TYPED_ARRAY_SUPPORT || this instanceof f2))
            return new f2(e3, t2, r3);
          if ("number" == typeof e3) {
            if ("string" == typeof t2)
              throw new Error("If encoding is specified then the first argument must be a string");
            return d(this, e3);
          }
          return c(this, e3, t2, r3);
        }
        function c(e3, t2, r3, n2) {
          if ("number" == typeof t2)
            throw new TypeError('"value" argument must not be a number');
          return "undefined" != typeof ArrayBuffer && t2 instanceof ArrayBuffer ? function(e4, t3, r4, n3) {
            if (t3.byteLength, r4 < 0 || t3.byteLength < r4)
              throw new RangeError("'offset' is out of bounds");
            if (t3.byteLength < r4 + (n3 || 0))
              throw new RangeError("'length' is out of bounds");
            t3 = void 0 === r4 && void 0 === n3 ? new Uint8Array(t3) : void 0 === n3 ? new Uint8Array(t3, r4) : new Uint8Array(t3, r4, n3);
            f2.TYPED_ARRAY_SUPPORT ? (e4 = t3).__proto__ = f2.prototype : e4 = h(e4, t3);
            return e4;
          }(e3, t2, r3, n2) : "string" == typeof t2 ? function(e4, t3, r4) {
            "string" == typeof r4 && "" !== r4 || (r4 = "utf8");
            if (!f2.isEncoding(r4))
              throw new TypeError('"encoding" must be a valid string encoding');
            var n3 = 0 | p(t3, r4), i2 = (e4 = s2(e4, n3)).write(t3, r4);
            i2 !== n3 && (e4 = e4.slice(0, i2));
            return e4;
          }(e3, t2, r3) : function(e4, t3) {
            if (f2.isBuffer(t3)) {
              var r4 = 0 | l(t3.length);
              return 0 === (e4 = s2(e4, r4)).length || t3.copy(e4, 0, 0, r4), e4;
            }
            if (t3) {
              if ("undefined" != typeof ArrayBuffer && t3.buffer instanceof ArrayBuffer || "length" in t3)
                return "number" != typeof t3.length || (n3 = t3.length) != n3 ? s2(e4, 0) : h(e4, t3);
              if ("Buffer" === t3.type && o(t3.data))
                return h(e4, t3.data);
            }
            var n3;
            throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
          }(e3, t2);
        }
        function u(e3) {
          if ("number" != typeof e3)
            throw new TypeError('"size" argument must be a number');
          if (e3 < 0)
            throw new RangeError('"size" argument must not be negative');
        }
        function d(e3, t2) {
          if (u(t2), e3 = s2(e3, t2 < 0 ? 0 : 0 | l(t2)), !f2.TYPED_ARRAY_SUPPORT)
            for (var r3 = 0; r3 < t2; ++r3)
              e3[r3] = 0;
          return e3;
        }
        function h(e3, t2) {
          var r3 = t2.length < 0 ? 0 : 0 | l(t2.length);
          e3 = s2(e3, r3);
          for (var n2 = 0; n2 < r3; n2 += 1)
            e3[n2] = 255 & t2[n2];
          return e3;
        }
        function l(e3) {
          if (e3 >= a())
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a().toString(16) + " bytes");
          return 0 | e3;
        }
        function p(e3, t2) {
          if (f2.isBuffer(e3))
            return e3.length;
          if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e3) || e3 instanceof ArrayBuffer))
            return e3.byteLength;
          "string" != typeof e3 && (e3 = "" + e3);
          var r3 = e3.length;
          if (0 === r3)
            return 0;
          for (var n2 = false; ; )
            switch (t2) {
              case "ascii":
              case "latin1":
              case "binary":
                return r3;
              case "utf8":
              case "utf-8":
              case void 0:
                return F(e3).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r3;
              case "hex":
                return r3 >>> 1;
              case "base64":
                return q(e3).length;
              default:
                if (n2)
                  return F(e3).length;
                t2 = ("" + t2).toLowerCase(), n2 = true;
            }
        }
        function b(e3, t2, r3) {
          var n2 = false;
          if ((void 0 === t2 || t2 < 0) && (t2 = 0), t2 > this.length)
            return "";
          if ((void 0 === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0)
            return "";
          if ((r3 >>>= 0) <= (t2 >>>= 0))
            return "";
          for (e3 || (e3 = "utf8"); ; )
            switch (e3) {
              case "hex":
                return T(this, t2, r3);
              case "utf8":
              case "utf-8":
                return x(this, t2, r3);
              case "ascii":
                return P(this, t2, r3);
              case "latin1":
              case "binary":
                return O(this, t2, r3);
              case "base64":
                return E(this, t2, r3);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return B(this, t2, r3);
              default:
                if (n2)
                  throw new TypeError("Unknown encoding: " + e3);
                e3 = (e3 + "").toLowerCase(), n2 = true;
            }
        }
        function y(e3, t2, r3) {
          var n2 = e3[t2];
          e3[t2] = e3[r3], e3[r3] = n2;
        }
        function v(e3, t2, r3, n2, i2) {
          if (0 === e3.length)
            return -1;
          if ("string" == typeof r3 ? (n2 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), r3 = +r3, isNaN(r3) && (r3 = i2 ? 0 : e3.length - 1), r3 < 0 && (r3 = e3.length + r3), r3 >= e3.length) {
            if (i2)
              return -1;
            r3 = e3.length - 1;
          } else if (r3 < 0) {
            if (!i2)
              return -1;
            r3 = 0;
          }
          if ("string" == typeof t2 && (t2 = f2.from(t2, n2)), f2.isBuffer(t2))
            return 0 === t2.length ? -1 : m(e3, t2, r3, n2, i2);
          if ("number" == typeof t2)
            return t2 &= 255, f2.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e3, t2, r3) : Uint8Array.prototype.lastIndexOf.call(e3, t2, r3) : m(e3, [t2], r3, n2, i2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function m(e3, t2, r3, n2, i2) {
          var o2, a2 = 1, s3 = e3.length, f3 = t2.length;
          if (void 0 !== n2 && ("ucs2" === (n2 = String(n2).toLowerCase()) || "ucs-2" === n2 || "utf16le" === n2 || "utf-16le" === n2)) {
            if (e3.length < 2 || t2.length < 2)
              return -1;
            a2 = 2, s3 /= 2, f3 /= 2, r3 /= 2;
          }
          function c2(e4, t3) {
            return 1 === a2 ? e4[t3] : e4.readUInt16BE(t3 * a2);
          }
          if (i2) {
            var u2 = -1;
            for (o2 = r3; o2 < s3; o2++)
              if (c2(e3, o2) === c2(t2, -1 === u2 ? 0 : o2 - u2)) {
                if (-1 === u2 && (u2 = o2), o2 - u2 + 1 === f3)
                  return u2 * a2;
              } else
                -1 !== u2 && (o2 -= o2 - u2), u2 = -1;
          } else
            for (r3 + f3 > s3 && (r3 = s3 - f3), o2 = r3; o2 >= 0; o2--) {
              for (var d2 = true, h2 = 0; h2 < f3; h2++)
                if (c2(e3, o2 + h2) !== c2(t2, h2)) {
                  d2 = false;
                  break;
                }
              if (d2)
                return o2;
            }
          return -1;
        }
        function g(e3, t2, r3, n2) {
          r3 = Number(r3) || 0;
          var i2 = e3.length - r3;
          n2 ? (n2 = Number(n2)) > i2 && (n2 = i2) : n2 = i2;
          var o2 = t2.length;
          if (o2 % 2 != 0)
            throw new TypeError("Invalid hex string");
          n2 > o2 / 2 && (n2 = o2 / 2);
          for (var a2 = 0; a2 < n2; ++a2) {
            var s3 = parseInt(t2.substr(2 * a2, 2), 16);
            if (isNaN(s3))
              return a2;
            e3[r3 + a2] = s3;
          }
          return a2;
        }
        function w(e3, t2, r3, n2) {
          return z(F(t2, e3.length - r3), e3, r3, n2);
        }
        function _(e3, t2, r3, n2) {
          return z(function(e4) {
            for (var t3 = [], r4 = 0; r4 < e4.length; ++r4)
              t3.push(255 & e4.charCodeAt(r4));
            return t3;
          }(t2), e3, r3, n2);
        }
        function k(e3, t2, r3, n2) {
          return _(e3, t2, r3, n2);
        }
        function A(e3, t2, r3, n2) {
          return z(q(t2), e3, r3, n2);
        }
        function S(e3, t2, r3, n2) {
          return z(function(e4, t3) {
            for (var r4, n3, i2, o2 = [], a2 = 0; a2 < e4.length && !((t3 -= 2) < 0); ++a2)
              r4 = e4.charCodeAt(a2), n3 = r4 >> 8, i2 = r4 % 256, o2.push(i2), o2.push(n3);
            return o2;
          }(t2, e3.length - r3), e3, r3, n2);
        }
        function E(e3, t2, r3) {
          return 0 === t2 && r3 === e3.length ? n.fromByteArray(e3) : n.fromByteArray(e3.slice(t2, r3));
        }
        function x(e3, t2, r3) {
          r3 = Math.min(e3.length, r3);
          for (var n2 = [], i2 = t2; i2 < r3; ) {
            var o2, a2, s3, f3, c2 = e3[i2], u2 = null, d2 = c2 > 239 ? 4 : c2 > 223 ? 3 : c2 > 191 ? 2 : 1;
            if (i2 + d2 <= r3)
              switch (d2) {
                case 1:
                  c2 < 128 && (u2 = c2);
                  break;
                case 2:
                  128 == (192 & (o2 = e3[i2 + 1])) && (f3 = (31 & c2) << 6 | 63 & o2) > 127 && (u2 = f3);
                  break;
                case 3:
                  o2 = e3[i2 + 1], a2 = e3[i2 + 2], 128 == (192 & o2) && 128 == (192 & a2) && (f3 = (15 & c2) << 12 | (63 & o2) << 6 | 63 & a2) > 2047 && (f3 < 55296 || f3 > 57343) && (u2 = f3);
                  break;
                case 4:
                  o2 = e3[i2 + 1], a2 = e3[i2 + 2], s3 = e3[i2 + 3], 128 == (192 & o2) && 128 == (192 & a2) && 128 == (192 & s3) && (f3 = (15 & c2) << 18 | (63 & o2) << 12 | (63 & a2) << 6 | 63 & s3) > 65535 && f3 < 1114112 && (u2 = f3);
              }
            null === u2 ? (u2 = 65533, d2 = 1) : u2 > 65535 && (u2 -= 65536, n2.push(u2 >>> 10 & 1023 | 55296), u2 = 56320 | 1023 & u2), n2.push(u2), i2 += d2;
          }
          return function(e4) {
            var t3 = e4.length;
            if (t3 <= 4096)
              return String.fromCharCode.apply(String, e4);
            var r4 = "", n3 = 0;
            for (; n3 < t3; )
              r4 += String.fromCharCode.apply(String, e4.slice(n3, n3 += 4096));
            return r4;
          }(n2);
        }
        t.Buffer = f2, t.SlowBuffer = function(e3) {
          +e3 != e3 && (e3 = 0);
          return f2.alloc(+e3);
        }, t.INSPECT_MAX_BYTES = 50, f2.TYPED_ARRAY_SUPPORT = void 0 !== e2.TYPED_ARRAY_SUPPORT ? e2.TYPED_ARRAY_SUPPORT : function() {
          try {
            var e3 = new Uint8Array(1);
            return e3.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
              return 42;
            } }, 42 === e3.foo() && "function" == typeof e3.subarray && 0 === e3.subarray(1, 1).byteLength;
          } catch (e4) {
            return false;
          }
        }(), t.kMaxLength = a(), f2.poolSize = 8192, f2._augment = function(e3) {
          return e3.__proto__ = f2.prototype, e3;
        }, f2.from = function(e3, t2, r3) {
          return c(null, e3, t2, r3);
        }, f2.TYPED_ARRAY_SUPPORT && (f2.prototype.__proto__ = Uint8Array.prototype, f2.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && f2[Symbol.species] === f2 && Object.defineProperty(f2, Symbol.species, { value: null, configurable: true })), f2.alloc = function(e3, t2, r3) {
          return function(e4, t3, r4, n2) {
            return u(t3), t3 <= 0 ? s2(e4, t3) : void 0 !== r4 ? "string" == typeof n2 ? s2(e4, t3).fill(r4, n2) : s2(e4, t3).fill(r4) : s2(e4, t3);
          }(null, e3, t2, r3);
        }, f2.allocUnsafe = function(e3) {
          return d(null, e3);
        }, f2.allocUnsafeSlow = function(e3) {
          return d(null, e3);
        }, f2.isBuffer = function(e3) {
          return !(null == e3 || !e3._isBuffer);
        }, f2.compare = function(e3, t2) {
          if (!f2.isBuffer(e3) || !f2.isBuffer(t2))
            throw new TypeError("Arguments must be Buffers");
          if (e3 === t2)
            return 0;
          for (var r3 = e3.length, n2 = t2.length, i2 = 0, o2 = Math.min(r3, n2); i2 < o2; ++i2)
            if (e3[i2] !== t2[i2]) {
              r3 = e3[i2], n2 = t2[i2];
              break;
            }
          return r3 < n2 ? -1 : n2 < r3 ? 1 : 0;
        }, f2.isEncoding = function(e3) {
          switch (String(e3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, f2.concat = function(e3, t2) {
          if (!o(e3))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e3.length)
            return f2.alloc(0);
          var r3;
          if (void 0 === t2)
            for (t2 = 0, r3 = 0; r3 < e3.length; ++r3)
              t2 += e3[r3].length;
          var n2 = f2.allocUnsafe(t2), i2 = 0;
          for (r3 = 0; r3 < e3.length; ++r3) {
            var a2 = e3[r3];
            if (!f2.isBuffer(a2))
              throw new TypeError('"list" argument must be an Array of Buffers');
            a2.copy(n2, i2), i2 += a2.length;
          }
          return n2;
        }, f2.byteLength = p, f2.prototype._isBuffer = true, f2.prototype.swap16 = function() {
          var e3 = this.length;
          if (e3 % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t2 = 0; t2 < e3; t2 += 2)
            y(this, t2, t2 + 1);
          return this;
        }, f2.prototype.swap32 = function() {
          var e3 = this.length;
          if (e3 % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t2 = 0; t2 < e3; t2 += 4)
            y(this, t2, t2 + 3), y(this, t2 + 1, t2 + 2);
          return this;
        }, f2.prototype.swap64 = function() {
          var e3 = this.length;
          if (e3 % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t2 = 0; t2 < e3; t2 += 8)
            y(this, t2, t2 + 7), y(this, t2 + 1, t2 + 6), y(this, t2 + 2, t2 + 5), y(this, t2 + 3, t2 + 4);
          return this;
        }, f2.prototype.toString = function() {
          var e3 = 0 | this.length;
          return 0 === e3 ? "" : 0 === arguments.length ? x(this, 0, e3) : b.apply(this, arguments);
        }, f2.prototype.equals = function(e3) {
          if (!f2.isBuffer(e3))
            throw new TypeError("Argument must be a Buffer");
          return this === e3 || 0 === f2.compare(this, e3);
        }, f2.prototype.inspect = function() {
          var e3 = "", r3 = t.INSPECT_MAX_BYTES;
          return this.length > 0 && (e3 = this.toString("hex", 0, r3).match(/.{2}/g).join(" "), this.length > r3 && (e3 += " ... ")), "<Buffer " + e3 + ">";
        }, f2.prototype.compare = function(e3, t2, r3, n2, i2) {
          if (!f2.isBuffer(e3))
            throw new TypeError("Argument must be a Buffer");
          if (void 0 === t2 && (t2 = 0), void 0 === r3 && (r3 = e3 ? e3.length : 0), void 0 === n2 && (n2 = 0), void 0 === i2 && (i2 = this.length), t2 < 0 || r3 > e3.length || n2 < 0 || i2 > this.length)
            throw new RangeError("out of range index");
          if (n2 >= i2 && t2 >= r3)
            return 0;
          if (n2 >= i2)
            return -1;
          if (t2 >= r3)
            return 1;
          if (this === e3)
            return 0;
          for (var o2 = (i2 >>>= 0) - (n2 >>>= 0), a2 = (r3 >>>= 0) - (t2 >>>= 0), s3 = Math.min(o2, a2), c2 = this.slice(n2, i2), u2 = e3.slice(t2, r3), d2 = 0; d2 < s3; ++d2)
            if (c2[d2] !== u2[d2]) {
              o2 = c2[d2], a2 = u2[d2];
              break;
            }
          return o2 < a2 ? -1 : a2 < o2 ? 1 : 0;
        }, f2.prototype.includes = function(e3, t2, r3) {
          return -1 !== this.indexOf(e3, t2, r3);
        }, f2.prototype.indexOf = function(e3, t2, r3) {
          return v(this, e3, t2, r3, true);
        }, f2.prototype.lastIndexOf = function(e3, t2, r3) {
          return v(this, e3, t2, r3, false);
        }, f2.prototype.write = function(e3, t2, r3, n2) {
          if (void 0 === t2)
            n2 = "utf8", r3 = this.length, t2 = 0;
          else if (void 0 === r3 && "string" == typeof t2)
            n2 = t2, r3 = this.length, t2 = 0;
          else {
            if (!isFinite(t2))
              throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t2 |= 0, isFinite(r3) ? (r3 |= 0, void 0 === n2 && (n2 = "utf8")) : (n2 = r3, r3 = void 0);
          }
          var i2 = this.length - t2;
          if ((void 0 === r3 || r3 > i2) && (r3 = i2), e3.length > 0 && (r3 < 0 || t2 < 0) || t2 > this.length)
            throw new RangeError("Attempt to write outside buffer bounds");
          n2 || (n2 = "utf8");
          for (var o2 = false; ; )
            switch (n2) {
              case "hex":
                return g(this, e3, t2, r3);
              case "utf8":
              case "utf-8":
                return w(this, e3, t2, r3);
              case "ascii":
                return _(this, e3, t2, r3);
              case "latin1":
              case "binary":
                return k(this, e3, t2, r3);
              case "base64":
                return A(this, e3, t2, r3);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return S(this, e3, t2, r3);
              default:
                if (o2)
                  throw new TypeError("Unknown encoding: " + n2);
                n2 = ("" + n2).toLowerCase(), o2 = true;
            }
        }, f2.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        function P(e3, t2, r3) {
          var n2 = "";
          r3 = Math.min(e3.length, r3);
          for (var i2 = t2; i2 < r3; ++i2)
            n2 += String.fromCharCode(127 & e3[i2]);
          return n2;
        }
        function O(e3, t2, r3) {
          var n2 = "";
          r3 = Math.min(e3.length, r3);
          for (var i2 = t2; i2 < r3; ++i2)
            n2 += String.fromCharCode(e3[i2]);
          return n2;
        }
        function T(e3, t2, r3) {
          var n2 = e3.length;
          (!t2 || t2 < 0) && (t2 = 0), (!r3 || r3 < 0 || r3 > n2) && (r3 = n2);
          for (var i2 = "", o2 = t2; o2 < r3; ++o2)
            i2 += D(e3[o2]);
          return i2;
        }
        function B(e3, t2, r3) {
          for (var n2 = e3.slice(t2, r3), i2 = "", o2 = 0; o2 < n2.length; o2 += 2)
            i2 += String.fromCharCode(n2[o2] + 256 * n2[o2 + 1]);
          return i2;
        }
        function M(e3, t2, r3) {
          if (e3 % 1 != 0 || e3 < 0)
            throw new RangeError("offset is not uint");
          if (e3 + t2 > r3)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function R(e3, t2, r3, n2, i2, o2) {
          if (!f2.isBuffer(e3))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t2 > i2 || t2 < o2)
            throw new RangeError('"value" argument is out of bounds');
          if (r3 + n2 > e3.length)
            throw new RangeError("Index out of range");
        }
        function I(e3, t2, r3, n2) {
          t2 < 0 && (t2 = 65535 + t2 + 1);
          for (var i2 = 0, o2 = Math.min(e3.length - r3, 2); i2 < o2; ++i2)
            e3[r3 + i2] = (t2 & 255 << 8 * (n2 ? i2 : 1 - i2)) >>> 8 * (n2 ? i2 : 1 - i2);
        }
        function C(e3, t2, r3, n2) {
          t2 < 0 && (t2 = 4294967295 + t2 + 1);
          for (var i2 = 0, o2 = Math.min(e3.length - r3, 4); i2 < o2; ++i2)
            e3[r3 + i2] = t2 >>> 8 * (n2 ? i2 : 3 - i2) & 255;
        }
        function U(e3, t2, r3, n2, i2, o2) {
          if (r3 + n2 > e3.length)
            throw new RangeError("Index out of range");
          if (r3 < 0)
            throw new RangeError("Index out of range");
        }
        function j(e3, t2, r3, n2, o2) {
          return o2 || U(e3, 0, r3, 4), i.write(e3, t2, r3, n2, 23, 4), r3 + 4;
        }
        function N(e3, t2, r3, n2, o2) {
          return o2 || U(e3, 0, r3, 8), i.write(e3, t2, r3, n2, 52, 8), r3 + 8;
        }
        f2.prototype.slice = function(e3, t2) {
          var r3, n2 = this.length;
          if ((e3 = ~~e3) < 0 ? (e3 += n2) < 0 && (e3 = 0) : e3 > n2 && (e3 = n2), (t2 = void 0 === t2 ? n2 : ~~t2) < 0 ? (t2 += n2) < 0 && (t2 = 0) : t2 > n2 && (t2 = n2), t2 < e3 && (t2 = e3), f2.TYPED_ARRAY_SUPPORT)
            (r3 = this.subarray(e3, t2)).__proto__ = f2.prototype;
          else {
            var i2 = t2 - e3;
            r3 = new f2(i2, void 0);
            for (var o2 = 0; o2 < i2; ++o2)
              r3[o2] = this[o2 + e3];
          }
          return r3;
        }, f2.prototype.readUIntLE = function(e3, t2, r3) {
          e3 |= 0, t2 |= 0, r3 || M(e3, t2, this.length);
          for (var n2 = this[e3], i2 = 1, o2 = 0; ++o2 < t2 && (i2 *= 256); )
            n2 += this[e3 + o2] * i2;
          return n2;
        }, f2.prototype.readUIntBE = function(e3, t2, r3) {
          e3 |= 0, t2 |= 0, r3 || M(e3, t2, this.length);
          for (var n2 = this[e3 + --t2], i2 = 1; t2 > 0 && (i2 *= 256); )
            n2 += this[e3 + --t2] * i2;
          return n2;
        }, f2.prototype.readUInt8 = function(e3, t2) {
          return t2 || M(e3, 1, this.length), this[e3];
        }, f2.prototype.readUInt16LE = function(e3, t2) {
          return t2 || M(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
        }, f2.prototype.readUInt16BE = function(e3, t2) {
          return t2 || M(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
        }, f2.prototype.readUInt32LE = function(e3, t2) {
          return t2 || M(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
        }, f2.prototype.readUInt32BE = function(e3, t2) {
          return t2 || M(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
        }, f2.prototype.readIntLE = function(e3, t2, r3) {
          e3 |= 0, t2 |= 0, r3 || M(e3, t2, this.length);
          for (var n2 = this[e3], i2 = 1, o2 = 0; ++o2 < t2 && (i2 *= 256); )
            n2 += this[e3 + o2] * i2;
          return n2 >= (i2 *= 128) && (n2 -= Math.pow(2, 8 * t2)), n2;
        }, f2.prototype.readIntBE = function(e3, t2, r3) {
          e3 |= 0, t2 |= 0, r3 || M(e3, t2, this.length);
          for (var n2 = t2, i2 = 1, o2 = this[e3 + --n2]; n2 > 0 && (i2 *= 256); )
            o2 += this[e3 + --n2] * i2;
          return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * t2)), o2;
        }, f2.prototype.readInt8 = function(e3, t2) {
          return t2 || M(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
        }, f2.prototype.readInt16LE = function(e3, t2) {
          t2 || M(e3, 2, this.length);
          var r3 = this[e3] | this[e3 + 1] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, f2.prototype.readInt16BE = function(e3, t2) {
          t2 || M(e3, 2, this.length);
          var r3 = this[e3 + 1] | this[e3] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, f2.prototype.readInt32LE = function(e3, t2) {
          return t2 || M(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
        }, f2.prototype.readInt32BE = function(e3, t2) {
          return t2 || M(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
        }, f2.prototype.readFloatLE = function(e3, t2) {
          return t2 || M(e3, 4, this.length), i.read(this, e3, true, 23, 4);
        }, f2.prototype.readFloatBE = function(e3, t2) {
          return t2 || M(e3, 4, this.length), i.read(this, e3, false, 23, 4);
        }, f2.prototype.readDoubleLE = function(e3, t2) {
          return t2 || M(e3, 8, this.length), i.read(this, e3, true, 52, 8);
        }, f2.prototype.readDoubleBE = function(e3, t2) {
          return t2 || M(e3, 8, this.length), i.read(this, e3, false, 52, 8);
        }, f2.prototype.writeUIntLE = function(e3, t2, r3, n2) {
          (e3 = +e3, t2 |= 0, r3 |= 0, n2) || R(this, e3, t2, r3, Math.pow(2, 8 * r3) - 1, 0);
          var i2 = 1, o2 = 0;
          for (this[t2] = 255 & e3; ++o2 < r3 && (i2 *= 256); )
            this[t2 + o2] = e3 / i2 & 255;
          return t2 + r3;
        }, f2.prototype.writeUIntBE = function(e3, t2, r3, n2) {
          (e3 = +e3, t2 |= 0, r3 |= 0, n2) || R(this, e3, t2, r3, Math.pow(2, 8 * r3) - 1, 0);
          var i2 = r3 - 1, o2 = 1;
          for (this[t2 + i2] = 255 & e3; --i2 >= 0 && (o2 *= 256); )
            this[t2 + i2] = e3 / o2 & 255;
          return t2 + r3;
        }, f2.prototype.writeUInt8 = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 1, 255, 0), f2.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), this[t2] = 255 & e3, t2 + 1;
        }, f2.prototype.writeUInt16LE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 2, 65535, 0), f2.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : I(this, e3, t2, true), t2 + 2;
        }, f2.prototype.writeUInt16BE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 2, 65535, 0), f2.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : I(this, e3, t2, false), t2 + 2;
        }, f2.prototype.writeUInt32LE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 4, 4294967295, 0), f2.TYPED_ARRAY_SUPPORT ? (this[t2 + 3] = e3 >>> 24, this[t2 + 2] = e3 >>> 16, this[t2 + 1] = e3 >>> 8, this[t2] = 255 & e3) : C(this, e3, t2, true), t2 + 4;
        }, f2.prototype.writeUInt32BE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 4, 4294967295, 0), f2.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : C(this, e3, t2, false), t2 + 4;
        }, f2.prototype.writeIntLE = function(e3, t2, r3, n2) {
          if (e3 = +e3, t2 |= 0, !n2) {
            var i2 = Math.pow(2, 8 * r3 - 1);
            R(this, e3, t2, r3, i2 - 1, -i2);
          }
          var o2 = 0, a2 = 1, s3 = 0;
          for (this[t2] = 255 & e3; ++o2 < r3 && (a2 *= 256); )
            e3 < 0 && 0 === s3 && 0 !== this[t2 + o2 - 1] && (s3 = 1), this[t2 + o2] = (e3 / a2 >> 0) - s3 & 255;
          return t2 + r3;
        }, f2.prototype.writeIntBE = function(e3, t2, r3, n2) {
          if (e3 = +e3, t2 |= 0, !n2) {
            var i2 = Math.pow(2, 8 * r3 - 1);
            R(this, e3, t2, r3, i2 - 1, -i2);
          }
          var o2 = r3 - 1, a2 = 1, s3 = 0;
          for (this[t2 + o2] = 255 & e3; --o2 >= 0 && (a2 *= 256); )
            e3 < 0 && 0 === s3 && 0 !== this[t2 + o2 + 1] && (s3 = 1), this[t2 + o2] = (e3 / a2 >> 0) - s3 & 255;
          return t2 + r3;
        }, f2.prototype.writeInt8 = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 1, 127, -128), f2.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), e3 < 0 && (e3 = 255 + e3 + 1), this[t2] = 255 & e3, t2 + 1;
        }, f2.prototype.writeInt16LE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 2, 32767, -32768), f2.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : I(this, e3, t2, true), t2 + 2;
        }, f2.prototype.writeInt16BE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 2, 32767, -32768), f2.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : I(this, e3, t2, false), t2 + 2;
        }, f2.prototype.writeInt32LE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 4, 2147483647, -2147483648), f2.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, this[t2 + 2] = e3 >>> 16, this[t2 + 3] = e3 >>> 24) : C(this, e3, t2, true), t2 + 4;
        }, f2.prototype.writeInt32BE = function(e3, t2, r3) {
          return e3 = +e3, t2 |= 0, r3 || R(this, e3, t2, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), f2.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : C(this, e3, t2, false), t2 + 4;
        }, f2.prototype.writeFloatLE = function(e3, t2, r3) {
          return j(this, e3, t2, true, r3);
        }, f2.prototype.writeFloatBE = function(e3, t2, r3) {
          return j(this, e3, t2, false, r3);
        }, f2.prototype.writeDoubleLE = function(e3, t2, r3) {
          return N(this, e3, t2, true, r3);
        }, f2.prototype.writeDoubleBE = function(e3, t2, r3) {
          return N(this, e3, t2, false, r3);
        }, f2.prototype.copy = function(e3, t2, r3, n2) {
          if (r3 || (r3 = 0), n2 || 0 === n2 || (n2 = this.length), t2 >= e3.length && (t2 = e3.length), t2 || (t2 = 0), n2 > 0 && n2 < r3 && (n2 = r3), n2 === r3)
            return 0;
          if (0 === e3.length || 0 === this.length)
            return 0;
          if (t2 < 0)
            throw new RangeError("targetStart out of bounds");
          if (r3 < 0 || r3 >= this.length)
            throw new RangeError("sourceStart out of bounds");
          if (n2 < 0)
            throw new RangeError("sourceEnd out of bounds");
          n2 > this.length && (n2 = this.length), e3.length - t2 < n2 - r3 && (n2 = e3.length - t2 + r3);
          var i2, o2 = n2 - r3;
          if (this === e3 && r3 < t2 && t2 < n2)
            for (i2 = o2 - 1; i2 >= 0; --i2)
              e3[i2 + t2] = this[i2 + r3];
          else if (o2 < 1e3 || !f2.TYPED_ARRAY_SUPPORT)
            for (i2 = 0; i2 < o2; ++i2)
              e3[i2 + t2] = this[i2 + r3];
          else
            Uint8Array.prototype.set.call(e3, this.subarray(r3, r3 + o2), t2);
          return o2;
        }, f2.prototype.fill = function(e3, t2, r3, n2) {
          if ("string" == typeof e3) {
            if ("string" == typeof t2 ? (n2 = t2, t2 = 0, r3 = this.length) : "string" == typeof r3 && (n2 = r3, r3 = this.length), 1 === e3.length) {
              var i2 = e3.charCodeAt(0);
              i2 < 256 && (e3 = i2);
            }
            if (void 0 !== n2 && "string" != typeof n2)
              throw new TypeError("encoding must be a string");
            if ("string" == typeof n2 && !f2.isEncoding(n2))
              throw new TypeError("Unknown encoding: " + n2);
          } else
            "number" == typeof e3 && (e3 &= 255);
          if (t2 < 0 || this.length < t2 || this.length < r3)
            throw new RangeError("Out of range index");
          if (r3 <= t2)
            return this;
          var o2;
          if (t2 >>>= 0, r3 = void 0 === r3 ? this.length : r3 >>> 0, e3 || (e3 = 0), "number" == typeof e3)
            for (o2 = t2; o2 < r3; ++o2)
              this[o2] = e3;
          else {
            var a2 = f2.isBuffer(e3) ? e3 : F(new f2(e3, n2).toString()), s3 = a2.length;
            for (o2 = 0; o2 < r3 - t2; ++o2)
              this[o2 + t2] = a2[o2 % s3];
          }
          return this;
        };
        var L = /[^+\/0-9A-Za-z-_]/g;
        function D(e3) {
          return e3 < 16 ? "0" + e3.toString(16) : e3.toString(16);
        }
        function F(e3, t2) {
          var r3;
          t2 = t2 || 1 / 0;
          for (var n2 = e3.length, i2 = null, o2 = [], a2 = 0; a2 < n2; ++a2) {
            if ((r3 = e3.charCodeAt(a2)) > 55295 && r3 < 57344) {
              if (!i2) {
                if (r3 > 56319) {
                  (t2 -= 3) > -1 && o2.push(239, 191, 189);
                  continue;
                }
                if (a2 + 1 === n2) {
                  (t2 -= 3) > -1 && o2.push(239, 191, 189);
                  continue;
                }
                i2 = r3;
                continue;
              }
              if (r3 < 56320) {
                (t2 -= 3) > -1 && o2.push(239, 191, 189), i2 = r3;
                continue;
              }
              r3 = 65536 + (i2 - 55296 << 10 | r3 - 56320);
            } else
              i2 && (t2 -= 3) > -1 && o2.push(239, 191, 189);
            if (i2 = null, r3 < 128) {
              if ((t2 -= 1) < 0)
                break;
              o2.push(r3);
            } else if (r3 < 2048) {
              if ((t2 -= 2) < 0)
                break;
              o2.push(r3 >> 6 | 192, 63 & r3 | 128);
            } else if (r3 < 65536) {
              if ((t2 -= 3) < 0)
                break;
              o2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            } else {
              if (!(r3 < 1114112))
                throw new Error("Invalid code point");
              if ((t2 -= 4) < 0)
                break;
              o2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            }
          }
          return o2;
        }
        function q(e3) {
          return n.toByteArray(function(e4) {
            if ((e4 = function(e5) {
              return e5.trim ? e5.trim() : e5.replace(/^\s+|\s+$/g, "");
            }(e4).replace(L, "")).length < 2)
              return "";
            for (; e4.length % 4 != 0; )
              e4 += "=";
            return e4;
          }(e3));
        }
        function z(e3, t2, r3, n2) {
          for (var i2 = 0; i2 < n2 && !(i2 + r3 >= t2.length || i2 >= e3.length); ++i2)
            t2[i2 + r3] = e3[i2];
          return i2;
        }
      }).call(this, r2(7));
    }, function(e, t, r2) {
      function n(t2) {
        return e.exports = n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
          return typeof e2;
        } : function(e2) {
          return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
        }, e.exports.__esModule = true, e.exports.default = e.exports, n(t2);
      }
      e.exports = n, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      "function" == typeof Object.create ? e.exports = function(e2, t2) {
        t2 && (e2.super_ = t2, e2.prototype = Object.create(t2.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } }));
      } : e.exports = function(e2, t2) {
        if (t2) {
          e2.super_ = t2;
          var r3 = function() {
          };
          r3.prototype = t2.prototype, e2.prototype = new r3(), e2.prototype.constructor = e2;
        }
      };
    }, function(e, t, r2) {
      (function(e2) {
        var t2 = r2(0)(r2(2));
        !function(e3, n) {
          function i(e4, t3) {
            if (!e4)
              throw new Error(t3 || "Assertion failed");
          }
          function o(e4, t3) {
            e4.super_ = t3;
            var r3 = function() {
            };
            r3.prototype = t3.prototype, e4.prototype = new r3(), e4.prototype.constructor = e4;
          }
          function a(e4, t3, r3) {
            if (a.isBN(e4))
              return e4;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e4 && ("le" !== t3 && "be" !== t3 || (r3 = t3, t3 = 10), this._init(e4 || 0, t3 || 10, r3 || "be"));
          }
          var s2;
          "object" === (0, t2.default)(e3) ? e3.exports = a : (void 0).BN = a, a.BN = a, a.wordSize = 26;
          try {
            s2 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r2(259).Buffer;
          } catch (e4) {
          }
          function f2(e4, t3) {
            var r3 = e4.charCodeAt(t3);
            return r3 >= 48 && r3 <= 57 ? r3 - 48 : r3 >= 65 && r3 <= 70 ? r3 - 55 : r3 >= 97 && r3 <= 102 ? r3 - 87 : void i(false, "Invalid character in " + e4);
          }
          function c(e4, t3, r3) {
            var n2 = f2(e4, r3);
            return r3 - 1 >= t3 && (n2 |= f2(e4, r3 - 1) << 4), n2;
          }
          function u(e4, t3, r3, n2) {
            for (var o2 = 0, a2 = 0, s3 = Math.min(e4.length, r3), f3 = t3; f3 < s3; f3++) {
              var c2 = e4.charCodeAt(f3) - 48;
              o2 *= n2, a2 = c2 >= 49 ? c2 - 49 + 10 : c2 >= 17 ? c2 - 17 + 10 : c2, i(c2 >= 0 && a2 < n2, "Invalid character"), o2 += a2;
            }
            return o2;
          }
          function d(e4, t3) {
            e4.words = t3.words, e4.length = t3.length, e4.negative = t3.negative, e4.red = t3.red;
          }
          if (a.isBN = function(e4) {
            return e4 instanceof a || null !== e4 && "object" === (0, t2.default)(e4) && e4.constructor.wordSize === a.wordSize && Array.isArray(e4.words);
          }, a.max = function(e4, t3) {
            return e4.cmp(t3) > 0 ? e4 : t3;
          }, a.min = function(e4, t3) {
            return e4.cmp(t3) < 0 ? e4 : t3;
          }, a.prototype._init = function(e4, r3, n2) {
            if ("number" == typeof e4)
              return this._initNumber(e4, r3, n2);
            if ("object" === (0, t2.default)(e4))
              return this._initArray(e4, r3, n2);
            "hex" === r3 && (r3 = 16), i(r3 === (0 | r3) && r3 >= 2 && r3 <= 36);
            var o2 = 0;
            "-" === (e4 = e4.toString().replace(/\s+/g, ""))[0] && (o2++, this.negative = 1), o2 < e4.length && (16 === r3 ? this._parseHex(e4, o2, n2) : (this._parseBase(e4, r3, o2), "le" === n2 && this._initArray(this.toArray(), r3, n2)));
          }, a.prototype._initNumber = function(e4, t3, r3) {
            e4 < 0 && (this.negative = 1, e4 = -e4), e4 < 67108864 ? (this.words = [67108863 & e4], this.length = 1) : e4 < 4503599627370496 ? (this.words = [67108863 & e4, e4 / 67108864 & 67108863], this.length = 2) : (i(e4 < 9007199254740992), this.words = [67108863 & e4, e4 / 67108864 & 67108863, 1], this.length = 3), "le" === r3 && this._initArray(this.toArray(), t3, r3);
          }, a.prototype._initArray = function(e4, t3, r3) {
            if (i("number" == typeof e4.length), e4.length <= 0)
              return this.words = [0], this.length = 1, this;
            this.length = Math.ceil(e4.length / 3), this.words = new Array(this.length);
            for (var n2 = 0; n2 < this.length; n2++)
              this.words[n2] = 0;
            var o2, a2, s3 = 0;
            if ("be" === r3)
              for (n2 = e4.length - 1, o2 = 0; n2 >= 0; n2 -= 3)
                a2 = e4[n2] | e4[n2 - 1] << 8 | e4[n2 - 2] << 16, this.words[o2] |= a2 << s3 & 67108863, this.words[o2 + 1] = a2 >>> 26 - s3 & 67108863, (s3 += 24) >= 26 && (s3 -= 26, o2++);
            else if ("le" === r3)
              for (n2 = 0, o2 = 0; n2 < e4.length; n2 += 3)
                a2 = e4[n2] | e4[n2 + 1] << 8 | e4[n2 + 2] << 16, this.words[o2] |= a2 << s3 & 67108863, this.words[o2 + 1] = a2 >>> 26 - s3 & 67108863, (s3 += 24) >= 26 && (s3 -= 26, o2++);
            return this._strip();
          }, a.prototype._parseHex = function(e4, t3, r3) {
            this.length = Math.ceil((e4.length - t3) / 6), this.words = new Array(this.length);
            for (var n2 = 0; n2 < this.length; n2++)
              this.words[n2] = 0;
            var i2, o2 = 0, a2 = 0;
            if ("be" === r3)
              for (n2 = e4.length - 1; n2 >= t3; n2 -= 2)
                i2 = c(e4, t3, n2) << o2, this.words[a2] |= 67108863 & i2, o2 >= 18 ? (o2 -= 18, a2 += 1, this.words[a2] |= i2 >>> 26) : o2 += 8;
            else
              for (n2 = (e4.length - t3) % 2 == 0 ? t3 + 1 : t3; n2 < e4.length; n2 += 2)
                i2 = c(e4, t3, n2) << o2, this.words[a2] |= 67108863 & i2, o2 >= 18 ? (o2 -= 18, a2 += 1, this.words[a2] |= i2 >>> 26) : o2 += 8;
            this._strip();
          }, a.prototype._parseBase = function(e4, t3, r3) {
            this.words = [0], this.length = 1;
            for (var n2 = 0, i2 = 1; i2 <= 67108863; i2 *= t3)
              n2++;
            n2--, i2 = i2 / t3 | 0;
            for (var o2 = e4.length - r3, a2 = o2 % n2, s3 = Math.min(o2, o2 - a2) + r3, f3 = 0, c2 = r3; c2 < s3; c2 += n2)
              f3 = u(e4, c2, c2 + n2, t3), this.imuln(i2), this.words[0] + f3 < 67108864 ? this.words[0] += f3 : this._iaddn(f3);
            if (0 !== a2) {
              var d2 = 1;
              for (f3 = u(e4, c2, e4.length, t3), c2 = 0; c2 < a2; c2++)
                d2 *= t3;
              this.imuln(d2), this.words[0] + f3 < 67108864 ? this.words[0] += f3 : this._iaddn(f3);
            }
            this._strip();
          }, a.prototype.copy = function(e4) {
            e4.words = new Array(this.length);
            for (var t3 = 0; t3 < this.length; t3++)
              e4.words[t3] = this.words[t3];
            e4.length = this.length, e4.negative = this.negative, e4.red = this.red;
          }, a.prototype._move = function(e4) {
            d(e4, this);
          }, a.prototype.clone = function() {
            var e4 = new a(null);
            return this.copy(e4), e4;
          }, a.prototype._expand = function(e4) {
            for (; this.length < e4; )
              this.words[this.length++] = 0;
            return this;
          }, a.prototype._strip = function() {
            for (; this.length > 1 && 0 === this.words[this.length - 1]; )
              this.length--;
            return this._normSign();
          }, a.prototype._normSign = function() {
            return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
          }, "undefined" != typeof Symbol && "function" == typeof Symbol.for)
            try {
              a.prototype[Symbol.for("nodejs.util.inspect.custom")] = h;
            } catch (e4) {
              a.prototype.inspect = h;
            }
          else
            a.prototype.inspect = h;
          function h() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          }
          var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], p = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], b = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
          a.prototype.toString = function(e4, t3) {
            var r3;
            if (t3 = 0 | t3 || 1, 16 === (e4 = e4 || 10) || "hex" === e4) {
              r3 = "";
              for (var n2 = 0, o2 = 0, a2 = 0; a2 < this.length; a2++) {
                var s3 = this.words[a2], f3 = (16777215 & (s3 << n2 | o2)).toString(16);
                o2 = s3 >>> 24 - n2 & 16777215, (n2 += 2) >= 26 && (n2 -= 26, a2--), r3 = 0 !== o2 || a2 !== this.length - 1 ? l[6 - f3.length] + f3 + r3 : f3 + r3;
              }
              for (0 !== o2 && (r3 = o2.toString(16) + r3); r3.length % t3 != 0; )
                r3 = "0" + r3;
              return 0 !== this.negative && (r3 = "-" + r3), r3;
            }
            if (e4 === (0 | e4) && e4 >= 2 && e4 <= 36) {
              var c2 = p[e4], u2 = b[e4];
              r3 = "";
              var d2 = this.clone();
              for (d2.negative = 0; !d2.isZero(); ) {
                var h2 = d2.modrn(u2).toString(e4);
                r3 = (d2 = d2.idivn(u2)).isZero() ? h2 + r3 : l[c2 - h2.length] + h2 + r3;
              }
              for (this.isZero() && (r3 = "0" + r3); r3.length % t3 != 0; )
                r3 = "0" + r3;
              return 0 !== this.negative && (r3 = "-" + r3), r3;
            }
            i(false, "Base should be between 2 and 36");
          }, a.prototype.toNumber = function() {
            var e4 = this.words[0];
            return 2 === this.length ? e4 += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e4 += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(false, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e4 : e4;
          }, a.prototype.toJSON = function() {
            return this.toString(16, 2);
          }, s2 && (a.prototype.toBuffer = function(e4, t3) {
            return this.toArrayLike(s2, e4, t3);
          }), a.prototype.toArray = function(e4, t3) {
            return this.toArrayLike(Array, e4, t3);
          };
          function y(e4, t3, r3) {
            r3.negative = t3.negative ^ e4.negative;
            var n2 = e4.length + t3.length | 0;
            r3.length = n2, n2 = n2 - 1 | 0;
            var i2 = 0 | e4.words[0], o2 = 0 | t3.words[0], a2 = i2 * o2, s3 = 67108863 & a2, f3 = a2 / 67108864 | 0;
            r3.words[0] = s3;
            for (var c2 = 1; c2 < n2; c2++) {
              for (var u2 = f3 >>> 26, d2 = 67108863 & f3, h2 = Math.min(c2, t3.length - 1), l2 = Math.max(0, c2 - e4.length + 1); l2 <= h2; l2++) {
                var p2 = c2 - l2 | 0;
                u2 += (a2 = (i2 = 0 | e4.words[p2]) * (o2 = 0 | t3.words[l2]) + d2) / 67108864 | 0, d2 = 67108863 & a2;
              }
              r3.words[c2] = 0 | d2, f3 = 0 | u2;
            }
            return 0 !== f3 ? r3.words[c2] = 0 | f3 : r3.length--, r3._strip();
          }
          a.prototype.toArrayLike = function(e4, t3, r3) {
            this._strip();
            var n2 = this.byteLength(), o2 = r3 || Math.max(1, n2);
            i(n2 <= o2, "byte array longer than desired length"), i(o2 > 0, "Requested array length <= 0");
            var a2 = function(e5, t4) {
              return e5.allocUnsafe ? e5.allocUnsafe(t4) : new e5(t4);
            }(e4, o2);
            return this["_toArrayLike" + ("le" === t3 ? "LE" : "BE")](a2, n2), a2;
          }, a.prototype._toArrayLikeLE = function(e4, t3) {
            for (var r3 = 0, n2 = 0, i2 = 0, o2 = 0; i2 < this.length; i2++) {
              var a2 = this.words[i2] << o2 | n2;
              e4[r3++] = 255 & a2, r3 < e4.length && (e4[r3++] = a2 >> 8 & 255), r3 < e4.length && (e4[r3++] = a2 >> 16 & 255), 6 === o2 ? (r3 < e4.length && (e4[r3++] = a2 >> 24 & 255), n2 = 0, o2 = 0) : (n2 = a2 >>> 24, o2 += 2);
            }
            if (r3 < e4.length)
              for (e4[r3++] = n2; r3 < e4.length; )
                e4[r3++] = 0;
          }, a.prototype._toArrayLikeBE = function(e4, t3) {
            for (var r3 = e4.length - 1, n2 = 0, i2 = 0, o2 = 0; i2 < this.length; i2++) {
              var a2 = this.words[i2] << o2 | n2;
              e4[r3--] = 255 & a2, r3 >= 0 && (e4[r3--] = a2 >> 8 & 255), r3 >= 0 && (e4[r3--] = a2 >> 16 & 255), 6 === o2 ? (r3 >= 0 && (e4[r3--] = a2 >> 24 & 255), n2 = 0, o2 = 0) : (n2 = a2 >>> 24, o2 += 2);
            }
            if (r3 >= 0)
              for (e4[r3--] = n2; r3 >= 0; )
                e4[r3--] = 0;
          }, Math.clz32 ? a.prototype._countBits = function(e4) {
            return 32 - Math.clz32(e4);
          } : a.prototype._countBits = function(e4) {
            var t3 = e4, r3 = 0;
            return t3 >= 4096 && (r3 += 13, t3 >>>= 13), t3 >= 64 && (r3 += 7, t3 >>>= 7), t3 >= 8 && (r3 += 4, t3 >>>= 4), t3 >= 2 && (r3 += 2, t3 >>>= 2), r3 + t3;
          }, a.prototype._zeroBits = function(e4) {
            if (0 === e4)
              return 26;
            var t3 = e4, r3 = 0;
            return 0 == (8191 & t3) && (r3 += 13, t3 >>>= 13), 0 == (127 & t3) && (r3 += 7, t3 >>>= 7), 0 == (15 & t3) && (r3 += 4, t3 >>>= 4), 0 == (3 & t3) && (r3 += 2, t3 >>>= 2), 0 == (1 & t3) && r3++, r3;
          }, a.prototype.bitLength = function() {
            var e4 = this.words[this.length - 1], t3 = this._countBits(e4);
            return 26 * (this.length - 1) + t3;
          }, a.prototype.zeroBits = function() {
            if (this.isZero())
              return 0;
            for (var e4 = 0, t3 = 0; t3 < this.length; t3++) {
              var r3 = this._zeroBits(this.words[t3]);
              if (e4 += r3, 26 !== r3)
                break;
            }
            return e4;
          }, a.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, a.prototype.toTwos = function(e4) {
            return 0 !== this.negative ? this.abs().inotn(e4).iaddn(1) : this.clone();
          }, a.prototype.fromTwos = function(e4) {
            return this.testn(e4 - 1) ? this.notn(e4).iaddn(1).ineg() : this.clone();
          }, a.prototype.isNeg = function() {
            return 0 !== this.negative;
          }, a.prototype.neg = function() {
            return this.clone().ineg();
          }, a.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, a.prototype.iuor = function(e4) {
            for (; this.length < e4.length; )
              this.words[this.length++] = 0;
            for (var t3 = 0; t3 < e4.length; t3++)
              this.words[t3] = this.words[t3] | e4.words[t3];
            return this._strip();
          }, a.prototype.ior = function(e4) {
            return i(0 == (this.negative | e4.negative)), this.iuor(e4);
          }, a.prototype.or = function(e4) {
            return this.length > e4.length ? this.clone().ior(e4) : e4.clone().ior(this);
          }, a.prototype.uor = function(e4) {
            return this.length > e4.length ? this.clone().iuor(e4) : e4.clone().iuor(this);
          }, a.prototype.iuand = function(e4) {
            var t3;
            t3 = this.length > e4.length ? e4 : this;
            for (var r3 = 0; r3 < t3.length; r3++)
              this.words[r3] = this.words[r3] & e4.words[r3];
            return this.length = t3.length, this._strip();
          }, a.prototype.iand = function(e4) {
            return i(0 == (this.negative | e4.negative)), this.iuand(e4);
          }, a.prototype.and = function(e4) {
            return this.length > e4.length ? this.clone().iand(e4) : e4.clone().iand(this);
          }, a.prototype.uand = function(e4) {
            return this.length > e4.length ? this.clone().iuand(e4) : e4.clone().iuand(this);
          }, a.prototype.iuxor = function(e4) {
            var t3, r3;
            this.length > e4.length ? (t3 = this, r3 = e4) : (t3 = e4, r3 = this);
            for (var n2 = 0; n2 < r3.length; n2++)
              this.words[n2] = t3.words[n2] ^ r3.words[n2];
            if (this !== t3)
              for (; n2 < t3.length; n2++)
                this.words[n2] = t3.words[n2];
            return this.length = t3.length, this._strip();
          }, a.prototype.ixor = function(e4) {
            return i(0 == (this.negative | e4.negative)), this.iuxor(e4);
          }, a.prototype.xor = function(e4) {
            return this.length > e4.length ? this.clone().ixor(e4) : e4.clone().ixor(this);
          }, a.prototype.uxor = function(e4) {
            return this.length > e4.length ? this.clone().iuxor(e4) : e4.clone().iuxor(this);
          }, a.prototype.inotn = function(e4) {
            i("number" == typeof e4 && e4 >= 0);
            var t3 = 0 | Math.ceil(e4 / 26), r3 = e4 % 26;
            this._expand(t3), r3 > 0 && t3--;
            for (var n2 = 0; n2 < t3; n2++)
              this.words[n2] = 67108863 & ~this.words[n2];
            return r3 > 0 && (this.words[n2] = ~this.words[n2] & 67108863 >> 26 - r3), this._strip();
          }, a.prototype.notn = function(e4) {
            return this.clone().inotn(e4);
          }, a.prototype.setn = function(e4, t3) {
            i("number" == typeof e4 && e4 >= 0);
            var r3 = e4 / 26 | 0, n2 = e4 % 26;
            return this._expand(r3 + 1), this.words[r3] = t3 ? this.words[r3] | 1 << n2 : this.words[r3] & ~(1 << n2), this._strip();
          }, a.prototype.iadd = function(e4) {
            var t3, r3, n2;
            if (0 !== this.negative && 0 === e4.negative)
              return this.negative = 0, t3 = this.isub(e4), this.negative ^= 1, this._normSign();
            if (0 === this.negative && 0 !== e4.negative)
              return e4.negative = 0, t3 = this.isub(e4), e4.negative = 1, t3._normSign();
            this.length > e4.length ? (r3 = this, n2 = e4) : (r3 = e4, n2 = this);
            for (var i2 = 0, o2 = 0; o2 < n2.length; o2++)
              t3 = (0 | r3.words[o2]) + (0 | n2.words[o2]) + i2, this.words[o2] = 67108863 & t3, i2 = t3 >>> 26;
            for (; 0 !== i2 && o2 < r3.length; o2++)
              t3 = (0 | r3.words[o2]) + i2, this.words[o2] = 67108863 & t3, i2 = t3 >>> 26;
            if (this.length = r3.length, 0 !== i2)
              this.words[this.length] = i2, this.length++;
            else if (r3 !== this)
              for (; o2 < r3.length; o2++)
                this.words[o2] = r3.words[o2];
            return this;
          }, a.prototype.add = function(e4) {
            var t3;
            return 0 !== e4.negative && 0 === this.negative ? (e4.negative = 0, t3 = this.sub(e4), e4.negative ^= 1, t3) : 0 === e4.negative && 0 !== this.negative ? (this.negative = 0, t3 = e4.sub(this), this.negative = 1, t3) : this.length > e4.length ? this.clone().iadd(e4) : e4.clone().iadd(this);
          }, a.prototype.isub = function(e4) {
            if (0 !== e4.negative) {
              e4.negative = 0;
              var t3 = this.iadd(e4);
              return e4.negative = 1, t3._normSign();
            }
            if (0 !== this.negative)
              return this.negative = 0, this.iadd(e4), this.negative = 1, this._normSign();
            var r3, n2, i2 = this.cmp(e4);
            if (0 === i2)
              return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            i2 > 0 ? (r3 = this, n2 = e4) : (r3 = e4, n2 = this);
            for (var o2 = 0, a2 = 0; a2 < n2.length; a2++)
              o2 = (t3 = (0 | r3.words[a2]) - (0 | n2.words[a2]) + o2) >> 26, this.words[a2] = 67108863 & t3;
            for (; 0 !== o2 && a2 < r3.length; a2++)
              o2 = (t3 = (0 | r3.words[a2]) + o2) >> 26, this.words[a2] = 67108863 & t3;
            if (0 === o2 && a2 < r3.length && r3 !== this)
              for (; a2 < r3.length; a2++)
                this.words[a2] = r3.words[a2];
            return this.length = Math.max(this.length, a2), r3 !== this && (this.negative = 1), this._strip();
          }, a.prototype.sub = function(e4) {
            return this.clone().isub(e4);
          };
          var v = function(e4, t3, r3) {
            var n2, i2, o2, a2 = e4.words, s3 = t3.words, f3 = r3.words, c2 = 0, u2 = 0 | a2[0], d2 = 8191 & u2, h2 = u2 >>> 13, l2 = 0 | a2[1], p2 = 8191 & l2, b2 = l2 >>> 13, y2 = 0 | a2[2], v2 = 8191 & y2, m2 = y2 >>> 13, g2 = 0 | a2[3], w = 8191 & g2, _2 = g2 >>> 13, k2 = 0 | a2[4], A2 = 8191 & k2, S2 = k2 >>> 13, E2 = 0 | a2[5], x2 = 8191 & E2, P2 = E2 >>> 13, O2 = 0 | a2[6], T = 8191 & O2, B = O2 >>> 13, M = 0 | a2[7], R = 8191 & M, I = M >>> 13, C = 0 | a2[8], U = 8191 & C, j = C >>> 13, N = 0 | a2[9], L = 8191 & N, D = N >>> 13, F = 0 | s3[0], q = 8191 & F, z = F >>> 13, H = 0 | s3[1], K2 = 8191 & H, G = H >>> 13, W = 0 | s3[2], V = 8191 & W, J = W >>> 13, Y = 0 | s3[3], X = 8191 & Y, Q = Y >>> 13, Z = 0 | s3[4], $ = 8191 & Z, ee = Z >>> 13, te = 0 | s3[5], re = 8191 & te, ne = te >>> 13, ie = 0 | s3[6], oe = 8191 & ie, ae = ie >>> 13, se = 0 | s3[7], fe = 8191 & se, ce = se >>> 13, ue = 0 | s3[8], de = 8191 & ue, he = ue >>> 13, le = 0 | s3[9], pe = 8191 & le, be = le >>> 13;
            r3.negative = e4.negative ^ t3.negative, r3.length = 19;
            var ye = (c2 + (n2 = Math.imul(d2, q)) | 0) + ((8191 & (i2 = (i2 = Math.imul(d2, z)) + Math.imul(h2, q) | 0)) << 13) | 0;
            c2 = ((o2 = Math.imul(h2, z)) + (i2 >>> 13) | 0) + (ye >>> 26) | 0, ye &= 67108863, n2 = Math.imul(p2, q), i2 = (i2 = Math.imul(p2, z)) + Math.imul(b2, q) | 0, o2 = Math.imul(b2, z);
            var ve = (c2 + (n2 = n2 + Math.imul(d2, K2) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, G) | 0) + Math.imul(h2, K2) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, G) | 0) + (i2 >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, n2 = Math.imul(v2, q), i2 = (i2 = Math.imul(v2, z)) + Math.imul(m2, q) | 0, o2 = Math.imul(m2, z), n2 = n2 + Math.imul(p2, K2) | 0, i2 = (i2 = i2 + Math.imul(p2, G) | 0) + Math.imul(b2, K2) | 0, o2 = o2 + Math.imul(b2, G) | 0;
            var me = (c2 + (n2 = n2 + Math.imul(d2, V) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, J) | 0) + Math.imul(h2, V) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, J) | 0) + (i2 >>> 13) | 0) + (me >>> 26) | 0, me &= 67108863, n2 = Math.imul(w, q), i2 = (i2 = Math.imul(w, z)) + Math.imul(_2, q) | 0, o2 = Math.imul(_2, z), n2 = n2 + Math.imul(v2, K2) | 0, i2 = (i2 = i2 + Math.imul(v2, G) | 0) + Math.imul(m2, K2) | 0, o2 = o2 + Math.imul(m2, G) | 0, n2 = n2 + Math.imul(p2, V) | 0, i2 = (i2 = i2 + Math.imul(p2, J) | 0) + Math.imul(b2, V) | 0, o2 = o2 + Math.imul(b2, J) | 0;
            var ge = (c2 + (n2 = n2 + Math.imul(d2, X) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, Q) | 0) + Math.imul(h2, X) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, Q) | 0) + (i2 >>> 13) | 0) + (ge >>> 26) | 0, ge &= 67108863, n2 = Math.imul(A2, q), i2 = (i2 = Math.imul(A2, z)) + Math.imul(S2, q) | 0, o2 = Math.imul(S2, z), n2 = n2 + Math.imul(w, K2) | 0, i2 = (i2 = i2 + Math.imul(w, G) | 0) + Math.imul(_2, K2) | 0, o2 = o2 + Math.imul(_2, G) | 0, n2 = n2 + Math.imul(v2, V) | 0, i2 = (i2 = i2 + Math.imul(v2, J) | 0) + Math.imul(m2, V) | 0, o2 = o2 + Math.imul(m2, J) | 0, n2 = n2 + Math.imul(p2, X) | 0, i2 = (i2 = i2 + Math.imul(p2, Q) | 0) + Math.imul(b2, X) | 0, o2 = o2 + Math.imul(b2, Q) | 0;
            var we = (c2 + (n2 = n2 + Math.imul(d2, $) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, ee) | 0) + Math.imul(h2, $) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, ee) | 0) + (i2 >>> 13) | 0) + (we >>> 26) | 0, we &= 67108863, n2 = Math.imul(x2, q), i2 = (i2 = Math.imul(x2, z)) + Math.imul(P2, q) | 0, o2 = Math.imul(P2, z), n2 = n2 + Math.imul(A2, K2) | 0, i2 = (i2 = i2 + Math.imul(A2, G) | 0) + Math.imul(S2, K2) | 0, o2 = o2 + Math.imul(S2, G) | 0, n2 = n2 + Math.imul(w, V) | 0, i2 = (i2 = i2 + Math.imul(w, J) | 0) + Math.imul(_2, V) | 0, o2 = o2 + Math.imul(_2, J) | 0, n2 = n2 + Math.imul(v2, X) | 0, i2 = (i2 = i2 + Math.imul(v2, Q) | 0) + Math.imul(m2, X) | 0, o2 = o2 + Math.imul(m2, Q) | 0, n2 = n2 + Math.imul(p2, $) | 0, i2 = (i2 = i2 + Math.imul(p2, ee) | 0) + Math.imul(b2, $) | 0, o2 = o2 + Math.imul(b2, ee) | 0;
            var _e = (c2 + (n2 = n2 + Math.imul(d2, re) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, ne) | 0) + Math.imul(h2, re) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, ne) | 0) + (i2 >>> 13) | 0) + (_e >>> 26) | 0, _e &= 67108863, n2 = Math.imul(T, q), i2 = (i2 = Math.imul(T, z)) + Math.imul(B, q) | 0, o2 = Math.imul(B, z), n2 = n2 + Math.imul(x2, K2) | 0, i2 = (i2 = i2 + Math.imul(x2, G) | 0) + Math.imul(P2, K2) | 0, o2 = o2 + Math.imul(P2, G) | 0, n2 = n2 + Math.imul(A2, V) | 0, i2 = (i2 = i2 + Math.imul(A2, J) | 0) + Math.imul(S2, V) | 0, o2 = o2 + Math.imul(S2, J) | 0, n2 = n2 + Math.imul(w, X) | 0, i2 = (i2 = i2 + Math.imul(w, Q) | 0) + Math.imul(_2, X) | 0, o2 = o2 + Math.imul(_2, Q) | 0, n2 = n2 + Math.imul(v2, $) | 0, i2 = (i2 = i2 + Math.imul(v2, ee) | 0) + Math.imul(m2, $) | 0, o2 = o2 + Math.imul(m2, ee) | 0, n2 = n2 + Math.imul(p2, re) | 0, i2 = (i2 = i2 + Math.imul(p2, ne) | 0) + Math.imul(b2, re) | 0, o2 = o2 + Math.imul(b2, ne) | 0;
            var ke = (c2 + (n2 = n2 + Math.imul(d2, oe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, ae) | 0) + Math.imul(h2, oe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, ae) | 0) + (i2 >>> 13) | 0) + (ke >>> 26) | 0, ke &= 67108863, n2 = Math.imul(R, q), i2 = (i2 = Math.imul(R, z)) + Math.imul(I, q) | 0, o2 = Math.imul(I, z), n2 = n2 + Math.imul(T, K2) | 0, i2 = (i2 = i2 + Math.imul(T, G) | 0) + Math.imul(B, K2) | 0, o2 = o2 + Math.imul(B, G) | 0, n2 = n2 + Math.imul(x2, V) | 0, i2 = (i2 = i2 + Math.imul(x2, J) | 0) + Math.imul(P2, V) | 0, o2 = o2 + Math.imul(P2, J) | 0, n2 = n2 + Math.imul(A2, X) | 0, i2 = (i2 = i2 + Math.imul(A2, Q) | 0) + Math.imul(S2, X) | 0, o2 = o2 + Math.imul(S2, Q) | 0, n2 = n2 + Math.imul(w, $) | 0, i2 = (i2 = i2 + Math.imul(w, ee) | 0) + Math.imul(_2, $) | 0, o2 = o2 + Math.imul(_2, ee) | 0, n2 = n2 + Math.imul(v2, re) | 0, i2 = (i2 = i2 + Math.imul(v2, ne) | 0) + Math.imul(m2, re) | 0, o2 = o2 + Math.imul(m2, ne) | 0, n2 = n2 + Math.imul(p2, oe) | 0, i2 = (i2 = i2 + Math.imul(p2, ae) | 0) + Math.imul(b2, oe) | 0, o2 = o2 + Math.imul(b2, ae) | 0;
            var Ae = (c2 + (n2 = n2 + Math.imul(d2, fe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, ce) | 0) + Math.imul(h2, fe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, ce) | 0) + (i2 >>> 13) | 0) + (Ae >>> 26) | 0, Ae &= 67108863, n2 = Math.imul(U, q), i2 = (i2 = Math.imul(U, z)) + Math.imul(j, q) | 0, o2 = Math.imul(j, z), n2 = n2 + Math.imul(R, K2) | 0, i2 = (i2 = i2 + Math.imul(R, G) | 0) + Math.imul(I, K2) | 0, o2 = o2 + Math.imul(I, G) | 0, n2 = n2 + Math.imul(T, V) | 0, i2 = (i2 = i2 + Math.imul(T, J) | 0) + Math.imul(B, V) | 0, o2 = o2 + Math.imul(B, J) | 0, n2 = n2 + Math.imul(x2, X) | 0, i2 = (i2 = i2 + Math.imul(x2, Q) | 0) + Math.imul(P2, X) | 0, o2 = o2 + Math.imul(P2, Q) | 0, n2 = n2 + Math.imul(A2, $) | 0, i2 = (i2 = i2 + Math.imul(A2, ee) | 0) + Math.imul(S2, $) | 0, o2 = o2 + Math.imul(S2, ee) | 0, n2 = n2 + Math.imul(w, re) | 0, i2 = (i2 = i2 + Math.imul(w, ne) | 0) + Math.imul(_2, re) | 0, o2 = o2 + Math.imul(_2, ne) | 0, n2 = n2 + Math.imul(v2, oe) | 0, i2 = (i2 = i2 + Math.imul(v2, ae) | 0) + Math.imul(m2, oe) | 0, o2 = o2 + Math.imul(m2, ae) | 0, n2 = n2 + Math.imul(p2, fe) | 0, i2 = (i2 = i2 + Math.imul(p2, ce) | 0) + Math.imul(b2, fe) | 0, o2 = o2 + Math.imul(b2, ce) | 0;
            var Se = (c2 + (n2 = n2 + Math.imul(d2, de) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, he) | 0) + Math.imul(h2, de) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, he) | 0) + (i2 >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, n2 = Math.imul(L, q), i2 = (i2 = Math.imul(L, z)) + Math.imul(D, q) | 0, o2 = Math.imul(D, z), n2 = n2 + Math.imul(U, K2) | 0, i2 = (i2 = i2 + Math.imul(U, G) | 0) + Math.imul(j, K2) | 0, o2 = o2 + Math.imul(j, G) | 0, n2 = n2 + Math.imul(R, V) | 0, i2 = (i2 = i2 + Math.imul(R, J) | 0) + Math.imul(I, V) | 0, o2 = o2 + Math.imul(I, J) | 0, n2 = n2 + Math.imul(T, X) | 0, i2 = (i2 = i2 + Math.imul(T, Q) | 0) + Math.imul(B, X) | 0, o2 = o2 + Math.imul(B, Q) | 0, n2 = n2 + Math.imul(x2, $) | 0, i2 = (i2 = i2 + Math.imul(x2, ee) | 0) + Math.imul(P2, $) | 0, o2 = o2 + Math.imul(P2, ee) | 0, n2 = n2 + Math.imul(A2, re) | 0, i2 = (i2 = i2 + Math.imul(A2, ne) | 0) + Math.imul(S2, re) | 0, o2 = o2 + Math.imul(S2, ne) | 0, n2 = n2 + Math.imul(w, oe) | 0, i2 = (i2 = i2 + Math.imul(w, ae) | 0) + Math.imul(_2, oe) | 0, o2 = o2 + Math.imul(_2, ae) | 0, n2 = n2 + Math.imul(v2, fe) | 0, i2 = (i2 = i2 + Math.imul(v2, ce) | 0) + Math.imul(m2, fe) | 0, o2 = o2 + Math.imul(m2, ce) | 0, n2 = n2 + Math.imul(p2, de) | 0, i2 = (i2 = i2 + Math.imul(p2, he) | 0) + Math.imul(b2, de) | 0, o2 = o2 + Math.imul(b2, he) | 0;
            var Ee = (c2 + (n2 = n2 + Math.imul(d2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, be) | 0) + Math.imul(h2, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(h2, be) | 0) + (i2 >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, n2 = Math.imul(L, K2), i2 = (i2 = Math.imul(L, G)) + Math.imul(D, K2) | 0, o2 = Math.imul(D, G), n2 = n2 + Math.imul(U, V) | 0, i2 = (i2 = i2 + Math.imul(U, J) | 0) + Math.imul(j, V) | 0, o2 = o2 + Math.imul(j, J) | 0, n2 = n2 + Math.imul(R, X) | 0, i2 = (i2 = i2 + Math.imul(R, Q) | 0) + Math.imul(I, X) | 0, o2 = o2 + Math.imul(I, Q) | 0, n2 = n2 + Math.imul(T, $) | 0, i2 = (i2 = i2 + Math.imul(T, ee) | 0) + Math.imul(B, $) | 0, o2 = o2 + Math.imul(B, ee) | 0, n2 = n2 + Math.imul(x2, re) | 0, i2 = (i2 = i2 + Math.imul(x2, ne) | 0) + Math.imul(P2, re) | 0, o2 = o2 + Math.imul(P2, ne) | 0, n2 = n2 + Math.imul(A2, oe) | 0, i2 = (i2 = i2 + Math.imul(A2, ae) | 0) + Math.imul(S2, oe) | 0, o2 = o2 + Math.imul(S2, ae) | 0, n2 = n2 + Math.imul(w, fe) | 0, i2 = (i2 = i2 + Math.imul(w, ce) | 0) + Math.imul(_2, fe) | 0, o2 = o2 + Math.imul(_2, ce) | 0, n2 = n2 + Math.imul(v2, de) | 0, i2 = (i2 = i2 + Math.imul(v2, he) | 0) + Math.imul(m2, de) | 0, o2 = o2 + Math.imul(m2, he) | 0;
            var xe = (c2 + (n2 = n2 + Math.imul(p2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(p2, be) | 0) + Math.imul(b2, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(b2, be) | 0) + (i2 >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, n2 = Math.imul(L, V), i2 = (i2 = Math.imul(L, J)) + Math.imul(D, V) | 0, o2 = Math.imul(D, J), n2 = n2 + Math.imul(U, X) | 0, i2 = (i2 = i2 + Math.imul(U, Q) | 0) + Math.imul(j, X) | 0, o2 = o2 + Math.imul(j, Q) | 0, n2 = n2 + Math.imul(R, $) | 0, i2 = (i2 = i2 + Math.imul(R, ee) | 0) + Math.imul(I, $) | 0, o2 = o2 + Math.imul(I, ee) | 0, n2 = n2 + Math.imul(T, re) | 0, i2 = (i2 = i2 + Math.imul(T, ne) | 0) + Math.imul(B, re) | 0, o2 = o2 + Math.imul(B, ne) | 0, n2 = n2 + Math.imul(x2, oe) | 0, i2 = (i2 = i2 + Math.imul(x2, ae) | 0) + Math.imul(P2, oe) | 0, o2 = o2 + Math.imul(P2, ae) | 0, n2 = n2 + Math.imul(A2, fe) | 0, i2 = (i2 = i2 + Math.imul(A2, ce) | 0) + Math.imul(S2, fe) | 0, o2 = o2 + Math.imul(S2, ce) | 0, n2 = n2 + Math.imul(w, de) | 0, i2 = (i2 = i2 + Math.imul(w, he) | 0) + Math.imul(_2, de) | 0, o2 = o2 + Math.imul(_2, he) | 0;
            var Pe = (c2 + (n2 = n2 + Math.imul(v2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(v2, be) | 0) + Math.imul(m2, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(m2, be) | 0) + (i2 >>> 13) | 0) + (Pe >>> 26) | 0, Pe &= 67108863, n2 = Math.imul(L, X), i2 = (i2 = Math.imul(L, Q)) + Math.imul(D, X) | 0, o2 = Math.imul(D, Q), n2 = n2 + Math.imul(U, $) | 0, i2 = (i2 = i2 + Math.imul(U, ee) | 0) + Math.imul(j, $) | 0, o2 = o2 + Math.imul(j, ee) | 0, n2 = n2 + Math.imul(R, re) | 0, i2 = (i2 = i2 + Math.imul(R, ne) | 0) + Math.imul(I, re) | 0, o2 = o2 + Math.imul(I, ne) | 0, n2 = n2 + Math.imul(T, oe) | 0, i2 = (i2 = i2 + Math.imul(T, ae) | 0) + Math.imul(B, oe) | 0, o2 = o2 + Math.imul(B, ae) | 0, n2 = n2 + Math.imul(x2, fe) | 0, i2 = (i2 = i2 + Math.imul(x2, ce) | 0) + Math.imul(P2, fe) | 0, o2 = o2 + Math.imul(P2, ce) | 0, n2 = n2 + Math.imul(A2, de) | 0, i2 = (i2 = i2 + Math.imul(A2, he) | 0) + Math.imul(S2, de) | 0, o2 = o2 + Math.imul(S2, he) | 0;
            var Oe = (c2 + (n2 = n2 + Math.imul(w, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(w, be) | 0) + Math.imul(_2, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(_2, be) | 0) + (i2 >>> 13) | 0) + (Oe >>> 26) | 0, Oe &= 67108863, n2 = Math.imul(L, $), i2 = (i2 = Math.imul(L, ee)) + Math.imul(D, $) | 0, o2 = Math.imul(D, ee), n2 = n2 + Math.imul(U, re) | 0, i2 = (i2 = i2 + Math.imul(U, ne) | 0) + Math.imul(j, re) | 0, o2 = o2 + Math.imul(j, ne) | 0, n2 = n2 + Math.imul(R, oe) | 0, i2 = (i2 = i2 + Math.imul(R, ae) | 0) + Math.imul(I, oe) | 0, o2 = o2 + Math.imul(I, ae) | 0, n2 = n2 + Math.imul(T, fe) | 0, i2 = (i2 = i2 + Math.imul(T, ce) | 0) + Math.imul(B, fe) | 0, o2 = o2 + Math.imul(B, ce) | 0, n2 = n2 + Math.imul(x2, de) | 0, i2 = (i2 = i2 + Math.imul(x2, he) | 0) + Math.imul(P2, de) | 0, o2 = o2 + Math.imul(P2, he) | 0;
            var Te = (c2 + (n2 = n2 + Math.imul(A2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(A2, be) | 0) + Math.imul(S2, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(S2, be) | 0) + (i2 >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, n2 = Math.imul(L, re), i2 = (i2 = Math.imul(L, ne)) + Math.imul(D, re) | 0, o2 = Math.imul(D, ne), n2 = n2 + Math.imul(U, oe) | 0, i2 = (i2 = i2 + Math.imul(U, ae) | 0) + Math.imul(j, oe) | 0, o2 = o2 + Math.imul(j, ae) | 0, n2 = n2 + Math.imul(R, fe) | 0, i2 = (i2 = i2 + Math.imul(R, ce) | 0) + Math.imul(I, fe) | 0, o2 = o2 + Math.imul(I, ce) | 0, n2 = n2 + Math.imul(T, de) | 0, i2 = (i2 = i2 + Math.imul(T, he) | 0) + Math.imul(B, de) | 0, o2 = o2 + Math.imul(B, he) | 0;
            var Be = (c2 + (n2 = n2 + Math.imul(x2, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(x2, be) | 0) + Math.imul(P2, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(P2, be) | 0) + (i2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, n2 = Math.imul(L, oe), i2 = (i2 = Math.imul(L, ae)) + Math.imul(D, oe) | 0, o2 = Math.imul(D, ae), n2 = n2 + Math.imul(U, fe) | 0, i2 = (i2 = i2 + Math.imul(U, ce) | 0) + Math.imul(j, fe) | 0, o2 = o2 + Math.imul(j, ce) | 0, n2 = n2 + Math.imul(R, de) | 0, i2 = (i2 = i2 + Math.imul(R, he) | 0) + Math.imul(I, de) | 0, o2 = o2 + Math.imul(I, he) | 0;
            var Me = (c2 + (n2 = n2 + Math.imul(T, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(T, be) | 0) + Math.imul(B, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(B, be) | 0) + (i2 >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, n2 = Math.imul(L, fe), i2 = (i2 = Math.imul(L, ce)) + Math.imul(D, fe) | 0, o2 = Math.imul(D, ce), n2 = n2 + Math.imul(U, de) | 0, i2 = (i2 = i2 + Math.imul(U, he) | 0) + Math.imul(j, de) | 0, o2 = o2 + Math.imul(j, he) | 0;
            var Re = (c2 + (n2 = n2 + Math.imul(R, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(R, be) | 0) + Math.imul(I, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(I, be) | 0) + (i2 >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, n2 = Math.imul(L, de), i2 = (i2 = Math.imul(L, he)) + Math.imul(D, de) | 0, o2 = Math.imul(D, he);
            var Ie = (c2 + (n2 = n2 + Math.imul(U, pe) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(U, be) | 0) + Math.imul(j, pe) | 0)) << 13) | 0;
            c2 = ((o2 = o2 + Math.imul(j, be) | 0) + (i2 >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863;
            var Ce = (c2 + (n2 = Math.imul(L, pe)) | 0) + ((8191 & (i2 = (i2 = Math.imul(L, be)) + Math.imul(D, pe) | 0)) << 13) | 0;
            return c2 = ((o2 = Math.imul(D, be)) + (i2 >>> 13) | 0) + (Ce >>> 26) | 0, Ce &= 67108863, f3[0] = ye, f3[1] = ve, f3[2] = me, f3[3] = ge, f3[4] = we, f3[5] = _e, f3[6] = ke, f3[7] = Ae, f3[8] = Se, f3[9] = Ee, f3[10] = xe, f3[11] = Pe, f3[12] = Oe, f3[13] = Te, f3[14] = Be, f3[15] = Me, f3[16] = Re, f3[17] = Ie, f3[18] = Ce, 0 !== c2 && (f3[19] = c2, r3.length++), r3;
          };
          function m(e4, t3, r3) {
            r3.negative = t3.negative ^ e4.negative, r3.length = e4.length + t3.length;
            for (var n2 = 0, i2 = 0, o2 = 0; o2 < r3.length - 1; o2++) {
              var a2 = i2;
              i2 = 0;
              for (var s3 = 67108863 & n2, f3 = Math.min(o2, t3.length - 1), c2 = Math.max(0, o2 - e4.length + 1); c2 <= f3; c2++) {
                var u2 = o2 - c2, d2 = (0 | e4.words[u2]) * (0 | t3.words[c2]), h2 = 67108863 & d2;
                s3 = 67108863 & (h2 = h2 + s3 | 0), i2 += (a2 = (a2 = a2 + (d2 / 67108864 | 0) | 0) + (h2 >>> 26) | 0) >>> 26, a2 &= 67108863;
              }
              r3.words[o2] = s3, n2 = a2, a2 = i2;
            }
            return 0 !== n2 ? r3.words[o2] = n2 : r3.length--, r3._strip();
          }
          function g(e4, t3, r3) {
            return m(e4, t3, r3);
          }
          Math.imul || (v = y), a.prototype.mulTo = function(e4, t3) {
            var r3 = this.length + e4.length;
            return 10 === this.length && 10 === e4.length ? v(this, e4, t3) : r3 < 63 ? y(this, e4, t3) : r3 < 1024 ? m(this, e4, t3) : g(this, e4, t3);
          }, a.prototype.mul = function(e4) {
            var t3 = new a(null);
            return t3.words = new Array(this.length + e4.length), this.mulTo(e4, t3);
          }, a.prototype.mulf = function(e4) {
            var t3 = new a(null);
            return t3.words = new Array(this.length + e4.length), g(this, e4, t3);
          }, a.prototype.imul = function(e4) {
            return this.clone().mulTo(e4, this);
          }, a.prototype.imuln = function(e4) {
            var t3 = e4 < 0;
            t3 && (e4 = -e4), i("number" == typeof e4), i(e4 < 67108864);
            for (var r3 = 0, n2 = 0; n2 < this.length; n2++) {
              var o2 = (0 | this.words[n2]) * e4, a2 = (67108863 & o2) + (67108863 & r3);
              r3 >>= 26, r3 += o2 / 67108864 | 0, r3 += a2 >>> 26, this.words[n2] = 67108863 & a2;
            }
            return 0 !== r3 && (this.words[n2] = r3, this.length++), t3 ? this.ineg() : this;
          }, a.prototype.muln = function(e4) {
            return this.clone().imuln(e4);
          }, a.prototype.sqr = function() {
            return this.mul(this);
          }, a.prototype.isqr = function() {
            return this.imul(this.clone());
          }, a.prototype.pow = function(e4) {
            var t3 = function(e5) {
              for (var t4 = new Array(e5.bitLength()), r4 = 0; r4 < t4.length; r4++) {
                var n3 = r4 / 26 | 0, i3 = r4 % 26;
                t4[r4] = e5.words[n3] >>> i3 & 1;
              }
              return t4;
            }(e4);
            if (0 === t3.length)
              return new a(1);
            for (var r3 = this, n2 = 0; n2 < t3.length && 0 === t3[n2]; n2++, r3 = r3.sqr())
              ;
            if (++n2 < t3.length)
              for (var i2 = r3.sqr(); n2 < t3.length; n2++, i2 = i2.sqr())
                0 !== t3[n2] && (r3 = r3.mul(i2));
            return r3;
          }, a.prototype.iushln = function(e4) {
            i("number" == typeof e4 && e4 >= 0);
            var t3, r3 = e4 % 26, n2 = (e4 - r3) / 26, o2 = 67108863 >>> 26 - r3 << 26 - r3;
            if (0 !== r3) {
              var a2 = 0;
              for (t3 = 0; t3 < this.length; t3++) {
                var s3 = this.words[t3] & o2, f3 = (0 | this.words[t3]) - s3 << r3;
                this.words[t3] = f3 | a2, a2 = s3 >>> 26 - r3;
              }
              a2 && (this.words[t3] = a2, this.length++);
            }
            if (0 !== n2) {
              for (t3 = this.length - 1; t3 >= 0; t3--)
                this.words[t3 + n2] = this.words[t3];
              for (t3 = 0; t3 < n2; t3++)
                this.words[t3] = 0;
              this.length += n2;
            }
            return this._strip();
          }, a.prototype.ishln = function(e4) {
            return i(0 === this.negative), this.iushln(e4);
          }, a.prototype.iushrn = function(e4, t3, r3) {
            var n2;
            i("number" == typeof e4 && e4 >= 0), n2 = t3 ? (t3 - t3 % 26) / 26 : 0;
            var o2 = e4 % 26, a2 = Math.min((e4 - o2) / 26, this.length), s3 = 67108863 ^ 67108863 >>> o2 << o2, f3 = r3;
            if (n2 -= a2, n2 = Math.max(0, n2), f3) {
              for (var c2 = 0; c2 < a2; c2++)
                f3.words[c2] = this.words[c2];
              f3.length = a2;
            }
            if (0 === a2)
              ;
            else if (this.length > a2)
              for (this.length -= a2, c2 = 0; c2 < this.length; c2++)
                this.words[c2] = this.words[c2 + a2];
            else
              this.words[0] = 0, this.length = 1;
            var u2 = 0;
            for (c2 = this.length - 1; c2 >= 0 && (0 !== u2 || c2 >= n2); c2--) {
              var d2 = 0 | this.words[c2];
              this.words[c2] = u2 << 26 - o2 | d2 >>> o2, u2 = d2 & s3;
            }
            return f3 && 0 !== u2 && (f3.words[f3.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
          }, a.prototype.ishrn = function(e4, t3, r3) {
            return i(0 === this.negative), this.iushrn(e4, t3, r3);
          }, a.prototype.shln = function(e4) {
            return this.clone().ishln(e4);
          }, a.prototype.ushln = function(e4) {
            return this.clone().iushln(e4);
          }, a.prototype.shrn = function(e4) {
            return this.clone().ishrn(e4);
          }, a.prototype.ushrn = function(e4) {
            return this.clone().iushrn(e4);
          }, a.prototype.testn = function(e4) {
            i("number" == typeof e4 && e4 >= 0);
            var t3 = e4 % 26, r3 = (e4 - t3) / 26, n2 = 1 << t3;
            return !(this.length <= r3) && !!(this.words[r3] & n2);
          }, a.prototype.imaskn = function(e4) {
            i("number" == typeof e4 && e4 >= 0);
            var t3 = e4 % 26, r3 = (e4 - t3) / 26;
            if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r3)
              return this;
            if (0 !== t3 && r3++, this.length = Math.min(r3, this.length), 0 !== t3) {
              var n2 = 67108863 ^ 67108863 >>> t3 << t3;
              this.words[this.length - 1] &= n2;
            }
            return this._strip();
          }, a.prototype.maskn = function(e4) {
            return this.clone().imaskn(e4);
          }, a.prototype.iaddn = function(e4) {
            return i("number" == typeof e4), i(e4 < 67108864), e4 < 0 ? this.isubn(-e4) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= e4 ? (this.words[0] = e4 - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(e4), this.negative = 1, this) : this._iaddn(e4);
          }, a.prototype._iaddn = function(e4) {
            this.words[0] += e4;
            for (var t3 = 0; t3 < this.length && this.words[t3] >= 67108864; t3++)
              this.words[t3] -= 67108864, t3 === this.length - 1 ? this.words[t3 + 1] = 1 : this.words[t3 + 1]++;
            return this.length = Math.max(this.length, t3 + 1), this;
          }, a.prototype.isubn = function(e4) {
            if (i("number" == typeof e4), i(e4 < 67108864), e4 < 0)
              return this.iaddn(-e4);
            if (0 !== this.negative)
              return this.negative = 0, this.iaddn(e4), this.negative = 1, this;
            if (this.words[0] -= e4, 1 === this.length && this.words[0] < 0)
              this.words[0] = -this.words[0], this.negative = 1;
            else
              for (var t3 = 0; t3 < this.length && this.words[t3] < 0; t3++)
                this.words[t3] += 67108864, this.words[t3 + 1] -= 1;
            return this._strip();
          }, a.prototype.addn = function(e4) {
            return this.clone().iaddn(e4);
          }, a.prototype.subn = function(e4) {
            return this.clone().isubn(e4);
          }, a.prototype.iabs = function() {
            return this.negative = 0, this;
          }, a.prototype.abs = function() {
            return this.clone().iabs();
          }, a.prototype._ishlnsubmul = function(e4, t3, r3) {
            var n2, o2, a2 = e4.length + r3;
            this._expand(a2);
            var s3 = 0;
            for (n2 = 0; n2 < e4.length; n2++) {
              o2 = (0 | this.words[n2 + r3]) + s3;
              var f3 = (0 | e4.words[n2]) * t3;
              s3 = ((o2 -= 67108863 & f3) >> 26) - (f3 / 67108864 | 0), this.words[n2 + r3] = 67108863 & o2;
            }
            for (; n2 < this.length - r3; n2++)
              s3 = (o2 = (0 | this.words[n2 + r3]) + s3) >> 26, this.words[n2 + r3] = 67108863 & o2;
            if (0 === s3)
              return this._strip();
            for (i(-1 === s3), s3 = 0, n2 = 0; n2 < this.length; n2++)
              s3 = (o2 = -(0 | this.words[n2]) + s3) >> 26, this.words[n2] = 67108863 & o2;
            return this.negative = 1, this._strip();
          }, a.prototype._wordDiv = function(e4, t3) {
            var r3 = (this.length, e4.length), n2 = this.clone(), i2 = e4, o2 = 0 | i2.words[i2.length - 1];
            0 !== (r3 = 26 - this._countBits(o2)) && (i2 = i2.ushln(r3), n2.iushln(r3), o2 = 0 | i2.words[i2.length - 1]);
            var s3, f3 = n2.length - i2.length;
            if ("mod" !== t3) {
              (s3 = new a(null)).length = f3 + 1, s3.words = new Array(s3.length);
              for (var c2 = 0; c2 < s3.length; c2++)
                s3.words[c2] = 0;
            }
            var u2 = n2.clone()._ishlnsubmul(i2, 1, f3);
            0 === u2.negative && (n2 = u2, s3 && (s3.words[f3] = 1));
            for (var d2 = f3 - 1; d2 >= 0; d2--) {
              var h2 = 67108864 * (0 | n2.words[i2.length + d2]) + (0 | n2.words[i2.length + d2 - 1]);
              for (h2 = Math.min(h2 / o2 | 0, 67108863), n2._ishlnsubmul(i2, h2, d2); 0 !== n2.negative; )
                h2--, n2.negative = 0, n2._ishlnsubmul(i2, 1, d2), n2.isZero() || (n2.negative ^= 1);
              s3 && (s3.words[d2] = h2);
            }
            return s3 && s3._strip(), n2._strip(), "div" !== t3 && 0 !== r3 && n2.iushrn(r3), { div: s3 || null, mod: n2 };
          }, a.prototype.divmod = function(e4, t3, r3) {
            return i(!e4.isZero()), this.isZero() ? { div: new a(0), mod: new a(0) } : 0 !== this.negative && 0 === e4.negative ? (s3 = this.neg().divmod(e4, t3), "mod" !== t3 && (n2 = s3.div.neg()), "div" !== t3 && (o2 = s3.mod.neg(), r3 && 0 !== o2.negative && o2.iadd(e4)), { div: n2, mod: o2 }) : 0 === this.negative && 0 !== e4.negative ? (s3 = this.divmod(e4.neg(), t3), "mod" !== t3 && (n2 = s3.div.neg()), { div: n2, mod: s3.mod }) : 0 != (this.negative & e4.negative) ? (s3 = this.neg().divmod(e4.neg(), t3), "div" !== t3 && (o2 = s3.mod.neg(), r3 && 0 !== o2.negative && o2.isub(e4)), { div: s3.div, mod: o2 }) : e4.length > this.length || this.cmp(e4) < 0 ? { div: new a(0), mod: this } : 1 === e4.length ? "div" === t3 ? { div: this.divn(e4.words[0]), mod: null } : "mod" === t3 ? { div: null, mod: new a(this.modrn(e4.words[0])) } : { div: this.divn(e4.words[0]), mod: new a(this.modrn(e4.words[0])) } : this._wordDiv(e4, t3);
            var n2, o2, s3;
          }, a.prototype.div = function(e4) {
            return this.divmod(e4, "div", false).div;
          }, a.prototype.mod = function(e4) {
            return this.divmod(e4, "mod", false).mod;
          }, a.prototype.umod = function(e4) {
            return this.divmod(e4, "mod", true).mod;
          }, a.prototype.divRound = function(e4) {
            var t3 = this.divmod(e4);
            if (t3.mod.isZero())
              return t3.div;
            var r3 = 0 !== t3.div.negative ? t3.mod.isub(e4) : t3.mod, n2 = e4.ushrn(1), i2 = e4.andln(1), o2 = r3.cmp(n2);
            return o2 < 0 || 1 === i2 && 0 === o2 ? t3.div : 0 !== t3.div.negative ? t3.div.isubn(1) : t3.div.iaddn(1);
          }, a.prototype.modrn = function(e4) {
            var t3 = e4 < 0;
            t3 && (e4 = -e4), i(e4 <= 67108863);
            for (var r3 = (1 << 26) % e4, n2 = 0, o2 = this.length - 1; o2 >= 0; o2--)
              n2 = (r3 * n2 + (0 | this.words[o2])) % e4;
            return t3 ? -n2 : n2;
          }, a.prototype.modn = function(e4) {
            return this.modrn(e4);
          }, a.prototype.idivn = function(e4) {
            var t3 = e4 < 0;
            t3 && (e4 = -e4), i(e4 <= 67108863);
            for (var r3 = 0, n2 = this.length - 1; n2 >= 0; n2--) {
              var o2 = (0 | this.words[n2]) + 67108864 * r3;
              this.words[n2] = o2 / e4 | 0, r3 = o2 % e4;
            }
            return this._strip(), t3 ? this.ineg() : this;
          }, a.prototype.divn = function(e4) {
            return this.clone().idivn(e4);
          }, a.prototype.egcd = function(e4) {
            i(0 === e4.negative), i(!e4.isZero());
            var t3 = this, r3 = e4.clone();
            t3 = 0 !== t3.negative ? t3.umod(e4) : t3.clone();
            for (var n2 = new a(1), o2 = new a(0), s3 = new a(0), f3 = new a(1), c2 = 0; t3.isEven() && r3.isEven(); )
              t3.iushrn(1), r3.iushrn(1), ++c2;
            for (var u2 = r3.clone(), d2 = t3.clone(); !t3.isZero(); ) {
              for (var h2 = 0, l2 = 1; 0 == (t3.words[0] & l2) && h2 < 26; ++h2, l2 <<= 1)
                ;
              if (h2 > 0)
                for (t3.iushrn(h2); h2-- > 0; )
                  (n2.isOdd() || o2.isOdd()) && (n2.iadd(u2), o2.isub(d2)), n2.iushrn(1), o2.iushrn(1);
              for (var p2 = 0, b2 = 1; 0 == (r3.words[0] & b2) && p2 < 26; ++p2, b2 <<= 1)
                ;
              if (p2 > 0)
                for (r3.iushrn(p2); p2-- > 0; )
                  (s3.isOdd() || f3.isOdd()) && (s3.iadd(u2), f3.isub(d2)), s3.iushrn(1), f3.iushrn(1);
              t3.cmp(r3) >= 0 ? (t3.isub(r3), n2.isub(s3), o2.isub(f3)) : (r3.isub(t3), s3.isub(n2), f3.isub(o2));
            }
            return { a: s3, b: f3, gcd: r3.iushln(c2) };
          }, a.prototype._invmp = function(e4) {
            i(0 === e4.negative), i(!e4.isZero());
            var t3 = this, r3 = e4.clone();
            t3 = 0 !== t3.negative ? t3.umod(e4) : t3.clone();
            for (var n2, o2 = new a(1), s3 = new a(0), f3 = r3.clone(); t3.cmpn(1) > 0 && r3.cmpn(1) > 0; ) {
              for (var c2 = 0, u2 = 1; 0 == (t3.words[0] & u2) && c2 < 26; ++c2, u2 <<= 1)
                ;
              if (c2 > 0)
                for (t3.iushrn(c2); c2-- > 0; )
                  o2.isOdd() && o2.iadd(f3), o2.iushrn(1);
              for (var d2 = 0, h2 = 1; 0 == (r3.words[0] & h2) && d2 < 26; ++d2, h2 <<= 1)
                ;
              if (d2 > 0)
                for (r3.iushrn(d2); d2-- > 0; )
                  s3.isOdd() && s3.iadd(f3), s3.iushrn(1);
              t3.cmp(r3) >= 0 ? (t3.isub(r3), o2.isub(s3)) : (r3.isub(t3), s3.isub(o2));
            }
            return (n2 = 0 === t3.cmpn(1) ? o2 : s3).cmpn(0) < 0 && n2.iadd(e4), n2;
          }, a.prototype.gcd = function(e4) {
            if (this.isZero())
              return e4.abs();
            if (e4.isZero())
              return this.abs();
            var t3 = this.clone(), r3 = e4.clone();
            t3.negative = 0, r3.negative = 0;
            for (var n2 = 0; t3.isEven() && r3.isEven(); n2++)
              t3.iushrn(1), r3.iushrn(1);
            for (; ; ) {
              for (; t3.isEven(); )
                t3.iushrn(1);
              for (; r3.isEven(); )
                r3.iushrn(1);
              var i2 = t3.cmp(r3);
              if (i2 < 0) {
                var o2 = t3;
                t3 = r3, r3 = o2;
              } else if (0 === i2 || 0 === r3.cmpn(1))
                break;
              t3.isub(r3);
            }
            return r3.iushln(n2);
          }, a.prototype.invm = function(e4) {
            return this.egcd(e4).a.umod(e4);
          }, a.prototype.isEven = function() {
            return 0 == (1 & this.words[0]);
          }, a.prototype.isOdd = function() {
            return 1 == (1 & this.words[0]);
          }, a.prototype.andln = function(e4) {
            return this.words[0] & e4;
          }, a.prototype.bincn = function(e4) {
            i("number" == typeof e4);
            var t3 = e4 % 26, r3 = (e4 - t3) / 26, n2 = 1 << t3;
            if (this.length <= r3)
              return this._expand(r3 + 1), this.words[r3] |= n2, this;
            for (var o2 = n2, a2 = r3; 0 !== o2 && a2 < this.length; a2++) {
              var s3 = 0 | this.words[a2];
              o2 = (s3 += o2) >>> 26, s3 &= 67108863, this.words[a2] = s3;
            }
            return 0 !== o2 && (this.words[a2] = o2, this.length++), this;
          }, a.prototype.isZero = function() {
            return 1 === this.length && 0 === this.words[0];
          }, a.prototype.cmpn = function(e4) {
            var t3, r3 = e4 < 0;
            if (0 !== this.negative && !r3)
              return -1;
            if (0 === this.negative && r3)
              return 1;
            if (this._strip(), this.length > 1)
              t3 = 1;
            else {
              r3 && (e4 = -e4), i(e4 <= 67108863, "Number is too big");
              var n2 = 0 | this.words[0];
              t3 = n2 === e4 ? 0 : n2 < e4 ? -1 : 1;
            }
            return 0 !== this.negative ? 0 | -t3 : t3;
          }, a.prototype.cmp = function(e4) {
            if (0 !== this.negative && 0 === e4.negative)
              return -1;
            if (0 === this.negative && 0 !== e4.negative)
              return 1;
            var t3 = this.ucmp(e4);
            return 0 !== this.negative ? 0 | -t3 : t3;
          }, a.prototype.ucmp = function(e4) {
            if (this.length > e4.length)
              return 1;
            if (this.length < e4.length)
              return -1;
            for (var t3 = 0, r3 = this.length - 1; r3 >= 0; r3--) {
              var n2 = 0 | this.words[r3], i2 = 0 | e4.words[r3];
              if (n2 !== i2) {
                n2 < i2 ? t3 = -1 : n2 > i2 && (t3 = 1);
                break;
              }
            }
            return t3;
          }, a.prototype.gtn = function(e4) {
            return 1 === this.cmpn(e4);
          }, a.prototype.gt = function(e4) {
            return 1 === this.cmp(e4);
          }, a.prototype.gten = function(e4) {
            return this.cmpn(e4) >= 0;
          }, a.prototype.gte = function(e4) {
            return this.cmp(e4) >= 0;
          }, a.prototype.ltn = function(e4) {
            return -1 === this.cmpn(e4);
          }, a.prototype.lt = function(e4) {
            return -1 === this.cmp(e4);
          }, a.prototype.lten = function(e4) {
            return this.cmpn(e4) <= 0;
          }, a.prototype.lte = function(e4) {
            return this.cmp(e4) <= 0;
          }, a.prototype.eqn = function(e4) {
            return 0 === this.cmpn(e4);
          }, a.prototype.eq = function(e4) {
            return 0 === this.cmp(e4);
          }, a.red = function(e4) {
            return new P(e4);
          }, a.prototype.toRed = function(e4) {
            return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), e4.convertTo(this)._forceRed(e4);
          }, a.prototype.fromRed = function() {
            return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, a.prototype._forceRed = function(e4) {
            return this.red = e4, this;
          }, a.prototype.forceRed = function(e4) {
            return i(!this.red, "Already a number in reduction context"), this._forceRed(e4);
          }, a.prototype.redAdd = function(e4) {
            return i(this.red, "redAdd works only with red numbers"), this.red.add(this, e4);
          }, a.prototype.redIAdd = function(e4) {
            return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e4);
          }, a.prototype.redSub = function(e4) {
            return i(this.red, "redSub works only with red numbers"), this.red.sub(this, e4);
          }, a.prototype.redISub = function(e4) {
            return i(this.red, "redISub works only with red numbers"), this.red.isub(this, e4);
          }, a.prototype.redShl = function(e4) {
            return i(this.red, "redShl works only with red numbers"), this.red.shl(this, e4);
          }, a.prototype.redMul = function(e4) {
            return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, e4), this.red.mul(this, e4);
          }, a.prototype.redIMul = function(e4) {
            return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, e4), this.red.imul(this, e4);
          }, a.prototype.redSqr = function() {
            return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, a.prototype.redISqr = function() {
            return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, a.prototype.redSqrt = function() {
            return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, a.prototype.redInvm = function() {
            return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, a.prototype.redNeg = function() {
            return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, a.prototype.redPow = function(e4) {
            return i(this.red && !e4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e4);
          };
          var _ = { k256: null, p224: null, p192: null, p25519: null };
          function k(e4, t3) {
            this.name = e4, this.p = new a(t3, 16), this.n = this.p.bitLength(), this.k = new a(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          function A() {
            k.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          function S() {
            k.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          function E() {
            k.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          function x() {
            k.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          function P(e4) {
            if ("string" == typeof e4) {
              var t3 = a._prime(e4);
              this.m = t3.p, this.prime = t3;
            } else
              i(e4.gtn(1), "modulus must be greater than 1"), this.m = e4, this.prime = null;
          }
          function O(e4) {
            P.call(this, e4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new a(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          k.prototype._tmp = function() {
            var e4 = new a(null);
            return e4.words = new Array(Math.ceil(this.n / 13)), e4;
          }, k.prototype.ireduce = function(e4) {
            var t3, r3 = e4;
            do {
              this.split(r3, this.tmp), t3 = (r3 = (r3 = this.imulK(r3)).iadd(this.tmp)).bitLength();
            } while (t3 > this.n);
            var n2 = t3 < this.n ? -1 : r3.ucmp(this.p);
            return 0 === n2 ? (r3.words[0] = 0, r3.length = 1) : n2 > 0 ? r3.isub(this.p) : void 0 !== r3.strip ? r3.strip() : r3._strip(), r3;
          }, k.prototype.split = function(e4, t3) {
            e4.iushrn(this.n, 0, t3);
          }, k.prototype.imulK = function(e4) {
            return e4.imul(this.k);
          }, o(A, k), A.prototype.split = function(e4, t3) {
            for (var r3 = Math.min(e4.length, 9), n2 = 0; n2 < r3; n2++)
              t3.words[n2] = e4.words[n2];
            if (t3.length = r3, e4.length <= 9)
              return e4.words[0] = 0, void (e4.length = 1);
            var i2 = e4.words[9];
            for (t3.words[t3.length++] = 4194303 & i2, n2 = 10; n2 < e4.length; n2++) {
              var o2 = 0 | e4.words[n2];
              e4.words[n2 - 10] = (4194303 & o2) << 4 | i2 >>> 22, i2 = o2;
            }
            i2 >>>= 22, e4.words[n2 - 10] = i2, 0 === i2 && e4.length > 10 ? e4.length -= 10 : e4.length -= 9;
          }, A.prototype.imulK = function(e4) {
            e4.words[e4.length] = 0, e4.words[e4.length + 1] = 0, e4.length += 2;
            for (var t3 = 0, r3 = 0; r3 < e4.length; r3++) {
              var n2 = 0 | e4.words[r3];
              t3 += 977 * n2, e4.words[r3] = 67108863 & t3, t3 = 64 * n2 + (t3 / 67108864 | 0);
            }
            return 0 === e4.words[e4.length - 1] && (e4.length--, 0 === e4.words[e4.length - 1] && e4.length--), e4;
          }, o(S, k), o(E, k), o(x, k), x.prototype.imulK = function(e4) {
            for (var t3 = 0, r3 = 0; r3 < e4.length; r3++) {
              var n2 = 19 * (0 | e4.words[r3]) + t3, i2 = 67108863 & n2;
              n2 >>>= 26, e4.words[r3] = i2, t3 = n2;
            }
            return 0 !== t3 && (e4.words[e4.length++] = t3), e4;
          }, a._prime = function(e4) {
            if (_[e4])
              return _[e4];
            var t3;
            if ("k256" === e4)
              t3 = new A();
            else if ("p224" === e4)
              t3 = new S();
            else if ("p192" === e4)
              t3 = new E();
            else {
              if ("p25519" !== e4)
                throw new Error("Unknown prime " + e4);
              t3 = new x();
            }
            return _[e4] = t3, t3;
          }, P.prototype._verify1 = function(e4) {
            i(0 === e4.negative, "red works only with positives"), i(e4.red, "red works only with red numbers");
          }, P.prototype._verify2 = function(e4, t3) {
            i(0 == (e4.negative | t3.negative), "red works only with positives"), i(e4.red && e4.red === t3.red, "red works only with red numbers");
          }, P.prototype.imod = function(e4) {
            return this.prime ? this.prime.ireduce(e4)._forceRed(this) : (d(e4, e4.umod(this.m)._forceRed(this)), e4);
          }, P.prototype.neg = function(e4) {
            return e4.isZero() ? e4.clone() : this.m.sub(e4)._forceRed(this);
          }, P.prototype.add = function(e4, t3) {
            this._verify2(e4, t3);
            var r3 = e4.add(t3);
            return r3.cmp(this.m) >= 0 && r3.isub(this.m), r3._forceRed(this);
          }, P.prototype.iadd = function(e4, t3) {
            this._verify2(e4, t3);
            var r3 = e4.iadd(t3);
            return r3.cmp(this.m) >= 0 && r3.isub(this.m), r3;
          }, P.prototype.sub = function(e4, t3) {
            this._verify2(e4, t3);
            var r3 = e4.sub(t3);
            return r3.cmpn(0) < 0 && r3.iadd(this.m), r3._forceRed(this);
          }, P.prototype.isub = function(e4, t3) {
            this._verify2(e4, t3);
            var r3 = e4.isub(t3);
            return r3.cmpn(0) < 0 && r3.iadd(this.m), r3;
          }, P.prototype.shl = function(e4, t3) {
            return this._verify1(e4), this.imod(e4.ushln(t3));
          }, P.prototype.imul = function(e4, t3) {
            return this._verify2(e4, t3), this.imod(e4.imul(t3));
          }, P.prototype.mul = function(e4, t3) {
            return this._verify2(e4, t3), this.imod(e4.mul(t3));
          }, P.prototype.isqr = function(e4) {
            return this.imul(e4, e4.clone());
          }, P.prototype.sqr = function(e4) {
            return this.mul(e4, e4);
          }, P.prototype.sqrt = function(e4) {
            if (e4.isZero())
              return e4.clone();
            var t3 = this.m.andln(3);
            if (i(t3 % 2 == 1), 3 === t3) {
              var r3 = this.m.add(new a(1)).iushrn(2);
              return this.pow(e4, r3);
            }
            for (var n2 = this.m.subn(1), o2 = 0; !n2.isZero() && 0 === n2.andln(1); )
              o2++, n2.iushrn(1);
            i(!n2.isZero());
            var s3 = new a(1).toRed(this), f3 = s3.redNeg(), c2 = this.m.subn(1).iushrn(1), u2 = this.m.bitLength();
            for (u2 = new a(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, c2).cmp(f3); )
              u2.redIAdd(f3);
            for (var d2 = this.pow(u2, n2), h2 = this.pow(e4, n2.addn(1).iushrn(1)), l2 = this.pow(e4, n2), p2 = o2; 0 !== l2.cmp(s3); ) {
              for (var b2 = l2, y2 = 0; 0 !== b2.cmp(s3); y2++)
                b2 = b2.redSqr();
              i(y2 < p2);
              var v2 = this.pow(d2, new a(1).iushln(p2 - y2 - 1));
              h2 = h2.redMul(v2), d2 = v2.redSqr(), l2 = l2.redMul(d2), p2 = y2;
            }
            return h2;
          }, P.prototype.invm = function(e4) {
            var t3 = e4._invmp(this.m);
            return 0 !== t3.negative ? (t3.negative = 0, this.imod(t3).redNeg()) : this.imod(t3);
          }, P.prototype.pow = function(e4, t3) {
            if (t3.isZero())
              return new a(1).toRed(this);
            if (0 === t3.cmpn(1))
              return e4.clone();
            var r3 = new Array(16);
            r3[0] = new a(1).toRed(this), r3[1] = e4;
            for (var n2 = 2; n2 < r3.length; n2++)
              r3[n2] = this.mul(r3[n2 - 1], e4);
            var i2 = r3[0], o2 = 0, s3 = 0, f3 = t3.bitLength() % 26;
            for (0 === f3 && (f3 = 26), n2 = t3.length - 1; n2 >= 0; n2--) {
              for (var c2 = t3.words[n2], u2 = f3 - 1; u2 >= 0; u2--) {
                var d2 = c2 >> u2 & 1;
                i2 !== r3[0] && (i2 = this.sqr(i2)), 0 !== d2 || 0 !== o2 ? (o2 <<= 1, o2 |= d2, (4 === ++s3 || 0 === n2 && 0 === u2) && (i2 = this.mul(i2, r3[o2]), s3 = 0, o2 = 0)) : s3 = 0;
              }
              f3 = 26;
            }
            return i2;
          }, P.prototype.convertTo = function(e4) {
            var t3 = e4.umod(this.m);
            return t3 === e4 ? t3.clone() : t3;
          }, P.prototype.convertFrom = function(e4) {
            var t3 = e4.clone();
            return t3.red = null, t3;
          }, a.mont = function(e4) {
            return new O(e4);
          }, o(O, P), O.prototype.convertTo = function(e4) {
            return this.imod(e4.ushln(this.shift));
          }, O.prototype.convertFrom = function(e4) {
            var t3 = this.imod(e4.mul(this.rinv));
            return t3.red = null, t3;
          }, O.prototype.imul = function(e4, t3) {
            if (e4.isZero() || t3.isZero())
              return e4.words[0] = 0, e4.length = 1, e4;
            var r3 = e4.imul(t3), n2 = r3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r3.isub(n2).iushrn(this.shift), o2 = i2;
            return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
          }, O.prototype.mul = function(e4, t3) {
            if (e4.isZero() || t3.isZero())
              return new a(0)._forceRed(this);
            var r3 = e4.mul(t3), n2 = r3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r3.isub(n2).iushrn(this.shift), o2 = i2;
            return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
          }, O.prototype.invm = function(e4) {
            return this.imod(e4._invmp(this.m).mul(this.r2))._forceRed(this);
          };
        }(e2);
      }).call(this, r2(35)(e));
    }, function(e, t, r2) {
      /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
      var n = r2(1), i = n.Buffer;
      function o(e2, t2) {
        for (var r3 in e2)
          t2[r3] = e2[r3];
      }
      function a(e2, t2, r3) {
        return i(e2, t2, r3);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (o(n, t), t.Buffer = a), a.prototype = Object.create(i.prototype), o(i, a), a.from = function(e2, t2, r3) {
        if ("number" == typeof e2)
          throw new TypeError("Argument must not be a number");
        return i(e2, t2, r3);
      }, a.alloc = function(e2, t2, r3) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        var n2 = i(e2);
        return void 0 !== t2 ? "string" == typeof r3 ? n2.fill(t2, r3) : n2.fill(t2) : n2.fill(0), n2;
      }, a.allocUnsafe = function(e2) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        return i(e2);
      }, a.allocUnsafeSlow = function(e2) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(e2);
      };
    }, function(e, t, r2) {
      var n, i, o = e.exports = {};
      function a() {
        throw new Error("setTimeout has not been defined");
      }
      function s2() {
        throw new Error("clearTimeout has not been defined");
      }
      function f2(e2) {
        if (n === setTimeout)
          return setTimeout(e2, 0);
        if ((n === a || !n) && setTimeout)
          return n = setTimeout, setTimeout(e2, 0);
        try {
          return n(e2, 0);
        } catch (t2) {
          try {
            return n.call(null, e2, 0);
          } catch (t3) {
            return n.call(this, e2, 0);
          }
        }
      }
      !function() {
        try {
          n = "function" == typeof setTimeout ? setTimeout : a;
        } catch (e2) {
          n = a;
        }
        try {
          i = "function" == typeof clearTimeout ? clearTimeout : s2;
        } catch (e2) {
          i = s2;
        }
      }();
      var c, u = [], d = false, h = -1;
      function l() {
        d && c && (d = false, c.length ? u = c.concat(u) : h = -1, u.length && p());
      }
      function p() {
        if (!d) {
          var e2 = f2(l);
          d = true;
          for (var t2 = u.length; t2; ) {
            for (c = u, u = []; ++h < t2; )
              c && c[h].run();
            h = -1, t2 = u.length;
          }
          c = null, d = false, function(e3) {
            if (i === clearTimeout)
              return clearTimeout(e3);
            if ((i === s2 || !i) && clearTimeout)
              return i = clearTimeout, clearTimeout(e3);
            try {
              i(e3);
            } catch (t3) {
              try {
                return i.call(null, e3);
              } catch (t4) {
                return i.call(this, e3);
              }
            }
          }(e2);
        }
      }
      function b(e2, t2) {
        this.fun = e2, this.array = t2;
      }
      function y() {
      }
      o.nextTick = function(e2) {
        var t2 = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var r3 = 1; r3 < arguments.length; r3++)
            t2[r3 - 1] = arguments[r3];
        u.push(new b(e2, t2)), 1 !== u.length || d || f2(p);
      }, b.prototype.run = function() {
        this.fun.apply(null, this.array);
      }, o.title = "browser", o.browser = true, o.env = {}, o.argv = [], o.version = "", o.versions = {}, o.on = y, o.addListener = y, o.once = y, o.off = y, o.removeListener = y, o.removeAllListeners = y, o.emit = y, o.prependListener = y, o.prependOnceListener = y, o.listeners = function(e2) {
        return [];
      }, o.binding = function(e2) {
        throw new Error("process.binding is not supported");
      }, o.cwd = function() {
        return "/";
      }, o.chdir = function(e2) {
        throw new Error("process.chdir is not supported");
      }, o.umask = function() {
        return 0;
      };
    }, function(e, t, r2) {
      var n, i = r2(0)(r2(2));
      n = function() {
        return this;
      }();
      try {
        n = n || new Function("return this")();
      } catch (e2) {
        "object" === ("undefined" == typeof window ? "undefined" : (0, i.default)(window)) && (n = window);
      }
      e.exports = n;
    }, function(e, t, r2) {
      e.exports = function(e2, t2) {
        if (!(e2 instanceof t2))
          throw new TypeError("Cannot call a class as a function");
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      function n(e2, t2) {
        for (var r3 = 0; r3 < t2.length; r3++) {
          var n2 = t2[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
        }
      }
      e.exports = function(e2, t2, r3) {
        return t2 && n(e2.prototype, t2), r3 && n(e2, r3), Object.defineProperty(e2, "prototype", { writable: false }), e2;
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      "function" == typeof Object.create ? e.exports = function(e2, t2) {
        t2 && (e2.super_ = t2, e2.prototype = Object.create(t2.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } }));
      } : e.exports = function(e2, t2) {
        if (t2) {
          e2.super_ = t2;
          var r3 = function() {
          };
          r3.prototype = t2.prototype, e2.prototype = new r3(), e2.prototype.constructor = e2;
        }
      };
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.arrayify = d, t.concat = h, t.hexConcat = function(e2) {
        var t2 = "0x";
        return e2.forEach(function(e3) {
          t2 += b(e3).substring(2);
        }), t2;
      }, t.hexDataLength = function(e2) {
        if ("string" != typeof e2)
          e2 = b(e2);
        else if (!p(e2) || e2.length % 2)
          return null;
        return (e2.length - 2) / 2;
      }, t.hexDataSlice = function(e2, t2, r3) {
        "string" != typeof e2 ? e2 = b(e2) : (!p(e2) || e2.length % 2) && o.throwArgumentError("invalid hexData", "value", e2);
        if (t2 = 2 + 2 * t2, null != r3)
          return "0x" + e2.substring(t2, 2 + 2 * r3);
        return "0x" + e2.substring(t2);
      }, t.hexStripZeros = y, t.hexValue = function(e2) {
        var t2 = y(b(e2, { hexPad: "left" }));
        if ("0x" === t2)
          return "0x0";
        return t2;
      }, t.hexZeroPad = v, t.hexlify = b, t.isBytes = u, t.isBytesLike = f2, t.isHexString = p, t.joinSignature = function(e2) {
        return b(h([(e2 = m(e2)).r, e2.s, e2.recoveryParam ? "0x1c" : "0x1b"]));
      }, t.splitSignature = m, t.stripZeros = function(e2) {
        var t2 = d(e2);
        if (0 === t2.length)
          return t2;
        var r3 = 0;
        for (; r3 < t2.length && 0 === t2[r3]; )
          r3++;
        r3 && (t2 = t2.slice(r3));
        return t2;
      }, t.zeroPad = l;
      var n = r2(16), i = r2(361), o = new n.Logger(i.version);
      function a(e2) {
        return !!e2.toHexString;
      }
      function s2(e2) {
        return e2.slice || (e2.slice = function() {
          var t2 = Array.prototype.slice.call(arguments);
          return s2(new Uint8Array(Array.prototype.slice.apply(e2, t2)));
        }), e2;
      }
      function f2(e2) {
        return p(e2) && !(e2.length % 2) || u(e2);
      }
      function c(e2) {
        return "number" == typeof e2 && e2 == e2 && e2 % 1 == 0;
      }
      function u(e2) {
        if (null == e2)
          return false;
        if (e2.constructor === Uint8Array)
          return true;
        if ("string" == typeof e2)
          return false;
        if (!c(e2.length) || e2.length < 0)
          return false;
        for (var t2 = 0; t2 < e2.length; t2++) {
          var r3 = e2[t2];
          if (!c(r3) || r3 < 0 || r3 >= 256)
            return false;
        }
        return true;
      }
      function d(e2, t2) {
        if (t2 || (t2 = {}), "number" == typeof e2) {
          o.checkSafeUint53(e2, "invalid arrayify value");
          for (var r3 = []; e2; )
            r3.unshift(255 & e2), e2 = parseInt(String(e2 / 256));
          return 0 === r3.length && r3.push(0), s2(new Uint8Array(r3));
        }
        if (t2.allowMissingPrefix && "string" == typeof e2 && "0x" !== e2.substring(0, 2) && (e2 = "0x" + e2), a(e2) && (e2 = e2.toHexString()), p(e2)) {
          var n2 = e2.substring(2);
          n2.length % 2 && ("left" === t2.hexPad ? n2 = "0" + n2 : "right" === t2.hexPad ? n2 += "0" : o.throwArgumentError("hex data is odd-length", "value", e2));
          for (var i2 = [], f3 = 0; f3 < n2.length; f3 += 2)
            i2.push(parseInt(n2.substring(f3, f3 + 2), 16));
          return s2(new Uint8Array(i2));
        }
        return u(e2) ? s2(new Uint8Array(e2)) : o.throwArgumentError("invalid arrayify value", "value", e2);
      }
      function h(e2) {
        var t2 = e2.map(function(e3) {
          return d(e3);
        }), r3 = t2.reduce(function(e3, t3) {
          return e3 + t3.length;
        }, 0), n2 = new Uint8Array(r3);
        return t2.reduce(function(e3, t3) {
          return n2.set(t3, e3), e3 + t3.length;
        }, 0), s2(n2);
      }
      function l(e2, t2) {
        (e2 = d(e2)).length > t2 && o.throwArgumentError("value out of range", "value", arguments[0]);
        var r3 = new Uint8Array(t2);
        return r3.set(e2, t2 - e2.length), s2(r3);
      }
      function p(e2, t2) {
        return !("string" != typeof e2 || !e2.match(/^0x[0-9A-Fa-f]*$/)) && (!t2 || e2.length === 2 + 2 * t2);
      }
      function b(e2, t2) {
        if (t2 || (t2 = {}), "number" == typeof e2) {
          o.checkSafeUint53(e2, "invalid hexlify value");
          for (var r3 = ""; e2; )
            r3 = "0123456789abcdef"[15 & e2] + r3, e2 = Math.floor(e2 / 16);
          return r3.length ? (r3.length % 2 && (r3 = "0" + r3), "0x" + r3) : "0x00";
        }
        if ("bigint" == typeof e2)
          return (e2 = e2.toString(16)).length % 2 ? "0x0" + e2 : "0x" + e2;
        if (t2.allowMissingPrefix && "string" == typeof e2 && "0x" !== e2.substring(0, 2) && (e2 = "0x" + e2), a(e2))
          return e2.toHexString();
        if (p(e2))
          return e2.length % 2 && ("left" === t2.hexPad ? e2 = "0x0" + e2.substring(2) : "right" === t2.hexPad ? e2 += "0" : o.throwArgumentError("hex data is odd-length", "value", e2)), e2.toLowerCase();
        if (u(e2)) {
          for (var n2 = "0x", i2 = 0; i2 < e2.length; i2++) {
            var s3 = e2[i2];
            n2 += "0123456789abcdef"[(240 & s3) >> 4] + "0123456789abcdef"[15 & s3];
          }
          return n2;
        }
        return o.throwArgumentError("invalid hexlify value", "value", e2);
      }
      function y(e2) {
        "string" != typeof e2 && (e2 = b(e2)), p(e2) || o.throwArgumentError("invalid hex string", "value", e2), e2 = e2.substring(2);
        for (var t2 = 0; t2 < e2.length && "0" === e2[t2]; )
          t2++;
        return "0x" + e2.substring(t2);
      }
      function v(e2, t2) {
        for ("string" != typeof e2 ? e2 = b(e2) : p(e2) || o.throwArgumentError("invalid hex string", "value", e2), e2.length > 2 * t2 + 2 && o.throwArgumentError("value out of range", "value", arguments[1]); e2.length < 2 * t2 + 2; )
          e2 = "0x0" + e2.substring(2);
        return e2;
      }
      function m(e2) {
        var t2 = { r: "0x", s: "0x", _vs: "0x", recoveryParam: 0, v: 0, yParityAndS: "0x", compact: "0x" };
        if (f2(e2)) {
          var r3 = d(e2);
          64 === r3.length ? (t2.v = 27 + (r3[32] >> 7), r3[32] &= 127, t2.r = b(r3.slice(0, 32)), t2.s = b(r3.slice(32, 64))) : 65 === r3.length ? (t2.r = b(r3.slice(0, 32)), t2.s = b(r3.slice(32, 64)), t2.v = r3[64]) : o.throwArgumentError("invalid signature string", "signature", e2), t2.v < 27 && (0 === t2.v || 1 === t2.v ? t2.v += 27 : o.throwArgumentError("signature invalid v byte", "signature", e2)), t2.recoveryParam = 1 - t2.v % 2, t2.recoveryParam && (r3[32] |= 128), t2._vs = b(r3.slice(32, 64));
        } else {
          if (t2.r = e2.r, t2.s = e2.s, t2.v = e2.v, t2.recoveryParam = e2.recoveryParam, t2._vs = e2._vs, null != t2._vs) {
            var n2 = l(d(t2._vs), 32);
            t2._vs = b(n2);
            var i2 = n2[0] >= 128 ? 1 : 0;
            null == t2.recoveryParam ? t2.recoveryParam = i2 : t2.recoveryParam !== i2 && o.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e2), n2[0] &= 127;
            var a2 = b(n2);
            null == t2.s ? t2.s = a2 : t2.s !== a2 && o.throwArgumentError("signature v mismatch _vs", "signature", e2);
          }
          if (null == t2.recoveryParam)
            null == t2.v ? o.throwArgumentError("signature missing v and recoveryParam", "signature", e2) : 0 === t2.v || 1 === t2.v ? t2.recoveryParam = t2.v : t2.recoveryParam = 1 - t2.v % 2;
          else if (null == t2.v)
            t2.v = 27 + t2.recoveryParam;
          else {
            var s3 = 0 === t2.v || 1 === t2.v ? t2.v : 1 - t2.v % 2;
            t2.recoveryParam !== s3 && o.throwArgumentError("signature recoveryParam mismatch v", "signature", e2);
          }
          null != t2.r && p(t2.r) ? t2.r = v(t2.r, 32) : o.throwArgumentError("signature missing or invalid r", "signature", e2), null != t2.s && p(t2.s) ? t2.s = v(t2.s, 32) : o.throwArgumentError("signature missing or invalid s", "signature", e2);
          var c2 = d(t2.s);
          c2[0] >= 128 && o.throwArgumentError("signature s out of range", "signature", e2), t2.recoveryParam && (c2[0] |= 128);
          var u2 = b(c2);
          t2._vs && (p(t2._vs) || o.throwArgumentError("signature invalid _vs", "signature", e2), t2._vs = v(t2._vs, 32)), null == t2._vs ? t2._vs = u2 : t2._vs !== u2 && o.throwArgumentError("signature _vs mismatch v and s", "signature", e2);
        }
        return t2.yParityAndS = t2._vs, t2.compact = t2.r + t2.yParityAndS.substring(2), t2;
      }
    }, function(e, t, r2) {
      var n = r2(256), i = r2(257);
      e.exports = { errors: n, formatters: i };
    }, function(e, t, r2) {
      function n(t2) {
        return e.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e2) {
          return e2.__proto__ || Object.getPrototypeOf(e2);
        }, e.exports.__esModule = true, e.exports.default = e.exports, n(t2);
      }
      e.exports = n, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      var n = r2(142);
      e.exports = function(e2, t2) {
        if ("function" != typeof t2 && null !== t2)
          throw new TypeError("Super expression must either be null or a function");
        e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), Object.defineProperty(e2, "prototype", { writable: false }), t2 && n(e2, t2);
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      var n = r2(2).default, i = r2(143);
      e.exports = function(e2, t2) {
        if (t2 && ("object" === n(t2) || "function" == typeof t2))
          return t2;
        if (void 0 !== t2)
          throw new TypeError("Derived constructors may only return object or undefined");
        return i(e2);
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.Logger = t.LogLevel = t.ErrorCode = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = r2(360), s2 = false, f2 = false, c = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 }, u = c.default, d = null;
      var h, l, p = function() {
        try {
          var e2 = [];
          if (["NFD", "NFC", "NFKD", "NFKC"].forEach(function(t2) {
            try {
              if ("test" !== "test".normalize(t2))
                throw new Error("bad normalize");
            } catch (r3) {
              e2.push(t2);
            }
          }), e2.length)
            throw new Error("missing " + e2.join(", "));
          if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769))
            throw new Error("broken implementation");
        } catch (e3) {
          return e3.message;
        }
        return null;
      }();
      t.LogLevel = h, function(e2) {
        e2.DEBUG = "DEBUG", e2.INFO = "INFO", e2.WARNING = "WARNING", e2.ERROR = "ERROR", e2.OFF = "OFF";
      }(h || (t.LogLevel = h = {})), t.ErrorCode = l, function(e2) {
        e2.UNKNOWN_ERROR = "UNKNOWN_ERROR", e2.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e2.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e2.NETWORK_ERROR = "NETWORK_ERROR", e2.SERVER_ERROR = "SERVER_ERROR", e2.TIMEOUT = "TIMEOUT", e2.BUFFER_OVERRUN = "BUFFER_OVERRUN", e2.NUMERIC_FAULT = "NUMERIC_FAULT", e2.MISSING_NEW = "MISSING_NEW", e2.INVALID_ARGUMENT = "INVALID_ARGUMENT", e2.MISSING_ARGUMENT = "MISSING_ARGUMENT", e2.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e2.CALL_EXCEPTION = "CALL_EXCEPTION", e2.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e2.NONCE_EXPIRED = "NONCE_EXPIRED", e2.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e2.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e2.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e2.ACTION_REJECTED = "ACTION_REJECTED";
      }(l || (t.ErrorCode = l = {}));
      var b = "0123456789abcdef", y = function() {
        function e2(t2) {
          (0, i.default)(this, e2), Object.defineProperty(this, "version", { enumerable: true, value: t2, writable: false });
        }
        return (0, o.default)(e2, [{ key: "_log", value: function(e3, t2) {
          var r3 = e3.toLowerCase();
          null == c[r3] && this.throwArgumentError("invalid log level name", "logLevel", e3), u > c[r3] || console.log.apply(console, t2);
        } }, { key: "debug", value: function() {
          for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
            r3[n2] = arguments[n2];
          this._log(e2.levels.DEBUG, r3);
        } }, { key: "info", value: function() {
          for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
            r3[n2] = arguments[n2];
          this._log(e2.levels.INFO, r3);
        } }, { key: "warn", value: function() {
          for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
            r3[n2] = arguments[n2];
          this._log(e2.levels.WARNING, r3);
        } }, { key: "makeError", value: function(t2, r3, n2) {
          if (f2)
            return this.makeError("censored error", r3, {});
          r3 || (r3 = e2.errors.UNKNOWN_ERROR), n2 || (n2 = {});
          var i2 = [];
          Object.keys(n2).forEach(function(e3) {
            var t3 = n2[e3];
            try {
              if (t3 instanceof Uint8Array) {
                for (var r4 = "", o3 = 0; o3 < t3.length; o3++)
                  r4 += b[t3[o3] >> 4], r4 += b[15 & t3[o3]];
                i2.push(e3 + "=Uint8Array(0x" + r4 + ")");
              } else
                i2.push(e3 + "=" + JSON.stringify(t3));
            } catch (t4) {
              i2.push(e3 + "=" + JSON.stringify(n2[e3].toString()));
            }
          }), i2.push("code=".concat(r3)), i2.push("version=".concat(this.version));
          var o2 = t2, a2 = "";
          switch (r3) {
            case l.NUMERIC_FAULT:
              a2 = "NUMERIC_FAULT";
              var s3 = t2;
              switch (s3) {
                case "overflow":
                case "underflow":
                case "division-by-zero":
                  a2 += "-" + s3;
                  break;
                case "negative-power":
                case "negative-width":
                  a2 += "-unsupported";
                  break;
                case "unbound-bitwise-result":
                  a2 += "-unbound-result";
              }
              break;
            case l.CALL_EXCEPTION:
            case l.INSUFFICIENT_FUNDS:
            case l.MISSING_NEW:
            case l.NONCE_EXPIRED:
            case l.REPLACEMENT_UNDERPRICED:
            case l.TRANSACTION_REPLACED:
            case l.UNPREDICTABLE_GAS_LIMIT:
              a2 = r3;
          }
          a2 && (t2 += " [ See: https://links.ethers.org/v5-errors-" + a2 + " ]"), i2.length && (t2 += " (" + i2.join(", ") + ")");
          var c2 = new Error(t2);
          return c2.reason = o2, c2.code = r3, Object.keys(n2).forEach(function(e3) {
            c2[e3] = n2[e3];
          }), c2;
        } }, { key: "throwError", value: function(e3, t2, r3) {
          throw this.makeError(e3, t2, r3);
        } }, { key: "throwArgumentError", value: function(t2, r3, n2) {
          return this.throwError(t2, e2.errors.INVALID_ARGUMENT, { argument: r3, value: n2 });
        } }, { key: "assert", value: function(e3, t2, r3, n2) {
          e3 || this.throwError(t2, r3, n2);
        } }, { key: "assertArgument", value: function(e3, t2, r3, n2) {
          e3 || this.throwArgumentError(t2, r3, n2);
        } }, { key: "checkNormalize", value: function(t2) {
          p && this.throwError("platform missing String.prototype.normalize", e2.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: p });
        } }, { key: "checkSafeUint53", value: function(t2, r3) {
          "number" == typeof t2 && (null == r3 && (r3 = "value not safe"), (t2 < 0 || t2 >= 9007199254740991) && this.throwError(r3, e2.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: t2 }), t2 % 1 && this.throwError(r3, e2.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: t2 }));
        } }, { key: "checkArgumentCount", value: function(t2, r3, n2) {
          n2 = n2 ? ": " + n2 : "", t2 < r3 && this.throwError("missing argument" + n2, e2.errors.MISSING_ARGUMENT, { count: t2, expectedCount: r3 }), t2 > r3 && this.throwError("too many arguments" + n2, e2.errors.UNEXPECTED_ARGUMENT, { count: t2, expectedCount: r3 });
        } }, { key: "checkNew", value: function(t2, r3) {
          t2 !== Object && null != t2 || this.throwError("missing new", e2.errors.MISSING_NEW, { name: r3.name });
        } }, { key: "checkAbstract", value: function(t2, r3) {
          t2 === r3 ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r3.name) + " directly; use a sub-class", e2.errors.UNSUPPORTED_OPERATION, { name: t2.name, operation: "new" }) : t2 !== Object && null != t2 || this.throwError("missing new", e2.errors.MISSING_NEW, { name: r3.name });
        } }], [{ key: "globalLogger", value: function() {
          return d || (d = new e2(a.version)), d;
        } }, { key: "setCensorship", value: function(t2, r3) {
          if (!t2 && r3 && this.globalLogger().throwError("cannot permanently disable censorship", e2.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), s2) {
            if (!t2)
              return;
            this.globalLogger().throwError("error censorship permanent", e2.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
          }
          f2 = !!t2, s2 = !!r3;
        } }, { key: "setLogLevel", value: function(t2) {
          var r3 = c[t2.toLowerCase()];
          null != r3 ? u = r3 : e2.globalLogger().warn("invalid log level - " + t2);
        } }, { key: "from", value: function(t2) {
          return new e2(t2);
        } }]), e2;
      }();
      t.Logger = y, y.errors = l, y.levels = h;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(258), o = r2(129), a = r2(333), s2 = r2(31), f2 = r2(4), c = function e2(t2, r3) {
        var i2 = [];
        return r3.forEach(function(r4) {
          if ("object" === (0, n.default)(r4.components)) {
            if ("tuple" !== r4.type.substring(0, 5))
              throw new Error("components found but type is not tuple; report on GitHub");
            var o2 = "", a2 = r4.type.indexOf("[");
            a2 >= 0 && (o2 = r4.type.substring(a2));
            var s3 = e2(t2, r4.components);
            Array.isArray(s3) && t2 ? i2.push("tuple(" + s3.join(",") + ")" + o2) : t2 ? i2.push("(" + s3 + ")") : i2.push("(" + s3.join(",") + ")" + o2);
          } else
            i2.push(r4.type);
        }), i2;
      }, u = function(e2) {
        if (!o.isHexStrict(e2))
          throw new Error("The parameter must be a valid HEX string.");
        var t2 = "", r3 = 0, n2 = e2.length;
        for ("0x" === e2.substring(0, 2) && (r3 = 2); r3 < n2; r3 += 2) {
          var i2 = parseInt(e2.slice(r3, r3 + 2), 16);
          t2 += String.fromCharCode(i2);
        }
        return t2;
      }, d = function(e2) {
        if (!e2)
          return "0x00";
        for (var t2 = "", r3 = 0; r3 < e2.length; r3++) {
          var n2 = e2.charCodeAt(r3).toString(16);
          t2 += n2.length < 2 ? "0" + n2 : n2;
        }
        return "0x" + t2;
      }, h = function(e2) {
        if (e2 = e2 ? e2.toLowerCase() : "ether", !i.unitMap[e2])
          throw new Error('This unit "' + e2 + `" doesn't exist, please use the one of the following units` + JSON.stringify(i.unitMap, null, 2));
        return e2;
      };
      e.exports = { _fireError: function(e2, t2, r3, i2, o2) {
        return !e2 || "object" !== (0, n.default)(e2) || e2 instanceof Error || !e2.data || ((e2.data && "object" === (0, n.default)(e2.data) || Array.isArray(e2.data)) && (e2.data = JSON.stringify(e2.data, null, 2)), e2 = e2.message + "\n" + e2.data), "string" == typeof e2 && (e2 = new Error(e2)), "function" == typeof i2 && i2(e2, o2), "function" == typeof r3 && ((t2 && "function" == typeof t2.listeners && t2.listeners("error").length || "function" == typeof i2) && t2.catch(function() {
        }), setTimeout(function() {
          r3(e2);
        }, 1)), t2 && "function" == typeof t2.emit && setTimeout(function() {
          t2.emit("error", e2, o2), t2.removeAllListeners();
        }, 1), t2;
      }, _jsonInterfaceMethodToString: function(e2) {
        return e2 && "object" === (0, n.default)(e2) && e2.name && -1 !== e2.name.indexOf("(") ? e2.name : e2.name + "(" + c(false, e2.inputs).join(",") + ")";
      }, _flattenTypes: c, randomHex: function(e2) {
        return "0x" + s2(e2).toString("hex");
      }, BN: o.BN, isBN: o.isBN, isBigNumber: o.isBigNumber, isHex: o.isHex, isHexStrict: o.isHexStrict, sha3: o.sha3, sha3Raw: o.sha3Raw, keccak256: o.sha3, soliditySha3: a.soliditySha3, soliditySha3Raw: a.soliditySha3Raw, encodePacked: a.encodePacked, isAddress: o.isAddress, checkAddressChecksum: o.checkAddressChecksum, toChecksumAddress: function(e2) {
        if (void 0 === e2)
          return "";
        if (!/^(0x)?[0-9a-f]{40}$/i.test(e2))
          throw new Error('Given address "' + e2 + '" is not a valid Ethereum address.');
        e2 = e2.toLowerCase().replace(/^0x/i, "");
        for (var t2 = o.sha3(e2).replace(/^0x/i, ""), r3 = "0x", n2 = 0; n2 < e2.length; n2++)
          parseInt(t2[n2], 16) > 7 ? r3 += e2[n2].toUpperCase() : r3 += e2[n2];
        return r3;
      }, toHex: o.toHex, toBN: o.toBN, bytesToHex: o.bytesToHex, hexToBytes: o.hexToBytes, hexToNumberString: o.hexToNumberString, hexToNumber: o.hexToNumber, toDecimal: o.hexToNumber, numberToHex: o.numberToHex, fromDecimal: o.numberToHex, hexToUtf8: o.hexToUtf8, hexToString: o.hexToUtf8, toUtf8: o.hexToUtf8, stripHexPrefix: o.stripHexPrefix, utf8ToHex: o.utf8ToHex, stringToHex: o.utf8ToHex, fromUtf8: o.utf8ToHex, hexToAscii: u, toAscii: u, asciiToHex: d, fromAscii: d, unitMap: i.unitMap, toWei: function(e2, t2) {
        if (t2 = h(t2), !o.isBN(e2) && "string" != typeof e2)
          throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
        return o.isBN(e2) ? i.toWei(e2, t2) : i.toWei(e2, t2).toString(10);
      }, fromWei: function(e2, t2) {
        if (t2 = h(t2), !o.isBN(e2) && "string" != typeof e2)
          throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
        return o.isBN(e2) ? i.fromWei(e2, t2) : i.fromWei(e2, t2).toString(10);
      }, padLeft: o.leftPad, leftPad: o.leftPad, padRight: o.rightPad, rightPad: o.rightPad, toTwosComplement: o.toTwosComplement, isBloom: o.isBloom, isUserEthereumAddressInBloom: o.isUserEthereumAddressInBloom, isContractAddressInBloom: o.isContractAddressInBloom, isTopic: o.isTopic, isTopicInBloom: o.isTopicInBloom, isInBloom: o.isInBloom, compareBlockNumbers: function(e2, t2) {
        if (e2 === t2)
          return 0;
        if ("genesis" !== e2 && "earliest" !== e2 && 0 !== e2 || "genesis" !== t2 && "earliest" !== t2 && 0 !== t2) {
          if ("genesis" === e2 || "earliest" === e2 || 0 === e2)
            return -1;
          if ("genesis" === t2 || "earliest" === t2 || 0 === t2)
            return 1;
          if ("latest" === e2 || "finalized" === e2)
            return "pending" === t2 ? -1 : 1;
          if ("latest" === t2 || "finalized" === t2)
            return "pending" === e2 ? 1 : -1;
          if ("pending" === e2)
            return 1;
          if ("pending" === t2)
            return -1;
          if ("safe" === e2 || "safe" === t2)
            return;
          var r3 = new f2(e2), n2 = new f2(t2);
          return r3.lt(n2) ? -1 : r3.eq(n2) ? 0 : 1;
        }
        return 0;
      }, toNumber: o.toNumber };
    }, function(e, t, r2) {
      var n = t, i = r2(4), o = r2(19), a = r2(137);
      n.assert = o, n.toArray = a.toArray, n.zero2 = a.zero2, n.toHex = a.toHex, n.encode = a.encode, n.getNAF = function(e2, t2, r3) {
        var n2 = new Array(Math.max(e2.bitLength(), r3) + 1);
        n2.fill(0);
        for (var i2 = 1 << t2 + 1, o2 = e2.clone(), a2 = 0; a2 < n2.length; a2++) {
          var s2, f2 = o2.andln(i2 - 1);
          o2.isOdd() ? (s2 = f2 > (i2 >> 1) - 1 ? (i2 >> 1) - f2 : f2, o2.isubn(s2)) : s2 = 0, n2[a2] = s2, o2.iushrn(1);
        }
        return n2;
      }, n.getJSF = function(e2, t2) {
        var r3 = [[], []];
        e2 = e2.clone(), t2 = t2.clone();
        for (var n2, i2 = 0, o2 = 0; e2.cmpn(-i2) > 0 || t2.cmpn(-o2) > 0; ) {
          var a2, s2, f2 = e2.andln(3) + i2 & 3, c = t2.andln(3) + o2 & 3;
          3 === f2 && (f2 = -1), 3 === c && (c = -1), a2 = 0 == (1 & f2) ? 0 : 3 !== (n2 = e2.andln(7) + i2 & 7) && 5 !== n2 || 2 !== c ? f2 : -f2, r3[0].push(a2), s2 = 0 == (1 & c) ? 0 : 3 !== (n2 = t2.andln(7) + o2 & 7) && 5 !== n2 || 2 !== f2 ? c : -c, r3[1].push(s2), 2 * i2 === a2 + 1 && (i2 = 1 - i2), 2 * o2 === s2 + 1 && (o2 = 1 - o2), e2.iushrn(1), t2.iushrn(1);
        }
        return r3;
      }, n.cachedProperty = function(e2, t2, r3) {
        var n2 = "_" + t2;
        e2.prototype[t2] = function() {
          return void 0 !== this[n2] ? this[n2] : this[n2] = r3.call(this);
        };
      }, n.parseBytes = function(e2) {
        return "string" == typeof e2 ? n.toArray(e2, "hex") : e2;
      }, n.intFromLE = function(e2) {
        return new i(e2, "hex", "le");
      };
    }, function(e, t, r2) {
      function n(e2, t2) {
        if (!e2)
          throw new Error(t2 || "Assertion failed");
      }
      e.exports = n, n.equal = function(e2, t2, r3) {
        if (e2 != t2)
          throw new Error(r3 || "Assertion failed: " + e2 + " != " + t2);
      };
    }, function(e, t, r2) {
      var n, i = r2(0)(r2(2)), o = "object" === ("undefined" == typeof Reflect ? "undefined" : (0, i.default)(Reflect)) ? Reflect : null, a = o && "function" == typeof o.apply ? o.apply : function(e2, t2, r3) {
        return Function.prototype.apply.call(e2, t2, r3);
      };
      n = o && "function" == typeof o.ownKeys ? o.ownKeys : Object.getOwnPropertySymbols ? function(e2) {
        return Object.getOwnPropertyNames(e2).concat(Object.getOwnPropertySymbols(e2));
      } : function(e2) {
        return Object.getOwnPropertyNames(e2);
      };
      var s2 = Number.isNaN || function(e2) {
        return e2 != e2;
      };
      function f2() {
        f2.init.call(this);
      }
      e.exports = f2, e.exports.once = function(e2, t2) {
        return new Promise(function(r3, n2) {
          function i2(r4) {
            e2.removeListener(t2, o2), n2(r4);
          }
          function o2() {
            "function" == typeof e2.removeListener && e2.removeListener("error", i2), r3([].slice.call(arguments));
          }
          m(e2, t2, o2, { once: true }), "error" !== t2 && function(e3, t3, r4) {
            "function" == typeof e3.on && m(e3, "error", t3, r4);
          }(e2, i2, { once: true });
        });
      }, f2.EventEmitter = f2, f2.prototype._events = void 0, f2.prototype._eventsCount = 0, f2.prototype._maxListeners = void 0;
      var c = 10;
      function u(e2) {
        if ("function" != typeof e2)
          throw new TypeError('The "listener" argument must be of type Function. Received type ' + (0, i.default)(e2));
      }
      function d(e2) {
        return void 0 === e2._maxListeners ? f2.defaultMaxListeners : e2._maxListeners;
      }
      function h(e2, t2, r3, n2) {
        var i2, o2, a2, s3;
        if (u(r3), void 0 === (o2 = e2._events) ? (o2 = e2._events = /* @__PURE__ */ Object.create(null), e2._eventsCount = 0) : (void 0 !== o2.newListener && (e2.emit("newListener", t2, r3.listener ? r3.listener : r3), o2 = e2._events), a2 = o2[t2]), void 0 === a2)
          a2 = o2[t2] = r3, ++e2._eventsCount;
        else if ("function" == typeof a2 ? a2 = o2[t2] = n2 ? [r3, a2] : [a2, r3] : n2 ? a2.unshift(r3) : a2.push(r3), (i2 = d(e2)) > 0 && a2.length > i2 && !a2.warned) {
          a2.warned = true;
          var f3 = new Error("Possible EventEmitter memory leak detected. " + a2.length + " " + String(t2) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          f3.name = "MaxListenersExceededWarning", f3.emitter = e2, f3.type = t2, f3.count = a2.length, s3 = f3, console && console.warn && console.warn(s3);
        }
        return e2;
      }
      function l() {
        if (!this.fired)
          return this.target.removeListener(this.type, this.wrapFn), this.fired = true, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
      }
      function p(e2, t2, r3) {
        var n2 = { fired: false, wrapFn: void 0, target: e2, type: t2, listener: r3 }, i2 = l.bind(n2);
        return i2.listener = r3, n2.wrapFn = i2, i2;
      }
      function b(e2, t2, r3) {
        var n2 = e2._events;
        if (void 0 === n2)
          return [];
        var i2 = n2[t2];
        return void 0 === i2 ? [] : "function" == typeof i2 ? r3 ? [i2.listener || i2] : [i2] : r3 ? function(e3) {
          for (var t3 = new Array(e3.length), r4 = 0; r4 < t3.length; ++r4)
            t3[r4] = e3[r4].listener || e3[r4];
          return t3;
        }(i2) : v(i2, i2.length);
      }
      function y(e2) {
        var t2 = this._events;
        if (void 0 !== t2) {
          var r3 = t2[e2];
          if ("function" == typeof r3)
            return 1;
          if (void 0 !== r3)
            return r3.length;
        }
        return 0;
      }
      function v(e2, t2) {
        for (var r3 = new Array(t2), n2 = 0; n2 < t2; ++n2)
          r3[n2] = e2[n2];
        return r3;
      }
      function m(e2, t2, r3, n2) {
        if ("function" == typeof e2.on)
          n2.once ? e2.once(t2, r3) : e2.on(t2, r3);
        else {
          if ("function" != typeof e2.addEventListener)
            throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + (0, i.default)(e2));
          e2.addEventListener(t2, function i2(o2) {
            n2.once && e2.removeEventListener(t2, i2), r3(o2);
          });
        }
      }
      Object.defineProperty(f2, "defaultMaxListeners", { enumerable: true, get: function() {
        return c;
      }, set: function(e2) {
        if ("number" != typeof e2 || e2 < 0 || s2(e2))
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e2 + ".");
        c = e2;
      } }), f2.init = function() {
        void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
      }, f2.prototype.setMaxListeners = function(e2) {
        if ("number" != typeof e2 || e2 < 0 || s2(e2))
          throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e2 + ".");
        return this._maxListeners = e2, this;
      }, f2.prototype.getMaxListeners = function() {
        return d(this);
      }, f2.prototype.emit = function(e2) {
        for (var t2 = [], r3 = 1; r3 < arguments.length; r3++)
          t2.push(arguments[r3]);
        var n2 = "error" === e2, i2 = this._events;
        if (void 0 !== i2)
          n2 = n2 && void 0 === i2.error;
        else if (!n2)
          return false;
        if (n2) {
          var o2;
          if (t2.length > 0 && (o2 = t2[0]), o2 instanceof Error)
            throw o2;
          var s3 = new Error("Unhandled error." + (o2 ? " (" + o2.message + ")" : ""));
          throw s3.context = o2, s3;
        }
        var f3 = i2[e2];
        if (void 0 === f3)
          return false;
        if ("function" == typeof f3)
          a(f3, this, t2);
        else {
          var c2 = f3.length, u2 = v(f3, c2);
          for (r3 = 0; r3 < c2; ++r3)
            a(u2[r3], this, t2);
        }
        return true;
      }, f2.prototype.addListener = function(e2, t2) {
        return h(this, e2, t2, false);
      }, f2.prototype.on = f2.prototype.addListener, f2.prototype.prependListener = function(e2, t2) {
        return h(this, e2, t2, true);
      }, f2.prototype.once = function(e2, t2) {
        return u(t2), this.on(e2, p(this, e2, t2)), this;
      }, f2.prototype.prependOnceListener = function(e2, t2) {
        return u(t2), this.prependListener(e2, p(this, e2, t2)), this;
      }, f2.prototype.removeListener = function(e2, t2) {
        var r3, n2, i2, o2, a2;
        if (u(t2), void 0 === (n2 = this._events))
          return this;
        if (void 0 === (r3 = n2[e2]))
          return this;
        if (r3 === t2 || r3.listener === t2)
          0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : (delete n2[e2], n2.removeListener && this.emit("removeListener", e2, r3.listener || t2));
        else if ("function" != typeof r3) {
          for (i2 = -1, o2 = r3.length - 1; o2 >= 0; o2--)
            if (r3[o2] === t2 || r3[o2].listener === t2) {
              a2 = r3[o2].listener, i2 = o2;
              break;
            }
          if (i2 < 0)
            return this;
          0 === i2 ? r3.shift() : function(e3, t3) {
            for (; t3 + 1 < e3.length; t3++)
              e3[t3] = e3[t3 + 1];
            e3.pop();
          }(r3, i2), 1 === r3.length && (n2[e2] = r3[0]), void 0 !== n2.removeListener && this.emit("removeListener", e2, a2 || t2);
        }
        return this;
      }, f2.prototype.off = f2.prototype.removeListener, f2.prototype.removeAllListeners = function(e2) {
        var t2, r3, n2;
        if (void 0 === (r3 = this._events))
          return this;
        if (void 0 === r3.removeListener)
          return 0 === arguments.length ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : void 0 !== r3[e2] && (0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : delete r3[e2]), this;
        if (0 === arguments.length) {
          var i2, o2 = Object.keys(r3);
          for (n2 = 0; n2 < o2.length; ++n2)
            "removeListener" !== (i2 = o2[n2]) && this.removeAllListeners(i2);
          return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
        }
        if ("function" == typeof (t2 = r3[e2]))
          this.removeListener(e2, t2);
        else if (void 0 !== t2)
          for (n2 = t2.length - 1; n2 >= 0; n2--)
            this.removeListener(e2, t2[n2]);
        return this;
      }, f2.prototype.listeners = function(e2) {
        return b(this, e2, true);
      }, f2.prototype.rawListeners = function(e2) {
        return b(this, e2, false);
      }, f2.listenerCount = function(e2, t2) {
        return "function" == typeof e2.listenerCount ? e2.listenerCount(t2) : y.call(e2, t2);
      }, f2.prototype.listenerCount = y, f2.prototype.eventNames = function() {
        return this._eventsCount > 0 ? n(this._events) : [];
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = n.isEncoding || function(e2) {
        switch ((e2 = "" + e2) && e2.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      function o(e2) {
        var t2;
        switch (this.encoding = function(e3) {
          var t3 = function(e4) {
            if (!e4)
              return "utf8";
            for (var t4; ; )
              switch (e4) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return e4;
                default:
                  if (t4)
                    return;
                  e4 = ("" + e4).toLowerCase(), t4 = true;
              }
          }(e3);
          if ("string" != typeof t3 && (n.isEncoding === i || !i(e3)))
            throw new Error("Unknown encoding: " + e3);
          return t3 || e3;
        }(e2), this.encoding) {
          case "utf16le":
            this.text = f2, this.end = c, t2 = 4;
            break;
          case "utf8":
            this.fillLast = s2, t2 = 4;
            break;
          case "base64":
            this.text = u, this.end = d, t2 = 3;
            break;
          default:
            return this.write = h, void (this.end = l);
        }
        this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(t2);
      }
      function a(e2) {
        return e2 <= 127 ? 0 : e2 >> 5 == 6 ? 2 : e2 >> 4 == 14 ? 3 : e2 >> 3 == 30 ? 4 : e2 >> 6 == 2 ? -1 : -2;
      }
      function s2(e2) {
        var t2 = this.lastTotal - this.lastNeed, r3 = function(e3, t3, r4) {
          if (128 != (192 & t3[0]))
            return e3.lastNeed = 0, "\uFFFD";
          if (e3.lastNeed > 1 && t3.length > 1) {
            if (128 != (192 & t3[1]))
              return e3.lastNeed = 1, "\uFFFD";
            if (e3.lastNeed > 2 && t3.length > 2 && 128 != (192 & t3[2]))
              return e3.lastNeed = 2, "\uFFFD";
          }
        }(this, e2);
        return void 0 !== r3 ? r3 : this.lastNeed <= e2.length ? (e2.copy(this.lastChar, t2, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e2.copy(this.lastChar, t2, 0, e2.length), void (this.lastNeed -= e2.length));
      }
      function f2(e2, t2) {
        if ((e2.length - t2) % 2 == 0) {
          var r3 = e2.toString("utf16le", t2);
          if (r3) {
            var n2 = r3.charCodeAt(r3.length - 1);
            if (n2 >= 55296 && n2 <= 56319)
              return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e2[e2.length - 2], this.lastChar[1] = e2[e2.length - 1], r3.slice(0, -1);
          }
          return r3;
        }
        return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e2[e2.length - 1], e2.toString("utf16le", t2, e2.length - 1);
      }
      function c(e2) {
        var t2 = e2 && e2.length ? this.write(e2) : "";
        if (this.lastNeed) {
          var r3 = this.lastTotal - this.lastNeed;
          return t2 + this.lastChar.toString("utf16le", 0, r3);
        }
        return t2;
      }
      function u(e2, t2) {
        var r3 = (e2.length - t2) % 3;
        return 0 === r3 ? e2.toString("base64", t2) : (this.lastNeed = 3 - r3, this.lastTotal = 3, 1 === r3 ? this.lastChar[0] = e2[e2.length - 1] : (this.lastChar[0] = e2[e2.length - 2], this.lastChar[1] = e2[e2.length - 1]), e2.toString("base64", t2, e2.length - r3));
      }
      function d(e2) {
        var t2 = e2 && e2.length ? this.write(e2) : "";
        return this.lastNeed ? t2 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t2;
      }
      function h(e2) {
        return e2.toString(this.encoding);
      }
      function l(e2) {
        return e2 && e2.length ? this.write(e2) : "";
      }
      t.StringDecoder = o, o.prototype.write = function(e2) {
        if (0 === e2.length)
          return "";
        var t2, r3;
        if (this.lastNeed) {
          if (void 0 === (t2 = this.fillLast(e2)))
            return "";
          r3 = this.lastNeed, this.lastNeed = 0;
        } else
          r3 = 0;
        return r3 < e2.length ? t2 ? t2 + this.text(e2, r3) : this.text(e2, r3) : t2 || "";
      }, o.prototype.end = function(e2) {
        var t2 = e2 && e2.length ? this.write(e2) : "";
        return this.lastNeed ? t2 + "\uFFFD" : t2;
      }, o.prototype.text = function(e2, t2) {
        var r3 = function(e3, t3, r4) {
          var n3 = t3.length - 1;
          if (n3 < r4)
            return 0;
          var i2 = a(t3[n3]);
          if (i2 >= 0)
            return i2 > 0 && (e3.lastNeed = i2 - 1), i2;
          if (--n3 < r4 || -2 === i2)
            return 0;
          if ((i2 = a(t3[n3])) >= 0)
            return i2 > 0 && (e3.lastNeed = i2 - 2), i2;
          if (--n3 < r4 || -2 === i2)
            return 0;
          if ((i2 = a(t3[n3])) >= 0)
            return i2 > 0 && (2 === i2 ? i2 = 0 : e3.lastNeed = i2 - 3), i2;
          return 0;
        }(this, e2, t2);
        if (!this.lastNeed)
          return e2.toString("utf8", t2);
        this.lastTotal = r3;
        var n2 = e2.length - (r3 - this.lastNeed);
        return e2.copy(this.lastChar, 0, n2), e2.toString("utf8", t2, n2);
      }, o.prototype.fillLast = function(e2) {
        if (this.lastNeed <= e2.length)
          return e2.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
        e2.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e2.length), this.lastNeed -= e2.length;
      };
    }, function(e, t, r2) {
      var n = t, i = r2(4), o = r2(41), a = r2(236);
      n.assert = o, n.toArray = a.toArray, n.zero2 = a.zero2, n.toHex = a.toHex, n.encode = a.encode, n.getNAF = function(e2, t2, r3) {
        var n2 = new Array(Math.max(e2.bitLength(), r3) + 1);
        n2.fill(0);
        for (var i2 = 1 << t2 + 1, o2 = e2.clone(), a2 = 0; a2 < n2.length; a2++) {
          var s2, f2 = o2.andln(i2 - 1);
          o2.isOdd() ? (s2 = f2 > (i2 >> 1) - 1 ? (i2 >> 1) - f2 : f2, o2.isubn(s2)) : s2 = 0, n2[a2] = s2, o2.iushrn(1);
        }
        return n2;
      }, n.getJSF = function(e2, t2) {
        var r3 = [[], []];
        e2 = e2.clone(), t2 = t2.clone();
        for (var n2, i2 = 0, o2 = 0; e2.cmpn(-i2) > 0 || t2.cmpn(-o2) > 0; ) {
          var a2, s2, f2 = e2.andln(3) + i2 & 3, c = t2.andln(3) + o2 & 3;
          3 === f2 && (f2 = -1), 3 === c && (c = -1), a2 = 0 == (1 & f2) ? 0 : 3 !== (n2 = e2.andln(7) + i2 & 7) && 5 !== n2 || 2 !== c ? f2 : -f2, r3[0].push(a2), s2 = 0 == (1 & c) ? 0 : 3 !== (n2 = t2.andln(7) + o2 & 7) && 5 !== n2 || 2 !== f2 ? c : -c, r3[1].push(s2), 2 * i2 === a2 + 1 && (i2 = 1 - i2), 2 * o2 === s2 + 1 && (o2 = 1 - o2), e2.iushrn(1), t2.iushrn(1);
        }
        return r3;
      }, n.cachedProperty = function(e2, t2, r3) {
        var n2 = "_" + t2;
        e2.prototype[t2] = function() {
          return void 0 !== this[n2] ? this[n2] : this[n2] = r3.call(this);
        };
      }, n.parseBytes = function(e2) {
        return "string" == typeof e2 ? n.toArray(e2, "hex") : e2;
      }, n.intFromLE = function(e2) {
        return new i(e2, "hex", "le");
      };
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.Writer = t.Reader = t.Coder = void 0, t.checkResultErrors = function(e2) {
        var t2 = [];
        return function e3(r3, n2) {
          if (!Array.isArray(n2))
            return;
          for (var i2 in n2) {
            var o2 = r3.slice();
            o2.push(i2);
            try {
              e3(o2, n2[i2]);
            } catch (e4) {
              t2.push({ path: o2, error: e4 });
            }
          }
        }([], e2), t2;
      };
      var i = n(r2(8)), o = n(r2(9)), a = r2(11), s2 = r2(33), f2 = r2(40), c = r2(16), u = r2(64), d = new c.Logger(u.version);
      var h = function() {
        function e2(t2, r3, n2, o2) {
          (0, i.default)(this, e2), this.name = t2, this.type = r3, this.localName = n2, this.dynamic = o2;
        }
        return (0, o.default)(e2, [{ key: "_throwError", value: function(e3, t2) {
          d.throwArgumentError(e3, this.localName, t2);
        } }]), e2;
      }();
      t.Coder = h;
      var l = function() {
        function e2(t2) {
          (0, i.default)(this, e2), (0, f2.defineReadOnly)(this, "wordSize", t2 || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(t2);
        }
        return (0, o.default)(e2, [{ key: "data", get: function() {
          return (0, a.hexConcat)(this._data);
        } }, { key: "length", get: function() {
          return this._dataLength;
        } }, { key: "_writeData", value: function(e3) {
          return this._data.push(e3), this._dataLength += e3.length, e3.length;
        } }, { key: "appendWriter", value: function(e3) {
          return this._writeData((0, a.concat)(e3._data));
        } }, { key: "writeBytes", value: function(e3) {
          var t2 = (0, a.arrayify)(e3), r3 = t2.length % this.wordSize;
          return r3 && (t2 = (0, a.concat)([t2, this._padding.slice(r3)])), this._writeData(t2);
        } }, { key: "_getValue", value: function(e3) {
          var t2 = (0, a.arrayify)(s2.BigNumber.from(e3));
          return t2.length > this.wordSize && d.throwError("value out-of-bounds", c.Logger.errors.BUFFER_OVERRUN, { length: this.wordSize, offset: t2.length }), t2.length % this.wordSize && (t2 = (0, a.concat)([this._padding.slice(t2.length % this.wordSize), t2])), t2;
        } }, { key: "writeValue", value: function(e3) {
          return this._writeData(this._getValue(e3));
        } }, { key: "writeUpdatableValue", value: function() {
          var e3 = this, t2 = this._data.length;
          return this._data.push(this._padding), this._dataLength += this.wordSize, function(r3) {
            e3._data[t2] = e3._getValue(r3);
          };
        } }]), e2;
      }();
      t.Writer = l;
      var p = function() {
        function e2(t2, r3, n2, o2) {
          (0, i.default)(this, e2), (0, f2.defineReadOnly)(this, "_data", (0, a.arrayify)(t2)), (0, f2.defineReadOnly)(this, "wordSize", r3 || 32), (0, f2.defineReadOnly)(this, "_coerceFunc", n2), (0, f2.defineReadOnly)(this, "allowLoose", o2), this._offset = 0;
        }
        return (0, o.default)(e2, [{ key: "data", get: function() {
          return (0, a.hexlify)(this._data);
        } }, { key: "consumed", get: function() {
          return this._offset;
        } }, { key: "coerce", value: function(t2, r3) {
          return this._coerceFunc ? this._coerceFunc(t2, r3) : e2.coerce(t2, r3);
        } }, { key: "_peekBytes", value: function(e3, t2, r3) {
          var n2 = Math.ceil(t2 / this.wordSize) * this.wordSize;
          return this._offset + n2 > this._data.length && (this.allowLoose && r3 && this._offset + t2 <= this._data.length ? n2 = t2 : d.throwError("data out-of-bounds", c.Logger.errors.BUFFER_OVERRUN, { length: this._data.length, offset: this._offset + n2 })), this._data.slice(this._offset, this._offset + n2);
        } }, { key: "subReader", value: function(t2) {
          return new e2(this._data.slice(this._offset + t2), this.wordSize, this._coerceFunc, this.allowLoose);
        } }, { key: "readBytes", value: function(e3, t2) {
          var r3 = this._peekBytes(0, e3, !!t2);
          return this._offset += r3.length, r3.slice(0, e3);
        } }, { key: "readValue", value: function() {
          return s2.BigNumber.from(this.readBytes(this.wordSize));
        } }], [{ key: "coerce", value: function(e3, t2) {
          var r3 = e3.match("^u?int([0-9]+)$");
          return r3 && parseInt(r3[1]) <= 48 && (t2 = t2.toNumber()), t2;
        } }]), e2;
      }();
      t.Reader = p;
    }, function(e, t, r2) {
      /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
      var n = r2(1), i = n.Buffer;
      function o(e2, t2) {
        for (var r3 in e2)
          t2[r3] = e2[r3];
      }
      function a(e2, t2, r3) {
        return i(e2, t2, r3);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (o(n, t), t.Buffer = a), a.prototype = Object.create(i.prototype), o(i, a), a.from = function(e2, t2, r3) {
        if ("number" == typeof e2)
          throw new TypeError("Argument must not be a number");
        return i(e2, t2, r3);
      }, a.alloc = function(e2, t2, r3) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        var n2 = i(e2);
        return void 0 !== t2 ? "string" == typeof r3 ? n2.fill(t2, r3) : n2.fill(t2) : n2.fill(0), n2;
      }, a.allocUnsafe = function(e2) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        return i(e2);
      }, a.allocUnsafeSlow = function(e2) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(e2);
      };
    }, function(e, t, r2) {
      var n = r2(19), i = r2(3);
      function o(e2, t2) {
        return 55296 == (64512 & e2.charCodeAt(t2)) && (!(t2 < 0 || t2 + 1 >= e2.length) && 56320 == (64512 & e2.charCodeAt(t2 + 1)));
      }
      function a(e2) {
        return (e2 >>> 24 | e2 >>> 8 & 65280 | e2 << 8 & 16711680 | (255 & e2) << 24) >>> 0;
      }
      function s2(e2) {
        return 1 === e2.length ? "0" + e2 : e2;
      }
      function f2(e2) {
        return 7 === e2.length ? "0" + e2 : 6 === e2.length ? "00" + e2 : 5 === e2.length ? "000" + e2 : 4 === e2.length ? "0000" + e2 : 3 === e2.length ? "00000" + e2 : 2 === e2.length ? "000000" + e2 : 1 === e2.length ? "0000000" + e2 : e2;
      }
      t.inherits = i, t.toArray = function(e2, t2) {
        if (Array.isArray(e2))
          return e2.slice();
        if (!e2)
          return [];
        var r3 = [];
        if ("string" == typeof e2)
          if (t2) {
            if ("hex" === t2)
              for ((e2 = e2.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e2 = "0" + e2), i2 = 0; i2 < e2.length; i2 += 2)
                r3.push(parseInt(e2[i2] + e2[i2 + 1], 16));
          } else
            for (var n2 = 0, i2 = 0; i2 < e2.length; i2++) {
              var a2 = e2.charCodeAt(i2);
              a2 < 128 ? r3[n2++] = a2 : a2 < 2048 ? (r3[n2++] = a2 >> 6 | 192, r3[n2++] = 63 & a2 | 128) : o(e2, i2) ? (a2 = 65536 + ((1023 & a2) << 10) + (1023 & e2.charCodeAt(++i2)), r3[n2++] = a2 >> 18 | 240, r3[n2++] = a2 >> 12 & 63 | 128, r3[n2++] = a2 >> 6 & 63 | 128, r3[n2++] = 63 & a2 | 128) : (r3[n2++] = a2 >> 12 | 224, r3[n2++] = a2 >> 6 & 63 | 128, r3[n2++] = 63 & a2 | 128);
            }
        else
          for (i2 = 0; i2 < e2.length; i2++)
            r3[i2] = 0 | e2[i2];
        return r3;
      }, t.toHex = function(e2) {
        for (var t2 = "", r3 = 0; r3 < e2.length; r3++)
          t2 += s2(e2[r3].toString(16));
        return t2;
      }, t.htonl = a, t.toHex32 = function(e2, t2) {
        for (var r3 = "", n2 = 0; n2 < e2.length; n2++) {
          var i2 = e2[n2];
          "little" === t2 && (i2 = a(i2)), r3 += f2(i2.toString(16));
        }
        return r3;
      }, t.zero2 = s2, t.zero8 = f2, t.join32 = function(e2, t2, r3, i2) {
        var o2 = r3 - t2;
        n(o2 % 4 == 0);
        for (var a2 = new Array(o2 / 4), s3 = 0, f3 = t2; s3 < a2.length; s3++, f3 += 4) {
          var c;
          c = "big" === i2 ? e2[f3] << 24 | e2[f3 + 1] << 16 | e2[f3 + 2] << 8 | e2[f3 + 3] : e2[f3 + 3] << 24 | e2[f3 + 2] << 16 | e2[f3 + 1] << 8 | e2[f3], a2[s3] = c >>> 0;
        }
        return a2;
      }, t.split32 = function(e2, t2) {
        for (var r3 = new Array(4 * e2.length), n2 = 0, i2 = 0; n2 < e2.length; n2++, i2 += 4) {
          var o2 = e2[n2];
          "big" === t2 ? (r3[i2] = o2 >>> 24, r3[i2 + 1] = o2 >>> 16 & 255, r3[i2 + 2] = o2 >>> 8 & 255, r3[i2 + 3] = 255 & o2) : (r3[i2 + 3] = o2 >>> 24, r3[i2 + 2] = o2 >>> 16 & 255, r3[i2 + 1] = o2 >>> 8 & 255, r3[i2] = 255 & o2);
        }
        return r3;
      }, t.rotr32 = function(e2, t2) {
        return e2 >>> t2 | e2 << 32 - t2;
      }, t.rotl32 = function(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }, t.sum32 = function(e2, t2) {
        return e2 + t2 >>> 0;
      }, t.sum32_3 = function(e2, t2, r3) {
        return e2 + t2 + r3 >>> 0;
      }, t.sum32_4 = function(e2, t2, r3, n2) {
        return e2 + t2 + r3 + n2 >>> 0;
      }, t.sum32_5 = function(e2, t2, r3, n2, i2) {
        return e2 + t2 + r3 + n2 + i2 >>> 0;
      }, t.sum64 = function(e2, t2, r3, n2) {
        var i2 = e2[t2], o2 = n2 + e2[t2 + 1] >>> 0, a2 = (o2 < n2 ? 1 : 0) + r3 + i2;
        e2[t2] = a2 >>> 0, e2[t2 + 1] = o2;
      }, t.sum64_hi = function(e2, t2, r3, n2) {
        return (t2 + n2 >>> 0 < t2 ? 1 : 0) + e2 + r3 >>> 0;
      }, t.sum64_lo = function(e2, t2, r3, n2) {
        return t2 + n2 >>> 0;
      }, t.sum64_4_hi = function(e2, t2, r3, n2, i2, o2, a2, s3) {
        var f3 = 0, c = t2;
        return f3 += (c = c + n2 >>> 0) < t2 ? 1 : 0, f3 += (c = c + o2 >>> 0) < o2 ? 1 : 0, e2 + r3 + i2 + a2 + (f3 += (c = c + s3 >>> 0) < s3 ? 1 : 0) >>> 0;
      }, t.sum64_4_lo = function(e2, t2, r3, n2, i2, o2, a2, s3) {
        return t2 + n2 + o2 + s3 >>> 0;
      }, t.sum64_5_hi = function(e2, t2, r3, n2, i2, o2, a2, s3, f3, c) {
        var u = 0, d = t2;
        return u += (d = d + n2 >>> 0) < t2 ? 1 : 0, u += (d = d + o2 >>> 0) < o2 ? 1 : 0, u += (d = d + s3 >>> 0) < s3 ? 1 : 0, e2 + r3 + i2 + a2 + f3 + (u += (d = d + c >>> 0) < c ? 1 : 0) >>> 0;
      }, t.sum64_5_lo = function(e2, t2, r3, n2, i2, o2, a2, s3, f3, c) {
        return t2 + n2 + o2 + s3 + c >>> 0;
      }, t.rotr64_hi = function(e2, t2, r3) {
        return (t2 << 32 - r3 | e2 >>> r3) >>> 0;
      }, t.rotr64_lo = function(e2, t2, r3) {
        return (e2 << 32 - r3 | t2 >>> r3) >>> 0;
      }, t.shr64_hi = function(e2, t2, r3) {
        return e2 >>> r3;
      }, t.shr64_lo = function(e2, t2, r3) {
        return (e2 << 32 - r3 | t2 >>> r3) >>> 0;
      };
    }, function(e, t, r2) {
      var n = r2(41), i = r2(10);
      function o(e2, t2) {
        return 55296 == (64512 & e2.charCodeAt(t2)) && (!(t2 < 0 || t2 + 1 >= e2.length) && 56320 == (64512 & e2.charCodeAt(t2 + 1)));
      }
      function a(e2) {
        return (e2 >>> 24 | e2 >>> 8 & 65280 | e2 << 8 & 16711680 | (255 & e2) << 24) >>> 0;
      }
      function s2(e2) {
        return 1 === e2.length ? "0" + e2 : e2;
      }
      function f2(e2) {
        return 7 === e2.length ? "0" + e2 : 6 === e2.length ? "00" + e2 : 5 === e2.length ? "000" + e2 : 4 === e2.length ? "0000" + e2 : 3 === e2.length ? "00000" + e2 : 2 === e2.length ? "000000" + e2 : 1 === e2.length ? "0000000" + e2 : e2;
      }
      t.inherits = i, t.toArray = function(e2, t2) {
        if (Array.isArray(e2))
          return e2.slice();
        if (!e2)
          return [];
        var r3 = [];
        if ("string" == typeof e2)
          if (t2) {
            if ("hex" === t2)
              for ((e2 = e2.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e2 = "0" + e2), i2 = 0; i2 < e2.length; i2 += 2)
                r3.push(parseInt(e2[i2] + e2[i2 + 1], 16));
          } else
            for (var n2 = 0, i2 = 0; i2 < e2.length; i2++) {
              var a2 = e2.charCodeAt(i2);
              a2 < 128 ? r3[n2++] = a2 : a2 < 2048 ? (r3[n2++] = a2 >> 6 | 192, r3[n2++] = 63 & a2 | 128) : o(e2, i2) ? (a2 = 65536 + ((1023 & a2) << 10) + (1023 & e2.charCodeAt(++i2)), r3[n2++] = a2 >> 18 | 240, r3[n2++] = a2 >> 12 & 63 | 128, r3[n2++] = a2 >> 6 & 63 | 128, r3[n2++] = 63 & a2 | 128) : (r3[n2++] = a2 >> 12 | 224, r3[n2++] = a2 >> 6 & 63 | 128, r3[n2++] = 63 & a2 | 128);
            }
        else
          for (i2 = 0; i2 < e2.length; i2++)
            r3[i2] = 0 | e2[i2];
        return r3;
      }, t.toHex = function(e2) {
        for (var t2 = "", r3 = 0; r3 < e2.length; r3++)
          t2 += s2(e2[r3].toString(16));
        return t2;
      }, t.htonl = a, t.toHex32 = function(e2, t2) {
        for (var r3 = "", n2 = 0; n2 < e2.length; n2++) {
          var i2 = e2[n2];
          "little" === t2 && (i2 = a(i2)), r3 += f2(i2.toString(16));
        }
        return r3;
      }, t.zero2 = s2, t.zero8 = f2, t.join32 = function(e2, t2, r3, i2) {
        var o2 = r3 - t2;
        n(o2 % 4 == 0);
        for (var a2 = new Array(o2 / 4), s3 = 0, f3 = t2; s3 < a2.length; s3++, f3 += 4) {
          var c;
          c = "big" === i2 ? e2[f3] << 24 | e2[f3 + 1] << 16 | e2[f3 + 2] << 8 | e2[f3 + 3] : e2[f3 + 3] << 24 | e2[f3 + 2] << 16 | e2[f3 + 1] << 8 | e2[f3], a2[s3] = c >>> 0;
        }
        return a2;
      }, t.split32 = function(e2, t2) {
        for (var r3 = new Array(4 * e2.length), n2 = 0, i2 = 0; n2 < e2.length; n2++, i2 += 4) {
          var o2 = e2[n2];
          "big" === t2 ? (r3[i2] = o2 >>> 24, r3[i2 + 1] = o2 >>> 16 & 255, r3[i2 + 2] = o2 >>> 8 & 255, r3[i2 + 3] = 255 & o2) : (r3[i2 + 3] = o2 >>> 24, r3[i2 + 2] = o2 >>> 16 & 255, r3[i2 + 1] = o2 >>> 8 & 255, r3[i2] = 255 & o2);
        }
        return r3;
      }, t.rotr32 = function(e2, t2) {
        return e2 >>> t2 | e2 << 32 - t2;
      }, t.rotl32 = function(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }, t.sum32 = function(e2, t2) {
        return e2 + t2 >>> 0;
      }, t.sum32_3 = function(e2, t2, r3) {
        return e2 + t2 + r3 >>> 0;
      }, t.sum32_4 = function(e2, t2, r3, n2) {
        return e2 + t2 + r3 + n2 >>> 0;
      }, t.sum32_5 = function(e2, t2, r3, n2, i2) {
        return e2 + t2 + r3 + n2 + i2 >>> 0;
      }, t.sum64 = function(e2, t2, r3, n2) {
        var i2 = e2[t2], o2 = n2 + e2[t2 + 1] >>> 0, a2 = (o2 < n2 ? 1 : 0) + r3 + i2;
        e2[t2] = a2 >>> 0, e2[t2 + 1] = o2;
      }, t.sum64_hi = function(e2, t2, r3, n2) {
        return (t2 + n2 >>> 0 < t2 ? 1 : 0) + e2 + r3 >>> 0;
      }, t.sum64_lo = function(e2, t2, r3, n2) {
        return t2 + n2 >>> 0;
      }, t.sum64_4_hi = function(e2, t2, r3, n2, i2, o2, a2, s3) {
        var f3 = 0, c = t2;
        return f3 += (c = c + n2 >>> 0) < t2 ? 1 : 0, f3 += (c = c + o2 >>> 0) < o2 ? 1 : 0, e2 + r3 + i2 + a2 + (f3 += (c = c + s3 >>> 0) < s3 ? 1 : 0) >>> 0;
      }, t.sum64_4_lo = function(e2, t2, r3, n2, i2, o2, a2, s3) {
        return t2 + n2 + o2 + s3 >>> 0;
      }, t.sum64_5_hi = function(e2, t2, r3, n2, i2, o2, a2, s3, f3, c) {
        var u = 0, d = t2;
        return u += (d = d + n2 >>> 0) < t2 ? 1 : 0, u += (d = d + o2 >>> 0) < o2 ? 1 : 0, u += (d = d + s3 >>> 0) < s3 ? 1 : 0, e2 + r3 + i2 + a2 + f3 + (u += (d = d + c >>> 0) < c ? 1 : 0) >>> 0;
      }, t.sum64_5_lo = function(e2, t2, r3, n2, i2, o2, a2, s3, f3, c) {
        return t2 + n2 + o2 + s3 + c >>> 0;
      }, t.rotr64_hi = function(e2, t2, r3) {
        return (t2 << 32 - r3 | e2 >>> r3) >>> 0;
      }, t.rotr64_lo = function(e2, t2, r3) {
        return (e2 << 32 - r3 | t2 >>> r3) >>> 0;
      }, t.shr64_hi = function(e2, t2, r3) {
        return e2 >>> r3;
      }, t.shr64_lo = function(e2, t2, r3) {
        return (e2 << 32 - r3 | t2 >>> r3) >>> 0;
      };
    }, function(e, t, r2) {
      var n = Object.create ? function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3);
        var i2 = Object.getOwnPropertyDescriptor(t2, r3);
        i2 && !("get" in i2 ? !t2.__esModule : i2.writable || i2.configurable) || (i2 = { enumerable: true, get: function() {
          return t2[r3];
        } }), Object.defineProperty(e2, n2, i2);
      } : function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), e2[n2] = t2[r3];
      }, i = function(e2, t2) {
        for (var r3 in e2)
          "default" === r3 || Object.prototype.hasOwnProperty.call(t2, r3) || n(t2, e2, r3);
      };
      Object.defineProperty(t, "__esModule", { value: true }), t.isHexString = t.getKeys = t.fromAscii = t.fromUtf8 = t.toAscii = t.arrayContainsArray = t.getBinarySize = t.padToEven = t.stripHexPrefix = t.isHexPrefixed = void 0, i(r2(133), t), i(r2(134), t), i(r2(327), t), i(r2(95), t), i(r2(328), t), i(r2(36), t), i(r2(329), t), i(r2(28), t), i(r2(103), t);
      var o = r2(44);
      Object.defineProperty(t, "isHexPrefixed", { enumerable: true, get: function() {
        return o.isHexPrefixed;
      } }), Object.defineProperty(t, "stripHexPrefix", { enumerable: true, get: function() {
        return o.stripHexPrefix;
      } }), Object.defineProperty(t, "padToEven", { enumerable: true, get: function() {
        return o.padToEven;
      } }), Object.defineProperty(t, "getBinarySize", { enumerable: true, get: function() {
        return o.getBinarySize;
      } }), Object.defineProperty(t, "arrayContainsArray", { enumerable: true, get: function() {
        return o.arrayContainsArray;
      } }), Object.defineProperty(t, "toAscii", { enumerable: true, get: function() {
        return o.toAscii;
      } }), Object.defineProperty(t, "fromUtf8", { enumerable: true, get: function() {
        return o.fromUtf8;
      } }), Object.defineProperty(t, "fromAscii", { enumerable: true, get: function() {
        return o.fromAscii;
      } }), Object.defineProperty(t, "getKeys", { enumerable: true, get: function() {
        return o.getKeys;
      } }), Object.defineProperty(t, "isHexString", { enumerable: true, get: function() {
        return o.isHexString;
      } });
    }, function(e, t, r2) {
      var n = Object.create ? function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3);
        var i2 = Object.getOwnPropertyDescriptor(t2, r3);
        i2 && !("get" in i2 ? !t2.__esModule : i2.writable || i2.configurable) || (i2 = { enumerable: true, get: function() {
          return t2[r3];
        } }), Object.defineProperty(e2, n2, i2);
      } : function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), e2[n2] = t2[r3];
      }, i = Object.create ? function(e2, t2) {
        Object.defineProperty(e2, "default", { enumerable: true, value: t2 });
      } : function(e2, t2) {
        e2.default = t2;
      }, o = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = {};
        if (null != e2)
          for (var r3 in e2)
            "default" !== r3 && Object.prototype.hasOwnProperty.call(e2, r3) && n(t2, e2, r3);
        return i(t2, e2), t2;
      }, a = function(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      };
      Object.defineProperty(t, "__esModule", { value: true }), t.rlp = t.BN = void 0;
      var s2 = a(r2(4));
      t.BN = s2.default;
      var f2 = o(r2(268));
      t.rlp = f2;
    }, function(e, t, r2) {
      var n = Object.create ? function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3);
        var i2 = Object.getOwnPropertyDescriptor(t2, r3);
        i2 && !("get" in i2 ? !t2.__esModule : i2.writable || i2.configurable) || (i2 = { enumerable: true, get: function() {
          return t2[r3];
        } }), Object.defineProperty(e2, n2, i2);
      } : function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), e2[n2] = t2[r3];
      }, i = Object.create ? function(e2, t2) {
        Object.defineProperty(e2, "default", { enumerable: true, value: t2 });
      } : function(e2, t2) {
        e2.default = t2;
      }, o = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = {};
        if (null != e2)
          for (var r3 in e2)
            "default" !== r3 && Object.prototype.hasOwnProperty.call(e2, r3) && n(t2, e2, r3);
        return i(t2, e2), t2;
      }, a = function(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      };
      Object.defineProperty(t, "__esModule", { value: true }), t.rlp = t.BN = void 0;
      var s2 = a(r2(4));
      t.BN = s2.default;
      var f2 = o(r2(547));
      t.rlp = f2;
    }, function(e, t, r2) {
      var n = r2(264), i = r2(265), o = r2(131), a = r2(266);
      e.exports = function(e2, t2) {
        return n(e2) || i(e2, t2) || o(e2, t2) || a();
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      (function(t2, n) {
        var i = r2(5).Buffer, o = t2.crypto || t2.msCrypto;
        o && o.getRandomValues ? e.exports = function(e2, t3) {
          if (e2 > 4294967295)
            throw new RangeError("requested too many random bytes");
          var r3 = i.allocUnsafe(e2);
          if (e2 > 0)
            if (e2 > 65536)
              for (var a = 0; a < e2; a += 65536)
                o.getRandomValues(r3.slice(a, a + 65536));
            else
              o.getRandomValues(r3);
          if ("function" == typeof t3)
            return n.nextTick(function() {
              t3(null, r3);
            });
          return r3;
        } : e.exports = function() {
          throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
        };
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = r2(160).Transform, o = r2(21).StringDecoder;
      function a(e2) {
        i.call(this), this.hashMode = "string" == typeof e2, this.hashMode ? this[e2] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
      }
      r2(3)(a, i), a.prototype.update = function(e2, t2, r3) {
        "string" == typeof e2 && (e2 = n.from(e2, t2));
        var i2 = this._update(e2);
        return this.hashMode ? this : (r3 && (i2 = this._toString(i2, r3)), i2);
      }, a.prototype.setAutoPadding = function() {
      }, a.prototype.getAuthTag = function() {
        throw new Error("trying to get auth tag in unsupported state");
      }, a.prototype.setAuthTag = function() {
        throw new Error("trying to set auth tag in unsupported state");
      }, a.prototype.setAAD = function() {
        throw new Error("trying to set aad in unsupported state");
      }, a.prototype._transform = function(e2, t2, r3) {
        var n2;
        try {
          this.hashMode ? this._update(e2) : this.push(this._update(e2));
        } catch (e3) {
          n2 = e3;
        } finally {
          r3(n2);
        }
      }, a.prototype._flush = function(e2) {
        var t2;
        try {
          this.push(this.__final());
        } catch (e3) {
          t2 = e3;
        }
        e2(t2);
      }, a.prototype._finalOrDigest = function(e2) {
        var t2 = this.__final() || n.alloc(0);
        return e2 && (t2 = this._toString(t2, e2, true)), t2;
      }, a.prototype._toString = function(e2, t2, r3) {
        if (this._decoder || (this._decoder = new o(t2), this._encoding = t2), this._encoding !== t2)
          throw new Error("can't switch encodings");
        var n2 = this._decoder.write(e2);
        return r3 && (n2 += this._decoder.end()), n2;
      }, e.exports = a;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "BigNumber", { enumerable: true, get: function() {
        return n.BigNumber;
      } }), Object.defineProperty(t, "FixedFormat", { enumerable: true, get: function() {
        return i.FixedFormat;
      } }), Object.defineProperty(t, "FixedNumber", { enumerable: true, get: function() {
        return i.FixedNumber;
      } }), Object.defineProperty(t, "_base16To36", { enumerable: true, get: function() {
        return n._base16To36;
      } }), Object.defineProperty(t, "_base36To16", { enumerable: true, get: function() {
        return n._base36To16;
      } }), Object.defineProperty(t, "formatFixed", { enumerable: true, get: function() {
        return i.formatFixed;
      } }), Object.defineProperty(t, "parseFixed", { enumerable: true, get: function() {
        return i.parseFixed;
      } });
      var n = r2(173), i = r2(362);
    }, function(e, t, r2) {
      var n = r2(254), i = r2(356);
      e.exports = { packageInit: function(e2, t2) {
        if (t2 = Array.prototype.slice.call(t2), !e2)
          throw new Error('You need to instantiate using the "new" keyword.');
        Object.defineProperty(e2, "currentProvider", { get: function() {
          return e2._provider;
        }, set: function(t3) {
          return e2.setProvider(t3);
        }, enumerable: true, configurable: true }), t2[0] && t2[0]._requestManager ? e2._requestManager = t2[0]._requestManager : e2._requestManager = new n.Manager(t2[0], t2[1]), e2.givenProvider = n.Manager.givenProvider, e2.providers = n.Manager.providers, e2._provider = e2._requestManager.provider, e2.setProvider || (e2.setProvider = function(t3, r3) {
          return e2._requestManager.setProvider(t3, r3), e2._provider = e2._requestManager.provider, true;
        }), e2.setRequestManager = function(t3) {
          e2._requestManager = t3, e2._provider = t3.provider;
        }, e2.BatchRequest = n.BatchManager.bind(null, e2._requestManager), e2.extend = i(e2);
      }, addProviders: function(e2) {
        e2.givenProvider = n.Manager.givenProvider, e2.providers = n.Manager.providers;
      } };
    }, function(e, t, r2) {
      e.exports = function(e2) {
        return e2.webpackPolyfill || (e2.deprecate = function() {
        }, e2.paths = [], e2.children || (e2.children = []), Object.defineProperty(e2, "loaded", { enumerable: true, get: function() {
          return e2.l;
        } }), Object.defineProperty(e2, "id", { enumerable: true, get: function() {
          return e2.i;
        } }), e2.webpackPolyfill = 1), e2;
      };
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3) {
          var t2 = "function" == typeof Symbol && Symbol.iterator, r3 = t2 && e3[t2], n2 = 0;
          if (r3)
            return r3.call(e3);
          if (e3 && "number" == typeof e3.length)
            return { next: function() {
              return e3 && n2 >= e3.length && (e3 = void 0), { value: e3 && e3[n2++], done: !e3 };
            } };
          throw new TypeError(t2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
        }, i = function(e3, t2) {
          var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
          if (!r3)
            return e3;
          var n2, i2, o2 = r3.call(e3), a2 = [];
          try {
            for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
              a2.push(n2.value);
          } catch (e4) {
            i2 = { error: e4 };
          } finally {
            try {
              n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (i2)
                throw i2.error;
            }
          }
          return a2;
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.bufArrToArr = t.arrToBufArr = t.validateNoLeadingZeroes = t.baToJSON = t.toUtf8 = t.addHexPrefix = t.toUnsigned = t.fromSigned = t.bufferToHex = t.bufferToInt = t.toBuffer = t.unpadHexString = t.unpadArray = t.unpadBuffer = t.setLengthRight = t.setLengthLeft = t.zeros = t.intToBuffer = t.intToHex = void 0;
        var o = r2(28), a = r2(44), s2 = r2(73);
        t.intToHex = function(e3) {
          if (!Number.isSafeInteger(e3) || e3 < 0)
            throw new Error("Received an invalid integer type: ".concat(e3));
          return "0x".concat(e3.toString(16));
        };
        t.intToBuffer = function(r3) {
          var n2 = (0, t.intToHex)(r3);
          return e2.from((0, a.padToEven)(n2.slice(2)), "hex");
        };
        t.zeros = function(t2) {
          return e2.allocUnsafe(t2).fill(0);
        };
        var f2 = function(e3, r3, n2) {
          var i2 = (0, t.zeros)(r3);
          return n2 ? e3.length < r3 ? (e3.copy(i2), i2) : e3.slice(0, r3) : e3.length < r3 ? (e3.copy(i2, r3 - e3.length), i2) : e3.slice(-r3);
        };
        t.setLengthLeft = function(e3, t2) {
          return (0, s2.assertIsBuffer)(e3), f2(e3, t2, false);
        };
        t.setLengthRight = function(e3, t2) {
          return (0, s2.assertIsBuffer)(e3), f2(e3, t2, true);
        };
        var c = function(e3) {
          for (var t2 = e3[0]; e3.length > 0 && "0" === t2.toString(); )
            t2 = (e3 = e3.slice(1))[0];
          return e3;
        };
        t.unpadBuffer = function(e3) {
          return (0, s2.assertIsBuffer)(e3), c(e3);
        };
        t.unpadArray = function(e3) {
          return (0, s2.assertIsArray)(e3), c(e3);
        };
        t.unpadHexString = function(e3) {
          return (0, s2.assertIsHexString)(e3), e3 = (0, a.stripHexPrefix)(e3), c(e3);
        };
        t.toBuffer = function(r3) {
          if (null == r3)
            return e2.allocUnsafe(0);
          if (e2.isBuffer(r3))
            return e2.from(r3);
          if (Array.isArray(r3) || r3 instanceof Uint8Array)
            return e2.from(r3);
          if ("string" == typeof r3) {
            if (!(0, a.isHexString)(r3))
              throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ".concat(r3));
            return e2.from((0, a.padToEven)((0, a.stripHexPrefix)(r3)), "hex");
          }
          if ("number" == typeof r3)
            return (0, t.intToBuffer)(r3);
          if (o.BN.isBN(r3)) {
            if (r3.isNeg())
              throw new Error("Cannot convert negative BN to buffer. Given: ".concat(r3));
            return r3.toArrayLike(e2);
          }
          if (r3.toArray)
            return e2.from(r3.toArray());
          if (r3.toBuffer)
            return e2.from(r3.toBuffer());
          throw new Error("invalid type");
        };
        t.bufferToInt = function(e3) {
          return new o.BN((0, t.toBuffer)(e3)).toNumber();
        };
        t.bufferToHex = function(e3) {
          return "0x" + (e3 = (0, t.toBuffer)(e3)).toString("hex");
        };
        t.fromSigned = function(e3) {
          return new o.BN(e3).fromTwos(256);
        };
        t.toUnsigned = function(t2) {
          return e2.from(t2.toTwos(256).toArray());
        };
        t.addHexPrefix = function(e3) {
          return "string" != typeof e3 || (0, a.isHexPrefixed)(e3) ? e3 : "0x" + e3;
        };
        t.toUtf8 = function(t2) {
          if ((t2 = (0, a.stripHexPrefix)(t2)).length % 2 != 0)
            throw new Error("Invalid non-even hex string input for toUtf8() provided");
          return e2.from(t2.replace(/^(00)+|(00)+$/g, ""), "hex").toString("utf8");
        };
        t.baToJSON = function(r3) {
          if (e2.isBuffer(r3))
            return "0x".concat(r3.toString("hex"));
          if (r3 instanceof Array) {
            for (var n2 = [], i2 = 0; i2 < r3.length; i2++)
              n2.push((0, t.baToJSON)(r3[i2]));
            return n2;
          }
        };
        t.validateNoLeadingZeroes = function(e3) {
          var t2, r3;
          try {
            for (var o2 = n(Object.entries(e3)), a2 = o2.next(); !a2.done; a2 = o2.next()) {
              var s3 = i(a2.value, 2), f3 = s3[0], c2 = s3[1];
              if (void 0 !== c2 && c2.length > 0 && 0 === c2[0])
                throw new Error("".concat(f3, " cannot have leading zeroes, received: ").concat(c2.toString("hex")));
            }
          } catch (e4) {
            t2 = { error: e4 };
          } finally {
            try {
              a2 && !a2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (t2)
                throw t2.error;
            }
          }
        }, t.arrToBufArr = function t2(r3) {
          return Array.isArray(r3) ? r3.map(function(e3) {
            return t2(e3);
          }) : e2.from(r3);
        }, t.bufArrToArr = function e3(t2) {
          return Array.isArray(t2) ? t2.map(function(t3) {
            return e3(t3);
          }) : Uint8Array.from(null != t2 ? t2 : []);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(75), i = Object.keys || function(e2) {
        var t2 = [];
        for (var r3 in e2)
          t2.push(r3);
        return t2;
      };
      e.exports = d;
      var o = Object.create(r2(62));
      o.inherits = r2(3);
      var a = r2(161), s2 = r2(102);
      o.inherits(d, a);
      for (var f2 = i(s2.prototype), c = 0; c < f2.length; c++) {
        var u = f2[c];
        d.prototype[u] || (d.prototype[u] = s2.prototype[u]);
      }
      function d(e2) {
        if (!(this instanceof d))
          return new d(e2);
        a.call(this, e2), s2.call(this, e2), e2 && false === e2.readable && (this.readable = false), e2 && false === e2.writable && (this.writable = false), this.allowHalfOpen = true, e2 && false === e2.allowHalfOpen && (this.allowHalfOpen = false), this.once("end", h);
      }
      function h() {
        this.allowHalfOpen || this._writableState.ended || n.nextTick(l, this);
      }
      function l(e2) {
        e2.end();
      }
      Object.defineProperty(d.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
        return this._writableState.highWaterMark;
      } }), Object.defineProperty(d.prototype, "destroyed", { get: function() {
        return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
      }, set: function(e2) {
        void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
      } }), d.prototype._destroy = function(e2, t2) {
        this.push(null), this.end(), n.nextTick(t2, e2);
      };
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(63)), o = n(r2(30)), a = n(r2(58)), s2 = n(r2(105)), f2 = n(r2(2));
      function c(e2, t2) {
        var r3 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function u(e2) {
        for (var t2 = 1; t2 < arguments.length; t2++) {
          var r3 = null != arguments[t2] ? arguments[t2] : {};
          t2 % 2 ? c(Object(r3), true).forEach(function(t3) {
            (0, a.default)(e2, t3, r3[t3]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(r3)) : c(Object(r3)).forEach(function(t3) {
            Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(r3, t3));
          });
        }
        return e2;
      }
      var d = r2(12).errors, h = r2(12).formatters, l = r2(17), p = r2(78), b = r2(79).subscriptions, y = r2(359), v = function(e2) {
        if (!e2.call || !e2.name)
          throw new Error('When creating a method you need to provide at least the "name" and "call" property.');
        this.name = e2.name, this.call = e2.call, this.params = e2.params || 0, this.inputFormatter = e2.inputFormatter, this.outputFormatter = e2.outputFormatter, this.transformPayload = e2.transformPayload, this.extraFormatters = e2.extraFormatters, this.abiCoder = e2.abiCoder, this.requestManager = e2.requestManager, this.accounts = e2.accounts, this.defaultBlock = e2.defaultBlock || "latest", this.defaultAccount = e2.defaultAccount || null, this.transactionBlockTimeout = e2.transactionBlockTimeout || 50, this.transactionConfirmationBlocks = e2.transactionConfirmationBlocks || 24, this.transactionPollingTimeout = e2.transactionPollingTimeout || 750, this.transactionPollingInterval = e2.transactionPollingInterval || 1e3, this.blockHeaderTimeout = e2.blockHeaderTimeout || 10, this.defaultCommon = e2.defaultCommon, this.defaultChain = e2.defaultChain, this.defaultHardfork = e2.defaultHardfork, this.handleRevert = e2.handleRevert;
      };
      v.prototype.setRequestManager = function(e2, t2) {
        this.requestManager = e2, t2 && (this.accounts = t2);
      }, v.prototype.createFunction = function(e2, t2) {
        var r3 = this.buildCall();
        return Object.defineProperty(r3, "call", { configurable: true, writable: true, value: this.call }), this.setRequestManager(e2 || this.requestManager, t2 || this.accounts), r3;
      }, v.prototype.attachToObject = function(e2) {
        var t2 = this.buildCall();
        Object.defineProperty(t2, "call", { configurable: true, writable: true, value: this.call });
        var r3 = this.name.split(".");
        r3.length > 1 ? (e2[r3[0]] = e2[r3[0]] || {}, e2[r3[0]][r3[1]] = t2) : e2[r3[0]] = t2;
      }, v.prototype.getCall = function(e2) {
        return "function" == typeof this.call ? this.call(e2) : this.call;
      }, v.prototype.extractCallback = function(e2) {
        if ("function" == typeof e2[e2.length - 1])
          return e2.pop();
      }, v.prototype.validateArgs = function(e2) {
        if (e2.length !== this.params)
          throw d.InvalidNumberOfParams(e2.length, this.params, this.name);
      }, v.prototype.formatInput = function(e2) {
        var t2 = this;
        return this.inputFormatter ? this.inputFormatter.map(function(r3, n2) {
          return r3 ? r3.call(t2, e2[n2]) : e2[n2];
        }) : e2;
      }, v.prototype.formatOutput = function(e2) {
        var t2 = this;
        return Array.isArray(e2) ? e2.map(function(e3) {
          return t2.outputFormatter && e3 ? t2.outputFormatter(e3) : e3;
        }) : this.outputFormatter && e2 ? this.outputFormatter(e2) : e2;
      }, v.prototype.toPayload = function(e2) {
        var t2 = this.getCall(e2), r3 = this.extractCallback(e2), n2 = this.formatInput(e2);
        this.validateArgs(n2);
        var i2 = { method: t2, params: n2, callback: r3 };
        return this.transformPayload && (i2 = this.transformPayload(i2)), i2;
      }, v.prototype._confirmTransaction = function(e2, t2, r3) {
        var n2 = this, o2 = false, a2 = true, c2 = 0, u2 = 0, m2 = null, g2 = null, w = null, _ = r3.params[0] && "object" === (0, f2.default)(r3.params[0]) && r3.params[0].gas ? r3.params[0].gas : null, k = !!r3.params[0] && "object" === (0, f2.default)(r3.params[0]) && r3.params[0].data && r3.params[0].from && !r3.params[0].to, A = k && r3.params[0].data.length > 2, S = [new v({ name: "getBlockByNumber", call: "eth_getBlockByNumber", params: 2, inputFormatter: [h.inputBlockNumberFormatter, function(e3) {
          return !!e3;
        }], outputFormatter: h.outputBlockFormatter }), new v({ name: "getTransactionReceipt", call: "eth_getTransactionReceipt", params: 1, inputFormatter: [null], outputFormatter: h.outputTransactionReceiptFormatter }), new v({ name: "getCode", call: "eth_getCode", params: 2, inputFormatter: [h.inputAddressFormatter, h.inputDefaultBlockNumberFormatter] }), new v({ name: "getTransactionByHash", call: "eth_getTransactionByHash", params: 1, inputFormatter: [null], outputFormatter: h.outputTransactionFormatter }), new b({ name: "subscribe", type: "eth", subscriptions: { newBlockHeaders: { subscriptionName: "newHeads", params: 0, outputFormatter: h.outputBlockFormatter } } })], E = {};
        S.forEach(function(e3) {
          e3.attachToObject(E), e3.requestManager = n2.requestManager;
        });
        var x = function(f3, b2, v2, S2, x2) {
          if (!v2)
            return x2 || (x2 = { unsubscribe: function() {
              clearInterval(m2), clearTimeout(g2);
            } }), (f3 ? p.resolve(f3) : E.getTransactionReceipt(t2)).catch(function(t3) {
              x2.unsubscribe(), o2 = true, l._fireError({ message: "Failed to check for transaction receipt:", data: t3 }, e2.eventEmitter, e2.reject);
            }).then(function() {
              var t3 = (0, s2.default)(i.default.mark(function t4(r4) {
                var o3, s3, c3;
                return i.default.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        if (r4 && r4.blockHash) {
                          t5.next = 2;
                          break;
                        }
                        throw new Error("Receipt missing or blockHash null");
                      case 2:
                        if (n2.extraFormatters && n2.extraFormatters.receiptFormatter && (r4 = n2.extraFormatters.receiptFormatter(r4)), !(e2.eventEmitter.listeners("confirmation").length > 0)) {
                          t5.next = 28;
                          break;
                        }
                        if (void 0 !== f3 && 0 === u2) {
                          t5.next = 25;
                          break;
                        }
                        return t5.next = 7, E.getBlockByNumber("latest");
                      case 7:
                        if (s3 = t5.sent, c3 = s3 ? s3.hash : null, !b2) {
                          t5.next = 24;
                          break;
                        }
                        if (!w) {
                          t5.next = 17;
                          break;
                        }
                        return t5.next = 13, E.getBlockByNumber(w.number + 1);
                      case 13:
                        (o3 = t5.sent) && (w = o3, e2.eventEmitter.emit("confirmation", u2, r4, c3)), t5.next = 22;
                        break;
                      case 17:
                        return t5.next = 19, E.getBlockByNumber(r4.blockNumber);
                      case 19:
                        o3 = t5.sent, w = o3, e2.eventEmitter.emit("confirmation", u2, r4, c3);
                      case 22:
                        t5.next = 25;
                        break;
                      case 24:
                        e2.eventEmitter.emit("confirmation", u2, r4, c3);
                      case 25:
                        (b2 && o3 || !b2) && u2++, a2 = false, u2 === n2.transactionConfirmationBlocks + 1 && (x2.unsubscribe(), e2.eventEmitter.removeAllListeners());
                      case 28:
                        return t5.abrupt("return", r4);
                      case 29:
                      case "end":
                        return t5.stop();
                    }
                }, t4);
              }));
              return function(e3) {
                return t3.apply(this, arguments);
              };
            }()).then(function() {
              var t3 = (0, s2.default)(i.default.mark(function t4(r4) {
                var s3;
                return i.default.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        if (!k || o2) {
                          t5.next = 19;
                          break;
                        }
                        if (r4.contractAddress) {
                          t5.next = 5;
                          break;
                        }
                        return a2 && (x2.unsubscribe(), o2 = true), l._fireError(d.NoContractAddressFoundError(r4), e2.eventEmitter, e2.reject, null, r4), t5.abrupt("return");
                      case 5:
                        return t5.prev = 5, t5.next = 8, E.getCode(r4.contractAddress);
                      case 8:
                        s3 = t5.sent, t5.next = 13;
                        break;
                      case 11:
                        t5.prev = 11, t5.t0 = t5.catch(5);
                      case 13:
                        if (s3) {
                          t5.next = 15;
                          break;
                        }
                        return t5.abrupt("return");
                      case 15:
                        true === r4.status && A || s3.length > 2 ? (e2.eventEmitter.emit("receipt", r4), n2.extraFormatters && n2.extraFormatters.contractDeployFormatter ? e2.resolve(n2.extraFormatters.contractDeployFormatter(r4)) : e2.resolve(r4), a2 && e2.eventEmitter.removeAllListeners()) : l._fireError(d.ContractCodeNotStoredError(r4), e2.eventEmitter, e2.reject, null, r4), a2 && x2.unsubscribe(), o2 = true;
                      case 19:
                        return t5.abrupt("return", r4);
                      case 20:
                      case "end":
                        return t5.stop();
                    }
                }, t4, null, [[5, 11]]);
              }));
              return function(e3) {
                return t3.apply(this, arguments);
              };
            }()).then(function() {
              var t3 = (0, s2.default)(i.default.mark(function t4(s3) {
                var f4, c3, u3, p2;
                return i.default.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        if (k || o2) {
                          t5.next = 35;
                          break;
                        }
                        if (s3.outOfGas || _ && _ === s3.gasUsed || true !== s3.status && "0x1" !== s3.status && void 0 !== s3.status) {
                          t5.next = 7;
                          break;
                        }
                        e2.eventEmitter.emit("receipt", s3), e2.resolve(s3), a2 && e2.eventEmitter.removeAllListeners(), t5.next = 33;
                        break;
                      case 7:
                        if (JSON.stringify(s3, null, 2), false !== s3.status && "0x0" !== s3.status) {
                          t5.next = 32;
                          break;
                        }
                        if (t5.prev = 9, f4 = null, !n2.handleRevert || "eth_sendTransaction" !== n2.call && "eth_sendRawTransaction" !== n2.call) {
                          t5.next = 24;
                          break;
                        }
                        return c3 = r3.params[0], "eth_sendRawTransaction" === n2.call && (u3 = r3.params[0], p2 = y.parse(u3), c3 = h.inputTransactionFormatter({ data: p2.data, to: p2.to, from: p2.from, gas: p2.gasLimit.toHexString(), gasPrice: p2.gasPrice ? p2.gasPrice.toHexString() : void 0, value: p2.value.toHexString() })), t5.next = 16, n2.getRevertReason(c3, s3.blockNumber);
                      case 16:
                        if (!(f4 = t5.sent)) {
                          t5.next = 21;
                          break;
                        }
                        l._fireError(d.TransactionRevertInstructionError(f4.reason, f4.signature, s3), e2.eventEmitter, e2.reject, null, s3), t5.next = 22;
                        break;
                      case 21:
                        throw false;
                      case 22:
                        t5.next = 25;
                        break;
                      case 24:
                        throw false;
                      case 25:
                        t5.next = 30;
                        break;
                      case 27:
                        t5.prev = 27, t5.t0 = t5.catch(9), l._fireError(d.TransactionRevertedWithoutReasonError(s3), e2.eventEmitter, e2.reject, null, s3);
                      case 30:
                        t5.next = 33;
                        break;
                      case 32:
                        l._fireError(d.TransactionOutOfGasError(s3), e2.eventEmitter, e2.reject, null, s3);
                      case 33:
                        a2 && x2.unsubscribe(), o2 = true;
                      case 35:
                      case "end":
                        return t5.stop();
                    }
                }, t4, null, [[9, 27]]);
              }));
              return function(e3) {
                return t3.apply(this, arguments);
              };
            }()).catch(function() {
              c2++, b2 ? c2 - 1 >= n2.transactionPollingTimeout && (x2.unsubscribe(), o2 = true, l._fireError(d.TransactionError("Transaction was not mined within " + n2.transactionPollingTimeout + " seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!"), e2.eventEmitter, e2.reject)) : c2 - 1 >= n2.transactionBlockTimeout && (x2.unsubscribe(), o2 = true, l._fireError(d.TransactionError("Transaction was not mined within " + n2.transactionBlockTimeout + " blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"), e2.eventEmitter, e2.reject));
            });
          x2.unsubscribe(), o2 = true, l._fireError({ message: "Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.", data: v2 }, e2.eventEmitter, e2.reject);
        }, P = function(e3) {
          var t3 = false, r4 = function() {
            m2 = setInterval(x.bind(null, e3, true), n2.transactionPollingInterval);
          };
          if (!this.requestManager.provider.on)
            return r4();
          E.subscribe("newBlockHeaders", function(n3, i2, o3) {
            if (t3 = true, n3 || !i2)
              return r4();
            x(e3, false, n3, 0, o3);
          }), g2 = setTimeout(function() {
            t3 || r4();
          }, 1e3 * this.blockHeaderTimeout);
        }.bind(this);
        E.getTransactionReceipt(t2).then(function(t3) {
          t3 && t3.blockHash ? (e2.eventEmitter.listeners("confirmation").length > 0 && P(t3), x(t3, false)) : o2 || P();
        }).catch(function() {
          o2 || P();
        });
      };
      var m = function(e2, t2) {
        return "number" == typeof e2 ? t2.wallet[e2] : e2 && "object" === (0, f2.default)(e2) && e2.address && e2.privateKey ? e2 : t2.wallet[e2.toLowerCase()];
      };
      function g(e2, t2) {
        return new Promise(function(r3, n2) {
          try {
            var i2 = new v({ name: "getBlockByNumber", call: "eth_getBlockByNumber", params: 2, inputFormatter: [function(e3) {
              return e3 ? l.toHex(e3) : "latest";
            }, function() {
              return false;
            }] }).createFunction(e2.requestManager), a2 = new v({ name: "getGasPrice", call: "eth_gasPrice", params: 0 }).createFunction(e2.requestManager);
            Promise.all([i2(), a2()]).then(function(e3) {
              var n3 = (0, o.default)(e3, 2), i3 = n3[0], a3 = n3[1];
              if (("0x2" === t2.type || void 0 === t2.type) && i3 && i3.baseFeePerGas) {
                var s3, f3;
                t2.gasPrice ? (s3 = t2.gasPrice, f3 = t2.gasPrice, delete t2.gasPrice) : (s3 = t2.maxPriorityFeePerGas || "0x9502F900", f3 = t2.maxFeePerGas || l.toHex(l.toBN(i3.baseFeePerGas).mul(l.toBN(2)).add(l.toBN(s3)))), r3({ maxFeePerGas: f3, maxPriorityFeePerGas: s3 });
              } else {
                if (t2.maxPriorityFeePerGas || t2.maxFeePerGas)
                  throw Error("Network doesn't support eip-1559");
                r3({ gasPrice: a3 });
              }
            });
          } catch (e3) {
            n2(e3);
          }
        });
      }
      v.prototype.buildCall = function() {
        var e2 = this, t2 = "eth_sendTransaction" === e2.call || "eth_sendRawTransaction" === e2.call, r3 = "eth_call" === e2.call, n2 = function() {
          var n3 = Array.prototype.slice.call(arguments), i2 = p(!t2), o2 = e2.toPayload(n3);
          e2.hexFormat = false, "eth_getTransactionReceipt" === e2.call && (e2.hexFormat = o2.params.length < n3.length && "hex" === n3[n3.length - 1]);
          var a2 = function(n4, a3) {
            var s4;
            if (e2.handleRevert && r3 && e2.abiCoder && (!n4 && e2.isRevertReasonString(a3) ? s4 = a3.substring(10) : n4 && n4.data && (s4 = n4.data.substring(10)), s4)) {
              var f3 = e2.abiCoder.decodeParameter("string", "0x" + s4);
              return void l._fireError(d.RevertInstructionError(f3, "Error(String)"), i2.eventEmitter, i2.reject, o2.callback, { reason: f3, signature: "Error(String)" });
            }
            try {
              a3 = e2.formatOutput(a3);
            } catch (e3) {
              n4 = e3;
            }
            if (a3 instanceof Error && (n4 = a3), n4)
              return n4.error && (n4 = n4.error), l._fireError(n4, i2.eventEmitter, i2.reject, o2.callback);
            o2.callback && o2.callback(null, a3), t2 ? (i2.eventEmitter.emit("transactionHash", a3), e2._confirmTransaction(i2, a3, o2)) : n4 || i2.resolve(a3);
          }, s3 = function(t3) {
            var r4 = u(u({}, o2), {}, { method: "eth_sendRawTransaction", params: [t3.rawTransaction] });
            e2.requestManager.send(r4, a2);
          }, c2 = function(e3, t3) {
            var r4;
            if (t3 && t3.accounts && t3.accounts.wallet && t3.accounts.wallet.length) {
              if ("eth_sendTransaction" === e3.method) {
                var n4 = e3.params[0];
                if ((r4 = m(n4 && "object" === (0, f2.default)(n4) ? n4.from : null, t3.accounts)) && r4.privateKey)
                  return delete (n4 = JSON.parse(JSON.stringify(n4))).from, t3.defaultChain && !n4.chain && (n4.chain = t3.defaultChain), t3.defaultHardfork && !n4.hardfork && (n4.hardfork = t3.defaultHardfork), t3.defaultCommon && !n4.common && (n4.common = t3.defaultCommon), void t3.accounts.signTransaction(n4, r4.privateKey).then(s3).catch(function(e4) {
                    if ("function" == typeof i2.eventEmitter.listeners && i2.eventEmitter.listeners("error").length) {
                      try {
                        i2.eventEmitter.emit("error", e4);
                      } catch (e5) {
                      }
                      i2.eventEmitter.removeAllListeners(), i2.eventEmitter.catch(function() {
                      });
                    }
                    i2.reject(e4);
                  });
              } else if ("eth_sign" === e3.method) {
                var o3 = e3.params[1];
                if ((r4 = m(e3.params[0], t3.accounts)) && r4.privateKey) {
                  var c3 = t3.accounts.sign(o3, r4.privateKey);
                  return e3.callback && e3.callback(null, c3.signature), void i2.resolve(c3.signature);
                }
              }
            }
            return t3.requestManager.send(e3, a2);
          };
          return t2 && o2.params[0] && "object" === (0, f2.default)(o2.params[0]) && void 0 === o2.params[0].gasPrice && (void 0 === o2.params[0].maxPriorityFeePerGas || void 0 === o2.params[0].maxFeePerGas) ? g(e2, o2.params[0]).then(function(r4) {
            void 0 !== r4.gasPrice ? o2.params[0].gasPrice = r4.gasPrice : void 0 !== r4.maxPriorityFeePerGas && void 0 !== r4.maxFeePerGas && (o2.params[0].maxPriorityFeePerGas = r4.maxPriorityFeePerGas, o2.params[0].maxFeePerGas = r4.maxFeePerGas), t2 && setTimeout(function() {
              i2.eventEmitter.emit("sending", o2);
            }, 0), c2(o2, e2);
          }) : (t2 && setTimeout(function() {
            i2.eventEmitter.emit("sending", o2);
          }, 0), c2(o2, e2)), t2 && setTimeout(function() {
            i2.eventEmitter.emit("sent", o2);
          }, 0), i2.eventEmitter;
        };
        return n2.method = e2, n2.request = this.request.bind(this), n2;
      }, v.prototype.getRevertReason = function(e2, t2) {
        var r3 = this;
        return new Promise(function(n2, i2) {
          new v({ name: "call", call: "eth_call", params: 2, abiCoder: r3.abiCoder, handleRevert: true }).createFunction(r3.requestManager)(e2, l.numberToHex(t2)).then(function() {
            n2(false);
          }).catch(function(e3) {
            e3.reason ? n2({ reason: e3.reason, signature: e3.signature }) : i2(e3);
          });
        });
      }, v.prototype.isRevertReasonString = function(e2) {
        return "string" == typeof e2 && (e2.length - 2) / 2 % 32 == 4 && "0x08c379a0" === e2.substring(0, 10);
      }, v.prototype.request = function() {
        var e2 = this.toPayload(Array.prototype.slice.call(arguments));
        return e2.format = this.formatOutput.bind(this), e2;
      }, e.exports = v;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.keccak256 = function(e2) {
        return "0x" + i.default.keccak_256((0, o.arrayify)(e2));
      };
      var i = n(r2(363)), o = r2(11);
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.Description = void 0, t.checkProperties = function(e2, t2) {
        e2 && "object" === (0, s2.default)(e2) || d.throwArgumentError("invalid object", "object", e2);
        Object.keys(e2).forEach(function(r3) {
          t2[r3] || d.throwArgumentError("invalid object key - " + r3, "transaction:" + r3, e2);
        });
      }, t.deepCopy = b, t.defineReadOnly = h, t.getStatic = function(e2, t2) {
        for (var r3 = 0; r3 < 32; r3++) {
          if (e2[t2])
            return e2[t2];
          if (!e2.prototype || "object" !== (0, s2.default)(e2.prototype))
            break;
          e2 = Object.getPrototypeOf(e2.prototype).constructor;
        }
        return null;
      }, t.resolveProperties = function(e2) {
        return u(this, void 0, void 0, i.default.mark(function t2() {
          var r3, n2;
          return i.default.wrap(function(t3) {
            for (; ; )
              switch (t3.prev = t3.next) {
                case 0:
                  return r3 = Object.keys(e2).map(function(t4) {
                    var r4 = e2[t4];
                    return Promise.resolve(r4).then(function(e3) {
                      return { key: t4, value: e3 };
                    });
                  }), t3.next = 3, Promise.all(r3);
                case 3:
                  return n2 = t3.sent, t3.abrupt("return", n2.reduce(function(e3, t4) {
                    return e3[t4.key] = t4.value, e3;
                  }, {}));
                case 5:
                case "end":
                  return t3.stop();
              }
          }, t2);
        }));
      }, t.shallowCopy = function(e2) {
        var t2 = {};
        for (var r3 in e2)
          t2[r3] = e2[r3];
        return t2;
      };
      var i = n(r2(63)), o = n(r2(9)), a = n(r2(8)), s2 = n(r2(2)), f2 = r2(16), c = r2(370), u = function(e2, t2, r3, n2) {
        return new (r3 || (r3 = Promise))(function(i2, o2) {
          function a2(e3) {
            try {
              f3(n2.next(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function s3(e3) {
            try {
              f3(n2.throw(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function f3(e3) {
            var t3;
            e3.done ? i2(e3.value) : (t3 = e3.value, t3 instanceof r3 ? t3 : new r3(function(e4) {
              e4(t3);
            })).then(a2, s3);
          }
          f3((n2 = n2.apply(e2, t2 || [])).next());
        });
      }, d = new f2.Logger(c.version);
      function h(e2, t2, r3) {
        Object.defineProperty(e2, t2, { enumerable: true, value: r3, writable: false });
      }
      var l = { bigint: true, boolean: true, function: true, number: true, string: true };
      function p(e2) {
        if (function e3(t3) {
          if (null == t3 || l[(0, s2.default)(t3)])
            return true;
          if (Array.isArray(t3) || "object" === (0, s2.default)(t3)) {
            if (!Object.isFrozen(t3))
              return false;
            for (var r4 = Object.keys(t3), n3 = 0; n3 < r4.length; n3++) {
              var i2 = null;
              try {
                i2 = t3[r4[n3]];
              } catch (e4) {
                continue;
              }
              if (!e3(i2))
                return false;
            }
            return true;
          }
          return d.throwArgumentError("Cannot deepCopy ".concat((0, s2.default)(t3)), "object", t3);
        }(e2))
          return e2;
        if (Array.isArray(e2))
          return Object.freeze(e2.map(function(e3) {
            return b(e3);
          }));
        if ("object" === (0, s2.default)(e2)) {
          var t2 = {};
          for (var r3 in e2) {
            var n2 = e2[r3];
            void 0 !== n2 && h(t2, r3, b(n2));
          }
          return t2;
        }
        return d.throwArgumentError("Cannot deepCopy ".concat((0, s2.default)(e2)), "object", e2);
      }
      function b(e2) {
        return p(e2);
      }
      var y = (0, o.default)(function e2(t2) {
        for (var r3 in (0, a.default)(this, e2), t2)
          this[r3] = b(t2[r3]);
      });
      t.Description = y;
    }, function(e, t, r2) {
      function n(e2, t2) {
        if (!e2)
          throw new Error(t2 || "Assertion failed");
      }
      e.exports = n, n.equal = function(e2, t2, r3) {
        if (e2 != t2)
          throw new Error(r3 || "Assertion failed: " + e2 + " != " + t2);
      };
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3) {
          var t2 = "function" == typeof Symbol && Symbol.iterator, r3 = t2 && e3[t2], n2 = 0;
          if (r3)
            return r3.call(e3);
          if (e3 && "number" == typeof e3.length)
            return { next: function() {
              return e3 && n2 >= e3.length && (e3 = void 0), { value: e3 && e3[n2++], done: !e3 };
            } };
          throw new TypeError(t2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
        }, i = function(e3, t2) {
          var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
          if (!r3)
            return e3;
          var n2, i2, o2 = r3.call(e3), a2 = [];
          try {
            for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
              a2.push(n2.value);
          } catch (e4) {
            i2 = { error: e4 };
          } finally {
            try {
              n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (i2)
                throw i2.error;
            }
          }
          return a2;
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.bufArrToArr = t.arrToBufArr = t.validateNoLeadingZeroes = t.baToJSON = t.toUtf8 = t.addHexPrefix = t.toUnsigned = t.fromSigned = t.bufferToHex = t.bufferToInt = t.toBuffer = t.unpadHexString = t.unpadArray = t.unpadBuffer = t.setLengthRight = t.setLengthLeft = t.zeros = t.intToBuffer = t.intToHex = void 0;
        var o = r2(29), a = r2(54), s2 = r2(90);
        t.intToHex = function(e3) {
          if (!Number.isSafeInteger(e3) || e3 < 0)
            throw new Error("Received an invalid integer type: ".concat(e3));
          return "0x".concat(e3.toString(16));
        };
        t.intToBuffer = function(r3) {
          var n2 = (0, t.intToHex)(r3);
          return e2.from((0, a.padToEven)(n2.slice(2)), "hex");
        };
        t.zeros = function(t2) {
          return e2.allocUnsafe(t2).fill(0);
        };
        var f2 = function(e3, r3, n2) {
          var i2 = (0, t.zeros)(r3);
          return n2 ? e3.length < r3 ? (e3.copy(i2), i2) : e3.slice(0, r3) : e3.length < r3 ? (e3.copy(i2, r3 - e3.length), i2) : e3.slice(-r3);
        };
        t.setLengthLeft = function(e3, t2) {
          return (0, s2.assertIsBuffer)(e3), f2(e3, t2, false);
        };
        t.setLengthRight = function(e3, t2) {
          return (0, s2.assertIsBuffer)(e3), f2(e3, t2, true);
        };
        var c = function(e3) {
          for (var t2 = e3[0]; e3.length > 0 && "0" === t2.toString(); )
            t2 = (e3 = e3.slice(1))[0];
          return e3;
        };
        t.unpadBuffer = function(e3) {
          return (0, s2.assertIsBuffer)(e3), c(e3);
        };
        t.unpadArray = function(e3) {
          return (0, s2.assertIsArray)(e3), c(e3);
        };
        t.unpadHexString = function(e3) {
          return (0, s2.assertIsHexString)(e3), e3 = (0, a.stripHexPrefix)(e3), c(e3);
        };
        t.toBuffer = function(r3) {
          if (null == r3)
            return e2.allocUnsafe(0);
          if (e2.isBuffer(r3))
            return e2.from(r3);
          if (Array.isArray(r3) || r3 instanceof Uint8Array)
            return e2.from(r3);
          if ("string" == typeof r3) {
            if (!(0, a.isHexString)(r3))
              throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ".concat(r3));
            return e2.from((0, a.padToEven)((0, a.stripHexPrefix)(r3)), "hex");
          }
          if ("number" == typeof r3)
            return (0, t.intToBuffer)(r3);
          if (o.BN.isBN(r3)) {
            if (r3.isNeg())
              throw new Error("Cannot convert negative BN to buffer. Given: ".concat(r3));
            return r3.toArrayLike(e2);
          }
          if (r3.toArray)
            return e2.from(r3.toArray());
          if (r3.toBuffer)
            return e2.from(r3.toBuffer());
          throw new Error("invalid type");
        };
        t.bufferToInt = function(e3) {
          return new o.BN((0, t.toBuffer)(e3)).toNumber();
        };
        t.bufferToHex = function(e3) {
          return "0x" + (e3 = (0, t.toBuffer)(e3)).toString("hex");
        };
        t.fromSigned = function(e3) {
          return new o.BN(e3).fromTwos(256);
        };
        t.toUnsigned = function(t2) {
          return e2.from(t2.toTwos(256).toArray());
        };
        t.addHexPrefix = function(e3) {
          return "string" != typeof e3 || (0, a.isHexPrefixed)(e3) ? e3 : "0x" + e3;
        };
        t.toUtf8 = function(t2) {
          if ((t2 = (0, a.stripHexPrefix)(t2)).length % 2 != 0)
            throw new Error("Invalid non-even hex string input for toUtf8() provided");
          return e2.from(t2.replace(/^(00)+|(00)+$/g, ""), "hex").toString("utf8");
        };
        t.baToJSON = function(r3) {
          if (e2.isBuffer(r3))
            return "0x".concat(r3.toString("hex"));
          if (r3 instanceof Array) {
            for (var n2 = [], i2 = 0; i2 < r3.length; i2++)
              n2.push((0, t.baToJSON)(r3[i2]));
            return n2;
          }
        };
        t.validateNoLeadingZeroes = function(e3) {
          var t2, r3;
          try {
            for (var o2 = n(Object.entries(e3)), a2 = o2.next(); !a2.done; a2 = o2.next()) {
              var s3 = i(a2.value, 2), f3 = s3[0], c2 = s3[1];
              if (void 0 !== c2 && c2.length > 0 && 0 === c2[0])
                throw new Error("".concat(f3, " cannot have leading zeroes, received: ").concat(c2.toString("hex")));
            }
          } catch (e4) {
            t2 = { error: e4 };
          } finally {
            try {
              a2 && !a2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (t2)
                throw t2.error;
            }
          }
        }, t.arrToBufArr = function t2(r3) {
          return Array.isArray(r3) ? r3.map(function(e3) {
            return t2(e3);
          }) : e2.from(r3);
        }, t.bufArrToArr = function e3(t2) {
          return Array.isArray(t2) ? t2.map(function(t3) {
            return e3(t3);
          }) : Uint8Array.from(null != t2 ? t2 : []);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(0)(r2(2)), i = r2(92);
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
         * @license  MIT
         */
        function o(e2, t3) {
          if (e2 === t3)
            return 0;
          for (var r3 = e2.length, n2 = t3.length, i2 = 0, o2 = Math.min(r3, n2); i2 < o2; ++i2)
            if (e2[i2] !== t3[i2]) {
              r3 = e2[i2], n2 = t3[i2];
              break;
            }
          return r3 < n2 ? -1 : n2 < r3 ? 1 : 0;
        }
        function a(e2) {
          return t2.Buffer && "function" == typeof t2.Buffer.isBuffer ? t2.Buffer.isBuffer(e2) : !(null == e2 || !e2._isBuffer);
        }
        var s2 = r2(127), f2 = Object.prototype.hasOwnProperty, c = Array.prototype.slice, u = "foo" === function() {
        }.name;
        function d(e2) {
          return Object.prototype.toString.call(e2);
        }
        function h(e2) {
          return !a(e2) && ("function" == typeof t2.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(e2) : !!e2 && (e2 instanceof DataView || !!(e2.buffer && e2.buffer instanceof ArrayBuffer))));
        }
        var l = e.exports = g, p = /\s*function\s+([^\(\s]*)\s*/;
        function b(e2) {
          if (s2.isFunction(e2)) {
            if (u)
              return e2.name;
            var t3 = e2.toString().match(p);
            return t3 && t3[1];
          }
        }
        function y(e2, t3) {
          return "string" == typeof e2 ? e2.length < t3 ? e2 : e2.slice(0, t3) : e2;
        }
        function v(e2) {
          if (u || !s2.isFunction(e2))
            return s2.inspect(e2);
          var t3 = b(e2);
          return "[Function" + (t3 ? ": " + t3 : "") + "]";
        }
        function m(e2, t3, r3, n2, i2) {
          throw new l.AssertionError({ message: r3, actual: e2, expected: t3, operator: n2, stackStartFunction: i2 });
        }
        function g(e2, t3) {
          e2 || m(e2, true, t3, "==", l.ok);
        }
        function w(e2, t3, r3, i2) {
          if (e2 === t3)
            return true;
          if (a(e2) && a(t3))
            return 0 === o(e2, t3);
          if (s2.isDate(e2) && s2.isDate(t3))
            return e2.getTime() === t3.getTime();
          if (s2.isRegExp(e2) && s2.isRegExp(t3))
            return e2.source === t3.source && e2.global === t3.global && e2.multiline === t3.multiline && e2.lastIndex === t3.lastIndex && e2.ignoreCase === t3.ignoreCase;
          if (null !== e2 && "object" === (0, n.default)(e2) || null !== t3 && "object" === (0, n.default)(t3)) {
            if (h(e2) && h(t3) && d(e2) === d(t3) && !(e2 instanceof Float32Array || e2 instanceof Float64Array))
              return 0 === o(new Uint8Array(e2.buffer), new Uint8Array(t3.buffer));
            if (a(e2) !== a(t3))
              return false;
            var f3 = (i2 = i2 || { actual: [], expected: [] }).actual.indexOf(e2);
            return -1 !== f3 && f3 === i2.expected.indexOf(t3) || (i2.actual.push(e2), i2.expected.push(t3), function(e3, t4, r4, n2) {
              if (null == e3 || null == t4)
                return false;
              if (s2.isPrimitive(e3) || s2.isPrimitive(t4))
                return e3 === t4;
              if (r4 && Object.getPrototypeOf(e3) !== Object.getPrototypeOf(t4))
                return false;
              var i3 = _(e3), o2 = _(t4);
              if (i3 && !o2 || !i3 && o2)
                return false;
              if (i3)
                return e3 = c.call(e3), t4 = c.call(t4), w(e3, t4, r4);
              var a2, f4, u2 = S(e3), d2 = S(t4);
              if (u2.length !== d2.length)
                return false;
              for (u2.sort(), d2.sort(), f4 = u2.length - 1; f4 >= 0; f4--)
                if (u2[f4] !== d2[f4])
                  return false;
              for (f4 = u2.length - 1; f4 >= 0; f4--)
                if (a2 = u2[f4], !w(e3[a2], t4[a2], r4, n2))
                  return false;
              return true;
            }(e2, t3, r3, i2));
          }
          return r3 ? e2 === t3 : e2 == t3;
        }
        function _(e2) {
          return "[object Arguments]" == Object.prototype.toString.call(e2);
        }
        function k(e2, t3) {
          if (!e2 || !t3)
            return false;
          if ("[object RegExp]" == Object.prototype.toString.call(t3))
            return t3.test(e2);
          try {
            if (e2 instanceof t3)
              return true;
          } catch (e3) {
          }
          return !Error.isPrototypeOf(t3) && true === t3.call({}, e2);
        }
        function A(e2, t3, r3, n2) {
          var i2;
          if ("function" != typeof t3)
            throw new TypeError('"block" argument must be a function');
          "string" == typeof r3 && (n2 = r3, r3 = null), i2 = function(e3) {
            var t4;
            try {
              e3();
            } catch (e4) {
              t4 = e4;
            }
            return t4;
          }(t3), n2 = (r3 && r3.name ? " (" + r3.name + ")." : ".") + (n2 ? " " + n2 : "."), e2 && !i2 && m(i2, r3, "Missing expected exception" + n2);
          var o2 = "string" == typeof n2, a2 = !e2 && i2 && !r3;
          if ((!e2 && s2.isError(i2) && o2 && k(i2, r3) || a2) && m(i2, r3, "Got unwanted exception" + n2), e2 && i2 && r3 && !k(i2, r3) || !e2 && i2)
            throw i2;
        }
        l.AssertionError = function(e2) {
          this.name = "AssertionError", this.actual = e2.actual, this.expected = e2.expected, this.operator = e2.operator, e2.message ? (this.message = e2.message, this.generatedMessage = false) : (this.message = function(e3) {
            return y(v(e3.actual), 128) + " " + e3.operator + " " + y(v(e3.expected), 128);
          }(this), this.generatedMessage = true);
          var t3 = e2.stackStartFunction || m;
          if (Error.captureStackTrace)
            Error.captureStackTrace(this, t3);
          else {
            var r3 = new Error();
            if (r3.stack) {
              var n2 = r3.stack, i2 = b(t3), o2 = n2.indexOf("\n" + i2);
              if (o2 >= 0) {
                var a2 = n2.indexOf("\n", o2 + 1);
                n2 = n2.substring(a2 + 1);
              }
              this.stack = n2;
            }
          }
        }, s2.inherits(l.AssertionError, Error), l.fail = m, l.ok = g, l.equal = function(e2, t3, r3) {
          e2 != t3 && m(e2, t3, r3, "==", l.equal);
        }, l.notEqual = function(e2, t3, r3) {
          e2 == t3 && m(e2, t3, r3, "!=", l.notEqual);
        }, l.deepEqual = function(e2, t3, r3) {
          w(e2, t3, false) || m(e2, t3, r3, "deepEqual", l.deepEqual);
        }, l.deepStrictEqual = function(e2, t3, r3) {
          w(e2, t3, true) || m(e2, t3, r3, "deepStrictEqual", l.deepStrictEqual);
        }, l.notDeepEqual = function(e2, t3, r3) {
          w(e2, t3, false) && m(e2, t3, r3, "notDeepEqual", l.notDeepEqual);
        }, l.notDeepStrictEqual = function e2(t3, r3, n2) {
          w(t3, r3, true) && m(t3, r3, n2, "notDeepStrictEqual", e2);
        }, l.strictEqual = function(e2, t3, r3) {
          e2 !== t3 && m(e2, t3, r3, "===", l.strictEqual);
        }, l.notStrictEqual = function(e2, t3, r3) {
          e2 === t3 && m(e2, t3, r3, "!==", l.notStrictEqual);
        }, l.throws = function(e2, t3, r3) {
          A(true, e2, t3, r3);
        }, l.doesNotThrow = function(e2, t3, r3) {
          A(false, e2, t3, r3);
        }, l.ifError = function(e2) {
          if (e2)
            throw e2;
        }, l.strict = i(function e2(t3, r3) {
          t3 || m(t3, true, r3, "==", e2);
        }, l, { equal: l.strictEqual, deepEqual: l.deepStrictEqual, notEqual: l.notStrictEqual, notDeepEqual: l.notDeepStrictEqual }), l.strict.strict = l.strict;
        var S = Object.keys || function(e2) {
          var t3 = [];
          for (var r3 in e2)
            f2.call(e2, r3) && t3.push(r3);
          return t3;
        };
      }).call(this, r2(7));
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(0)(r2(2));
        function i(e3) {
          if ("string" != typeof e3)
            throw new Error("[isHexPrefixed] input must be type 'string', received type ".concat((0, n.default)(e3)));
          return "0" === e3[0] && "x" === e3[1];
        }
        Object.defineProperty(t, "__esModule", { value: true }), t.isHexString = t.getKeys = t.fromAscii = t.fromUtf8 = t.toAscii = t.arrayContainsArray = t.getBinarySize = t.padToEven = t.stripHexPrefix = t.isHexPrefixed = void 0, t.isHexPrefixed = i;
        function o(e3) {
          var t2 = e3;
          if ("string" != typeof t2)
            throw new Error("[padToEven] value must be type 'string', received ".concat((0, n.default)(t2)));
          return t2.length % 2 && (t2 = "0".concat(t2)), t2;
        }
        t.stripHexPrefix = function(e3) {
          if ("string" != typeof e3)
            throw new Error("[stripHexPrefix] input must be type 'string', received ".concat((0, n.default)(e3)));
          return i(e3) ? e3.slice(2) : e3;
        }, t.padToEven = o, t.getBinarySize = function(t2) {
          if ("string" != typeof t2)
            throw new Error("[getBinarySize] method requires input type 'string', recieved ".concat((0, n.default)(t2)));
          return e2.byteLength(t2, "utf8");
        }, t.arrayContainsArray = function(e3, t2, r3) {
          if (true !== Array.isArray(e3))
            throw new Error("[arrayContainsArray] method requires input 'superset' to be an array, got type '".concat((0, n.default)(e3), "'"));
          if (true !== Array.isArray(t2))
            throw new Error("[arrayContainsArray] method requires input 'subset' to be an array, got type '".concat((0, n.default)(t2), "'"));
          return t2[r3 ? "some" : "every"](function(t3) {
            return e3.indexOf(t3) >= 0;
          });
        }, t.toAscii = function(e3) {
          var t2 = "", r3 = 0, n2 = e3.length;
          for ("0x" === e3.substring(0, 2) && (r3 = 2); r3 < n2; r3 += 2) {
            var i2 = parseInt(e3.substr(r3, 2), 16);
            t2 += String.fromCharCode(i2);
          }
          return t2;
        }, t.fromUtf8 = function(t2) {
          var r3 = e2.from(t2, "utf8");
          return "0x".concat(o(r3.toString("hex")).replace(/^0+|0+$/g, ""));
        }, t.fromAscii = function(e3) {
          for (var t2 = "", r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3.charCodeAt(r3).toString(16);
            t2 += n2.length < 2 ? "0".concat(n2) : n2;
          }
          return "0x".concat(t2);
        }, t.getKeys = function(e3, t2, r3) {
          if (!Array.isArray(e3))
            throw new Error("[getKeys] method expects input 'params' to be an array, got ".concat((0, n.default)(e3)));
          if ("string" != typeof t2)
            throw new Error("[getKeys] method expects input 'key' to be type 'string', got ".concat((0, n.default)(e3)));
          for (var i2 = [], o2 = 0; o2 < e3.length; o2++) {
            var a = e3[o2][t2];
            if (r3 && !a)
              a = "";
            else if ("string" != typeof a)
              throw new Error("invalid abi - expected type 'string', received ".concat((0, n.default)(a)));
            i2.push(a);
          }
          return i2;
        }, t.isHexString = function(e3, t2) {
          return !("string" != typeof e3 || !e3.match(/^0x[0-9A-Fa-f]*$/)) && (!t2 || e3.length === 2 + 2 * t2);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      var i = {};
      function o(e2, t2, r3) {
        r3 || (r3 = Error);
        var n2 = function(e3) {
          var r4, n3;
          function i2(r5, n4, i3) {
            return e3.call(this, function(e4, r6, n5) {
              return "string" == typeof t2 ? t2 : t2(e4, r6, n5);
            }(r5, n4, i3)) || this;
          }
          return n3 = e3, (r4 = i2).prototype = Object.create(n3.prototype), r4.prototype.constructor = r4, r4.__proto__ = n3, i2;
        }(r3);
        n2.prototype.name = r3.name, n2.prototype.code = e2, i[e2] = n2;
      }
      function a(e2, t2) {
        if (Array.isArray(e2)) {
          var r3 = e2.length;
          return e2 = e2.map(function(e3) {
            return String(e3);
          }), r3 > 2 ? "one of ".concat(t2, " ").concat(e2.slice(0, r3 - 1).join(", "), ", or ") + e2[r3 - 1] : 2 === r3 ? "one of ".concat(t2, " ").concat(e2[0], " or ").concat(e2[1]) : "of ".concat(t2, " ").concat(e2[0]);
        }
        return "of ".concat(t2, " ").concat(String(e2));
      }
      o("ERR_INVALID_OPT_VALUE", function(e2, t2) {
        return 'The value "' + t2 + '" is invalid for option "' + e2 + '"';
      }, TypeError), o("ERR_INVALID_ARG_TYPE", function(e2, t2, r3) {
        var i2, o2, f2;
        if ("string" == typeof t2 && (o2 = "not ", t2.substr(0, o2.length) === o2) ? (i2 = "must not be", t2 = t2.replace(/^not /, "")) : i2 = "must be", function(e3, t3, r4) {
          return (void 0 === r4 || r4 > e3.length) && (r4 = e3.length), e3.substring(r4 - t3.length, r4) === t3;
        }(e2, " argument"))
          f2 = "The ".concat(e2, " ").concat(i2, " ").concat(a(t2, "type"));
        else {
          var c = function(e3, t3, r4) {
            return "number" != typeof r4 && (r4 = 0), !(r4 + t3.length > e3.length) && -1 !== e3.indexOf(t3, r4);
          }(e2, ".") ? "property" : "argument";
          f2 = 'The "'.concat(e2, '" ').concat(c, " ").concat(i2, " ").concat(a(t2, "type"));
        }
        return f2 += ". Received type ".concat((0, n.default)(r3));
      }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function(e2) {
        return "The " + e2 + " method is not implemented";
      }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function(e2) {
        return "Cannot call " + e2 + " after a stream was destroyed";
      }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function(e2) {
        return "Unknown encoding: " + e2;
      }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e.exports.codes = i;
    }, function(e, t, r2) {
      (function(t2) {
        var n = Object.keys || function(e2) {
          var t3 = [];
          for (var r3 in e2)
            t3.push(r3);
          return t3;
        };
        e.exports = c;
        var i = r2(145), o = r2(149);
        r2(3)(c, i);
        for (var a = n(o.prototype), s2 = 0; s2 < a.length; s2++) {
          var f2 = a[s2];
          c.prototype[f2] || (c.prototype[f2] = o.prototype[f2]);
        }
        function c(e2) {
          if (!(this instanceof c))
            return new c(e2);
          i.call(this, e2), o.call(this, e2), this.allowHalfOpen = true, e2 && (false === e2.readable && (this.readable = false), false === e2.writable && (this.writable = false), false === e2.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", u)));
        }
        function u() {
          this._writableState.ended || t2.nextTick(d, this);
        }
        function d(e2) {
          e2.end();
        }
        Object.defineProperty(c.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(c.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(c.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(c.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
        }, set: function(e2) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
        } });
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(3), i = r2(97), o = r2(99), a = r2(100), s2 = r2(32);
      function f2(e2) {
        s2.call(this, "digest"), this._hash = e2;
      }
      n(f2, s2), f2.prototype._update = function(e2) {
        this._hash.update(e2);
      }, f2.prototype._final = function() {
        return this._hash.digest();
      }, e.exports = function(e2) {
        return "md5" === (e2 = e2.toLowerCase()) ? new i() : "rmd160" === e2 || "ripemd160" === e2 ? new o() : new f2(a(e2));
      };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      var i = {};
      function o(e2, t2, r3) {
        r3 || (r3 = Error);
        var n2 = function(e3) {
          var r4, n3;
          function i2(r5, n4, i3) {
            return e3.call(this, function(e4, r6, n5) {
              return "string" == typeof t2 ? t2 : t2(e4, r6, n5);
            }(r5, n4, i3)) || this;
          }
          return n3 = e3, (r4 = i2).prototype = Object.create(n3.prototype), r4.prototype.constructor = r4, r4.__proto__ = n3, i2;
        }(r3);
        n2.prototype.name = r3.name, n2.prototype.code = e2, i[e2] = n2;
      }
      function a(e2, t2) {
        if (Array.isArray(e2)) {
          var r3 = e2.length;
          return e2 = e2.map(function(e3) {
            return String(e3);
          }), r3 > 2 ? "one of ".concat(t2, " ").concat(e2.slice(0, r3 - 1).join(", "), ", or ") + e2[r3 - 1] : 2 === r3 ? "one of ".concat(t2, " ").concat(e2[0], " or ").concat(e2[1]) : "of ".concat(t2, " ").concat(e2[0]);
        }
        return "of ".concat(t2, " ").concat(String(e2));
      }
      o("ERR_INVALID_OPT_VALUE", function(e2, t2) {
        return 'The value "' + t2 + '" is invalid for option "' + e2 + '"';
      }, TypeError), o("ERR_INVALID_ARG_TYPE", function(e2, t2, r3) {
        var i2, o2, f2;
        if ("string" == typeof t2 && (o2 = "not ", t2.substr(0, o2.length) === o2) ? (i2 = "must not be", t2 = t2.replace(/^not /, "")) : i2 = "must be", function(e3, t3, r4) {
          return (void 0 === r4 || r4 > e3.length) && (r4 = e3.length), e3.substring(r4 - t3.length, r4) === t3;
        }(e2, " argument"))
          f2 = "The ".concat(e2, " ").concat(i2, " ").concat(a(t2, "type"));
        else {
          var c = function(e3, t3, r4) {
            return "number" != typeof r4 && (r4 = 0), !(r4 + t3.length > e3.length) && -1 !== e3.indexOf(t3, r4);
          }(e2, ".") ? "property" : "argument";
          f2 = 'The "'.concat(e2, '" ').concat(c, " ").concat(i2, " ").concat(a(t2, "type"));
        }
        return f2 += ". Received type ".concat((0, n.default)(r3));
      }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function(e2) {
        return "The " + e2 + " method is not implemented";
      }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function(e2) {
        return "Cannot call " + e2 + " after a stream was destroyed";
      }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function(e2) {
        return "Unknown encoding: " + e2;
      }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e.exports.codes = i;
    }, function(e, t, r2) {
      (function(t2) {
        var n = Object.keys || function(e2) {
          var t3 = [];
          for (var r3 in e2)
            t3.push(r3);
          return t3;
        };
        e.exports = c;
        var i = r2(152), o = r2(156);
        r2(3)(c, i);
        for (var a = n(o.prototype), s2 = 0; s2 < a.length; s2++) {
          var f2 = a[s2];
          c.prototype[f2] || (c.prototype[f2] = o.prototype[f2]);
        }
        function c(e2) {
          if (!(this instanceof c))
            return new c(e2);
          i.call(this, e2), o.call(this, e2), this.allowHalfOpen = true, e2 && (false === e2.readable && (this.readable = false), false === e2.writable && (this.writable = false), false === e2.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", u)));
        }
        function u() {
          this._writableState.ended || t2.nextTick(d, this);
        }
        function d(e2) {
          e2.end();
        }
        Object.defineProperty(c.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(c.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(c.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(c.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
        }, set: function(e2) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
        } });
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(5).Buffer;
      function i(e2, t2) {
        this._block = n.alloc(e2), this._finalSize = t2, this._blockSize = e2, this._len = 0;
      }
      i.prototype.update = function(e2, t2) {
        "string" == typeof e2 && (t2 = t2 || "utf8", e2 = n.from(e2, t2));
        for (var r3 = this._block, i2 = this._blockSize, o = e2.length, a = this._len, s2 = 0; s2 < o; ) {
          for (var f2 = a % i2, c = Math.min(o - s2, i2 - f2), u = 0; u < c; u++)
            r3[f2 + u] = e2[s2 + u];
          s2 += c, (a += c) % i2 == 0 && this._update(r3);
        }
        return this._len += o, this;
      }, i.prototype.digest = function(e2) {
        var t2 = this._len % this._blockSize;
        this._block[t2] = 128, this._block.fill(0, t2 + 1), t2 >= this._finalSize && (this._update(this._block), this._block.fill(0));
        var r3 = 8 * this._len;
        if (r3 <= 4294967295)
          this._block.writeUInt32BE(r3, this._blockSize - 4);
        else {
          var n2 = (4294967295 & r3) >>> 0, i2 = (r3 - n2) / 4294967296;
          this._block.writeUInt32BE(i2, this._blockSize - 8), this._block.writeUInt32BE(n2, this._blockSize - 4);
        }
        this._update(this._block);
        var o = this._hash();
        return e2 ? o.toString(e2) : o;
      }, i.prototype._update = function() {
        throw new Error("_update must be implemented by subclass");
      }, e.exports = i;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      var i = {};
      function o(e2, t2, r3) {
        r3 || (r3 = Error);
        var n2 = function(e3) {
          var r4, n3;
          function i2(r5, n4, i3) {
            return e3.call(this, function(e4, r6, n5) {
              return "string" == typeof t2 ? t2 : t2(e4, r6, n5);
            }(r5, n4, i3)) || this;
          }
          return n3 = e3, (r4 = i2).prototype = Object.create(n3.prototype), r4.prototype.constructor = r4, r4.__proto__ = n3, i2;
        }(r3);
        n2.prototype.name = r3.name, n2.prototype.code = e2, i[e2] = n2;
      }
      function a(e2, t2) {
        if (Array.isArray(e2)) {
          var r3 = e2.length;
          return e2 = e2.map(function(e3) {
            return String(e3);
          }), r3 > 2 ? "one of ".concat(t2, " ").concat(e2.slice(0, r3 - 1).join(", "), ", or ") + e2[r3 - 1] : 2 === r3 ? "one of ".concat(t2, " ").concat(e2[0], " or ").concat(e2[1]) : "of ".concat(t2, " ").concat(e2[0]);
        }
        return "of ".concat(t2, " ").concat(String(e2));
      }
      o("ERR_INVALID_OPT_VALUE", function(e2, t2) {
        return 'The value "' + t2 + '" is invalid for option "' + e2 + '"';
      }, TypeError), o("ERR_INVALID_ARG_TYPE", function(e2, t2, r3) {
        var i2, o2, f2;
        if ("string" == typeof t2 && (o2 = "not ", t2.substr(0, o2.length) === o2) ? (i2 = "must not be", t2 = t2.replace(/^not /, "")) : i2 = "must be", function(e3, t3, r4) {
          return (void 0 === r4 || r4 > e3.length) && (r4 = e3.length), e3.substring(r4 - t3.length, r4) === t3;
        }(e2, " argument"))
          f2 = "The ".concat(e2, " ").concat(i2, " ").concat(a(t2, "type"));
        else {
          var c = function(e3, t3, r4) {
            return "number" != typeof r4 && (r4 = 0), !(r4 + t3.length > e3.length) && -1 !== e3.indexOf(t3, r4);
          }(e2, ".") ? "property" : "argument";
          f2 = 'The "'.concat(e2, '" ').concat(c, " ").concat(i2, " ").concat(a(t2, "type"));
        }
        return f2 += ". Received type ".concat((0, n.default)(r3));
      }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function(e2) {
        return "The " + e2 + " method is not implemented";
      }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function(e2) {
        return "Cannot call " + e2 + " after a stream was destroyed";
      }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function(e2) {
        return "Unknown encoding: " + e2;
      }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e.exports.codes = i;
    }, function(e, t, r2) {
      (function(t2) {
        var n = Object.keys || function(e2) {
          var t3 = [];
          for (var r3 in e2)
            t3.push(r3);
          return t3;
        };
        e.exports = c;
        var i = r2(212), o = r2(216);
        r2(3)(c, i);
        for (var a = n(o.prototype), s2 = 0; s2 < a.length; s2++) {
          var f2 = a[s2];
          c.prototype[f2] || (c.prototype[f2] = o.prototype[f2]);
        }
        function c(e2) {
          if (!(this instanceof c))
            return new c(e2);
          i.call(this, e2), o.call(this, e2), this.allowHalfOpen = true, e2 && (false === e2.readable && (this.readable = false), false === e2.writable && (this.writable = false), false === e2.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", u)));
        }
        function u() {
          this._writableState.ended || t2.nextTick(d, this);
        }
        function d(e2) {
          e2.end();
        }
        Object.defineProperty(c.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(c.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(c.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(c.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
        }, set: function(e2) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
        } });
      }).call(this, r2(6));
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.N_DIV_2 = t.isAccessList = t.isAccessListBuffer = t.Capability = void 0;
      var n = r2(27);
      function i(e2) {
        if (0 === e2.length)
          return true;
        var t2 = e2[0];
        return !!Array.isArray(t2);
      }
      !function(e2) {
        e2[e2.EIP155ReplayProtection = 155] = "EIP155ReplayProtection", e2[e2.EIP1559FeeMarket = 1559] = "EIP1559FeeMarket", e2[e2.EIP2718TypedTransaction = 2718] = "EIP2718TypedTransaction", e2[e2.EIP2930AccessLists = 2930] = "EIP2930AccessLists";
      }(t.Capability || (t.Capability = {})), t.isAccessListBuffer = i, t.isAccessList = function(e2) {
        return !i(e2);
      }, t.N_DIV_2 = new n.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16);
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(0)(r2(2));
        function i(e3) {
          if ("string" != typeof e3)
            throw new Error("[isHexPrefixed] input must be type 'string', received type ".concat((0, n.default)(e3)));
          return "0" === e3[0] && "x" === e3[1];
        }
        Object.defineProperty(t, "__esModule", { value: true }), t.isHexString = t.getKeys = t.fromAscii = t.fromUtf8 = t.toAscii = t.arrayContainsArray = t.getBinarySize = t.padToEven = t.stripHexPrefix = t.isHexPrefixed = void 0, t.isHexPrefixed = i;
        function o(e3) {
          var t2 = e3;
          if ("string" != typeof t2)
            throw new Error("[padToEven] value must be type 'string', received ".concat((0, n.default)(t2)));
          return t2.length % 2 && (t2 = "0".concat(t2)), t2;
        }
        t.stripHexPrefix = function(e3) {
          if ("string" != typeof e3)
            throw new Error("[stripHexPrefix] input must be type 'string', received ".concat((0, n.default)(e3)));
          return i(e3) ? e3.slice(2) : e3;
        }, t.padToEven = o, t.getBinarySize = function(t2) {
          if ("string" != typeof t2)
            throw new Error("[getBinarySize] method requires input type 'string', recieved ".concat((0, n.default)(t2)));
          return e2.byteLength(t2, "utf8");
        }, t.arrayContainsArray = function(e3, t2, r3) {
          if (true !== Array.isArray(e3))
            throw new Error("[arrayContainsArray] method requires input 'superset' to be an array, got type '".concat((0, n.default)(e3), "'"));
          if (true !== Array.isArray(t2))
            throw new Error("[arrayContainsArray] method requires input 'subset' to be an array, got type '".concat((0, n.default)(t2), "'"));
          return t2[r3 ? "some" : "every"](function(t3) {
            return e3.indexOf(t3) >= 0;
          });
        }, t.toAscii = function(e3) {
          var t2 = "", r3 = 0, n2 = e3.length;
          for ("0x" === e3.substring(0, 2) && (r3 = 2); r3 < n2; r3 += 2) {
            var i2 = parseInt(e3.substr(r3, 2), 16);
            t2 += String.fromCharCode(i2);
          }
          return t2;
        }, t.fromUtf8 = function(t2) {
          var r3 = e2.from(t2, "utf8");
          return "0x".concat(o(r3.toString("hex")).replace(/^0+|0+$/g, ""));
        }, t.fromAscii = function(e3) {
          for (var t2 = "", r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3.charCodeAt(r3).toString(16);
            t2 += n2.length < 2 ? "0".concat(n2) : n2;
          }
          return "0x".concat(t2);
        }, t.getKeys = function(e3, t2, r3) {
          if (!Array.isArray(e3))
            throw new Error("[getKeys] method expects input 'params' to be an array, got ".concat((0, n.default)(e3)));
          if ("string" != typeof t2)
            throw new Error("[getKeys] method expects input 'key' to be type 'string', got ".concat((0, n.default)(e3)));
          for (var i2 = [], o2 = 0; o2 < e3.length; o2++) {
            var a = e3[o2][t2];
            if (r3 && !a)
              a = "";
            else if ("string" != typeof a)
              throw new Error("invalid abi - expected type 'string', received ".concat((0, n.default)(a)));
            i2.push(a);
          }
          return i2;
        }, t.isHexString = function(e3, t2) {
          return !("string" != typeof e3 || !e3.match(/^0x[0-9A-Fa-f]*$/)) && (!t2 || e3.length === 2 + 2 * t2);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      var i = {};
      function o(e2, t2, r3) {
        r3 || (r3 = Error);
        var n2 = function(e3) {
          var r4, n3;
          function i2(r5, n4, i3) {
            return e3.call(this, function(e4, r6, n5) {
              return "string" == typeof t2 ? t2 : t2(e4, r6, n5);
            }(r5, n4, i3)) || this;
          }
          return n3 = e3, (r4 = i2).prototype = Object.create(n3.prototype), r4.prototype.constructor = r4, r4.__proto__ = n3, i2;
        }(r3);
        n2.prototype.name = r3.name, n2.prototype.code = e2, i[e2] = n2;
      }
      function a(e2, t2) {
        if (Array.isArray(e2)) {
          var r3 = e2.length;
          return e2 = e2.map(function(e3) {
            return String(e3);
          }), r3 > 2 ? "one of ".concat(t2, " ").concat(e2.slice(0, r3 - 1).join(", "), ", or ") + e2[r3 - 1] : 2 === r3 ? "one of ".concat(t2, " ").concat(e2[0], " or ").concat(e2[1]) : "of ".concat(t2, " ").concat(e2[0]);
        }
        return "of ".concat(t2, " ").concat(String(e2));
      }
      o("ERR_INVALID_OPT_VALUE", function(e2, t2) {
        return 'The value "' + t2 + '" is invalid for option "' + e2 + '"';
      }, TypeError), o("ERR_INVALID_ARG_TYPE", function(e2, t2, r3) {
        var i2, o2, f2;
        if ("string" == typeof t2 && (o2 = "not ", t2.substr(0, o2.length) === o2) ? (i2 = "must not be", t2 = t2.replace(/^not /, "")) : i2 = "must be", function(e3, t3, r4) {
          return (void 0 === r4 || r4 > e3.length) && (r4 = e3.length), e3.substring(r4 - t3.length, r4) === t3;
        }(e2, " argument"))
          f2 = "The ".concat(e2, " ").concat(i2, " ").concat(a(t2, "type"));
        else {
          var c = function(e3, t3, r4) {
            return "number" != typeof r4 && (r4 = 0), !(r4 + t3.length > e3.length) && -1 !== e3.indexOf(t3, r4);
          }(e2, ".") ? "property" : "argument";
          f2 = 'The "'.concat(e2, '" ').concat(c, " ").concat(i2, " ").concat(a(t2, "type"));
        }
        return f2 += ". Received type ".concat((0, n.default)(r3));
      }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function(e2) {
        return "The " + e2 + " method is not implemented";
      }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function(e2) {
        return "Cannot call " + e2 + " after a stream was destroyed";
      }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function(e2) {
        return "Unknown encoding: " + e2;
      }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e.exports.codes = i;
    }, function(e, t, r2) {
      (function(t2) {
        var n = Object.keys || function(e2) {
          var t3 = [];
          for (var r3 in e2)
            t3.push(r3);
          return t3;
        };
        e.exports = c;
        var i = r2(242), o = r2(246);
        r2(10)(c, i);
        for (var a = n(o.prototype), s2 = 0; s2 < a.length; s2++) {
          var f2 = a[s2];
          c.prototype[f2] || (c.prototype[f2] = o.prototype[f2]);
        }
        function c(e2) {
          if (!(this instanceof c))
            return new c(e2);
          i.call(this, e2), o.call(this, e2), this.allowHalfOpen = true, e2 && (false === e2.readable && (this.readable = false), false === e2.writable && (this.writable = false), false === e2.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", u)));
        }
        function u() {
          this._writableState.ended || t2.nextTick(d, this);
        }
        function d(e2) {
          e2.end();
        }
        Object.defineProperty(c.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(c.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(c.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(c.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
        }, set: function(e2) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
        } });
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(24).Buffer;
      function i(e2, t2) {
        this._block = n.alloc(e2), this._finalSize = t2, this._blockSize = e2, this._len = 0;
      }
      i.prototype.update = function(e2, t2) {
        "string" == typeof e2 && (t2 = t2 || "utf8", e2 = n.from(e2, t2));
        for (var r3 = this._block, i2 = this._blockSize, o = e2.length, a = this._len, s2 = 0; s2 < o; ) {
          for (var f2 = a % i2, c = Math.min(o - s2, i2 - f2), u = 0; u < c; u++)
            r3[f2 + u] = e2[s2 + u];
          s2 += c, (a += c) % i2 == 0 && this._update(r3);
        }
        return this._len += o, this;
      }, i.prototype.digest = function(e2) {
        var t2 = this._len % this._blockSize;
        this._block[t2] = 128, this._block.fill(0, t2 + 1), t2 >= this._finalSize && (this._update(this._block), this._block.fill(0));
        var r3 = 8 * this._len;
        if (r3 <= 4294967295)
          this._block.writeUInt32BE(r3, this._blockSize - 4);
        else {
          var n2 = (4294967295 & r3) >>> 0, i2 = (r3 - n2) / 4294967296;
          this._block.writeUInt32BE(i2, this._blockSize - 8), this._block.writeUInt32BE(n2, this._blockSize - 4);
        }
        this._update(this._block);
        var o = this._hash();
        return e2 ? o.toString(e2) : o;
      }, i.prototype._update = function() {
        throw new Error("_update must be implemented by subclass");
      }, e.exports = i;
    }, function(e, t, r2) {
      e.exports = function(e2, t2, r3) {
        return t2 in e2 ? Object.defineProperty(e2, t2, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t2] = r3, e2;
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      var n = t;
      n.version = r2(271).version, n.utils = r2(18), n.rand = r2(93), n.curve = r2(138), n.curves = r2(94), n.ec = r2(283), n.eddsa = r2(287);
    }, function(e, t, r2) {
      var n = r2(25), i = r2(19);
      function o() {
        this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
      }
      t.BlockHash = o, o.prototype.update = function(e2, t2) {
        if (e2 = n.toArray(e2, t2), this.pending ? this.pending = this.pending.concat(e2) : this.pending = e2, this.pendingTotal += e2.length, this.pending.length >= this._delta8) {
          var r3 = (e2 = this.pending).length % this._delta8;
          this.pending = e2.slice(e2.length - r3, e2.length), 0 === this.pending.length && (this.pending = null), e2 = n.join32(e2, 0, e2.length - r3, this.endian);
          for (var i2 = 0; i2 < e2.length; i2 += this._delta32)
            this._update(e2, i2, i2 + this._delta32);
        }
        return this;
      }, o.prototype.digest = function(e2) {
        return this.update(this._pad()), i(null === this.pending), this._digest(e2);
      }, o.prototype._pad = function() {
        var e2 = this.pendingTotal, t2 = this._delta8, r3 = t2 - (e2 + this.padLength) % t2, n2 = new Array(r3 + this.padLength);
        n2[0] = 128;
        for (var i2 = 1; i2 < r3; i2++)
          n2[i2] = 0;
        if (e2 <<= 3, "big" === this.endian) {
          for (var o2 = 8; o2 < this.padLength; o2++)
            n2[i2++] = 0;
          n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = e2 >>> 24 & 255, n2[i2++] = e2 >>> 16 & 255, n2[i2++] = e2 >>> 8 & 255, n2[i2++] = 255 & e2;
        } else
          for (n2[i2++] = 255 & e2, n2[i2++] = e2 >>> 8 & 255, n2[i2++] = e2 >>> 16 & 255, n2[i2++] = e2 >>> 24 & 255, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, o2 = 8; o2 < this.padLength; o2++)
            n2[i2++] = 0;
        return n2;
      };
    }, function(e, t, r2) {
      (t = e.exports = r2(161)).Stream = t, t.Readable = t, t.Writable = r2(102), t.Duplex = r2(37), t.Transform = r2(165), t.PassThrough = r2(322);
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      function i(e2) {
        return Object.prototype.toString.call(e2);
      }
      t.isArray = function(e2) {
        return Array.isArray ? Array.isArray(e2) : "[object Array]" === i(e2);
      }, t.isBoolean = function(e2) {
        return "boolean" == typeof e2;
      }, t.isNull = function(e2) {
        return null === e2;
      }, t.isNullOrUndefined = function(e2) {
        return null == e2;
      }, t.isNumber = function(e2) {
        return "number" == typeof e2;
      }, t.isString = function(e2) {
        return "string" == typeof e2;
      }, t.isSymbol = function(e2) {
        return "symbol" === (0, n.default)(e2);
      }, t.isUndefined = function(e2) {
        return void 0 === e2;
      }, t.isRegExp = function(e2) {
        return "[object RegExp]" === i(e2);
      }, t.isObject = function(e2) {
        return "object" === (0, n.default)(e2) && null !== e2;
      }, t.isDate = function(e2) {
        return "[object Date]" === i(e2);
      }, t.isError = function(e2) {
        return "[object Error]" === i(e2) || e2 instanceof Error;
      }, t.isFunction = function(e2) {
        return "function" == typeof e2;
      }, t.isPrimitive = function(e2) {
        return null === e2 || "boolean" == typeof e2 || "number" == typeof e2 || "string" == typeof e2 || "symbol" === (0, n.default)(e2) || void 0 === e2;
      }, t.isBuffer = r2(1).Buffer.isBuffer;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(357)();
      e.exports = i;
      try {
        regeneratorRuntime = i;
      } catch (e2) {
        "object" === ("undefined" == typeof globalThis ? "undefined" : (0, n.default)(globalThis)) ? globalThis.regeneratorRuntime = i : Function("r", "regeneratorRuntime = r")(i);
      }
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "abi/5.7.0";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "UnicodeNormalizationForm", { enumerable: true, get: function() {
        return o.UnicodeNormalizationForm;
      } }), Object.defineProperty(t, "Utf8ErrorFuncs", { enumerable: true, get: function() {
        return o.Utf8ErrorFuncs;
      } }), Object.defineProperty(t, "Utf8ErrorReason", { enumerable: true, get: function() {
        return o.Utf8ErrorReason;
      } }), Object.defineProperty(t, "_toEscapedUtf8String", { enumerable: true, get: function() {
        return o._toEscapedUtf8String;
      } }), Object.defineProperty(t, "formatBytes32String", { enumerable: true, get: function() {
        return n.formatBytes32String;
      } }), Object.defineProperty(t, "nameprep", { enumerable: true, get: function() {
        return i.nameprep;
      } }), Object.defineProperty(t, "parseBytes32String", { enumerable: true, get: function() {
        return n.parseBytes32String;
      } }), Object.defineProperty(t, "toUtf8Bytes", { enumerable: true, get: function() {
        return o.toUtf8Bytes;
      } }), Object.defineProperty(t, "toUtf8CodePoints", { enumerable: true, get: function() {
        return o.toUtf8CodePoints;
      } }), Object.defineProperty(t, "toUtf8String", { enumerable: true, get: function() {
        return o.toUtf8String;
      } });
      var n = r2(387), i = r2(389), o = r2(108);
    }, function(e, t, r2) {
      e.exports = { encode: r2(412), decode: r2(413), encodingLength: r2(414) };
    }, function(e) {
      e.exports = JSON.parse('{"identity":0,"ip4":4,"tcp":6,"sha1":17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"blake3":30,"dccp":33,"murmur3-128":34,"murmur3-32":35,"ip6":41,"ip6zone":42,"path":47,"multicodec":48,"multihash":49,"multiaddr":50,"multibase":51,"dns":53,"dns4":54,"dns6":55,"dnsaddr":56,"protobuf":80,"cbor":81,"raw":85,"dbl-sha2-256":86,"rlp":96,"bencode":99,"dag-pb":112,"dag-cbor":113,"libp2p-key":114,"git-raw":120,"torrent-info":123,"torrent-file":124,"leofcoin-block":129,"leofcoin-tx":130,"leofcoin-pr":131,"sctp":132,"dag-jose":133,"dag-cose":134,"eth-block":144,"eth-block-list":145,"eth-tx-trie":146,"eth-tx":147,"eth-tx-receipt-trie":148,"eth-tx-receipt":149,"eth-state-trie":150,"eth-account-snapshot":151,"eth-storage-trie":152,"bitcoin-block":176,"bitcoin-tx":177,"bitcoin-witness-commitment":178,"zcash-block":192,"zcash-tx":193,"stellar-block":208,"stellar-tx":209,"md4":212,"md5":213,"bmt":214,"decred-block":224,"decred-tx":225,"ipld-ns":226,"ipfs-ns":227,"swarm-ns":228,"ipns-ns":229,"zeronet":230,"secp256k1-pub":231,"bls12_381-g1-pub":234,"bls12_381-g2-pub":235,"x25519-pub":236,"ed25519-pub":237,"dash-block":240,"dash-tx":241,"swarm-manifest":250,"swarm-feed":251,"udp":273,"p2p-webrtc-star":275,"p2p-webrtc-direct":276,"p2p-stardust":277,"p2p-circuit":290,"dag-json":297,"udt":301,"utp":302,"unix":400,"p2p":421,"ipfs":421,"https":443,"onion":444,"onion3":445,"garlic64":446,"garlic32":447,"tls":448,"quic":460,"ws":477,"wss":478,"p2p-websocket-star":479,"http":480,"json":512,"messagepack":513,"libp2p-peer-record":769,"sha2-256-trunc254-padded":4114,"ripemd-128":4178,"ripemd-160":4179,"ripemd-256":4180,"ripemd-320":4181,"x11":4352,"sm3-256":21325,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46000,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"poseidon-bls12_381-a2-fc1":46081,"poseidon-bls12_381-a2-fc1-sc":46082,"zeroxcert-imprint-256":52753,"fil-commitment-unsealed":61697,"fil-commitment-sealed":61698,"holochain-adr-v0":8417572,"holochain-adr-v1":8483108,"holochain-key-v0":9728292,"holochain-key-v1":9793828,"holochain-sig-v0":10645796,"holochain-sig-v1":10711332}');
    }, function(e, t, r2) {
      (function(t2) {
        e.exports = function(e2, r3) {
          for (var n = Math.min(e2.length, r3.length), i = new t2(n), o = 0; o < n; ++o)
            i[o] = e2[o] ^ r3[o];
          return i;
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(3), o = r2(117).Reporter, a = r2(115).Buffer;
      function s2(e2, t2) {
        o.call(this, t2), a.isBuffer(e2) ? (this.base = e2, this.offset = 0, this.length = e2.length) : this.error("Input not Buffer");
      }
      function f2(e2, t2) {
        if (Array.isArray(e2))
          this.length = 0, this.value = e2.map(function(e3) {
            return f2.isEncoderBuffer(e3) || (e3 = new f2(e3, t2)), this.length += e3.length, e3;
          }, this);
        else if ("number" == typeof e2) {
          if (!(0 <= e2 && e2 <= 255))
            return t2.error("non-byte EncoderBuffer value");
          this.value = e2, this.length = 1;
        } else if ("string" == typeof e2)
          this.value = e2, this.length = a.byteLength(e2);
        else {
          if (!a.isBuffer(e2))
            return t2.error("Unsupported type: " + (0, n.default)(e2));
          this.value = e2, this.length = e2.length;
        }
      }
      i(s2, o), t.DecoderBuffer = s2, s2.isDecoderBuffer = function(e2) {
        return e2 instanceof s2 || "object" === (0, n.default)(e2) && a.isBuffer(e2.base) && "DecoderBuffer" === e2.constructor.name && "number" == typeof e2.offset && "number" == typeof e2.length && "function" == typeof e2.save && "function" == typeof e2.restore && "function" == typeof e2.isEmpty && "function" == typeof e2.readUInt8 && "function" == typeof e2.skip && "function" == typeof e2.raw;
      }, s2.prototype.save = function() {
        return { offset: this.offset, reporter: o.prototype.save.call(this) };
      }, s2.prototype.restore = function(e2) {
        var t2 = new s2(this.base);
        return t2.offset = e2.offset, t2.length = this.offset, this.offset = e2.offset, o.prototype.restore.call(this, e2.reporter), t2;
      }, s2.prototype.isEmpty = function() {
        return this.offset === this.length;
      }, s2.prototype.readUInt8 = function(e2) {
        return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(e2 || "DecoderBuffer overrun");
      }, s2.prototype.skip = function(e2, t2) {
        if (!(this.offset + e2 <= this.length))
          return this.error(t2 || "DecoderBuffer overrun");
        var r3 = new s2(this.base);
        return r3._reporterState = this._reporterState, r3.offset = this.offset, r3.length = this.offset + e2, this.offset += e2, r3;
      }, s2.prototype.raw = function(e2) {
        return this.base.slice(e2 ? e2.offset : this.offset, this.length);
      }, t.EncoderBuffer = f2, f2.isEncoderBuffer = function(e2) {
        return e2 instanceof f2 || "object" === (0, n.default)(e2) && "EncoderBuffer" === e2.constructor.name && "number" == typeof e2.length && "function" == typeof e2.join;
      }, f2.prototype.join = function(e2, t2) {
        return e2 || (e2 = a.alloc(this.length)), t2 || (t2 = 0), 0 === this.length || (Array.isArray(this.value) ? this.value.forEach(function(r3) {
          r3.join(e2, t2), t2 += r3.length;
        }) : ("number" == typeof this.value ? e2[t2] = this.value : "string" == typeof this.value ? e2.write(this.value, t2) : a.isBuffer(this.value) && this.value.copy(e2, t2), t2 += this.length)), e2;
      };
    }, function(e, t, r2) {
      var n = r2(26), i = r2(41);
      function o() {
        this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
      }
      t.BlockHash = o, o.prototype.update = function(e2, t2) {
        if (e2 = n.toArray(e2, t2), this.pending ? this.pending = this.pending.concat(e2) : this.pending = e2, this.pendingTotal += e2.length, this.pending.length >= this._delta8) {
          var r3 = (e2 = this.pending).length % this._delta8;
          this.pending = e2.slice(e2.length - r3, e2.length), 0 === this.pending.length && (this.pending = null), e2 = n.join32(e2, 0, e2.length - r3, this.endian);
          for (var i2 = 0; i2 < e2.length; i2 += this._delta32)
            this._update(e2, i2, i2 + this._delta32);
        }
        return this;
      }, o.prototype.digest = function(e2) {
        return this.update(this._pad()), i(null === this.pending), this._digest(e2);
      }, o.prototype._pad = function() {
        var e2 = this.pendingTotal, t2 = this._delta8, r3 = t2 - (e2 + this.padLength) % t2, n2 = new Array(r3 + this.padLength);
        n2[0] = 128;
        for (var i2 = 1; i2 < r3; i2++)
          n2[i2] = 0;
        if (e2 <<= 3, "big" === this.endian) {
          for (var o2 = 8; o2 < this.padLength; o2++)
            n2[i2++] = 0;
          n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = e2 >>> 24 & 255, n2[i2++] = e2 >>> 16 & 255, n2[i2++] = e2 >>> 8 & 255, n2[i2++] = 255 & e2;
        } else
          for (n2[i2++] = 255 & e2, n2[i2++] = e2 >>> 8 & 255, n2[i2++] = e2 >>> 16 & 255, n2[i2++] = e2 >>> 24 & 255, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, o2 = 8; o2 < this.padLength; o2++)
            n2[i2++] = 0;
        return n2;
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(18), o = i.getNAF, a = i.getJSF, s2 = i.assert;
      function f2(e2, t2) {
        this.type = e2, this.p = new n(t2.p, 16), this.red = t2.prime ? n.red(t2.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = t2.n && new n(t2.n, 16), this.g = t2.g && this.pointFromJSON(t2.g, t2.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
        var r3 = this.n && this.p.div(this.n);
        !r3 || r3.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
      }
      function c(e2, t2) {
        this.curve = e2, this.type = t2, this.precomputed = null;
      }
      e.exports = f2, f2.prototype.point = function() {
        throw new Error("Not implemented");
      }, f2.prototype.validate = function() {
        throw new Error("Not implemented");
      }, f2.prototype._fixedNafMul = function(e2, t2) {
        s2(e2.precomputed);
        var r3 = e2._getDoubles(), n2 = o(t2, 1, this._bitLength), i2 = (1 << r3.step + 1) - (r3.step % 2 == 0 ? 2 : 1);
        i2 /= 3;
        var a2, f3, c2 = [];
        for (a2 = 0; a2 < n2.length; a2 += r3.step) {
          f3 = 0;
          for (var u = a2 + r3.step - 1; u >= a2; u--)
            f3 = (f3 << 1) + n2[u];
          c2.push(f3);
        }
        for (var d = this.jpoint(null, null, null), h = this.jpoint(null, null, null), l = i2; l > 0; l--) {
          for (a2 = 0; a2 < c2.length; a2++)
            (f3 = c2[a2]) === l ? h = h.mixedAdd(r3.points[a2]) : f3 === -l && (h = h.mixedAdd(r3.points[a2].neg()));
          d = d.add(h);
        }
        return d.toP();
      }, f2.prototype._wnafMul = function(e2, t2) {
        var r3 = 4, n2 = e2._getNAFPoints(r3);
        r3 = n2.wnd;
        for (var i2 = n2.points, a2 = o(t2, r3, this._bitLength), f3 = this.jpoint(null, null, null), c2 = a2.length - 1; c2 >= 0; c2--) {
          for (var u = 0; c2 >= 0 && 0 === a2[c2]; c2--)
            u++;
          if (c2 >= 0 && u++, f3 = f3.dblp(u), c2 < 0)
            break;
          var d = a2[c2];
          s2(0 !== d), f3 = "affine" === e2.type ? d > 0 ? f3.mixedAdd(i2[d - 1 >> 1]) : f3.mixedAdd(i2[-d - 1 >> 1].neg()) : d > 0 ? f3.add(i2[d - 1 >> 1]) : f3.add(i2[-d - 1 >> 1].neg());
        }
        return "affine" === e2.type ? f3.toP() : f3;
      }, f2.prototype._wnafMulAdd = function(e2, t2, r3, n2, i2) {
        var s3, f3, c2, u = this._wnafT1, d = this._wnafT2, h = this._wnafT3, l = 0;
        for (s3 = 0; s3 < n2; s3++) {
          var p = (c2 = t2[s3])._getNAFPoints(e2);
          u[s3] = p.wnd, d[s3] = p.points;
        }
        for (s3 = n2 - 1; s3 >= 1; s3 -= 2) {
          var b = s3 - 1, y = s3;
          if (1 === u[b] && 1 === u[y]) {
            var v = [t2[b], null, null, t2[y]];
            0 === t2[b].y.cmp(t2[y].y) ? (v[1] = t2[b].add(t2[y]), v[2] = t2[b].toJ().mixedAdd(t2[y].neg())) : 0 === t2[b].y.cmp(t2[y].y.redNeg()) ? (v[1] = t2[b].toJ().mixedAdd(t2[y]), v[2] = t2[b].add(t2[y].neg())) : (v[1] = t2[b].toJ().mixedAdd(t2[y]), v[2] = t2[b].toJ().mixedAdd(t2[y].neg()));
            var m = [-3, -1, -5, -7, 0, 7, 5, 1, 3], g = a(r3[b], r3[y]);
            for (l = Math.max(g[0].length, l), h[b] = new Array(l), h[y] = new Array(l), f3 = 0; f3 < l; f3++) {
              var w = 0 | g[0][f3], _ = 0 | g[1][f3];
              h[b][f3] = m[3 * (w + 1) + (_ + 1)], h[y][f3] = 0, d[b] = v;
            }
          } else
            h[b] = o(r3[b], u[b], this._bitLength), h[y] = o(r3[y], u[y], this._bitLength), l = Math.max(h[b].length, l), l = Math.max(h[y].length, l);
        }
        var k = this.jpoint(null, null, null), A = this._wnafT4;
        for (s3 = l; s3 >= 0; s3--) {
          for (var S = 0; s3 >= 0; ) {
            var E = true;
            for (f3 = 0; f3 < n2; f3++)
              A[f3] = 0 | h[f3][s3], 0 !== A[f3] && (E = false);
            if (!E)
              break;
            S++, s3--;
          }
          if (s3 >= 0 && S++, k = k.dblp(S), s3 < 0)
            break;
          for (f3 = 0; f3 < n2; f3++) {
            var x = A[f3];
            0 !== x && (x > 0 ? c2 = d[f3][x - 1 >> 1] : x < 0 && (c2 = d[f3][-x - 1 >> 1].neg()), k = "affine" === c2.type ? k.mixedAdd(c2) : k.add(c2));
          }
        }
        for (s3 = 0; s3 < n2; s3++)
          d[s3] = null;
        return i2 ? k : k.toP();
      }, f2.BasePoint = c, c.prototype.eq = function() {
        throw new Error("Not implemented");
      }, c.prototype.validate = function() {
        return this.curve.validate(this);
      }, f2.prototype.decodePoint = function(e2, t2) {
        e2 = i.toArray(e2, t2);
        var r3 = this.p.byteLength();
        if ((4 === e2[0] || 6 === e2[0] || 7 === e2[0]) && e2.length - 1 == 2 * r3)
          return 6 === e2[0] ? s2(e2[e2.length - 1] % 2 == 0) : 7 === e2[0] && s2(e2[e2.length - 1] % 2 == 1), this.point(e2.slice(1, 1 + r3), e2.slice(1 + r3, 1 + 2 * r3));
        if ((2 === e2[0] || 3 === e2[0]) && e2.length - 1 === r3)
          return this.pointFromX(e2.slice(1, 1 + r3), 3 === e2[0]);
        throw new Error("Unknown point format");
      }, c.prototype.encodeCompressed = function(e2) {
        return this.encode(e2, true);
      }, c.prototype._encode = function(e2) {
        var t2 = this.curve.p.byteLength(), r3 = this.getX().toArray("be", t2);
        return e2 ? [this.getY().isEven() ? 2 : 3].concat(r3) : [4].concat(r3, this.getY().toArray("be", t2));
      }, c.prototype.encode = function(e2, t2) {
        return i.encode(this._encode(t2), e2);
      }, c.prototype.precompute = function(e2) {
        if (this.precomputed)
          return this;
        var t2 = { doubles: null, naf: null, beta: null };
        return t2.naf = this._getNAFPoints(8), t2.doubles = this._getDoubles(4, e2), t2.beta = this._getBeta(), this.precomputed = t2, this;
      }, c.prototype._hasDoubles = function(e2) {
        if (!this.precomputed)
          return false;
        var t2 = this.precomputed.doubles;
        return !!t2 && t2.points.length >= Math.ceil((e2.bitLength() + 1) / t2.step);
      }, c.prototype._getDoubles = function(e2, t2) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        for (var r3 = [this], n2 = this, i2 = 0; i2 < t2; i2 += e2) {
          for (var o2 = 0; o2 < e2; o2++)
            n2 = n2.dbl();
          r3.push(n2);
        }
        return { step: e2, points: r3 };
      }, c.prototype._getNAFPoints = function(e2) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        for (var t2 = [this], r3 = (1 << e2) - 1, n2 = 1 === r3 ? null : this.dbl(), i2 = 1; i2 < r3; i2++)
          t2[i2] = t2[i2 - 1].add(n2);
        return { wnd: e2, points: t2 };
      }, c.prototype._getBeta = function() {
        return null;
      }, c.prototype.dblp = function(e2) {
        for (var t2 = this, r3 = 0; r3 < e2; r3++)
          t2 = t2.dbl();
        return t2;
      };
    }, function(e, t, r2) {
      var n = t;
      n.utils = r2(25), n.common = r2(60), n.sha = r2(276), n.ripemd = r2(280), n.hmac = r2(281), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.assertIsString = t.assertIsArray = t.assertIsBuffer = t.assertIsHexString = void 0;
        var n = r2(44);
        t.assertIsHexString = function(e3) {
          if (!(0, n.isHexString)(e3)) {
            var t2 = "This method only supports 0x-prefixed hex strings but input was: ".concat(e3);
            throw new Error(t2);
          }
        };
        t.assertIsBuffer = function(t2) {
          if (!e2.isBuffer(t2)) {
            var r3 = "This method only supports Buffer but input was: ".concat(t2);
            throw new Error(r3);
          }
        };
        t.assertIsArray = function(e3) {
          if (!Array.isArray(e3)) {
            var t2 = "This method only supports number arrays but input was: ".concat(e3);
            throw new Error(t2);
          }
        };
        t.assertIsString = function(e3) {
          if ("string" != typeof e3) {
            var t2 = "This method only supports strings but input was: ".concat(e3);
            throw new Error(t2);
          }
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(t2) {
        function r3(e2) {
          try {
            if (!t2.localStorage)
              return false;
          } catch (e3) {
            return false;
          }
          var r4 = t2.localStorage[e2];
          return null != r4 && "true" === String(r4).toLowerCase();
        }
        e.exports = function(e2, t3) {
          if (r3("noDeprecation"))
            return e2;
          var n = false;
          return function() {
            if (!n) {
              if (r3("throwDeprecation"))
                throw new Error(t3);
              r3("traceDeprecation") ? console.trace(t3) : console.warn(t3), n = true;
            }
            return e2.apply(this, arguments);
          };
        };
      }).call(this, r2(7));
    }, function(e, t, r2) {
      (function(t2) {
        void 0 === t2 || !t2.version || 0 === t2.version.indexOf("v0.") || 0 === t2.version.indexOf("v1.") && 0 !== t2.version.indexOf("v1.8.") ? e.exports = { nextTick: function(e2, r3, n, i) {
          if ("function" != typeof e2)
            throw new TypeError('"callback" argument must be a function');
          var o, a, s2 = arguments.length;
          switch (s2) {
            case 0:
            case 1:
              return t2.nextTick(e2);
            case 2:
              return t2.nextTick(function() {
                e2.call(null, r3);
              });
            case 3:
              return t2.nextTick(function() {
                e2.call(null, r3, n);
              });
            case 4:
              return t2.nextTick(function() {
                e2.call(null, r3, n, i);
              });
            default:
              for (o = new Array(s2 - 1), a = 0; a < o.length; )
                o[a++] = arguments[a];
              return t2.nextTick(function() {
                e2.apply(null, o);
              });
          }
        } } : e.exports = t2;
      }).call(this, r2(6));
    }, function(e, t) {
      (function(t2) {
        e.exports = t2;
      }).call(this, {});
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(168), o = r2(338);
      function a() {
        this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
      }
      t.parse = w, t.resolve = function(e2, t2) {
        return w(e2, false, true).resolve(t2);
      }, t.resolveObject = function(e2, t2) {
        return e2 ? w(e2, false, true).resolveObject(t2) : t2;
      }, t.format = function(e2) {
        o.isString(e2) && (e2 = w(e2));
        return e2 instanceof a ? e2.format() : a.prototype.format.call(e2);
      }, t.Url = a;
      var s2 = /^([a-z0-9.+-]+:)/i, f2 = /:[0-9]*$/, c = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, u = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "	"]), d = ["'"].concat(u), h = ["%", "/", "?", ";", "#"].concat(d), l = ["/", "?", "#"], p = /^[+a-z0-9A-Z_-]{0,63}$/, b = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, y = { javascript: true, "javascript:": true }, v = { javascript: true, "javascript:": true }, m = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, g = r2(339);
      function w(e2, t2, r3) {
        if (e2 && o.isObject(e2) && e2 instanceof a)
          return e2;
        var n2 = new a();
        return n2.parse(e2, t2, r3), n2;
      }
      a.prototype.parse = function(e2, t2, r3) {
        if (!o.isString(e2))
          throw new TypeError("Parameter 'url' must be a string, not " + (0, n.default)(e2));
        var a2 = e2.indexOf("?"), f3 = -1 !== a2 && a2 < e2.indexOf("#") ? "?" : "#", u2 = e2.split(f3);
        u2[0] = u2[0].replace(/\\/g, "/");
        var w2 = e2 = u2.join(f3);
        if (w2 = w2.trim(), !r3 && 1 === e2.split("#").length) {
          var _ = c.exec(w2);
          if (_)
            return this.path = w2, this.href = w2, this.pathname = _[1], _[2] ? (this.search = _[2], this.query = t2 ? g.parse(this.search.substr(1)) : this.search.substr(1)) : t2 && (this.search = "", this.query = {}), this;
        }
        var k = s2.exec(w2);
        if (k) {
          var A = (k = k[0]).toLowerCase();
          this.protocol = A, w2 = w2.substr(k.length);
        }
        if (r3 || k || w2.match(/^\/\/[^@\/]+@[^@\/]+/)) {
          var S = "//" === w2.substr(0, 2);
          !S || k && v[k] || (w2 = w2.substr(2), this.slashes = true);
        }
        if (!v[k] && (S || k && !m[k])) {
          for (var E, x, P = -1, O = 0; O < l.length; O++) {
            -1 !== (T = w2.indexOf(l[O])) && (-1 === P || T < P) && (P = T);
          }
          -1 !== (x = -1 === P ? w2.lastIndexOf("@") : w2.lastIndexOf("@", P)) && (E = w2.slice(0, x), w2 = w2.slice(x + 1), this.auth = decodeURIComponent(E)), P = -1;
          for (O = 0; O < h.length; O++) {
            var T;
            -1 !== (T = w2.indexOf(h[O])) && (-1 === P || T < P) && (P = T);
          }
          -1 === P && (P = w2.length), this.host = w2.slice(0, P), w2 = w2.slice(P), this.parseHost(), this.hostname = this.hostname || "";
          var B = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
          if (!B)
            for (var M = this.hostname.split(/\./), R = (O = 0, M.length); O < R; O++) {
              var I = M[O];
              if (I && !I.match(p)) {
                for (var C = "", U = 0, j = I.length; U < j; U++)
                  I.charCodeAt(U) > 127 ? C += "x" : C += I[U];
                if (!C.match(p)) {
                  var N = M.slice(0, O), L = M.slice(O + 1), D = I.match(b);
                  D && (N.push(D[1]), L.unshift(D[2])), L.length && (w2 = "/" + L.join(".") + w2), this.hostname = N.join(".");
                  break;
                }
              }
            }
          this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), B || (this.hostname = i.toASCII(this.hostname));
          var F = this.port ? ":" + this.port : "", q = this.hostname || "";
          this.host = q + F, this.href += this.host, B && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== w2[0] && (w2 = "/" + w2));
        }
        if (!y[A])
          for (O = 0, R = d.length; O < R; O++) {
            var z = d[O];
            if (-1 !== w2.indexOf(z)) {
              var H = encodeURIComponent(z);
              H === z && (H = escape(z)), w2 = w2.split(z).join(H);
            }
          }
        var K2 = w2.indexOf("#");
        -1 !== K2 && (this.hash = w2.substr(K2), w2 = w2.slice(0, K2));
        var G = w2.indexOf("?");
        if (-1 !== G ? (this.search = w2.substr(G), this.query = w2.substr(G + 1), t2 && (this.query = g.parse(this.query)), w2 = w2.slice(0, G)) : t2 && (this.search = "", this.query = {}), w2 && (this.pathname = w2), m[A] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
          F = this.pathname || "";
          var W = this.search || "";
          this.path = F + W;
        }
        return this.href = this.format(), this;
      }, a.prototype.format = function() {
        var e2 = this.auth || "";
        e2 && (e2 = (e2 = encodeURIComponent(e2)).replace(/%3A/i, ":"), e2 += "@");
        var t2 = this.protocol || "", r3 = this.pathname || "", n2 = this.hash || "", i2 = false, a2 = "";
        this.host ? i2 = e2 + this.host : this.hostname && (i2 = e2 + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (i2 += ":" + this.port)), this.query && o.isObject(this.query) && Object.keys(this.query).length && (a2 = g.stringify(this.query));
        var s3 = this.search || a2 && "?" + a2 || "";
        return t2 && ":" !== t2.substr(-1) && (t2 += ":"), this.slashes || (!t2 || m[t2]) && false !== i2 ? (i2 = "//" + (i2 || ""), r3 && "/" !== r3.charAt(0) && (r3 = "/" + r3)) : i2 || (i2 = ""), n2 && "#" !== n2.charAt(0) && (n2 = "#" + n2), s3 && "?" !== s3.charAt(0) && (s3 = "?" + s3), t2 + i2 + (r3 = r3.replace(/[?#]/g, function(e3) {
          return encodeURIComponent(e3);
        })) + (s3 = s3.replace("#", "%23")) + n2;
      }, a.prototype.resolve = function(e2) {
        return this.resolveObject(w(e2, false, true)).format();
      }, a.prototype.resolveObject = function(e2) {
        if (o.isString(e2)) {
          var t2 = new a();
          t2.parse(e2, false, true), e2 = t2;
        }
        for (var r3 = new a(), n2 = Object.keys(this), i2 = 0; i2 < n2.length; i2++) {
          var s3 = n2[i2];
          r3[s3] = this[s3];
        }
        if (r3.hash = e2.hash, "" === e2.href)
          return r3.href = r3.format(), r3;
        if (e2.slashes && !e2.protocol) {
          for (var f3 = Object.keys(e2), c2 = 0; c2 < f3.length; c2++) {
            var u2 = f3[c2];
            "protocol" !== u2 && (r3[u2] = e2[u2]);
          }
          return m[r3.protocol] && r3.hostname && !r3.pathname && (r3.path = r3.pathname = "/"), r3.href = r3.format(), r3;
        }
        if (e2.protocol && e2.protocol !== r3.protocol) {
          if (!m[e2.protocol]) {
            for (var d2 = Object.keys(e2), h2 = 0; h2 < d2.length; h2++) {
              var l2 = d2[h2];
              r3[l2] = e2[l2];
            }
            return r3.href = r3.format(), r3;
          }
          if (r3.protocol = e2.protocol, e2.host || v[e2.protocol])
            r3.pathname = e2.pathname;
          else {
            for (var p2 = (e2.pathname || "").split("/"); p2.length && !(e2.host = p2.shift()); )
              ;
            e2.host || (e2.host = ""), e2.hostname || (e2.hostname = ""), "" !== p2[0] && p2.unshift(""), p2.length < 2 && p2.unshift(""), r3.pathname = p2.join("/");
          }
          if (r3.search = e2.search, r3.query = e2.query, r3.host = e2.host || "", r3.auth = e2.auth, r3.hostname = e2.hostname || e2.host, r3.port = e2.port, r3.pathname || r3.search) {
            var b2 = r3.pathname || "", y2 = r3.search || "";
            r3.path = b2 + y2;
          }
          return r3.slashes = r3.slashes || e2.slashes, r3.href = r3.format(), r3;
        }
        var g2 = r3.pathname && "/" === r3.pathname.charAt(0), w2 = e2.host || e2.pathname && "/" === e2.pathname.charAt(0), _ = w2 || g2 || r3.host && e2.pathname, k = _, A = r3.pathname && r3.pathname.split("/") || [], S = (p2 = e2.pathname && e2.pathname.split("/") || [], r3.protocol && !m[r3.protocol]);
        if (S && (r3.hostname = "", r3.port = null, r3.host && ("" === A[0] ? A[0] = r3.host : A.unshift(r3.host)), r3.host = "", e2.protocol && (e2.hostname = null, e2.port = null, e2.host && ("" === p2[0] ? p2[0] = e2.host : p2.unshift(e2.host)), e2.host = null), _ = _ && ("" === p2[0] || "" === A[0])), w2)
          r3.host = e2.host || "" === e2.host ? e2.host : r3.host, r3.hostname = e2.hostname || "" === e2.hostname ? e2.hostname : r3.hostname, r3.search = e2.search, r3.query = e2.query, A = p2;
        else if (p2.length)
          A || (A = []), A.pop(), A = A.concat(p2), r3.search = e2.search, r3.query = e2.query;
        else if (!o.isNullOrUndefined(e2.search)) {
          if (S)
            r3.hostname = r3.host = A.shift(), (T = !!(r3.host && r3.host.indexOf("@") > 0) && r3.host.split("@")) && (r3.auth = T.shift(), r3.host = r3.hostname = T.shift());
          return r3.search = e2.search, r3.query = e2.query, o.isNull(r3.pathname) && o.isNull(r3.search) || (r3.path = (r3.pathname ? r3.pathname : "") + (r3.search ? r3.search : "")), r3.href = r3.format(), r3;
        }
        if (!A.length)
          return r3.pathname = null, r3.search ? r3.path = "/" + r3.search : r3.path = null, r3.href = r3.format(), r3;
        for (var E = A.slice(-1)[0], x = (r3.host || e2.host || A.length > 1) && ("." === E || ".." === E) || "" === E, P = 0, O = A.length; O >= 0; O--)
          "." === (E = A[O]) ? A.splice(O, 1) : ".." === E ? (A.splice(O, 1), P++) : P && (A.splice(O, 1), P--);
        if (!_ && !k)
          for (; P--; P)
            A.unshift("..");
        !_ || "" === A[0] || A[0] && "/" === A[0].charAt(0) || A.unshift(""), x && "/" !== A.join("/").substr(-1) && A.push("");
        var T, B = "" === A[0] || A[0] && "/" === A[0].charAt(0);
        S && (r3.hostname = r3.host = B ? "" : A.length ? A.shift() : "", (T = !!(r3.host && r3.host.indexOf("@") > 0) && r3.host.split("@")) && (r3.auth = T.shift(), r3.host = r3.hostname = T.shift()));
        return (_ = _ || r3.host && A.length) && !B && A.unshift(""), A.length ? r3.pathname = A.join("/") : (r3.pathname = null, r3.path = null), o.isNull(r3.pathname) && o.isNull(r3.search) || (r3.path = (r3.pathname ? r3.pathname : "") + (r3.search ? r3.search : "")), r3.auth = e2.auth || r3.auth, r3.slashes = r3.slashes || e2.slashes, r3.href = r3.format(), r3;
      }, a.prototype.parseHost = function() {
        var e2 = this.host, t2 = f2.exec(e2);
        t2 && (":" !== (t2 = t2[0]) && (this.port = t2.substr(1)), e2 = e2.substr(0, e2.length - t2.length)), e2 && (this.hostname = e2);
      };
    }, function(e, t, r2) {
      var n = r2(104), i = function(e2) {
        var t2, r3, i2 = new Promise(function() {
          t2 = arguments[0], r3 = arguments[1];
        });
        if (e2)
          return { resolve: t2, reject: r3, eventEmitter: i2 };
        var o = new n();
        return i2._events = o._events, i2.emit = o.emit, i2.on = o.on, i2.once = o.once, i2.off = o.off, i2.listeners = o.listeners, i2.addListener = o.addListener, i2.removeListener = o.removeListener, i2.removeAllListeners = o.removeAllListeners, { resolve: t2, reject: r3, eventEmitter: i2 };
      };
      i.resolve = function(e2) {
        var t2 = i(true);
        return t2.resolve(e2), t2.eventEmitter;
      }, e.exports = i;
    }, function(e, t, r2) {
      var n = r2(358), i = function(e2) {
        this.name = e2.name, this.type = e2.type, this.subscriptions = e2.subscriptions || {}, this.requestManager = null;
      };
      i.prototype.setRequestManager = function(e2) {
        this.requestManager = e2;
      }, i.prototype.attachToObject = function(e2) {
        var t2 = this.buildCall(), r3 = this.name.split(".");
        r3.length > 1 ? (e2[r3[0]] = e2[r3[0]] || {}, e2[r3[0]][r3[1]] = t2) : e2[r3[0]] = t2;
      }, i.prototype.buildCall = function() {
        var e2 = this;
        return function() {
          e2.subscriptions[arguments[0]] || console.warn("Subscription " + JSON.stringify(arguments[0]) + " doesn't exist. Subscribing anyway.");
          var t2 = new n({ subscription: e2.subscriptions[arguments[0]] || {}, requestManager: e2.requestManager, type: e2.type });
          return t2.subscribe.apply(t2, arguments);
        };
      }, e.exports = { subscriptions: i, subscription: n };
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.getAddress = v, t.getContractAddress = function(e2) {
        var t2 = null;
        try {
          t2 = v(e2.from);
        } catch (t3) {
          c.throwArgumentError("missing from address", "transaction", e2);
        }
        var r3 = (0, n.stripZeros)((0, n.arrayify)(i.BigNumber.from(e2.nonce).toHexString()));
        return v((0, n.hexDataSlice)((0, o.keccak256)((0, a.encode)([t2, r3])), 12));
      }, t.getCreate2Address = function(e2, t2, r3) {
        32 !== (0, n.hexDataLength)(t2) && c.throwArgumentError("salt must be 32 bytes", "salt", t2);
        32 !== (0, n.hexDataLength)(r3) && c.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", r3);
        return v((0, n.hexDataSlice)((0, o.keccak256)((0, n.concat)(["0xff", v(e2), t2, r3])), 12));
      }, t.getIcapAddress = function(e2) {
        var t2 = (0, i._base16To36)(v(e2).substring(2)).toUpperCase();
        for (; t2.length < 30; )
          t2 = "0" + t2;
        return "XE" + y("XE00" + t2) + t2;
      }, t.isAddress = function(e2) {
        try {
          return v(e2), true;
        } catch (e3) {
        }
        return false;
      };
      var n = r2(11), i = r2(33), o = r2(39), a = r2(175), s2 = r2(16), f2 = r2(365), c = new s2.Logger(f2.version);
      function u(e2) {
        (0, n.isHexString)(e2, 20) || c.throwArgumentError("invalid address", "address", e2);
        for (var t2 = (e2 = e2.toLowerCase()).substring(2).split(""), r3 = new Uint8Array(40), i2 = 0; i2 < 40; i2++)
          r3[i2] = t2[i2].charCodeAt(0);
        for (var a2 = (0, n.arrayify)((0, o.keccak256)(r3)), s3 = 0; s3 < 40; s3 += 2)
          a2[s3 >> 1] >> 4 >= 8 && (t2[s3] = t2[s3].toUpperCase()), (15 & a2[s3 >> 1]) >= 8 && (t2[s3 + 1] = t2[s3 + 1].toUpperCase());
        return "0x" + t2.join("");
      }
      for (var d = {}, h = 0; h < 10; h++)
        d[String(h)] = String(h);
      for (var l = 0; l < 26; l++)
        d[String.fromCharCode(65 + l)] = String(10 + l);
      var p, b = Math.floor((p = 9007199254740991, Math.log10 ? Math.log10(p) : Math.log(p) / Math.LN10));
      function y(e2) {
        for (var t2 = (e2 = (e2 = e2.toUpperCase()).substring(4) + e2.substring(0, 2) + "00").split("").map(function(e3) {
          return d[e3];
        }).join(""); t2.length >= b; ) {
          var r3 = t2.substring(0, b);
          t2 = parseInt(r3, 10) % 97 + t2.substring(r3.length);
        }
        for (var n2 = String(98 - parseInt(t2, 10) % 97); n2.length < 2; )
          n2 = "0" + n2;
        return n2;
      }
      function v(e2) {
        var t2 = null;
        if ("string" != typeof e2 && c.throwArgumentError("invalid address", "address", e2), e2.match(/^(0x)?[0-9a-fA-F]{40}$/))
          "0x" !== e2.substring(0, 2) && (e2 = "0x" + e2), t2 = u(e2), e2.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t2 !== e2 && c.throwArgumentError("bad address checksum", "address", e2);
        else if (e2.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
          for (e2.substring(2, 4) !== y(e2) && c.throwArgumentError("bad icap checksum", "address", e2), t2 = (0, i._base36To16)(e2.substring(4)); t2.length < 40; )
            t2 = "0" + t2;
          t2 = u("0x" + t2);
        } else
          c.throwArgumentError("invalid address", "address", e2);
        return t2;
      }
    }, function(e, t, r2) {
      var n = r2(34), i = r2(38), o = r2(17), a = function() {
        var e2 = this;
        n.packageInit(this, arguments), [new i({ name: "getId", call: "net_version", params: 0, outputFormatter: parseInt }), new i({ name: "isListening", call: "net_listening", params: 0 }), new i({ name: "getPeerCount", call: "net_peerCount", params: 0, outputFormatter: o.hexToNumber })].forEach(function(t2) {
          t2.attachToObject(e2), t2.setRequestManager(e2._requestManager);
        });
      };
      n.addProviders(a), e.exports = a;
    }, function(e) {
      e.exports = JSON.parse('{"identity":0,"ip4":4,"tcp":6,"sha1":17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"dccp":33,"murmur3-128":34,"murmur3-32":35,"ip6":41,"ip6zone":42,"path":47,"multicodec":48,"multihash":49,"multiaddr":50,"multibase":51,"dns":53,"dns4":54,"dns6":55,"dnsaddr":56,"protobuf":80,"cbor":81,"raw":85,"dbl-sha2-256":86,"rlp":96,"bencode":99,"dag-pb":112,"dag-cbor":113,"libp2p-key":114,"git-raw":120,"torrent-info":123,"torrent-file":124,"leofcoin-block":129,"leofcoin-tx":130,"leofcoin-pr":131,"sctp":132,"eth-block":144,"eth-block-list":145,"eth-tx-trie":146,"eth-tx":147,"eth-tx-receipt-trie":148,"eth-tx-receipt":149,"eth-state-trie":150,"eth-account-snapshot":151,"eth-storage-trie":152,"bitcoin-block":176,"bitcoin-tx":177,"zcash-block":192,"zcash-tx":193,"stellar-block":208,"stellar-tx":209,"md4":212,"md5":213,"bmt":214,"decred-block":224,"decred-tx":225,"ipld-ns":226,"ipfs-ns":227,"swarm-ns":228,"ipns-ns":229,"zeronet":230,"ed25519-pub":237,"dash-block":240,"dash-tx":241,"swarm-manifest":250,"swarm-feed":251,"udp":273,"p2p-webrtc-star":275,"p2p-webrtc-direct":276,"p2p-stardust":277,"p2p-circuit":290,"dag-json":297,"udt":301,"utp":302,"unix":400,"p2p":421,"ipfs":421,"https":443,"onion":444,"onion3":445,"garlic64":446,"garlic32":447,"tls":448,"quic":460,"ws":477,"wss":478,"p2p-websocket-star":479,"http":480,"json":512,"messagepack":513,"x11":4352,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46000,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"holochain-adr-v0":8417572,"holochain-adr-v1":8483108,"holochain-key-v0":9728292,"holochain-key-v1":9793828,"holochain-sig-v0":10645796,"holochain-sig-v1":10711332}');
    }, function(e, t, r2) {
      t.randomBytes = t.rng = t.pseudoRandomBytes = t.prng = r2(31), t.createHash = t.Hash = r2(47), t.createHmac = t.Hmac = r2(195);
      var n = r2(447), i = Object.keys(n), o = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(i);
      t.getHashes = function() {
        return o;
      };
      var a = r2(198);
      t.pbkdf2 = a.pbkdf2, t.pbkdf2Sync = a.pbkdf2Sync;
      var s2 = r2(449);
      t.Cipher = s2.Cipher, t.createCipher = s2.createCipher, t.Cipheriv = s2.Cipheriv, t.createCipheriv = s2.createCipheriv, t.Decipher = s2.Decipher, t.createDecipher = s2.createDecipher, t.Decipheriv = s2.Decipheriv, t.createDecipheriv = s2.createDecipheriv, t.getCiphers = s2.getCiphers, t.listCiphers = s2.listCiphers;
      var f2 = r2(464);
      t.DiffieHellmanGroup = f2.DiffieHellmanGroup, t.createDiffieHellmanGroup = f2.createDiffieHellmanGroup, t.getDiffieHellman = f2.getDiffieHellman, t.createDiffieHellman = f2.createDiffieHellman, t.DiffieHellman = f2.DiffieHellman;
      var c = r2(467);
      t.createSign = c.createSign, t.Sign = c.Sign, t.createVerify = c.createVerify, t.Verify = c.Verify, t.createECDH = r2(487);
      var u = r2(488);
      t.publicEncrypt = u.publicEncrypt, t.privateEncrypt = u.privateEncrypt, t.publicDecrypt = u.publicDecrypt, t.privateDecrypt = u.privateDecrypt;
      var d = r2(491);
      t.randomFill = d.randomFill, t.randomFillSync = d.randomFillSync, t.createCredentials = function() {
        throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join("\n"));
      }, t.constants = { DH_CHECK_P_NOT_SAFE_PRIME: 2, DH_CHECK_P_NOT_PRIME: 1, DH_UNABLE_TO_CHECK_GENERATOR: 4, DH_NOT_SUITABLE_GENERATOR: 8, NPN_ENABLED: 1, ALPN_ENABLED: 1, RSA_PKCS1_PADDING: 1, RSA_SSLV23_PADDING: 2, RSA_NO_PADDING: 3, RSA_PKCS1_OAEP_PADDING: 4, RSA_X931_PADDING: 5, RSA_PKCS1_PSS_PADDING: 6, POINT_CONVERSION_COMPRESSED: 2, POINT_CONVERSION_UNCOMPRESSED: 4, POINT_CONVERSION_HYBRID: 6 };
    }, function(e, t, r2) {
      var n = r2(5).Buffer;
      function i(e2) {
        n.isBuffer(e2) || (e2 = n.from(e2));
        for (var t2 = e2.length / 4 | 0, r3 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r3[i2] = e2.readUInt32BE(4 * i2);
        return r3;
      }
      function o(e2) {
        for (; 0 < e2.length; e2++)
          e2[0] = 0;
      }
      function a(e2, t2, r3, n2, i2) {
        for (var o2, a2, s3, f3, c2 = r3[0], u = r3[1], d = r3[2], h = r3[3], l = e2[0] ^ t2[0], p = e2[1] ^ t2[1], b = e2[2] ^ t2[2], y = e2[3] ^ t2[3], v = 4, m = 1; m < i2; m++)
          o2 = c2[l >>> 24] ^ u[p >>> 16 & 255] ^ d[b >>> 8 & 255] ^ h[255 & y] ^ t2[v++], a2 = c2[p >>> 24] ^ u[b >>> 16 & 255] ^ d[y >>> 8 & 255] ^ h[255 & l] ^ t2[v++], s3 = c2[b >>> 24] ^ u[y >>> 16 & 255] ^ d[l >>> 8 & 255] ^ h[255 & p] ^ t2[v++], f3 = c2[y >>> 24] ^ u[l >>> 16 & 255] ^ d[p >>> 8 & 255] ^ h[255 & b] ^ t2[v++], l = o2, p = a2, b = s3, y = f3;
        return o2 = (n2[l >>> 24] << 24 | n2[p >>> 16 & 255] << 16 | n2[b >>> 8 & 255] << 8 | n2[255 & y]) ^ t2[v++], a2 = (n2[p >>> 24] << 24 | n2[b >>> 16 & 255] << 16 | n2[y >>> 8 & 255] << 8 | n2[255 & l]) ^ t2[v++], s3 = (n2[b >>> 24] << 24 | n2[y >>> 16 & 255] << 16 | n2[l >>> 8 & 255] << 8 | n2[255 & p]) ^ t2[v++], f3 = (n2[y >>> 24] << 24 | n2[l >>> 16 & 255] << 16 | n2[p >>> 8 & 255] << 8 | n2[255 & b]) ^ t2[v++], [o2 >>>= 0, a2 >>>= 0, s3 >>>= 0, f3 >>>= 0];
      }
      var s2 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], f2 = function() {
        for (var e2 = new Array(256), t2 = 0; t2 < 256; t2++)
          e2[t2] = t2 < 128 ? t2 << 1 : t2 << 1 ^ 283;
        for (var r3 = [], n2 = [], i2 = [[], [], [], []], o2 = [[], [], [], []], a2 = 0, s3 = 0, f3 = 0; f3 < 256; ++f3) {
          var c2 = s3 ^ s3 << 1 ^ s3 << 2 ^ s3 << 3 ^ s3 << 4;
          c2 = c2 >>> 8 ^ 255 & c2 ^ 99, r3[a2] = c2, n2[c2] = a2;
          var u = e2[a2], d = e2[u], h = e2[d], l = 257 * e2[c2] ^ 16843008 * c2;
          i2[0][a2] = l << 24 | l >>> 8, i2[1][a2] = l << 16 | l >>> 16, i2[2][a2] = l << 8 | l >>> 24, i2[3][a2] = l, l = 16843009 * h ^ 65537 * d ^ 257 * u ^ 16843008 * a2, o2[0][c2] = l << 24 | l >>> 8, o2[1][c2] = l << 16 | l >>> 16, o2[2][c2] = l << 8 | l >>> 24, o2[3][c2] = l, 0 === a2 ? a2 = s3 = 1 : (a2 = u ^ e2[e2[e2[h ^ u]]], s3 ^= e2[e2[s3]]);
        }
        return { SBOX: r3, INV_SBOX: n2, SUB_MIX: i2, INV_SUB_MIX: o2 };
      }();
      function c(e2) {
        this._key = i(e2), this._reset();
      }
      c.blockSize = 16, c.keySize = 32, c.prototype.blockSize = c.blockSize, c.prototype.keySize = c.keySize, c.prototype._reset = function() {
        for (var e2 = this._key, t2 = e2.length, r3 = t2 + 6, n2 = 4 * (r3 + 1), i2 = [], o2 = 0; o2 < t2; o2++)
          i2[o2] = e2[o2];
        for (o2 = t2; o2 < n2; o2++) {
          var a2 = i2[o2 - 1];
          o2 % t2 == 0 ? (a2 = a2 << 8 | a2 >>> 24, a2 = f2.SBOX[a2 >>> 24] << 24 | f2.SBOX[a2 >>> 16 & 255] << 16 | f2.SBOX[a2 >>> 8 & 255] << 8 | f2.SBOX[255 & a2], a2 ^= s2[o2 / t2 | 0] << 24) : t2 > 6 && o2 % t2 == 4 && (a2 = f2.SBOX[a2 >>> 24] << 24 | f2.SBOX[a2 >>> 16 & 255] << 16 | f2.SBOX[a2 >>> 8 & 255] << 8 | f2.SBOX[255 & a2]), i2[o2] = i2[o2 - t2] ^ a2;
        }
        for (var c2 = [], u = 0; u < n2; u++) {
          var d = n2 - u, h = i2[d - (u % 4 ? 0 : 4)];
          c2[u] = u < 4 || d <= 4 ? h : f2.INV_SUB_MIX[0][f2.SBOX[h >>> 24]] ^ f2.INV_SUB_MIX[1][f2.SBOX[h >>> 16 & 255]] ^ f2.INV_SUB_MIX[2][f2.SBOX[h >>> 8 & 255]] ^ f2.INV_SUB_MIX[3][f2.SBOX[255 & h]];
        }
        this._nRounds = r3, this._keySchedule = i2, this._invKeySchedule = c2;
      }, c.prototype.encryptBlockRaw = function(e2) {
        return a(e2 = i(e2), this._keySchedule, f2.SUB_MIX, f2.SBOX, this._nRounds);
      }, c.prototype.encryptBlock = function(e2) {
        var t2 = this.encryptBlockRaw(e2), r3 = n.allocUnsafe(16);
        return r3.writeUInt32BE(t2[0], 0), r3.writeUInt32BE(t2[1], 4), r3.writeUInt32BE(t2[2], 8), r3.writeUInt32BE(t2[3], 12), r3;
      }, c.prototype.decryptBlock = function(e2) {
        var t2 = (e2 = i(e2))[1];
        e2[1] = e2[3], e2[3] = t2;
        var r3 = a(e2, this._invKeySchedule, f2.INV_SUB_MIX, f2.INV_SBOX, this._nRounds), o2 = n.allocUnsafe(16);
        return o2.writeUInt32BE(r3[0], 0), o2.writeUInt32BE(r3[3], 4), o2.writeUInt32BE(r3[2], 8), o2.writeUInt32BE(r3[1], 12), o2;
      }, c.prototype.scrub = function() {
        o(this._keySchedule), o(this._invKeySchedule), o(this._key);
      }, e.exports.AES = c;
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = r2(97);
      e.exports = function(e2, t2, r3, o) {
        if (n.isBuffer(e2) || (e2 = n.from(e2, "binary")), t2 && (n.isBuffer(t2) || (t2 = n.from(t2, "binary")), 8 !== t2.length))
          throw new RangeError("salt should be Buffer with 8 byte length");
        for (var a = r3 / 8, s2 = n.alloc(a), f2 = n.alloc(o || 0), c = n.alloc(0); a > 0 || o > 0; ) {
          var u = new i();
          u.update(c), u.update(e2), t2 && u.update(t2), c = u.digest();
          var d = 0;
          if (a > 0) {
            var h = s2.length - a;
            d = Math.min(a, c.length), c.copy(s2, h, 0, d), a -= d;
          }
          if (d < c.length && o > 0) {
            var l = f2.length - o, p = Math.min(o, c.length - d);
            c.copy(f2, l, d, d + p), o -= p;
          }
        }
        return c.fill(0), { key: s2, iv: f2 };
      };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(477), o = r2(484), a = r2(485), s2 = r2(111), f2 = r2(198), c = r2(5).Buffer;
      function u(e2) {
        var t2;
        "object" !== (0, n.default)(e2) || c.isBuffer(e2) || (t2 = e2.passphrase, e2 = e2.key), "string" == typeof e2 && (e2 = c.from(e2));
        var r3, u2, d = a(e2, t2), h = d.tag, l = d.data;
        switch (h) {
          case "CERTIFICATE":
            u2 = i.certificate.decode(l, "der").tbsCertificate.subjectPublicKeyInfo;
          case "PUBLIC KEY":
            switch (u2 || (u2 = i.PublicKey.decode(l, "der")), r3 = u2.algorithm.algorithm.join(".")) {
              case "1.2.840.113549.1.1.1":
                return i.RSAPublicKey.decode(u2.subjectPublicKey.data, "der");
              case "1.2.840.10045.2.1":
                return u2.subjectPrivateKey = u2.subjectPublicKey, { type: "ec", data: u2 };
              case "1.2.840.10040.4.1":
                return u2.algorithm.params.pub_key = i.DSAparam.decode(u2.subjectPublicKey.data, "der"), { type: "dsa", data: u2.algorithm.params };
              default:
                throw new Error("unknown key id " + r3);
            }
          case "ENCRYPTED PRIVATE KEY":
            l = function(e3, t3) {
              var r4 = e3.algorithm.decrypt.kde.kdeparams.salt, n2 = parseInt(e3.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), i2 = o[e3.algorithm.decrypt.cipher.algo.join(".")], a2 = e3.algorithm.decrypt.cipher.iv, u3 = e3.subjectPrivateKey, d2 = parseInt(i2.split("-")[1], 10) / 8, h2 = f2.pbkdf2Sync(t3, r4, n2, d2, "sha1"), l2 = s2.createDecipheriv(i2, h2, a2), p = [];
              return p.push(l2.update(u3)), p.push(l2.final()), c.concat(p);
            }(l = i.EncryptedPrivateKey.decode(l, "der"), t2);
          case "PRIVATE KEY":
            switch (r3 = (u2 = i.PrivateKey.decode(l, "der")).algorithm.algorithm.join(".")) {
              case "1.2.840.113549.1.1.1":
                return i.RSAPrivateKey.decode(u2.subjectPrivateKey, "der");
              case "1.2.840.10045.2.1":
                return { curve: u2.algorithm.curve, privateKey: i.ECPrivateKey.decode(u2.subjectPrivateKey, "der").privateKey };
              case "1.2.840.10040.4.1":
                return u2.algorithm.params.priv_key = i.DSAparam.decode(u2.subjectPrivateKey, "der"), { type: "dsa", params: u2.algorithm.params };
              default:
                throw new Error("unknown key id " + r3);
            }
          case "RSA PUBLIC KEY":
            return i.RSAPublicKey.decode(l, "der");
          case "RSA PRIVATE KEY":
            return i.RSAPrivateKey.decode(l, "der");
          case "DSA PRIVATE KEY":
            return { type: "dsa", params: i.DSAPrivateKey.decode(l, "der") };
          case "EC PRIVATE KEY":
            return { curve: (l = i.ECPrivateKey.decode(l, "der")).parameters.value, privateKey: l.privateKey };
          default:
            throw new Error("unknown key type " + h);
        }
      }
      e.exports = u, u.signature = i.signature;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0, t.unsafeStringify = s2;
      for (var i = n(r2(88)), o = [], a = 0; a < 256; ++a)
        o.push((a + 256).toString(16).slice(1));
      function s2(e2) {
        var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        return (o[e2[t2 + 0]] + o[e2[t2 + 1]] + o[e2[t2 + 2]] + o[e2[t2 + 3]] + "-" + o[e2[t2 + 4]] + o[e2[t2 + 5]] + "-" + o[e2[t2 + 6]] + o[e2[t2 + 7]] + "-" + o[e2[t2 + 8]] + o[e2[t2 + 9]] + "-" + o[e2[t2 + 10]] + o[e2[t2 + 11]] + o[e2[t2 + 12]] + o[e2[t2 + 13]] + o[e2[t2 + 14]] + o[e2[t2 + 15]]).toLowerCase();
      }
      var f2 = function(e2) {
        var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r3 = s2(e2, t2);
        if (!(0, i.default)(r3))
          throw TypeError("Stringified UUID is invalid");
        return r3;
      };
      t.default = f2;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var i = n(r2(498));
      var o = function(e2) {
        return "string" == typeof e2 && i.default.test(e2);
      };
      t.default = o;
    }, function(e, t, r2) {
      var n = r2(4), i = r2(22), o = i.getNAF, a = i.getJSF, s2 = i.assert;
      function f2(e2, t2) {
        this.type = e2, this.p = new n(t2.p, 16), this.red = t2.prime ? n.red(t2.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = t2.n && new n(t2.n, 16), this.g = t2.g && this.pointFromJSON(t2.g, t2.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
        var r3 = this.n && this.p.div(this.n);
        !r3 || r3.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
      }
      function c(e2, t2) {
        this.curve = e2, this.type = t2, this.precomputed = null;
      }
      e.exports = f2, f2.prototype.point = function() {
        throw new Error("Not implemented");
      }, f2.prototype.validate = function() {
        throw new Error("Not implemented");
      }, f2.prototype._fixedNafMul = function(e2, t2) {
        s2(e2.precomputed);
        var r3 = e2._getDoubles(), n2 = o(t2, 1, this._bitLength), i2 = (1 << r3.step + 1) - (r3.step % 2 == 0 ? 2 : 1);
        i2 /= 3;
        var a2, f3, c2 = [];
        for (a2 = 0; a2 < n2.length; a2 += r3.step) {
          f3 = 0;
          for (var u = a2 + r3.step - 1; u >= a2; u--)
            f3 = (f3 << 1) + n2[u];
          c2.push(f3);
        }
        for (var d = this.jpoint(null, null, null), h = this.jpoint(null, null, null), l = i2; l > 0; l--) {
          for (a2 = 0; a2 < c2.length; a2++)
            (f3 = c2[a2]) === l ? h = h.mixedAdd(r3.points[a2]) : f3 === -l && (h = h.mixedAdd(r3.points[a2].neg()));
          d = d.add(h);
        }
        return d.toP();
      }, f2.prototype._wnafMul = function(e2, t2) {
        var r3 = 4, n2 = e2._getNAFPoints(r3);
        r3 = n2.wnd;
        for (var i2 = n2.points, a2 = o(t2, r3, this._bitLength), f3 = this.jpoint(null, null, null), c2 = a2.length - 1; c2 >= 0; c2--) {
          for (var u = 0; c2 >= 0 && 0 === a2[c2]; c2--)
            u++;
          if (c2 >= 0 && u++, f3 = f3.dblp(u), c2 < 0)
            break;
          var d = a2[c2];
          s2(0 !== d), f3 = "affine" === e2.type ? d > 0 ? f3.mixedAdd(i2[d - 1 >> 1]) : f3.mixedAdd(i2[-d - 1 >> 1].neg()) : d > 0 ? f3.add(i2[d - 1 >> 1]) : f3.add(i2[-d - 1 >> 1].neg());
        }
        return "affine" === e2.type ? f3.toP() : f3;
      }, f2.prototype._wnafMulAdd = function(e2, t2, r3, n2, i2) {
        var s3, f3, c2, u = this._wnafT1, d = this._wnafT2, h = this._wnafT3, l = 0;
        for (s3 = 0; s3 < n2; s3++) {
          var p = (c2 = t2[s3])._getNAFPoints(e2);
          u[s3] = p.wnd, d[s3] = p.points;
        }
        for (s3 = n2 - 1; s3 >= 1; s3 -= 2) {
          var b = s3 - 1, y = s3;
          if (1 === u[b] && 1 === u[y]) {
            var v = [t2[b], null, null, t2[y]];
            0 === t2[b].y.cmp(t2[y].y) ? (v[1] = t2[b].add(t2[y]), v[2] = t2[b].toJ().mixedAdd(t2[y].neg())) : 0 === t2[b].y.cmp(t2[y].y.redNeg()) ? (v[1] = t2[b].toJ().mixedAdd(t2[y]), v[2] = t2[b].add(t2[y].neg())) : (v[1] = t2[b].toJ().mixedAdd(t2[y]), v[2] = t2[b].toJ().mixedAdd(t2[y].neg()));
            var m = [-3, -1, -5, -7, 0, 7, 5, 1, 3], g = a(r3[b], r3[y]);
            for (l = Math.max(g[0].length, l), h[b] = new Array(l), h[y] = new Array(l), f3 = 0; f3 < l; f3++) {
              var w = 0 | g[0][f3], _ = 0 | g[1][f3];
              h[b][f3] = m[3 * (w + 1) + (_ + 1)], h[y][f3] = 0, d[b] = v;
            }
          } else
            h[b] = o(r3[b], u[b], this._bitLength), h[y] = o(r3[y], u[y], this._bitLength), l = Math.max(h[b].length, l), l = Math.max(h[y].length, l);
        }
        var k = this.jpoint(null, null, null), A = this._wnafT4;
        for (s3 = l; s3 >= 0; s3--) {
          for (var S = 0; s3 >= 0; ) {
            var E = true;
            for (f3 = 0; f3 < n2; f3++)
              A[f3] = 0 | h[f3][s3], 0 !== A[f3] && (E = false);
            if (!E)
              break;
            S++, s3--;
          }
          if (s3 >= 0 && S++, k = k.dblp(S), s3 < 0)
            break;
          for (f3 = 0; f3 < n2; f3++) {
            var x = A[f3];
            0 !== x && (x > 0 ? c2 = d[f3][x - 1 >> 1] : x < 0 && (c2 = d[f3][-x - 1 >> 1].neg()), k = "affine" === c2.type ? k.mixedAdd(c2) : k.add(c2));
          }
        }
        for (s3 = 0; s3 < n2; s3++)
          d[s3] = null;
        return i2 ? k : k.toP();
      }, f2.BasePoint = c, c.prototype.eq = function() {
        throw new Error("Not implemented");
      }, c.prototype.validate = function() {
        return this.curve.validate(this);
      }, f2.prototype.decodePoint = function(e2, t2) {
        e2 = i.toArray(e2, t2);
        var r3 = this.p.byteLength();
        if ((4 === e2[0] || 6 === e2[0] || 7 === e2[0]) && e2.length - 1 == 2 * r3)
          return 6 === e2[0] ? s2(e2[e2.length - 1] % 2 == 0) : 7 === e2[0] && s2(e2[e2.length - 1] % 2 == 1), this.point(e2.slice(1, 1 + r3), e2.slice(1 + r3, 1 + 2 * r3));
        if ((2 === e2[0] || 3 === e2[0]) && e2.length - 1 === r3)
          return this.pointFromX(e2.slice(1, 1 + r3), 3 === e2[0]);
        throw new Error("Unknown point format");
      }, c.prototype.encodeCompressed = function(e2) {
        return this.encode(e2, true);
      }, c.prototype._encode = function(e2) {
        var t2 = this.curve.p.byteLength(), r3 = this.getX().toArray("be", t2);
        return e2 ? [this.getY().isEven() ? 2 : 3].concat(r3) : [4].concat(r3, this.getY().toArray("be", t2));
      }, c.prototype.encode = function(e2, t2) {
        return i.encode(this._encode(t2), e2);
      }, c.prototype.precompute = function(e2) {
        if (this.precomputed)
          return this;
        var t2 = { doubles: null, naf: null, beta: null };
        return t2.naf = this._getNAFPoints(8), t2.doubles = this._getDoubles(4, e2), t2.beta = this._getBeta(), this.precomputed = t2, this;
      }, c.prototype._hasDoubles = function(e2) {
        if (!this.precomputed)
          return false;
        var t2 = this.precomputed.doubles;
        return !!t2 && t2.points.length >= Math.ceil((e2.bitLength() + 1) / t2.step);
      }, c.prototype._getDoubles = function(e2, t2) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        for (var r3 = [this], n2 = this, i2 = 0; i2 < t2; i2 += e2) {
          for (var o2 = 0; o2 < e2; o2++)
            n2 = n2.dbl();
          r3.push(n2);
        }
        return { step: e2, points: r3 };
      }, c.prototype._getNAFPoints = function(e2) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        for (var t2 = [this], r3 = (1 << e2) - 1, n2 = 1 === r3 ? null : this.dbl(), i2 = 1; i2 < r3; i2++)
          t2[i2] = t2[i2 - 1].add(n2);
        return { wnd: e2, points: t2 };
      }, c.prototype._getBeta = function() {
        return null;
      }, c.prototype.dblp = function(e2) {
        for (var t2 = this, r3 = 0; r3 < e2; r3++)
          t2 = t2.dbl();
        return t2;
      };
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.assertIsString = t.assertIsArray = t.assertIsBuffer = t.assertIsHexString = void 0;
        var n = r2(54);
        t.assertIsHexString = function(e3) {
          if (!(0, n.isHexString)(e3)) {
            var t2 = "This method only supports 0x-prefixed hex strings but input was: ".concat(e3);
            throw new Error(t2);
          }
        };
        t.assertIsBuffer = function(t2) {
          if (!e2.isBuffer(t2)) {
            var r3 = "This method only supports Buffer but input was: ".concat(t2);
            throw new Error(r3);
          }
        };
        t.assertIsArray = function(e3) {
          if (!Array.isArray(e3)) {
            var t2 = "This method only supports number arrays but input was: ".concat(e3);
            throw new Error(t2);
          }
        };
        t.assertIsString = function(e3) {
          if ("string" != typeof e3) {
            var t2 = "This method only supports strings but input was: ".concat(e3);
            throw new Error(t2);
          }
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      "function" == typeof Object.create ? e.exports = function(e2, t2) {
        e2.super_ = t2, e2.prototype = Object.create(t2.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } });
      } : e.exports = function(e2, t2) {
        e2.super_ = t2;
        var r3 = function() {
        };
        r3.prototype = t2.prototype, e2.prototype = new r3(), e2.prototype.constructor = e2;
      };
    }, function(e, t, r2) {
      /*
      object-assign
      (c) Sindre Sorhus
      @license MIT
      */
      var n = Object.getOwnPropertySymbols, i = Object.prototype.hasOwnProperty, o = Object.prototype.propertyIsEnumerable;
      function a(e2) {
        if (null == e2)
          throw new TypeError("Object.assign cannot be called with null or undefined");
        return Object(e2);
      }
      e.exports = function() {
        try {
          if (!Object.assign)
            return false;
          var e2 = new String("abc");
          if (e2[5] = "de", "5" === Object.getOwnPropertyNames(e2)[0])
            return false;
          for (var t2 = {}, r3 = 0; r3 < 10; r3++)
            t2["_" + String.fromCharCode(r3)] = r3;
          if ("0123456789" !== Object.getOwnPropertyNames(t2).map(function(e3) {
            return t2[e3];
          }).join(""))
            return false;
          var n2 = {};
          return "abcdefghijklmnopqrst".split("").forEach(function(e3) {
            n2[e3] = e3;
          }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, n2)).join("");
        } catch (e3) {
          return false;
        }
      }() ? Object.assign : function(e2, t2) {
        for (var r3, s2, f2 = a(e2), c = 1; c < arguments.length; c++) {
          for (var u in r3 = Object(arguments[c]))
            i.call(r3, u) && (f2[u] = r3[u]);
          if (n) {
            s2 = n(r3);
            for (var d = 0; d < s2.length; d++)
              o.call(r3, s2[d]) && (f2[s2[d]] = r3[s2[d]]);
          }
        }
        return f2;
      };
    }, function(e, t, r2) {
      var n, i = r2(0)(r2(2));
      function o(e2) {
        this.rand = e2;
      }
      if (e.exports = function(e2) {
        return n || (n = new o(null)), n.generate(e2);
      }, e.exports.Rand = o, o.prototype.generate = function(e2) {
        return this._rand(e2);
      }, o.prototype._rand = function(e2) {
        if (this.rand.getBytes)
          return this.rand.getBytes(e2);
        for (var t2 = new Uint8Array(e2), r3 = 0; r3 < t2.length; r3++)
          t2[r3] = this.rand.getByte();
        return t2;
      }, "object" === ("undefined" == typeof self ? "undefined" : (0, i.default)(self)))
        self.crypto && self.crypto.getRandomValues ? o.prototype._rand = function(e2) {
          var t2 = new Uint8Array(e2);
          return self.crypto.getRandomValues(t2), t2;
        } : self.msCrypto && self.msCrypto.getRandomValues ? o.prototype._rand = function(e2) {
          var t2 = new Uint8Array(e2);
          return self.msCrypto.getRandomValues(t2), t2;
        } : "object" === ("undefined" == typeof window ? "undefined" : (0, i.default)(window)) && (o.prototype._rand = function() {
          throw new Error("Not implemented yet");
        });
      else
        try {
          var a = r2(272);
          if ("function" != typeof a.randomBytes)
            throw new Error("Not supported");
          o.prototype._rand = function(e2) {
            return a.randomBytes(e2);
          };
        } catch (e2) {
        }
    }, function(e, t, r2) {
      var n, i = t, o = r2(72), a = r2(138), s2 = r2(18).assert;
      function f2(e2) {
        "short" === e2.type ? this.curve = new a.short(e2) : "edwards" === e2.type ? this.curve = new a.edwards(e2) : this.curve = new a.mont(e2), this.g = this.curve.g, this.n = this.curve.n, this.hash = e2.hash, s2(this.g.validate(), "Invalid curve"), s2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      function c(e2, t2) {
        Object.defineProperty(i, e2, { configurable: true, enumerable: true, get: function() {
          var r3 = new f2(t2);
          return Object.defineProperty(i, e2, { configurable: true, enumerable: true, value: r3 }), r3;
        } });
      }
      i.PresetCurve = f2, c("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: o.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), c("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: o.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), c("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: o.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), c("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: o.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), c("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: o.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), c("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["9"] }), c("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
      try {
        n = r2(282);
      } catch (e2) {
        n = void 0;
      }
      c("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: o.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n] });
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.rlphash = t.ripemd160FromArray = t.ripemd160FromString = t.ripemd160 = t.sha256FromArray = t.sha256FromString = t.sha256 = t.keccakFromArray = t.keccakFromHexString = t.keccakFromString = t.keccak256 = t.keccak = void 0;
        var n = r2(291), i = r2(47), o = r2(28), a = r2(36), s2 = r2(73);
        t.keccak = function(e3, t2) {
          switch (void 0 === t2 && (t2 = 256), (0, s2.assertIsBuffer)(e3), t2) {
            case 224:
              return (0, n.keccak224)(e3);
            case 256:
              return (0, n.keccak256)(e3);
            case 384:
              return (0, n.keccak384)(e3);
            case 512:
              return (0, n.keccak512)(e3);
            default:
              throw new Error("Invald algorithm: keccak".concat(t2));
          }
        };
        t.keccak256 = function(e3) {
          return (0, t.keccak)(e3);
        };
        t.keccakFromString = function(r3, n2) {
          void 0 === n2 && (n2 = 256), (0, s2.assertIsString)(r3);
          var i2 = e2.from(r3, "utf8");
          return (0, t.keccak)(i2, n2);
        };
        t.keccakFromHexString = function(e3, r3) {
          return void 0 === r3 && (r3 = 256), (0, s2.assertIsHexString)(e3), (0, t.keccak)((0, a.toBuffer)(e3), r3);
        };
        t.keccakFromArray = function(e3, r3) {
          return void 0 === r3 && (r3 = 256), (0, s2.assertIsArray)(e3), (0, t.keccak)((0, a.toBuffer)(e3), r3);
        };
        var f2 = function(e3) {
          return e3 = (0, a.toBuffer)(e3), i("sha256").update(e3).digest();
        };
        t.sha256 = function(e3) {
          return (0, s2.assertIsBuffer)(e3), f2(e3);
        };
        t.sha256FromString = function(e3) {
          return (0, s2.assertIsString)(e3), f2(e3);
        };
        t.sha256FromArray = function(e3) {
          return (0, s2.assertIsArray)(e3), f2(e3);
        };
        var c = function(e3, t2) {
          e3 = (0, a.toBuffer)(e3);
          var r3 = i("rmd160").update(e3).digest();
          return true === t2 ? (0, a.setLengthLeft)(r3, 32) : r3;
        };
        t.ripemd160 = function(e3, t2) {
          return (0, s2.assertIsBuffer)(e3), c(e3, t2);
        };
        t.ripemd160FromString = function(e3, t2) {
          return (0, s2.assertIsString)(e3), c(e3, t2);
        };
        t.ripemd160FromArray = function(e3, t2) {
          return (0, s2.assertIsArray)(e3), c(e3, t2);
        };
        t.rlphash = function(e3) {
          return (0, t.keccak)(o.rlp.encode(e3));
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(45).codes.ERR_STREAM_PREMATURE_CLOSE;
      function i() {
      }
      e.exports = function e2(t2, r3, o) {
        if ("function" == typeof r3)
          return e2(t2, null, r3);
        r3 || (r3 = {}), o = function(e3) {
          var t3 = false;
          return function() {
            if (!t3) {
              t3 = true;
              for (var r4 = arguments.length, n2 = new Array(r4), i2 = 0; i2 < r4; i2++)
                n2[i2] = arguments[i2];
              e3.apply(this, n2);
            }
          };
        }(o || i);
        var a = r3.readable || false !== r3.readable && t2.readable, s2 = r3.writable || false !== r3.writable && t2.writable, f2 = function() {
          t2.writable || u();
        }, c = t2._writableState && t2._writableState.finished, u = function() {
          s2 = false, c = true, a || o.call(t2);
        }, d = t2._readableState && t2._readableState.endEmitted, h = function() {
          a = false, d = true, s2 || o.call(t2);
        }, l = function(e3) {
          o.call(t2, e3);
        }, p = function() {
          var e3;
          return a && !d ? (t2._readableState && t2._readableState.ended || (e3 = new n()), o.call(t2, e3)) : s2 && !c ? (t2._writableState && t2._writableState.ended || (e3 = new n()), o.call(t2, e3)) : void 0;
        }, b = function() {
          t2.req.on("finish", u);
        };
        return !function(e3) {
          return e3.setHeader && "function" == typeof e3.abort;
        }(t2) ? s2 && !t2._writableState && (t2.on("end", f2), t2.on("close", f2)) : (t2.on("complete", u), t2.on("abort", p), t2.req ? b() : t2.on("request", b)), t2.on("end", h), t2.on("finish", u), false !== r3.error && t2.on("error", l), t2.on("close", p), function() {
          t2.removeListener("complete", u), t2.removeListener("abort", p), t2.removeListener("request", b), t2.req && t2.req.removeListener("finish", u), t2.removeListener("end", f2), t2.removeListener("close", f2), t2.removeListener("finish", u), t2.removeListener("end", h), t2.removeListener("error", l), t2.removeListener("close", p);
        };
      };
    }, function(e, t, r2) {
      var n = r2(3), i = r2(151), o = r2(5).Buffer, a = new Array(16);
      function s2() {
        i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
      }
      function f2(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }
      function c(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (t2 & r3 | ~t2 & n2) + i2 + o2 | 0, a2) + t2 | 0;
      }
      function u(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (t2 & n2 | r3 & ~n2) + i2 + o2 | 0, a2) + t2 | 0;
      }
      function d(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (t2 ^ r3 ^ n2) + i2 + o2 | 0, a2) + t2 | 0;
      }
      function h(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (r3 ^ (t2 | ~n2)) + i2 + o2 | 0, a2) + t2 | 0;
      }
      n(s2, i), s2.prototype._update = function() {
        for (var e2 = a, t2 = 0; t2 < 16; ++t2)
          e2[t2] = this._block.readInt32LE(4 * t2);
        var r3 = this._a, n2 = this._b, i2 = this._c, o2 = this._d;
        r3 = c(r3, n2, i2, o2, e2[0], 3614090360, 7), o2 = c(o2, r3, n2, i2, e2[1], 3905402710, 12), i2 = c(i2, o2, r3, n2, e2[2], 606105819, 17), n2 = c(n2, i2, o2, r3, e2[3], 3250441966, 22), r3 = c(r3, n2, i2, o2, e2[4], 4118548399, 7), o2 = c(o2, r3, n2, i2, e2[5], 1200080426, 12), i2 = c(i2, o2, r3, n2, e2[6], 2821735955, 17), n2 = c(n2, i2, o2, r3, e2[7], 4249261313, 22), r3 = c(r3, n2, i2, o2, e2[8], 1770035416, 7), o2 = c(o2, r3, n2, i2, e2[9], 2336552879, 12), i2 = c(i2, o2, r3, n2, e2[10], 4294925233, 17), n2 = c(n2, i2, o2, r3, e2[11], 2304563134, 22), r3 = c(r3, n2, i2, o2, e2[12], 1804603682, 7), o2 = c(o2, r3, n2, i2, e2[13], 4254626195, 12), i2 = c(i2, o2, r3, n2, e2[14], 2792965006, 17), r3 = u(r3, n2 = c(n2, i2, o2, r3, e2[15], 1236535329, 22), i2, o2, e2[1], 4129170786, 5), o2 = u(o2, r3, n2, i2, e2[6], 3225465664, 9), i2 = u(i2, o2, r3, n2, e2[11], 643717713, 14), n2 = u(n2, i2, o2, r3, e2[0], 3921069994, 20), r3 = u(r3, n2, i2, o2, e2[5], 3593408605, 5), o2 = u(o2, r3, n2, i2, e2[10], 38016083, 9), i2 = u(i2, o2, r3, n2, e2[15], 3634488961, 14), n2 = u(n2, i2, o2, r3, e2[4], 3889429448, 20), r3 = u(r3, n2, i2, o2, e2[9], 568446438, 5), o2 = u(o2, r3, n2, i2, e2[14], 3275163606, 9), i2 = u(i2, o2, r3, n2, e2[3], 4107603335, 14), n2 = u(n2, i2, o2, r3, e2[8], 1163531501, 20), r3 = u(r3, n2, i2, o2, e2[13], 2850285829, 5), o2 = u(o2, r3, n2, i2, e2[2], 4243563512, 9), i2 = u(i2, o2, r3, n2, e2[7], 1735328473, 14), r3 = d(r3, n2 = u(n2, i2, o2, r3, e2[12], 2368359562, 20), i2, o2, e2[5], 4294588738, 4), o2 = d(o2, r3, n2, i2, e2[8], 2272392833, 11), i2 = d(i2, o2, r3, n2, e2[11], 1839030562, 16), n2 = d(n2, i2, o2, r3, e2[14], 4259657740, 23), r3 = d(r3, n2, i2, o2, e2[1], 2763975236, 4), o2 = d(o2, r3, n2, i2, e2[4], 1272893353, 11), i2 = d(i2, o2, r3, n2, e2[7], 4139469664, 16), n2 = d(n2, i2, o2, r3, e2[10], 3200236656, 23), r3 = d(r3, n2, i2, o2, e2[13], 681279174, 4), o2 = d(o2, r3, n2, i2, e2[0], 3936430074, 11), i2 = d(i2, o2, r3, n2, e2[3], 3572445317, 16), n2 = d(n2, i2, o2, r3, e2[6], 76029189, 23), r3 = d(r3, n2, i2, o2, e2[9], 3654602809, 4), o2 = d(o2, r3, n2, i2, e2[12], 3873151461, 11), i2 = d(i2, o2, r3, n2, e2[15], 530742520, 16), r3 = h(r3, n2 = d(n2, i2, o2, r3, e2[2], 3299628645, 23), i2, o2, e2[0], 4096336452, 6), o2 = h(o2, r3, n2, i2, e2[7], 1126891415, 10), i2 = h(i2, o2, r3, n2, e2[14], 2878612391, 15), n2 = h(n2, i2, o2, r3, e2[5], 4237533241, 21), r3 = h(r3, n2, i2, o2, e2[12], 1700485571, 6), o2 = h(o2, r3, n2, i2, e2[3], 2399980690, 10), i2 = h(i2, o2, r3, n2, e2[10], 4293915773, 15), n2 = h(n2, i2, o2, r3, e2[1], 2240044497, 21), r3 = h(r3, n2, i2, o2, e2[8], 1873313359, 6), o2 = h(o2, r3, n2, i2, e2[15], 4264355552, 10), i2 = h(i2, o2, r3, n2, e2[6], 2734768916, 15), n2 = h(n2, i2, o2, r3, e2[13], 1309151649, 21), r3 = h(r3, n2, i2, o2, e2[4], 4149444226, 6), o2 = h(o2, r3, n2, i2, e2[11], 3174756917, 10), i2 = h(i2, o2, r3, n2, e2[2], 718787259, 15), n2 = h(n2, i2, o2, r3, e2[9], 3951481745, 21), this._a = this._a + r3 | 0, this._b = this._b + n2 | 0, this._c = this._c + i2 | 0, this._d = this._d + o2 | 0;
      }, s2.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var e2 = o.allocUnsafe(16);
        return e2.writeInt32LE(this._a, 0), e2.writeInt32LE(this._b, 4), e2.writeInt32LE(this._c, 8), e2.writeInt32LE(this._d, 12), e2;
      }, e.exports = s2;
    }, function(e, t, r2) {
      var n = r2(48).codes.ERR_STREAM_PREMATURE_CLOSE;
      function i() {
      }
      e.exports = function e2(t2, r3, o) {
        if ("function" == typeof r3)
          return e2(t2, null, r3);
        r3 || (r3 = {}), o = function(e3) {
          var t3 = false;
          return function() {
            if (!t3) {
              t3 = true;
              for (var r4 = arguments.length, n2 = new Array(r4), i2 = 0; i2 < r4; i2++)
                n2[i2] = arguments[i2];
              e3.apply(this, n2);
            }
          };
        }(o || i);
        var a = r3.readable || false !== r3.readable && t2.readable, s2 = r3.writable || false !== r3.writable && t2.writable, f2 = function() {
          t2.writable || u();
        }, c = t2._writableState && t2._writableState.finished, u = function() {
          s2 = false, c = true, a || o.call(t2);
        }, d = t2._readableState && t2._readableState.endEmitted, h = function() {
          a = false, d = true, s2 || o.call(t2);
        }, l = function(e3) {
          o.call(t2, e3);
        }, p = function() {
          var e3;
          return a && !d ? (t2._readableState && t2._readableState.ended || (e3 = new n()), o.call(t2, e3)) : s2 && !c ? (t2._writableState && t2._writableState.ended || (e3 = new n()), o.call(t2, e3)) : void 0;
        }, b = function() {
          t2.req.on("finish", u);
        };
        return !function(e3) {
          return e3.setHeader && "function" == typeof e3.abort;
        }(t2) ? s2 && !t2._writableState && (t2.on("end", f2), t2.on("close", f2)) : (t2.on("complete", u), t2.on("abort", p), t2.req ? b() : t2.on("request", b)), t2.on("end", h), t2.on("finish", u), false !== r3.error && t2.on("error", l), t2.on("close", p), function() {
          t2.removeListener("complete", u), t2.removeListener("abort", p), t2.removeListener("request", b), t2.req && t2.req.removeListener("finish", u), t2.removeListener("end", f2), t2.removeListener("close", f2), t2.removeListener("finish", u), t2.removeListener("end", h), t2.removeListener("error", l), t2.removeListener("close", p);
        };
      };
    }, function(e, t, r2) {
      var n = r2(1).Buffer, i = r2(3), o = r2(151), a = new Array(16), s2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], f2 = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], c = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], u = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], d = [0, 1518500249, 1859775393, 2400959708, 2840853838], h = [1352829926, 1548603684, 1836072691, 2053994217, 0];
      function l() {
        o.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
      }
      function p(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }
      function b(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 ^ r3 ^ n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function y(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 & r3 | ~t2 & n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function v(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + ((t2 | ~r3) ^ n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function m(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 & n2 | r3 & ~n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function g(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 ^ (r3 | ~n2)) + o2 + a2 | 0, s3) + i2 | 0;
      }
      i(l, o), l.prototype._update = function() {
        for (var e2 = a, t2 = 0; t2 < 16; ++t2)
          e2[t2] = this._block.readInt32LE(4 * t2);
        for (var r3 = 0 | this._a, n2 = 0 | this._b, i2 = 0 | this._c, o2 = 0 | this._d, l2 = 0 | this._e, w = 0 | this._a, _ = 0 | this._b, k = 0 | this._c, A = 0 | this._d, S = 0 | this._e, E = 0; E < 80; E += 1) {
          var x, P;
          E < 16 ? (x = b(r3, n2, i2, o2, l2, e2[s2[E]], d[0], c[E]), P = g(w, _, k, A, S, e2[f2[E]], h[0], u[E])) : E < 32 ? (x = y(r3, n2, i2, o2, l2, e2[s2[E]], d[1], c[E]), P = m(w, _, k, A, S, e2[f2[E]], h[1], u[E])) : E < 48 ? (x = v(r3, n2, i2, o2, l2, e2[s2[E]], d[2], c[E]), P = v(w, _, k, A, S, e2[f2[E]], h[2], u[E])) : E < 64 ? (x = m(r3, n2, i2, o2, l2, e2[s2[E]], d[3], c[E]), P = y(w, _, k, A, S, e2[f2[E]], h[3], u[E])) : (x = g(r3, n2, i2, o2, l2, e2[s2[E]], d[4], c[E]), P = b(w, _, k, A, S, e2[f2[E]], h[4], u[E])), r3 = l2, l2 = o2, o2 = p(i2, 10), i2 = n2, n2 = x, w = S, S = A, A = p(k, 10), k = _, _ = P;
        }
        var O = this._b + i2 + A | 0;
        this._b = this._c + o2 + S | 0, this._c = this._d + l2 + w | 0, this._d = this._e + r3 + _ | 0, this._e = this._a + n2 + k | 0, this._a = O;
      }, l.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var e2 = n.alloc ? n.alloc(20) : new n(20);
        return e2.writeInt32LE(this._a, 0), e2.writeInt32LE(this._b, 4), e2.writeInt32LE(this._c, 8), e2.writeInt32LE(this._d, 12), e2.writeInt32LE(this._e, 16), e2;
      }, e.exports = l;
    }, function(e, t, r2) {
      var n = e.exports = function(e2) {
        e2 = e2.toLowerCase();
        var t2 = n[e2];
        if (!t2)
          throw new Error(e2 + " is not supported (we accept pull requests)");
        return new t2();
      };
      n.sha = r2(314), n.sha1 = r2(315), n.sha224 = r2(316), n.sha256 = r2(158), n.sha384 = r2(317), n.sha512 = r2(159);
    }, function(e, t, r2) {
      var n = r2(1), i = n.Buffer;
      function o(e2, t2) {
        for (var r3 in e2)
          t2[r3] = e2[r3];
      }
      function a(e2, t2, r3) {
        return i(e2, t2, r3);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (o(n, t), t.Buffer = a), o(i, a), a.from = function(e2, t2, r3) {
        if ("number" == typeof e2)
          throw new TypeError("Argument must not be a number");
        return i(e2, t2, r3);
      }, a.alloc = function(e2, t2, r3) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        var n2 = i(e2);
        return void 0 !== t2 ? "string" == typeof r3 ? n2.fill(t2, r3) : n2.fill(t2) : n2.fill(0), n2;
      }, a.allocUnsafe = function(e2) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        return i(e2);
      }, a.allocUnsafeSlow = function(e2) {
        if ("number" != typeof e2)
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(e2);
      };
    }, function(e, t, r2) {
      (function(t2, n, i) {
        var o = r2(75);
        function a(e2) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e3, t4, r3) {
              var n2 = e3.entry;
              e3.entry = null;
              for (; n2; ) {
                var i2 = n2.callback;
                t4.pendingcb--, i2(r3), n2 = n2.next;
              }
              t4.corkedRequestsFree ? t4.corkedRequestsFree.next = e3 : t4.corkedRequestsFree = e3;
            }(t3, e2);
          };
        }
        e.exports = m;
        var s2, f2 = !t2.browser && ["v0.10", "v0.9."].indexOf(t2.version.slice(0, 5)) > -1 ? n : o.nextTick;
        m.WritableState = v;
        var c = Object.create(r2(62));
        c.inherits = r2(3);
        var u = { deprecate: r2(74) }, d = r2(162), h = r2(101).Buffer, l = i.Uint8Array || function() {
        };
        var p, b = r2(163);
        function y() {
        }
        function v(e2, t3) {
          s2 = s2 || r2(37), e2 = e2 || {};
          var n2 = t3 instanceof s2;
          this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.writableObjectMode);
          var i2 = e2.highWaterMark, c2 = e2.writableHighWaterMark, u2 = this.objectMode ? 16 : 16384;
          this.highWaterMark = i2 || 0 === i2 ? i2 : n2 && (c2 || 0 === c2) ? c2 : u2, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var d2 = false === e2.decodeStrings;
          this.decodeStrings = !d2, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
            !function(e4, t4) {
              var r3 = e4._writableState, n3 = r3.sync, i3 = r3.writecb;
              if (function(e5) {
                e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
              }(r3), t4)
                !function(e5, t5, r4, n4, i4) {
                  --t5.pendingcb, r4 ? (o.nextTick(i4, n4), o.nextTick(S, e5, t5), e5._writableState.errorEmitted = true, e5.emit("error", n4)) : (i4(n4), e5._writableState.errorEmitted = true, e5.emit("error", n4), S(e5, t5));
                }(e4, r3, n3, t4, i3);
              else {
                var a2 = k(r3);
                a2 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || _(e4, r3), n3 ? f2(w, e4, r3, a2, i3) : w(e4, r3, a2, i3);
              }
            }(t3, e3);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.bufferedRequestCount = 0, this.corkedRequestsFree = new a(this);
        }
        function m(e2) {
          if (s2 = s2 || r2(37), !(p.call(m, this) || this instanceof s2))
            return new m(e2);
          this._writableState = new v(e2, this), this.writable = true, e2 && ("function" == typeof e2.write && (this._write = e2.write), "function" == typeof e2.writev && (this._writev = e2.writev), "function" == typeof e2.destroy && (this._destroy = e2.destroy), "function" == typeof e2.final && (this._final = e2.final)), d.call(this);
        }
        function g(e2, t3, r3, n2, i2, o2, a2) {
          t3.writelen = n2, t3.writecb = a2, t3.writing = true, t3.sync = true, r3 ? e2._writev(i2, t3.onwrite) : e2._write(i2, o2, t3.onwrite), t3.sync = false;
        }
        function w(e2, t3, r3, n2) {
          r3 || function(e3, t4) {
            0 === t4.length && t4.needDrain && (t4.needDrain = false, e3.emit("drain"));
          }(e2, t3), t3.pendingcb--, n2(), S(e2, t3);
        }
        function _(e2, t3) {
          t3.bufferProcessing = true;
          var r3 = t3.bufferedRequest;
          if (e2._writev && r3 && r3.next) {
            var n2 = t3.bufferedRequestCount, i2 = new Array(n2), o2 = t3.corkedRequestsFree;
            o2.entry = r3;
            for (var s3 = 0, f3 = true; r3; )
              i2[s3] = r3, r3.isBuf || (f3 = false), r3 = r3.next, s3 += 1;
            i2.allBuffers = f3, g(e2, t3, true, t3.length, i2, "", o2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, o2.next ? (t3.corkedRequestsFree = o2.next, o2.next = null) : t3.corkedRequestsFree = new a(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r3; ) {
              var c2 = r3.chunk, u2 = r3.encoding, d2 = r3.callback;
              if (g(e2, t3, false, t3.objectMode ? 1 : c2.length, c2, u2, d2), r3 = r3.next, t3.bufferedRequestCount--, t3.writing)
                break;
            }
            null === r3 && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r3, t3.bufferProcessing = false;
        }
        function k(e2) {
          return e2.ending && 0 === e2.length && null === e2.bufferedRequest && !e2.finished && !e2.writing;
        }
        function A(e2, t3) {
          e2._final(function(r3) {
            t3.pendingcb--, r3 && e2.emit("error", r3), t3.prefinished = true, e2.emit("prefinish"), S(e2, t3);
          });
        }
        function S(e2, t3) {
          var r3 = k(t3);
          return r3 && (!function(e3, t4) {
            t4.prefinished || t4.finalCalled || ("function" == typeof e3._final ? (t4.pendingcb++, t4.finalCalled = true, o.nextTick(A, e3, t4)) : (t4.prefinished = true, e3.emit("prefinish")));
          }(e2, t3), 0 === t3.pendingcb && (t3.finished = true, e2.emit("finish"))), r3;
        }
        c.inherits(m, d), v.prototype.getBuffer = function() {
          for (var e2 = this.bufferedRequest, t3 = []; e2; )
            t3.push(e2), e2 = e2.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(v.prototype, "buffer", { get: u.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch (e2) {
          }
        }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (p = Function.prototype[Symbol.hasInstance], Object.defineProperty(m, Symbol.hasInstance, { value: function(e2) {
          return !!p.call(this, e2) || this === m && (e2 && e2._writableState instanceof v);
        } })) : p = function(e2) {
          return e2 instanceof this;
        }, m.prototype.pipe = function() {
          this.emit("error", new Error("Cannot pipe, not readable"));
        }, m.prototype.write = function(e2, t3, r3) {
          var n2, i2 = this._writableState, a2 = false, s3 = !i2.objectMode && (n2 = e2, h.isBuffer(n2) || n2 instanceof l);
          return s3 && !h.isBuffer(e2) && (e2 = function(e3) {
            return h.from(e3);
          }(e2)), "function" == typeof t3 && (r3 = t3, t3 = null), s3 ? t3 = "buffer" : t3 || (t3 = i2.defaultEncoding), "function" != typeof r3 && (r3 = y), i2.ended ? function(e3, t4) {
            var r4 = new Error("write after end");
            e3.emit("error", r4), o.nextTick(t4, r4);
          }(this, r3) : (s3 || function(e3, t4, r4, n3) {
            var i3 = true, a3 = false;
            return null === r4 ? a3 = new TypeError("May not write null values to stream") : "string" == typeof r4 || void 0 === r4 || t4.objectMode || (a3 = new TypeError("Invalid non-string/buffer chunk")), a3 && (e3.emit("error", a3), o.nextTick(n3, a3), i3 = false), i3;
          }(this, i2, e2, r3)) && (i2.pendingcb++, a2 = function(e3, t4, r4, n3, i3, o2) {
            if (!r4) {
              var a3 = function(e4, t5, r5) {
                e4.objectMode || false === e4.decodeStrings || "string" != typeof t5 || (t5 = h.from(t5, r5));
                return t5;
              }(t4, n3, i3);
              n3 !== a3 && (r4 = true, i3 = "buffer", n3 = a3);
            }
            var s4 = t4.objectMode ? 1 : n3.length;
            t4.length += s4;
            var f3 = t4.length < t4.highWaterMark;
            f3 || (t4.needDrain = true);
            if (t4.writing || t4.corked) {
              var c2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = { chunk: n3, encoding: i3, isBuf: r4, callback: o2, next: null }, c2 ? c2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else
              g(e3, t4, false, s4, n3, i3, o2);
            return f3;
          }(this, i2, s3, e2, t3, r3)), a2;
        }, m.prototype.cork = function() {
          this._writableState.corked++;
        }, m.prototype.uncork = function() {
          var e2 = this._writableState;
          e2.corked && (e2.corked--, e2.writing || e2.corked || e2.finished || e2.bufferProcessing || !e2.bufferedRequest || _(this, e2));
        }, m.prototype.setDefaultEncoding = function(e2) {
          if ("string" == typeof e2 && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
            throw new TypeError("Unknown encoding: " + e2);
          return this._writableState.defaultEncoding = e2, this;
        }, Object.defineProperty(m.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), m.prototype._write = function(e2, t3, r3) {
          r3(new Error("_write() is not implemented"));
        }, m.prototype._writev = null, m.prototype.end = function(e2, t3, r3) {
          var n2 = this._writableState;
          "function" == typeof e2 ? (r3 = e2, e2 = null, t3 = null) : "function" == typeof t3 && (r3 = t3, t3 = null), null != e2 && this.write(e2, t3), n2.corked && (n2.corked = 1, this.uncork()), n2.ending || n2.finished || function(e3, t4, r4) {
            t4.ending = true, S(e3, t4), r4 && (t4.finished ? o.nextTick(r4) : e3.once("finish", r4));
            t4.ended = true, e3.writable = false;
          }(this, n2, r3);
        }, Object.defineProperty(m.prototype, "destroyed", { get: function() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function(e2) {
          this._writableState && (this._writableState.destroyed = e2);
        } }), m.prototype.destroy = b.destroy, m.prototype._undestroy = b.undestroy, m.prototype._destroy = function(e2, t3) {
          this.end(), t3(e2);
        };
      }).call(this, r2(6), r2(164).setImmediate, r2(7));
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.toType = t.TypeOutput = t.bnToRlp = t.bnToUnpaddedBuffer = t.bnToHex = void 0;
        var n, i = r2(28), o = r2(44), a = r2(36);
        function s2(t2) {
          return (0, a.unpadBuffer)(t2.toArrayLike(e2));
        }
        t.bnToHex = function(e3) {
          return "0x".concat(e3.toString(16));
        }, t.bnToUnpaddedBuffer = s2, t.bnToRlp = function(e3) {
          return s2(e3);
        }, function(e3) {
          e3[e3.Number = 0] = "Number", e3[e3.BN = 1] = "BN", e3[e3.Buffer = 2] = "Buffer", e3[e3.PrefixedHexString = 3] = "PrefixedHexString";
        }(n = t.TypeOutput || (t.TypeOutput = {})), t.toType = function(e3, t2) {
          if (null === e3)
            return null;
          if (void 0 !== e3) {
            if ("string" == typeof e3 && !(0, o.isHexString)(e3))
              throw new Error("A string must be provided with a 0x-prefix, given: ".concat(e3));
            if ("number" == typeof e3 && !Number.isSafeInteger(e3))
              throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
            var r3 = (0, a.toBuffer)(e3);
            if (t2 === n.Buffer)
              return r3;
            if (t2 === n.BN)
              return new i.BN(r3);
            if (t2 === n.Number) {
              var s3 = new i.BN(r3), f2 = new i.BN(Number.MAX_SAFE_INTEGER.toString());
              if (s3.gt(f2))
                throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");
              return s3.toNumber();
            }
            return "0x".concat(r3.toString("hex"));
          }
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = Object.prototype.hasOwnProperty, i = "~";
      function o() {
      }
      function a(e2, t2, r3) {
        this.fn = e2, this.context = t2, this.once = r3 || false;
      }
      function s2(e2, t2, r3, n2, o2) {
        if ("function" != typeof r3)
          throw new TypeError("The listener must be a function");
        var s3 = new a(r3, n2 || e2, o2), f3 = i ? i + t2 : t2;
        return e2._events[f3] ? e2._events[f3].fn ? e2._events[f3] = [e2._events[f3], s3] : e2._events[f3].push(s3) : (e2._events[f3] = s3, e2._eventsCount++), e2;
      }
      function f2(e2, t2) {
        0 == --e2._eventsCount ? e2._events = new o() : delete e2._events[t2];
      }
      function c() {
        this._events = new o(), this._eventsCount = 0;
      }
      Object.create && (o.prototype = /* @__PURE__ */ Object.create(null), new o().__proto__ || (i = false)), c.prototype.eventNames = function() {
        var e2, t2, r3 = [];
        if (0 === this._eventsCount)
          return r3;
        for (t2 in e2 = this._events)
          n.call(e2, t2) && r3.push(i ? t2.slice(1) : t2);
        return Object.getOwnPropertySymbols ? r3.concat(Object.getOwnPropertySymbols(e2)) : r3;
      }, c.prototype.listeners = function(e2) {
        var t2 = i ? i + e2 : e2, r3 = this._events[t2];
        if (!r3)
          return [];
        if (r3.fn)
          return [r3.fn];
        for (var n2 = 0, o2 = r3.length, a2 = new Array(o2); n2 < o2; n2++)
          a2[n2] = r3[n2].fn;
        return a2;
      }, c.prototype.listenerCount = function(e2) {
        var t2 = i ? i + e2 : e2, r3 = this._events[t2];
        return r3 ? r3.fn ? 1 : r3.length : 0;
      }, c.prototype.emit = function(e2, t2, r3, n2, o2, a2) {
        var s3 = i ? i + e2 : e2;
        if (!this._events[s3])
          return false;
        var f3, c2, u = this._events[s3], d = arguments.length;
        if (u.fn) {
          switch (u.once && this.removeListener(e2, u.fn, void 0, true), d) {
            case 1:
              return u.fn.call(u.context), true;
            case 2:
              return u.fn.call(u.context, t2), true;
            case 3:
              return u.fn.call(u.context, t2, r3), true;
            case 4:
              return u.fn.call(u.context, t2, r3, n2), true;
            case 5:
              return u.fn.call(u.context, t2, r3, n2, o2), true;
            case 6:
              return u.fn.call(u.context, t2, r3, n2, o2, a2), true;
          }
          for (c2 = 1, f3 = new Array(d - 1); c2 < d; c2++)
            f3[c2 - 1] = arguments[c2];
          u.fn.apply(u.context, f3);
        } else {
          var h, l = u.length;
          for (c2 = 0; c2 < l; c2++)
            switch (u[c2].once && this.removeListener(e2, u[c2].fn, void 0, true), d) {
              case 1:
                u[c2].fn.call(u[c2].context);
                break;
              case 2:
                u[c2].fn.call(u[c2].context, t2);
                break;
              case 3:
                u[c2].fn.call(u[c2].context, t2, r3);
                break;
              case 4:
                u[c2].fn.call(u[c2].context, t2, r3, n2);
                break;
              default:
                if (!f3)
                  for (h = 1, f3 = new Array(d - 1); h < d; h++)
                    f3[h - 1] = arguments[h];
                u[c2].fn.apply(u[c2].context, f3);
            }
        }
        return true;
      }, c.prototype.on = function(e2, t2, r3) {
        return s2(this, e2, t2, r3, false);
      }, c.prototype.once = function(e2, t2, r3) {
        return s2(this, e2, t2, r3, true);
      }, c.prototype.removeListener = function(e2, t2, r3, n2) {
        var o2 = i ? i + e2 : e2;
        if (!this._events[o2])
          return this;
        if (!t2)
          return f2(this, o2), this;
        var a2 = this._events[o2];
        if (a2.fn)
          a2.fn !== t2 || n2 && !a2.once || r3 && a2.context !== r3 || f2(this, o2);
        else {
          for (var s3 = 0, c2 = [], u = a2.length; s3 < u; s3++)
            (a2[s3].fn !== t2 || n2 && !a2[s3].once || r3 && a2[s3].context !== r3) && c2.push(a2[s3]);
          c2.length ? this._events[o2] = 1 === c2.length ? c2[0] : c2 : f2(this, o2);
        }
        return this;
      }, c.prototype.removeAllListeners = function(e2) {
        var t2;
        return e2 ? (t2 = i ? i + e2 : e2, this._events[t2] && f2(this, t2)) : (this._events = new o(), this._eventsCount = 0), this;
      }, c.prototype.off = c.prototype.removeListener, c.prototype.addListener = c.prototype.on, c.prefixed = i, c.EventEmitter = c, e.exports = c;
    }, function(e, t, r2) {
      function n(e2, t2, r3, n2, i, o, a) {
        try {
          var s2 = e2[o](a), f2 = s2.value;
        } catch (e3) {
          return void r3(e3);
        }
        s2.done ? t2(f2) : Promise.resolve(f2).then(n2, i);
      }
      e.exports = function(e2) {
        return function() {
          var t2 = this, r3 = arguments;
          return new Promise(function(i, o) {
            var a = e2.apply(t2, r3);
            function s2(e3) {
              n(a, i, o, s2, f2, "next", e3);
            }
            function f2(e3) {
              n(a, i, o, s2, f2, "throw", e3);
            }
            s2(void 0);
          });
        };
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "AddressZero", { enumerable: true, get: function() {
        return n.AddressZero;
      } }), Object.defineProperty(t, "EtherSymbol", { enumerable: true, get: function() {
        return a.EtherSymbol;
      } }), Object.defineProperty(t, "HashZero", { enumerable: true, get: function() {
        return o.HashZero;
      } }), Object.defineProperty(t, "MaxInt256", { enumerable: true, get: function() {
        return i.MaxInt256;
      } }), Object.defineProperty(t, "MaxUint256", { enumerable: true, get: function() {
        return i.MaxUint256;
      } }), Object.defineProperty(t, "MinInt256", { enumerable: true, get: function() {
        return i.MinInt256;
      } }), Object.defineProperty(t, "NegativeOne", { enumerable: true, get: function() {
        return i.NegativeOne;
      } }), Object.defineProperty(t, "One", { enumerable: true, get: function() {
        return i.One;
      } }), Object.defineProperty(t, "Two", { enumerable: true, get: function() {
        return i.Two;
      } }), Object.defineProperty(t, "WeiPerEther", { enumerable: true, get: function() {
        return i.WeiPerEther;
      } }), Object.defineProperty(t, "Zero", { enumerable: true, get: function() {
        return i.Zero;
      } });
      var n = r2(366), i = r2(367), o = r2(368), a = r2(369);
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.ParamType = t.FunctionFragment = t.Fragment = t.FormatTypes = t.EventFragment = t.ErrorFragment = t.ConstructorFragment = void 0;
      var i = n(r2(14)), o = n(r2(15)), a = n(r2(13)), s2 = n(r2(8)), f2 = n(r2(9)), c = r2(33), u = r2(40), d = r2(16), h = r2(64);
      function l(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, a.default)(e2);
          if (t2) {
            var i2 = (0, a.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, o.default)(this, r3);
        };
      }
      var p = new d.Logger(h.version), b = {}, y = { calldata: true, memory: true, storage: true }, v = { calldata: true, memory: true };
      function m(e2, t2) {
        if ("bytes" === e2 || "string" === e2) {
          if (y[t2])
            return true;
        } else if ("address" === e2) {
          if ("payable" === t2)
            return true;
        } else if ((e2.indexOf("[") >= 0 || "tuple" === e2) && v[t2])
          return true;
        return (y[t2] || "payable" === t2) && p.throwArgumentError("invalid modifier", "name", t2), false;
      }
      function g(e2, t2) {
        for (var r3 in t2)
          (0, u.defineReadOnly)(e2, r3, t2[r3]);
      }
      var w = Object.freeze({ sighash: "sighash", minimal: "minimal", full: "full", json: "json" });
      t.FormatTypes = w;
      var _ = new RegExp(/^(.*)\[([0-9]*)\]$/), k = function() {
        function e2(t2, r3) {
          (0, s2.default)(this, e2), t2 !== b && p.throwError("use fromString", d.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new ParamType()" }), g(this, r3);
          var n2 = this.type.match(_);
          g(this, n2 ? { arrayLength: parseInt(n2[2] || "-1"), arrayChildren: e2.fromObject({ type: n2[1], components: this.components }), baseType: "array" } : { arrayLength: null, arrayChildren: null, baseType: null != this.components ? "tuple" : this.type }), this._isParamType = true, Object.freeze(this);
        }
        return (0, f2.default)(e2, [{ key: "format", value: function(e3) {
          if (e3 || (e3 = w.sighash), w[e3] || p.throwArgumentError("invalid format type", "format", e3), e3 === w.json) {
            var t2 = { type: "tuple" === this.baseType ? "tuple" : this.type, name: this.name || void 0 };
            return "boolean" == typeof this.indexed && (t2.indexed = this.indexed), this.components && (t2.components = this.components.map(function(t3) {
              return JSON.parse(t3.format(e3));
            })), JSON.stringify(t2);
          }
          var r3 = "";
          return "array" === this.baseType ? (r3 += this.arrayChildren.format(e3), r3 += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : "tuple" === this.baseType ? (e3 !== w.sighash && (r3 += this.type), r3 += "(" + this.components.map(function(t3) {
            return t3.format(e3);
          }).join(e3 === w.full ? ", " : ",") + ")") : r3 += this.type, e3 !== w.sighash && (true === this.indexed && (r3 += " indexed"), e3 === w.full && this.name && (r3 += " " + this.name)), r3;
        } }], [{ key: "from", value: function(t2, r3) {
          return "string" == typeof t2 ? e2.fromString(t2, r3) : e2.fromObject(t2);
        } }, { key: "fromObject", value: function(t2) {
          return e2.isParamType(t2) ? t2 : new e2(b, { name: t2.name || null, type: I(t2.type), indexed: null == t2.indexed ? null : !!t2.indexed, components: t2.components ? t2.components.map(e2.fromObject) : null });
        } }, { key: "fromString", value: function(t2, r3) {
          return function(t3) {
            return e2.fromObject({ name: t3.name, type: t3.type, indexed: t3.indexed, components: t3.components });
          }(function(e3, t3) {
            var r4 = e3;
            function n2(t4) {
              p.throwArgumentError("unexpected character at position ".concat(t4), "param", e3);
            }
            function i2(e4) {
              var r5 = { type: "", name: "", parent: e4, state: { allowType: true } };
              return t3 && (r5.indexed = false), r5;
            }
            e3 = e3.replace(/\s/g, " ");
            for (var o2 = { type: "", name: "", state: { allowType: true } }, a2 = o2, s3 = 0; s3 < e3.length; s3++) {
              var f3 = e3[s3];
              switch (f3) {
                case "(":
                  a2.state.allowType && "" === a2.type ? a2.type = "tuple" : a2.state.allowParams || n2(s3), a2.state.allowType = false, a2.type = I(a2.type), a2.components = [i2(a2)], a2 = a2.components[0];
                  break;
                case ")":
                  delete a2.state, "indexed" === a2.name && (t3 || n2(s3), a2.indexed = true, a2.name = ""), m(a2.type, a2.name) && (a2.name = ""), a2.type = I(a2.type);
                  var c2 = a2;
                  (a2 = a2.parent) || n2(s3), delete c2.parent, a2.state.allowParams = false, a2.state.allowName = true, a2.state.allowArray = true;
                  break;
                case ",":
                  delete a2.state, "indexed" === a2.name && (t3 || n2(s3), a2.indexed = true, a2.name = ""), m(a2.type, a2.name) && (a2.name = ""), a2.type = I(a2.type);
                  var u2 = i2(a2.parent);
                  a2.parent.components.push(u2), delete a2.parent, a2 = u2;
                  break;
                case " ":
                  a2.state.allowType && "" !== a2.type && (a2.type = I(a2.type), delete a2.state.allowType, a2.state.allowName = true, a2.state.allowParams = true), a2.state.allowName && "" !== a2.name && ("indexed" === a2.name ? (t3 || n2(s3), a2.indexed && n2(s3), a2.indexed = true, a2.name = "") : m(a2.type, a2.name) ? a2.name = "" : a2.state.allowName = false);
                  break;
                case "[":
                  a2.state.allowArray || n2(s3), a2.type += f3, a2.state.allowArray = false, a2.state.allowName = false, a2.state.readArray = true;
                  break;
                case "]":
                  a2.state.readArray || n2(s3), a2.type += f3, a2.state.readArray = false, a2.state.allowArray = true, a2.state.allowName = true;
                  break;
                default:
                  a2.state.allowType ? (a2.type += f3, a2.state.allowParams = true, a2.state.allowArray = true) : a2.state.allowName ? (a2.name += f3, delete a2.state.allowArray) : a2.state.readArray ? a2.type += f3 : n2(s3);
              }
            }
            return a2.parent && p.throwArgumentError("unexpected eof", "param", e3), delete o2.state, "indexed" === a2.name ? (t3 || n2(r4.length - 7), a2.indexed && n2(r4.length - 7), a2.indexed = true, a2.name = "") : m(a2.type, a2.name) && (a2.name = ""), o2.type = I(o2.type), o2;
          }(t2, !!r3));
        } }, { key: "isParamType", value: function(e3) {
          return !(null == e3 || !e3._isParamType);
        } }]), e2;
      }();
      function A(e2, t2) {
        return function(e3) {
          e3 = e3.trim();
          for (var t3 = [], r3 = "", n2 = 0, i2 = 0; i2 < e3.length; i2++) {
            var o2 = e3[i2];
            "," === o2 && 0 === n2 ? (t3.push(r3), r3 = "") : (r3 += o2, "(" === o2 ? n2++ : ")" === o2 && -1 === --n2 && p.throwArgumentError("unbalanced parenthesis", "value", e3));
          }
          r3 && t3.push(r3);
          return t3;
        }(e2).map(function(e3) {
          return k.fromString(e3, t2);
        });
      }
      t.ParamType = k;
      var S = function() {
        function e2(t2, r3) {
          (0, s2.default)(this, e2), t2 !== b && p.throwError("use a static from method", d.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new Fragment()" }), g(this, r3), this._isFragment = true, Object.freeze(this);
        }
        return (0, f2.default)(e2, null, [{ key: "from", value: function(t2) {
          return e2.isFragment(t2) ? t2 : "string" == typeof t2 ? e2.fromString(t2) : e2.fromObject(t2);
        } }, { key: "fromObject", value: function(t2) {
          if (e2.isFragment(t2))
            return t2;
          switch (t2.type) {
            case "function":
              return B.fromObject(t2);
            case "event":
              return E.fromObject(t2);
            case "constructor":
              return T.fromObject(t2);
            case "error":
              return R.fromObject(t2);
            case "fallback":
            case "receive":
              return null;
          }
          return p.throwArgumentError("invalid fragment object", "value", t2);
        } }, { key: "fromString", value: function(e3) {
          return "event" === (e3 = (e3 = (e3 = e3.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? E.fromString(e3.substring(5).trim()) : "function" === e3.split(" ")[0] ? B.fromString(e3.substring(8).trim()) : "constructor" === e3.split("(")[0].trim() ? T.fromString(e3.trim()) : "error" === e3.split(" ")[0] ? R.fromString(e3.substring(5).trim()) : p.throwArgumentError("unsupported fragment", "value", e3);
        } }, { key: "isFragment", value: function(e3) {
          return !(!e3 || !e3._isFragment);
        } }]), e2;
      }();
      t.Fragment = S;
      var E = function(e2) {
        (0, i.default)(r3, e2);
        var t2 = l(r3);
        function r3() {
          return (0, s2.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, f2.default)(r3, [{ key: "format", value: function(e3) {
          if (e3 || (e3 = w.sighash), w[e3] || p.throwArgumentError("invalid format type", "format", e3), e3 === w.json)
            return JSON.stringify({ type: "event", anonymous: this.anonymous, name: this.name, inputs: this.inputs.map(function(t4) {
              return JSON.parse(t4.format(e3));
            }) });
          var t3 = "";
          return e3 !== w.sighash && (t3 += "event "), t3 += this.name + "(" + this.inputs.map(function(t4) {
            return t4.format(e3);
          }).join(e3 === w.full ? ", " : ",") + ") ", e3 !== w.sighash && this.anonymous && (t3 += "anonymous "), t3.trim();
        } }], [{ key: "from", value: function(e3) {
          return "string" == typeof e3 ? r3.fromString(e3) : r3.fromObject(e3);
        } }, { key: "fromObject", value: function(e3) {
          if (r3.isEventFragment(e3))
            return e3;
          "event" !== e3.type && p.throwArgumentError("invalid event object", "value", e3);
          var t3 = { name: U(e3.name), anonymous: e3.anonymous, inputs: e3.inputs ? e3.inputs.map(k.fromObject) : [], type: "event" };
          return new r3(b, t3);
        } }, { key: "fromString", value: function(e3) {
          var t3 = e3.match(j);
          t3 || p.throwArgumentError("invalid event string", "value", e3);
          var n2 = false;
          return t3[3].split(" ").forEach(function(e4) {
            switch (e4.trim()) {
              case "anonymous":
                n2 = true;
                break;
              case "":
                break;
              default:
                p.warn("unknown modifier: " + e4);
            }
          }), r3.fromObject({ name: t3[1].trim(), anonymous: n2, inputs: A(t3[2], true), type: "event" });
        } }, { key: "isEventFragment", value: function(e3) {
          return e3 && e3._isFragment && "event" === e3.type;
        } }]), r3;
      }(S);
      function x(e2, t2) {
        t2.gas = null;
        var r3 = e2.split("@");
        return 1 !== r3.length ? (r3.length > 2 && p.throwArgumentError("invalid human-readable ABI signature", "value", e2), r3[1].match(/^[0-9]+$/) || p.throwArgumentError("invalid human-readable ABI signature gas", "value", e2), t2.gas = c.BigNumber.from(r3[1]), r3[0]) : e2;
      }
      function P(e2, t2) {
        t2.constant = false, t2.payable = false, t2.stateMutability = "nonpayable", e2.split(" ").forEach(function(e3) {
          switch (e3.trim()) {
            case "constant":
              t2.constant = true;
              break;
            case "payable":
              t2.payable = true, t2.stateMutability = "payable";
              break;
            case "nonpayable":
              t2.payable = false, t2.stateMutability = "nonpayable";
              break;
            case "pure":
              t2.constant = true, t2.stateMutability = "pure";
              break;
            case "view":
              t2.constant = true, t2.stateMutability = "view";
              break;
            case "external":
            case "public":
            case "":
              break;
            default:
              console.log("unknown modifier: " + e3);
          }
        });
      }
      function O(e2) {
        var t2 = { constant: false, payable: true, stateMutability: "payable" };
        return null != e2.stateMutability ? (t2.stateMutability = e2.stateMutability, t2.constant = "view" === t2.stateMutability || "pure" === t2.stateMutability, null != e2.constant && !!e2.constant !== t2.constant && p.throwArgumentError("cannot have constant function with mutability " + t2.stateMutability, "value", e2), t2.payable = "payable" === t2.stateMutability, null != e2.payable && !!e2.payable !== t2.payable && p.throwArgumentError("cannot have payable function with mutability " + t2.stateMutability, "value", e2)) : null != e2.payable ? (t2.payable = !!e2.payable, null != e2.constant || t2.payable || "constructor" === e2.type || p.throwArgumentError("unable to determine stateMutability", "value", e2), t2.constant = !!e2.constant, t2.constant ? t2.stateMutability = "view" : t2.stateMutability = t2.payable ? "payable" : "nonpayable", t2.payable && t2.constant && p.throwArgumentError("cannot have constant payable function", "value", e2)) : null != e2.constant ? (t2.constant = !!e2.constant, t2.payable = !t2.constant, t2.stateMutability = t2.constant ? "view" : "payable") : "constructor" !== e2.type && p.throwArgumentError("unable to determine stateMutability", "value", e2), t2;
      }
      t.EventFragment = E;
      var T = function(e2) {
        (0, i.default)(r3, e2);
        var t2 = l(r3);
        function r3() {
          return (0, s2.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, f2.default)(r3, [{ key: "format", value: function(e3) {
          if (e3 || (e3 = w.sighash), w[e3] || p.throwArgumentError("invalid format type", "format", e3), e3 === w.json)
            return JSON.stringify({ type: "constructor", stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0, payable: this.payable, gas: this.gas ? this.gas.toNumber() : void 0, inputs: this.inputs.map(function(t4) {
              return JSON.parse(t4.format(e3));
            }) });
          e3 === w.sighash && p.throwError("cannot format a constructor for sighash", d.Logger.errors.UNSUPPORTED_OPERATION, { operation: "format(sighash)" });
          var t3 = "constructor(" + this.inputs.map(function(t4) {
            return t4.format(e3);
          }).join(e3 === w.full ? ", " : ",") + ") ";
          return this.stateMutability && "nonpayable" !== this.stateMutability && (t3 += this.stateMutability + " "), t3.trim();
        } }], [{ key: "from", value: function(e3) {
          return "string" == typeof e3 ? r3.fromString(e3) : r3.fromObject(e3);
        } }, { key: "fromObject", value: function(e3) {
          if (r3.isConstructorFragment(e3))
            return e3;
          "constructor" !== e3.type && p.throwArgumentError("invalid constructor object", "value", e3);
          var t3 = O(e3);
          t3.constant && p.throwArgumentError("constructor cannot be constant", "value", e3);
          var n2 = { name: null, type: e3.type, inputs: e3.inputs ? e3.inputs.map(k.fromObject) : [], payable: t3.payable, stateMutability: t3.stateMutability, gas: e3.gas ? c.BigNumber.from(e3.gas) : null };
          return new r3(b, n2);
        } }, { key: "fromString", value: function(e3) {
          var t3 = { type: "constructor" }, n2 = (e3 = x(e3, t3)).match(j);
          return n2 && "constructor" === n2[1].trim() || p.throwArgumentError("invalid constructor string", "value", e3), t3.inputs = A(n2[2].trim(), false), P(n2[3].trim(), t3), r3.fromObject(t3);
        } }, { key: "isConstructorFragment", value: function(e3) {
          return e3 && e3._isFragment && "constructor" === e3.type;
        } }]), r3;
      }(S);
      t.ConstructorFragment = T;
      var B = function(e2) {
        (0, i.default)(r3, e2);
        var t2 = l(r3);
        function r3() {
          return (0, s2.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, f2.default)(r3, [{ key: "format", value: function(e3) {
          if (e3 || (e3 = w.sighash), w[e3] || p.throwArgumentError("invalid format type", "format", e3), e3 === w.json)
            return JSON.stringify({ type: "function", name: this.name, constant: this.constant, stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0, payable: this.payable, gas: this.gas ? this.gas.toNumber() : void 0, inputs: this.inputs.map(function(t4) {
              return JSON.parse(t4.format(e3));
            }), outputs: this.outputs.map(function(t4) {
              return JSON.parse(t4.format(e3));
            }) });
          var t3 = "";
          return e3 !== w.sighash && (t3 += "function "), t3 += this.name + "(" + this.inputs.map(function(t4) {
            return t4.format(e3);
          }).join(e3 === w.full ? ", " : ",") + ") ", e3 !== w.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (t3 += this.stateMutability + " ") : this.constant && (t3 += "view "), this.outputs && this.outputs.length && (t3 += "returns (" + this.outputs.map(function(t4) {
            return t4.format(e3);
          }).join(", ") + ") "), null != this.gas && (t3 += "@" + this.gas.toString() + " ")), t3.trim();
        } }], [{ key: "from", value: function(e3) {
          return "string" == typeof e3 ? r3.fromString(e3) : r3.fromObject(e3);
        } }, { key: "fromObject", value: function(e3) {
          if (r3.isFunctionFragment(e3))
            return e3;
          "function" !== e3.type && p.throwArgumentError("invalid function object", "value", e3);
          var t3 = O(e3), n2 = { type: e3.type, name: U(e3.name), constant: t3.constant, inputs: e3.inputs ? e3.inputs.map(k.fromObject) : [], outputs: e3.outputs ? e3.outputs.map(k.fromObject) : [], payable: t3.payable, stateMutability: t3.stateMutability, gas: e3.gas ? c.BigNumber.from(e3.gas) : null };
          return new r3(b, n2);
        } }, { key: "fromString", value: function(e3) {
          var t3 = { type: "function" }, n2 = (e3 = x(e3, t3)).split(" returns ");
          n2.length > 2 && p.throwArgumentError("invalid function string", "value", e3);
          var i2 = n2[0].match(j);
          if (i2 || p.throwArgumentError("invalid function signature", "value", e3), t3.name = i2[1].trim(), t3.name && U(t3.name), t3.inputs = A(i2[2], false), P(i2[3].trim(), t3), n2.length > 1) {
            var o2 = n2[1].match(j);
            "" == o2[1].trim() && "" == o2[3].trim() || p.throwArgumentError("unexpected tokens", "value", e3), t3.outputs = A(o2[2], false);
          } else
            t3.outputs = [];
          return r3.fromObject(t3);
        } }, { key: "isFunctionFragment", value: function(e3) {
          return e3 && e3._isFragment && "function" === e3.type;
        } }]), r3;
      }(T);
      function M(e2) {
        var t2 = e2.format();
        return "Error(string)" !== t2 && "Panic(uint256)" !== t2 || p.throwArgumentError("cannot specify user defined ".concat(t2, " error"), "fragment", e2), e2;
      }
      t.FunctionFragment = B;
      var R = function(e2) {
        (0, i.default)(r3, e2);
        var t2 = l(r3);
        function r3() {
          return (0, s2.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, f2.default)(r3, [{ key: "format", value: function(e3) {
          if (e3 || (e3 = w.sighash), w[e3] || p.throwArgumentError("invalid format type", "format", e3), e3 === w.json)
            return JSON.stringify({ type: "error", name: this.name, inputs: this.inputs.map(function(t4) {
              return JSON.parse(t4.format(e3));
            }) });
          var t3 = "";
          return e3 !== w.sighash && (t3 += "error "), (t3 += this.name + "(" + this.inputs.map(function(t4) {
            return t4.format(e3);
          }).join(e3 === w.full ? ", " : ",") + ") ").trim();
        } }], [{ key: "from", value: function(e3) {
          return "string" == typeof e3 ? r3.fromString(e3) : r3.fromObject(e3);
        } }, { key: "fromObject", value: function(e3) {
          if (r3.isErrorFragment(e3))
            return e3;
          "error" !== e3.type && p.throwArgumentError("invalid error object", "value", e3);
          var t3 = { type: e3.type, name: U(e3.name), inputs: e3.inputs ? e3.inputs.map(k.fromObject) : [] };
          return M(new r3(b, t3));
        } }, { key: "fromString", value: function(e3) {
          var t3 = { type: "error" }, n2 = e3.match(j);
          return n2 || p.throwArgumentError("invalid error signature", "value", e3), t3.name = n2[1].trim(), t3.name && U(t3.name), t3.inputs = A(n2[2], false), M(r3.fromObject(t3));
        } }, { key: "isErrorFragment", value: function(e3) {
          return e3 && e3._isFragment && "error" === e3.type;
        } }]), r3;
      }(S);
      function I(e2) {
        return e2.match(/^uint($|[^1-9])/) ? e2 = "uint256" + e2.substring(4) : e2.match(/^int($|[^1-9])/) && (e2 = "int256" + e2.substring(3)), e2;
      }
      t.ErrorFragment = R;
      var C = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
      function U(e2) {
        return e2 && e2.match(C) || p.throwArgumentError('invalid identifier "'.concat(e2, '"'), "value", e2), e2;
      }
      var j = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.Utf8ErrorReason = t.Utf8ErrorFuncs = t.UnicodeNormalizationForm = void 0, t._toEscapedUtf8String = function(e2, t2) {
        return '"' + d(e2, t2).map(function(e3) {
          if (e3 < 256) {
            switch (e3) {
              case 8:
                return "\\b";
              case 9:
                return "\\t";
              case 10:
                return "\\n";
              case 13:
                return "\\r";
              case 34:
                return '\\"';
              case 92:
                return "\\\\";
            }
            if (e3 >= 32 && e3 < 127)
              return String.fromCharCode(e3);
          }
          return e3 <= 65535 ? l(e3) : l(55296 + ((e3 -= 65536) >> 10 & 1023)) + l(56320 + (1023 & e3));
        }).join("") + '"';
      }, t._toUtf8String = p, t.toUtf8Bytes = h, t.toUtf8CodePoints = function(e2) {
        var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current;
        return d(h(e2, t2));
      }, t.toUtf8String = function(e2, t2) {
        return p(d(e2, t2));
      };
      var n, i, o = r2(11), a = r2(16), s2 = r2(388), f2 = new a.Logger(s2.version);
      function c(e2, t2, r3, n2, o2) {
        if (e2 === i.BAD_PREFIX || e2 === i.UNEXPECTED_CONTINUE) {
          for (var a2 = 0, s3 = t2 + 1; s3 < r3.length && r3[s3] >> 6 == 2; s3++)
            a2++;
          return a2;
        }
        return e2 === i.OVERRUN ? r3.length - t2 - 1 : 0;
      }
      t.UnicodeNormalizationForm = n, function(e2) {
        e2.current = "", e2.NFC = "NFC", e2.NFD = "NFD", e2.NFKC = "NFKC", e2.NFKD = "NFKD";
      }(n || (t.UnicodeNormalizationForm = n = {})), t.Utf8ErrorReason = i, function(e2) {
        e2.UNEXPECTED_CONTINUE = "unexpected continuation byte", e2.BAD_PREFIX = "bad codepoint prefix", e2.OVERRUN = "string overrun", e2.MISSING_CONTINUE = "missing continuation byte", e2.OUT_OF_RANGE = "out of UTF-8 range", e2.UTF16_SURROGATE = "UTF-16 surrogate", e2.OVERLONG = "overlong representation";
      }(i || (t.Utf8ErrorReason = i = {}));
      var u = Object.freeze({ error: function(e2, t2, r3, n2, i2) {
        return f2.throwArgumentError("invalid codepoint at offset ".concat(t2, "; ").concat(e2), "bytes", r3);
      }, ignore: c, replace: function(e2, t2, r3, n2, o2) {
        return e2 === i.OVERLONG ? (n2.push(o2), 0) : (n2.push(65533), c(e2, t2, r3));
      } });
      function d(e2, t2) {
        null == t2 && (t2 = u.error), e2 = (0, o.arrayify)(e2);
        for (var r3 = [], n2 = 0; n2 < e2.length; ) {
          var a2 = e2[n2++];
          if (a2 >> 7 != 0) {
            var s3 = null, f3 = null;
            if (192 == (224 & a2))
              s3 = 1, f3 = 127;
            else if (224 == (240 & a2))
              s3 = 2, f3 = 2047;
            else {
              if (240 != (248 & a2)) {
                n2 += t2(128 == (192 & a2) ? i.UNEXPECTED_CONTINUE : i.BAD_PREFIX, n2 - 1, e2, r3);
                continue;
              }
              s3 = 3, f3 = 65535;
            }
            if (n2 - 1 + s3 >= e2.length)
              n2 += t2(i.OVERRUN, n2 - 1, e2, r3);
            else {
              for (var c2 = a2 & (1 << 8 - s3 - 1) - 1, d2 = 0; d2 < s3; d2++) {
                var h2 = e2[n2];
                if (128 != (192 & h2)) {
                  n2 += t2(i.MISSING_CONTINUE, n2, e2, r3), c2 = null;
                  break;
                }
                c2 = c2 << 6 | 63 & h2, n2++;
              }
              null !== c2 && (c2 > 1114111 ? n2 += t2(i.OUT_OF_RANGE, n2 - 1 - s3, e2, r3, c2) : c2 >= 55296 && c2 <= 57343 ? n2 += t2(i.UTF16_SURROGATE, n2 - 1 - s3, e2, r3, c2) : c2 <= f3 ? n2 += t2(i.OVERLONG, n2 - 1 - s3, e2, r3, c2) : r3.push(c2));
            }
          } else
            r3.push(a2);
        }
        return r3;
      }
      function h(e2) {
        var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current;
        t2 != n.current && (f2.checkNormalize(), e2 = e2.normalize(t2));
        for (var r3 = [], i2 = 0; i2 < e2.length; i2++) {
          var a2 = e2.charCodeAt(i2);
          if (a2 < 128)
            r3.push(a2);
          else if (a2 < 2048)
            r3.push(a2 >> 6 | 192), r3.push(63 & a2 | 128);
          else if (55296 == (64512 & a2)) {
            i2++;
            var s3 = e2.charCodeAt(i2);
            if (i2 >= e2.length || 56320 != (64512 & s3))
              throw new Error("invalid utf-8 string");
            var c2 = 65536 + ((1023 & a2) << 10) + (1023 & s3);
            r3.push(c2 >> 18 | 240), r3.push(c2 >> 12 & 63 | 128), r3.push(c2 >> 6 & 63 | 128), r3.push(63 & c2 | 128);
          } else
            r3.push(a2 >> 12 | 224), r3.push(a2 >> 6 & 63 | 128), r3.push(63 & a2 | 128);
        }
        return (0, o.arrayify)(r3);
      }
      function l(e2) {
        var t2 = "0000" + e2.toString(16);
        return "\\u" + t2.substring(t2.length - 4);
      }
      function p(e2) {
        return e2.map(function(e3) {
          return e3 <= 65535 ? String.fromCharCode(e3) : (e3 -= 65536, String.fromCharCode(55296 + (e3 >> 10 & 1023), 56320 + (1023 & e3)));
        }).join("");
      }
      t.Utf8ErrorFuncs = u;
    }, function(e, t, r2) {
      var n = r2(1).Buffer, i = r2(420), o = r2(66), a = r2(426);
      function s2(e2) {
        t.decode(e2);
      }
      t.names = a.names, t.codes = a.codes, t.defaultLengths = a.defaultLengths, t.toHexString = function(e2) {
        if (!n.isBuffer(e2))
          throw new Error("must be passed a buffer");
        return e2.toString("hex");
      }, t.fromHexString = function(e2) {
        return n.from(e2, "hex");
      }, t.toB58String = function(e2) {
        if (!n.isBuffer(e2))
          throw new Error("must be passed a buffer");
        return i.encode("base58btc", e2).toString().slice(1);
      }, t.fromB58String = function(e2) {
        var t2 = e2;
        return n.isBuffer(e2) && (t2 = e2.toString()), i.decode("z" + t2);
      }, t.decode = function(e2) {
        if (!n.isBuffer(e2))
          throw new Error("multihash must be a Buffer");
        if (e2.length < 2)
          throw new Error("multihash too short. must be > 2 bytes.");
        var r3 = o.decode(e2);
        if (!t.isValidCode(r3))
          throw new Error("multihash unknown function code: 0x".concat(r3.toString(16)));
        e2 = e2.slice(o.decode.bytes);
        var i2 = o.decode(e2);
        if (i2 < 0)
          throw new Error("multihash invalid length: ".concat(i2));
        if ((e2 = e2.slice(o.decode.bytes)).length !== i2)
          throw new Error("multihash length inconsistent: 0x".concat(e2.toString("hex")));
        return { code: r3, name: a.codes[r3], length: i2, digest: e2 };
      }, t.encode = function(e2, r3, i2) {
        if (!e2 || void 0 === r3)
          throw new Error("multihash encode requires at least two args: digest, code");
        var a2 = t.coerceCode(r3);
        if (!n.isBuffer(e2))
          throw new Error("digest should be a Buffer");
        if (null == i2 && (i2 = e2.length), i2 && e2.length !== i2)
          throw new Error("digest length should be equal to specified length.");
        return n.concat([n.from(o.encode(a2)), n.from(o.encode(i2)), e2]);
      }, t.coerceCode = function(e2) {
        var r3 = e2;
        if ("string" == typeof e2) {
          if (void 0 === a.names[e2])
            throw new Error("Unrecognized hash function named: ".concat(e2));
          r3 = a.names[e2];
        }
        if ("number" != typeof r3)
          throw new Error("Hash function code should be a number. Got: ".concat(r3));
        if (void 0 === a.codes[r3] && !t.isAppCode(r3))
          throw new Error("Unrecognized function code: ".concat(r3));
        return r3;
      }, t.isAppCode = function(e2) {
        return e2 > 0 && e2 < 16;
      }, t.isValidCode = function(e2) {
        return !!t.isAppCode(e2) || !!a.codes[e2];
      }, t.validate = s2, t.prefix = function(e2) {
        return s2(e2), e2.slice(0, 2);
      };
    }, function(e, t, r2) {
      var n = r2(19);
      function i(e2) {
        this.options = e2, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
      }
      e.exports = i, i.prototype._init = function() {
      }, i.prototype.update = function(e2) {
        return 0 === e2.length ? [] : "decrypt" === this.type ? this._updateDecrypt(e2) : this._updateEncrypt(e2);
      }, i.prototype._buffer = function(e2, t2) {
        for (var r3 = Math.min(this.buffer.length - this.bufferOff, e2.length - t2), n2 = 0; n2 < r3; n2++)
          this.buffer[this.bufferOff + n2] = e2[t2 + n2];
        return this.bufferOff += r3, r3;
      }, i.prototype._flushBuffer = function(e2, t2) {
        return this._update(this.buffer, 0, e2, t2), this.bufferOff = 0, this.blockSize;
      }, i.prototype._updateEncrypt = function(e2) {
        var t2 = 0, r3 = 0, n2 = (this.bufferOff + e2.length) / this.blockSize | 0, i2 = new Array(n2 * this.blockSize);
        0 !== this.bufferOff && (t2 += this._buffer(e2, t2), this.bufferOff === this.buffer.length && (r3 += this._flushBuffer(i2, r3)));
        for (var o = e2.length - (e2.length - t2) % this.blockSize; t2 < o; t2 += this.blockSize)
          this._update(e2, t2, i2, r3), r3 += this.blockSize;
        for (; t2 < e2.length; t2++, this.bufferOff++)
          this.buffer[this.bufferOff] = e2[t2];
        return i2;
      }, i.prototype._updateDecrypt = function(e2) {
        for (var t2 = 0, r3 = 0, n2 = Math.ceil((this.bufferOff + e2.length) / this.blockSize) - 1, i2 = new Array(n2 * this.blockSize); n2 > 0; n2--)
          t2 += this._buffer(e2, t2), r3 += this._flushBuffer(i2, r3);
        return t2 += this._buffer(e2, t2), i2;
      }, i.prototype.final = function(e2) {
        var t2, r3;
        return e2 && (t2 = this.update(e2)), r3 = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt(), t2 ? t2.concat(r3) : r3;
      }, i.prototype._pad = function(e2, t2) {
        if (0 === t2)
          return false;
        for (; t2 < e2.length; )
          e2[t2++] = 0;
        return true;
      }, i.prototype._finalEncrypt = function() {
        if (!this._pad(this.buffer, this.bufferOff))
          return [];
        var e2 = new Array(this.blockSize);
        return this._update(this.buffer, 0, e2, 0), e2;
      }, i.prototype._unpad = function(e2) {
        return e2;
      }, i.prototype._finalDecrypt = function() {
        n.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
        var e2 = new Array(this.blockSize);
        return this._flushBuffer(e2, 0), this._unpad(e2);
      };
    }, function(e, t, r2) {
      var n = r2(454), i = r2(462), o = r2(207);
      t.createCipher = t.Cipher = n.createCipher, t.createCipheriv = t.Cipheriv = n.createCipheriv, t.createDecipher = t.Decipher = i.createDecipher, t.createDecipheriv = t.Decipheriv = i.createDecipheriv, t.listCiphers = t.getCiphers = function() {
        return Object.keys(o);
      };
    }, function(e, t, r2) {
      var n = { ECB: r2(455), CBC: r2(456), CFB: r2(457), CFB8: r2(458), CFB1: r2(459), OFB: r2(460), CTR: r2(205), GCM: r2(205) }, i = r2(207);
      for (var o in i)
        i[o].module = n[i[o].mode];
      e.exports = i;
    }, function(e, t, r2) {
      var n = r2(51).codes.ERR_STREAM_PREMATURE_CLOSE;
      function i() {
      }
      e.exports = function e2(t2, r3, o) {
        if ("function" == typeof r3)
          return e2(t2, null, r3);
        r3 || (r3 = {}), o = function(e3) {
          var t3 = false;
          return function() {
            if (!t3) {
              t3 = true;
              for (var r4 = arguments.length, n2 = new Array(r4), i2 = 0; i2 < r4; i2++)
                n2[i2] = arguments[i2];
              e3.apply(this, n2);
            }
          };
        }(o || i);
        var a = r3.readable || false !== r3.readable && t2.readable, s2 = r3.writable || false !== r3.writable && t2.writable, f2 = function() {
          t2.writable || u();
        }, c = t2._writableState && t2._writableState.finished, u = function() {
          s2 = false, c = true, a || o.call(t2);
        }, d = t2._readableState && t2._readableState.endEmitted, h = function() {
          a = false, d = true, s2 || o.call(t2);
        }, l = function(e3) {
          o.call(t2, e3);
        }, p = function() {
          var e3;
          return a && !d ? (t2._readableState && t2._readableState.ended || (e3 = new n()), o.call(t2, e3)) : s2 && !c ? (t2._writableState && t2._writableState.ended || (e3 = new n()), o.call(t2, e3)) : void 0;
        }, b = function() {
          t2.req.on("finish", u);
        };
        return !function(e3) {
          return e3.setHeader && "function" == typeof e3.abort;
        }(t2) ? s2 && !t2._writableState && (t2.on("end", f2), t2.on("close", f2)) : (t2.on("complete", u), t2.on("abort", p), t2.req ? b() : t2.on("request", b)), t2.on("end", h), t2.on("finish", u), false !== r3.error && t2.on("error", l), t2.on("close", p), function() {
          t2.removeListener("complete", u), t2.removeListener("abort", p), t2.removeListener("request", b), t2.req && t2.req.removeListener("finish", u), t2.removeListener("end", f2), t2.removeListener("close", f2), t2.removeListener("finish", u), t2.removeListener("end", h), t2.removeListener("error", l), t2.removeListener("close", p);
        };
      };
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(4), i = r2(31);
        function o(e2) {
          var t3, r3 = e2.modulus.byteLength();
          do {
            t3 = new n(i(r3));
          } while (t3.cmp(e2.modulus) >= 0 || !t3.umod(e2.prime1) || !t3.umod(e2.prime2));
          return t3;
        }
        function a(e2, r3) {
          var i2 = function(e3) {
            var t3 = o(e3);
            return { blinder: t3.toRed(n.mont(e3.modulus)).redPow(new n(e3.publicExponent)).fromRed(), unblinder: t3.invm(e3.modulus) };
          }(r3), a2 = r3.modulus.byteLength(), s2 = new n(e2).mul(i2.blinder).umod(r3.modulus), f2 = s2.toRed(n.mont(r3.prime1)), c = s2.toRed(n.mont(r3.prime2)), u = r3.coefficient, d = r3.prime1, h = r3.prime2, l = f2.redPow(r3.exponent1).fromRed(), p = c.redPow(r3.exponent2).fromRed(), b = l.isub(p).imul(u).umod(d).imul(h);
          return p.iadd(b).imul(i2.unblinder).umod(r3.modulus).toArrayLike(t2, "be", a2);
        }
        a.getr = o, e.exports = a;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(t2) {
        var n, i = r2(0)(r2(2)), o = r2(1), a = o.Buffer, s2 = {};
        for (n in o)
          o.hasOwnProperty(n) && "SlowBuffer" !== n && "Buffer" !== n && (s2[n] = o[n]);
        var f2 = s2.Buffer = {};
        for (n in a)
          a.hasOwnProperty(n) && "allocUnsafe" !== n && "allocUnsafeSlow" !== n && (f2[n] = a[n]);
        if (s2.Buffer.prototype = a.prototype, f2.from && f2.from !== Uint8Array.from || (f2.from = function(e2, t3, r3) {
          if ("number" == typeof e2)
            throw new TypeError('The "value" argument must not be of type number. Received type ' + (0, i.default)(e2));
          if (e2 && void 0 === e2.length)
            throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + (0, i.default)(e2));
          return a(e2, t3, r3);
        }), f2.alloc || (f2.alloc = function(e2, t3, r3) {
          if ("number" != typeof e2)
            throw new TypeError('The "size" argument must be of type number. Received type ' + (0, i.default)(e2));
          if (e2 < 0 || e2 >= 2 * (1 << 30))
            throw new RangeError('The value "' + e2 + '" is invalid for option "size"');
          var n2 = a(e2);
          return t3 && 0 !== t3.length ? "string" == typeof r3 ? n2.fill(t3, r3) : n2.fill(t3) : n2.fill(0), n2;
        }), !s2.kStringMaxLength)
          try {
            s2.kStringMaxLength = t2.binding("buffer").kStringMaxLength;
          } catch (e2) {
          }
        s2.constants || (s2.constants = { MAX_LENGTH: s2.kMaxLength }, s2.kStringMaxLength && (s2.constants.MAX_STRING_LENGTH = s2.kStringMaxLength)), e.exports = s2;
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(117).Reporter, o = r2(69).EncoderBuffer, a = r2(69).DecoderBuffer, s2 = r2(19), f2 = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"], c = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(f2);
      function u(e2, t2, r3) {
        var n2 = {};
        this._baseState = n2, n2.name = r3, n2.enc = e2, n2.parent = t2 || null, n2.children = null, n2.tag = null, n2.args = null, n2.reverseArgs = null, n2.choice = null, n2.optional = false, n2.any = false, n2.obj = false, n2.use = null, n2.useDecoder = null, n2.key = null, n2.default = null, n2.explicit = null, n2.implicit = null, n2.contains = null, n2.parent || (n2.children = [], this._wrap());
      }
      e.exports = u;
      var d = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
      u.prototype.clone = function() {
        var e2 = this._baseState, t2 = {};
        d.forEach(function(r4) {
          t2[r4] = e2[r4];
        });
        var r3 = new this.constructor(t2.parent);
        return r3._baseState = t2, r3;
      }, u.prototype._wrap = function() {
        var e2 = this._baseState;
        c.forEach(function(t2) {
          this[t2] = function() {
            var r3 = new this.constructor(this);
            return e2.children.push(r3), r3[t2].apply(r3, arguments);
          };
        }, this);
      }, u.prototype._init = function(e2) {
        var t2 = this._baseState;
        s2(null === t2.parent), e2.call(this), t2.children = t2.children.filter(function(e3) {
          return e3._baseState.parent === this;
        }, this), s2.equal(t2.children.length, 1, "Root node can have only one child");
      }, u.prototype._useArgs = function(e2) {
        var t2 = this._baseState, r3 = e2.filter(function(e3) {
          return e3 instanceof this.constructor;
        }, this);
        e2 = e2.filter(function(e3) {
          return !(e3 instanceof this.constructor);
        }, this), 0 !== r3.length && (s2(null === t2.children), t2.children = r3, r3.forEach(function(e3) {
          e3._baseState.parent = this;
        }, this)), 0 !== e2.length && (s2(null === t2.args), t2.args = e2, t2.reverseArgs = e2.map(function(e3) {
          if ("object" !== (0, n.default)(e3) || e3.constructor !== Object)
            return e3;
          var t3 = {};
          return Object.keys(e3).forEach(function(r4) {
            r4 == (0 | r4) && (r4 |= 0);
            var n2 = e3[r4];
            t3[n2] = r4;
          }), t3;
        }));
      }, ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach(function(e2) {
        u.prototype[e2] = function() {
          var t2 = this._baseState;
          throw new Error(e2 + " not implemented for encoding: " + t2.enc);
        };
      }), f2.forEach(function(e2) {
        u.prototype[e2] = function() {
          var t2 = this._baseState, r3 = Array.prototype.slice.call(arguments);
          return s2(null === t2.tag), t2.tag = e2, this._useArgs(r3), this;
        };
      }), u.prototype.use = function(e2) {
        s2(e2);
        var t2 = this._baseState;
        return s2(null === t2.use), t2.use = e2, this;
      }, u.prototype.optional = function() {
        return this._baseState.optional = true, this;
      }, u.prototype.def = function(e2) {
        var t2 = this._baseState;
        return s2(null === t2.default), t2.default = e2, t2.optional = true, this;
      }, u.prototype.explicit = function(e2) {
        var t2 = this._baseState;
        return s2(null === t2.explicit && null === t2.implicit), t2.explicit = e2, this;
      }, u.prototype.implicit = function(e2) {
        var t2 = this._baseState;
        return s2(null === t2.explicit && null === t2.implicit), t2.implicit = e2, this;
      }, u.prototype.obj = function() {
        var e2 = this._baseState, t2 = Array.prototype.slice.call(arguments);
        return e2.obj = true, 0 !== t2.length && this._useArgs(t2), this;
      }, u.prototype.key = function(e2) {
        var t2 = this._baseState;
        return s2(null === t2.key), t2.key = e2, this;
      }, u.prototype.any = function() {
        return this._baseState.any = true, this;
      }, u.prototype.choice = function(e2) {
        var t2 = this._baseState;
        return s2(null === t2.choice), t2.choice = e2, this._useArgs(Object.keys(e2).map(function(t3) {
          return e2[t3];
        })), this;
      }, u.prototype.contains = function(e2) {
        var t2 = this._baseState;
        return s2(null === t2.use), t2.contains = e2, this;
      }, u.prototype._decode = function(e2, t2) {
        var r3 = this._baseState;
        if (null === r3.parent)
          return e2.wrapResult(r3.children[0]._decode(e2, t2));
        var n2, i2 = r3.default, o2 = true, s3 = null;
        if (null !== r3.key && (s3 = e2.enterKey(r3.key)), r3.optional) {
          var f3 = null;
          if (null !== r3.explicit ? f3 = r3.explicit : null !== r3.implicit ? f3 = r3.implicit : null !== r3.tag && (f3 = r3.tag), null !== f3 || r3.any) {
            if (o2 = this._peekTag(e2, f3, r3.any), e2.isError(o2))
              return o2;
          } else {
            var c2 = e2.save();
            try {
              null === r3.choice ? this._decodeGeneric(r3.tag, e2, t2) : this._decodeChoice(e2, t2), o2 = true;
            } catch (e3) {
              o2 = false;
            }
            e2.restore(c2);
          }
        }
        if (r3.obj && o2 && (n2 = e2.enterObject()), o2) {
          if (null !== r3.explicit) {
            var u2 = this._decodeTag(e2, r3.explicit);
            if (e2.isError(u2))
              return u2;
            e2 = u2;
          }
          var d2 = e2.offset;
          if (null === r3.use && null === r3.choice) {
            var h;
            r3.any && (h = e2.save());
            var l = this._decodeTag(e2, null !== r3.implicit ? r3.implicit : r3.tag, r3.any);
            if (e2.isError(l))
              return l;
            r3.any ? i2 = e2.raw(h) : e2 = l;
          }
          if (t2 && t2.track && null !== r3.tag && t2.track(e2.path(), d2, e2.length, "tagged"), t2 && t2.track && null !== r3.tag && t2.track(e2.path(), e2.offset, e2.length, "content"), r3.any || (i2 = null === r3.choice ? this._decodeGeneric(r3.tag, e2, t2) : this._decodeChoice(e2, t2)), e2.isError(i2))
            return i2;
          if (r3.any || null !== r3.choice || null === r3.children || r3.children.forEach(function(r4) {
            r4._decode(e2, t2);
          }), r3.contains && ("octstr" === r3.tag || "bitstr" === r3.tag)) {
            var p = new a(i2);
            i2 = this._getUse(r3.contains, e2._reporterState.obj)._decode(p, t2);
          }
        }
        return r3.obj && o2 && (i2 = e2.leaveObject(n2)), null === r3.key || null === i2 && true !== o2 ? null !== s3 && e2.exitKey(s3) : e2.leaveKey(s3, r3.key, i2), i2;
      }, u.prototype._decodeGeneric = function(e2, t2, r3) {
        var n2 = this._baseState;
        return "seq" === e2 || "set" === e2 ? null : "seqof" === e2 || "setof" === e2 ? this._decodeList(t2, e2, n2.args[0], r3) : /str$/.test(e2) ? this._decodeStr(t2, e2, r3) : "objid" === e2 && n2.args ? this._decodeObjid(t2, n2.args[0], n2.args[1], r3) : "objid" === e2 ? this._decodeObjid(t2, null, null, r3) : "gentime" === e2 || "utctime" === e2 ? this._decodeTime(t2, e2, r3) : "null_" === e2 ? this._decodeNull(t2, r3) : "bool" === e2 ? this._decodeBool(t2, r3) : "objDesc" === e2 ? this._decodeStr(t2, e2, r3) : "int" === e2 || "enum" === e2 ? this._decodeInt(t2, n2.args && n2.args[0], r3) : null !== n2.use ? this._getUse(n2.use, t2._reporterState.obj)._decode(t2, r3) : t2.error("unknown tag: " + e2);
      }, u.prototype._getUse = function(e2, t2) {
        var r3 = this._baseState;
        return r3.useDecoder = this._use(e2, t2), s2(null === r3.useDecoder._baseState.parent), r3.useDecoder = r3.useDecoder._baseState.children[0], r3.implicit !== r3.useDecoder._baseState.implicit && (r3.useDecoder = r3.useDecoder.clone(), r3.useDecoder._baseState.implicit = r3.implicit), r3.useDecoder;
      }, u.prototype._decodeChoice = function(e2, t2) {
        var r3 = this._baseState, n2 = null, i2 = false;
        return Object.keys(r3.choice).some(function(o2) {
          var a2 = e2.save(), s3 = r3.choice[o2];
          try {
            var f3 = s3._decode(e2, t2);
            if (e2.isError(f3))
              return false;
            n2 = { type: o2, value: f3 }, i2 = true;
          } catch (t3) {
            return e2.restore(a2), false;
          }
          return true;
        }, this), i2 ? n2 : e2.error("Choice not matched");
      }, u.prototype._createEncoderBuffer = function(e2) {
        return new o(e2, this.reporter);
      }, u.prototype._encode = function(e2, t2, r3) {
        var n2 = this._baseState;
        if (null === n2.default || n2.default !== e2) {
          var i2 = this._encodeValue(e2, t2, r3);
          if (void 0 !== i2 && !this._skipDefault(i2, t2, r3))
            return i2;
        }
      }, u.prototype._encodeValue = function(e2, t2, r3) {
        var o2 = this._baseState;
        if (null === o2.parent)
          return o2.children[0]._encode(e2, t2 || new i());
        var a2 = null;
        if (this.reporter = t2, o2.optional && void 0 === e2) {
          if (null === o2.default)
            return;
          e2 = o2.default;
        }
        var s3 = null, f3 = false;
        if (o2.any)
          a2 = this._createEncoderBuffer(e2);
        else if (o2.choice)
          a2 = this._encodeChoice(e2, t2);
        else if (o2.contains)
          s3 = this._getUse(o2.contains, r3)._encode(e2, t2), f3 = true;
        else if (o2.children)
          s3 = o2.children.map(function(r4) {
            if ("null_" === r4._baseState.tag)
              return r4._encode(null, t2, e2);
            if (null === r4._baseState.key)
              return t2.error("Child should have a key");
            var i2 = t2.enterKey(r4._baseState.key);
            if ("object" !== (0, n.default)(e2))
              return t2.error("Child expected, but input is not object");
            var o3 = r4._encode(e2[r4._baseState.key], t2, e2);
            return t2.leaveKey(i2), o3;
          }, this).filter(function(e3) {
            return e3;
          }), s3 = this._createEncoderBuffer(s3);
        else if ("seqof" === o2.tag || "setof" === o2.tag) {
          if (!o2.args || 1 !== o2.args.length)
            return t2.error("Too many args for : " + o2.tag);
          if (!Array.isArray(e2))
            return t2.error("seqof/setof, but data is not Array");
          var c2 = this.clone();
          c2._baseState.implicit = null, s3 = this._createEncoderBuffer(e2.map(function(r4) {
            var n2 = this._baseState;
            return this._getUse(n2.args[0], e2)._encode(r4, t2);
          }, c2));
        } else
          null !== o2.use ? a2 = this._getUse(o2.use, r3)._encode(e2, t2) : (s3 = this._encodePrimitive(o2.tag, e2), f3 = true);
        if (!o2.any && null === o2.choice) {
          var u2 = null !== o2.implicit ? o2.implicit : o2.tag, d2 = null === o2.implicit ? "universal" : "context";
          null === u2 ? null === o2.use && t2.error("Tag could be omitted only for .use()") : null === o2.use && (a2 = this._encodeComposite(u2, f3, d2, s3));
        }
        return null !== o2.explicit && (a2 = this._encodeComposite(o2.explicit, false, "context", a2)), a2;
      }, u.prototype._encodeChoice = function(e2, t2) {
        var r3 = this._baseState, n2 = r3.choice[e2.type];
        return n2 || s2(false, e2.type + " not found in " + JSON.stringify(Object.keys(r3.choice))), n2._encode(e2.value, t2);
      }, u.prototype._encodePrimitive = function(e2, t2) {
        var r3 = this._baseState;
        if (/str$/.test(e2))
          return this._encodeStr(t2, e2);
        if ("objid" === e2 && r3.args)
          return this._encodeObjid(t2, r3.reverseArgs[0], r3.args[1]);
        if ("objid" === e2)
          return this._encodeObjid(t2, null, null);
        if ("gentime" === e2 || "utctime" === e2)
          return this._encodeTime(t2, e2);
        if ("null_" === e2)
          return this._encodeNull();
        if ("int" === e2 || "enum" === e2)
          return this._encodeInt(t2, r3.args && r3.reverseArgs[0]);
        if ("bool" === e2)
          return this._encodeBool(t2);
        if ("objDesc" === e2)
          return this._encodeStr(t2, e2);
        throw new Error("Unsupported tag: " + e2);
      }, u.prototype._isNumstr = function(e2) {
        return /^[0-9 ]*$/.test(e2);
      }, u.prototype._isPrintstr = function(e2) {
        return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(e2);
      };
    }, function(e, t, r2) {
      var n = r2(3);
      function i(e2) {
        this._reporterState = { obj: null, path: [], options: e2 || {}, errors: [] };
      }
      function o(e2, t2) {
        this.path = e2, this.rethrow(t2);
      }
      t.Reporter = i, i.prototype.isError = function(e2) {
        return e2 instanceof o;
      }, i.prototype.save = function() {
        var e2 = this._reporterState;
        return { obj: e2.obj, pathLen: e2.path.length };
      }, i.prototype.restore = function(e2) {
        var t2 = this._reporterState;
        t2.obj = e2.obj, t2.path = t2.path.slice(0, e2.pathLen);
      }, i.prototype.enterKey = function(e2) {
        return this._reporterState.path.push(e2);
      }, i.prototype.exitKey = function(e2) {
        var t2 = this._reporterState;
        t2.path = t2.path.slice(0, e2 - 1);
      }, i.prototype.leaveKey = function(e2, t2, r3) {
        var n2 = this._reporterState;
        this.exitKey(e2), null !== n2.obj && (n2.obj[t2] = r3);
      }, i.prototype.path = function() {
        return this._reporterState.path.join("/");
      }, i.prototype.enterObject = function() {
        var e2 = this._reporterState, t2 = e2.obj;
        return e2.obj = {}, t2;
      }, i.prototype.leaveObject = function(e2) {
        var t2 = this._reporterState, r3 = t2.obj;
        return t2.obj = e2, r3;
      }, i.prototype.error = function(e2) {
        var t2, r3 = this._reporterState, n2 = e2 instanceof o;
        if (t2 = n2 ? e2 : new o(r3.path.map(function(e3) {
          return "[" + JSON.stringify(e3) + "]";
        }).join(""), e2.message || e2, e2.stack), !r3.options.partial)
          throw t2;
        return n2 || r3.errors.push(t2), t2;
      }, i.prototype.wrapResult = function(e2) {
        var t2 = this._reporterState;
        return t2.options.partial ? { result: this.isError(e2) ? null : e2, errors: t2.errors } : e2;
      }, n(o, Error), o.prototype.rethrow = function(e2) {
        if (this.message = e2 + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, o), !this.stack)
          try {
            throw new Error(this.message);
          } catch (e3) {
            this.stack = e3.stack;
          }
        return this;
      };
    }, function(e, t, r2) {
      function n(e2) {
        var t2 = {};
        return Object.keys(e2).forEach(function(r3) {
          (0 | r3) == r3 && (r3 |= 0);
          var n2 = e2[r3];
          t2[n2] = r3;
        }), t2;
      }
      t.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" }, t.tagClassByName = n(t.tagClass), t.tag = { 0: "end", 1: "bool", 2: "int", 3: "bitstr", 4: "octstr", 5: "null_", 6: "objid", 7: "objDesc", 8: "external", 9: "real", 10: "enum", 11: "embed", 12: "utf8str", 13: "relativeOid", 16: "seq", 17: "set", 18: "numstr", 19: "printstr", 20: "t61str", 21: "videostr", 22: "ia5str", 23: "utctime", 24: "gentime", 25: "graphstr", 26: "iso646str", 27: "genstr", 28: "unistr", 29: "charstr", 30: "bmpstr" }, t.tagByName = n(t.tag);
    }, function(e, t, r2) {
      var n = Object.create ? function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), Object.defineProperty(e2, n2, { enumerable: true, get: function() {
          return t2[r3];
        } });
      } : function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), e2[n2] = t2[r3];
      }, i = Object.create ? function(e2, t2) {
        Object.defineProperty(e2, "default", { enumerable: true, value: t2 });
      } : function(e2, t2) {
        e2.default = t2;
      }, o = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = {};
        if (null != e2)
          for (var r3 in e2)
            "default" !== r3 && Object.prototype.hasOwnProperty.call(e2, r3) && n(t2, e2, r3);
        return i(t2, e2), t2;
      }, a = function(e2) {
        var t2 = "function" == typeof Symbol && Symbol.iterator, r3 = t2 && e2[t2], n2 = 0;
        if (r3)
          return r3.call(e2);
        if (e2 && "number" == typeof e2.length)
          return { next: function() {
            return e2 && n2 >= e2.length && (e2 = void 0), { value: e2 && e2[n2++], done: !e2 };
          } };
        throw new TypeError(t2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }, s2 = function(e2, t2) {
        var r3 = "function" == typeof Symbol && e2[Symbol.iterator];
        if (!r3)
          return e2;
        var n2, i2, o2 = r3.call(e2), a2 = [];
        try {
          for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
            a2.push(n2.value);
        } catch (e3) {
          i2 = { error: e3 };
        } finally {
          try {
            n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
          } finally {
            if (i2)
              throw i2.error;
          }
        }
        return a2;
      };
      Object.defineProperty(t, "__esModule", { value: true }), t.BaseTransaction = void 0;
      var f2 = o(r2(120)), c = r2(27), u = r2(53), d = function() {
        function e2(e3) {
          this.cache = { hash: void 0 }, this.activeCapabilities = [], this.DEFAULT_CHAIN = f2.Chain.Mainnet, this.DEFAULT_HARDFORK = f2.Hardfork.Istanbul;
          var t2 = e3.nonce, r3 = e3.gasLimit, n2 = e3.to, i2 = e3.value, o2 = e3.data, a2 = e3.v, s3 = e3.r, u2 = e3.s, d2 = e3.type;
          this._type = new c.BN((0, c.toBuffer)(d2)).toNumber();
          var h = (0, c.toBuffer)("" === n2 ? "0x" : n2), l = (0, c.toBuffer)("" === a2 ? "0x" : a2), p = (0, c.toBuffer)("" === s3 ? "0x" : s3), b = (0, c.toBuffer)("" === u2 ? "0x" : u2);
          this.nonce = new c.BN((0, c.toBuffer)("" === t2 ? "0x" : t2)), this.gasLimit = new c.BN((0, c.toBuffer)("" === r3 ? "0x" : r3)), this.to = h.length > 0 ? new c.Address(h) : void 0, this.value = new c.BN((0, c.toBuffer)("" === i2 ? "0x" : i2)), this.data = (0, c.toBuffer)("" === o2 ? "0x" : o2), this.v = l.length > 0 ? new c.BN(l) : void 0, this.r = p.length > 0 ? new c.BN(p) : void 0, this.s = b.length > 0 ? new c.BN(b) : void 0, this._validateCannotExceedMaxInteger({ nonce: this.nonce, gasLimit: this.gasLimit, value: this.value, r: this.r, s: this.s });
        }
        return Object.defineProperty(e2.prototype, "transactionType", { get: function() {
          return this.type;
        }, enumerable: false, configurable: true }), Object.defineProperty(e2.prototype, "type", { get: function() {
          return this._type;
        }, enumerable: false, configurable: true }), e2.prototype.supports = function(e3) {
          return this.activeCapabilities.includes(e3);
        }, e2.prototype.validate = function(e3) {
          void 0 === e3 && (e3 = false);
          var t2 = [];
          return this.getBaseFee().gt(this.gasLimit) && t2.push("gasLimit is too low. given " + this.gasLimit + ", need at least " + this.getBaseFee()), this.isSigned() && !this.verifySignature() && t2.push("Invalid Signature"), e3 ? t2 : 0 === t2.length;
        }, e2.prototype.getBaseFee = function() {
          var e3 = this.getDataFee().addn(this.common.param("gasPrices", "tx"));
          return this.common.gteHardfork("homestead") && this.toCreationAddress() && e3.iaddn(this.common.param("gasPrices", "txCreation")), e3;
        }, e2.prototype.getDataFee = function() {
          for (var e3 = this.common.param("gasPrices", "txDataZero"), t2 = this.common.param("gasPrices", "txDataNonZero"), r3 = 0, n2 = 0; n2 < this.data.length; n2++)
            0 === this.data[n2] ? r3 += e3 : r3 += t2;
          return new c.BN(r3);
        }, e2.prototype.toCreationAddress = function() {
          return void 0 === this.to || 0 === this.to.buf.length;
        }, e2.prototype.isSigned = function() {
          var e3 = this.v, t2 = this.r, r3 = this.s;
          return 0 === this.type ? !!(e3 && t2 && r3) : !(void 0 === e3 || !t2 || !r3);
        }, e2.prototype.verifySignature = function() {
          try {
            var e3 = this.getSenderPublicKey();
            return 0 !== (0, c.unpadBuffer)(e3).length;
          } catch (e4) {
            return false;
          }
        }, e2.prototype.getSenderAddress = function() {
          return new c.Address((0, c.publicToAddress)(this.getSenderPublicKey()));
        }, e2.prototype.sign = function(e3) {
          if (32 !== e3.length)
            throw new Error("Private key must be 32 bytes in length.");
          var t2 = false;
          0 === this.type && this.common.gteHardfork("spuriousDragon") && !this.supports(u.Capability.EIP155ReplayProtection) && (this.activeCapabilities.push(u.Capability.EIP155ReplayProtection), t2 = true);
          var r3 = this.getMessageToSign(true), n2 = (0, c.ecsign)(r3, e3), i2 = n2.v, o2 = n2.r, a2 = n2.s, s3 = this._processSignature(i2, o2, a2);
          if (t2) {
            var f3 = this.activeCapabilities.indexOf(u.Capability.EIP155ReplayProtection);
            f3 > -1 && this.activeCapabilities.splice(f3, 1);
          }
          return s3;
        }, e2.prototype._getCommon = function(e3, t2) {
          var r3;
          if (t2) {
            var n2 = new c.BN((0, c.toBuffer)(t2));
            if (e3) {
              if (!e3.chainIdBN().eq(n2))
                throw new Error("The chain ID does not match the chain ID of Common");
              return e3.copy();
            }
            return f2.default.isSupportedChainId(n2) ? new f2.default({ chain: n2, hardfork: this.DEFAULT_HARDFORK }) : f2.default.forCustomChain(this.DEFAULT_CHAIN, { name: "custom-chain", networkId: n2, chainId: n2 }, this.DEFAULT_HARDFORK);
          }
          return null !== (r3 = null == e3 ? void 0 : e3.copy()) && void 0 !== r3 ? r3 : new f2.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });
        }, e2.prototype._validateCannotExceedMaxInteger = function(e3, t2) {
          var r3, n2;
          void 0 === t2 && (t2 = 53);
          try {
            for (var i2 = a(Object.entries(e3)), o2 = i2.next(); !o2.done; o2 = i2.next()) {
              var f3 = s2(o2.value, 2), u2 = f3[0], d2 = f3[1];
              if (53 === t2) {
                if (null == d2 ? void 0 : d2.gt(c.MAX_INTEGER))
                  throw new Error(u2 + " cannot exceed MAX_INTEGER, given " + d2);
              } else {
                if (256 !== t2)
                  throw new Error("unimplemented bits value");
                if (null == d2 ? void 0 : d2.gte(c.TWO_POW256))
                  throw new Error(u2 + " must be less than 2^256, given " + d2);
              }
            }
          } catch (e4) {
            r3 = { error: e4 };
          } finally {
            try {
              o2 && !o2.done && (n2 = i2.return) && n2.call(i2);
            } finally {
              if (r3)
                throw r3.error;
            }
          }
        }, e2;
      }();
      t.BaseTransaction = d;
    }, function(e, t, r2) {
      (function(e2) {
        var n, i = r2(0)(r2(2)), o = (n = function(e3, t2) {
          return (n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t3) {
            e4.__proto__ = t3;
          } || function(e4, t3) {
            for (var r3 in t3)
              Object.prototype.hasOwnProperty.call(t3, r3) && (e4[r3] = t3[r3]);
          })(e3, t2);
        }, function(e3, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
          function r3() {
            this.constructor = e3;
          }
          n(e3, t2), e3.prototype = null === t2 ? Object.create(t2) : (r3.prototype = t2.prototype, new r3());
        }), a = function() {
          return (a = Object.assign || function(e3) {
            for (var t2, r3 = 1, n2 = arguments.length; r3 < n2; r3++)
              for (var i2 in t2 = arguments[r3])
                Object.prototype.hasOwnProperty.call(t2, i2) && (e3[i2] = t2[i2]);
            return e3;
          }).apply(this, arguments);
        }, s2 = function(e3) {
          var t2 = "function" == typeof Symbol && Symbol.iterator, r3 = t2 && e3[t2], n2 = 0;
          if (r3)
            return r3.call(e3);
          if (e3 && "number" == typeof e3.length)
            return { next: function() {
              return e3 && n2 >= e3.length && (e3 = void 0), { value: e3 && e3[n2++], done: !e3 };
            } };
          throw new TypeError(t2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.ConsensusAlgorithm = t.ConsensusType = t.Hardfork = t.Chain = t.CustomChain = void 0;
        var f2, c, u = r2(20), d = r2(508), h = r2(27), l = r2(509), p = r2(515), b = r2(530);
        !function(e3) {
          e3.PolygonMainnet = "polygon-mainnet", e3.PolygonMumbai = "polygon-mumbai", e3.ArbitrumRinkebyTestnet = "arbitrum-rinkeby-testnet", e3.xDaiChain = "x-dai-chain";
        }(f2 = t.CustomChain || (t.CustomChain = {})), function(e3) {
          e3[e3.Mainnet = 1] = "Mainnet", e3[e3.Ropsten = 3] = "Ropsten", e3[e3.Rinkeby = 4] = "Rinkeby", e3[e3.Kovan = 42] = "Kovan", e3[e3.Goerli = 5] = "Goerli";
        }(t.Chain || (t.Chain = {})), function(e3) {
          e3.Chainstart = "chainstart", e3.Homestead = "homestead", e3.Dao = "dao", e3.TangerineWhistle = "tangerineWhistle", e3.SpuriousDragon = "spuriousDragon", e3.Byzantium = "byzantium", e3.Constantinople = "constantinople", e3.Petersburg = "petersburg", e3.Istanbul = "istanbul", e3.MuirGlacier = "muirGlacier", e3.Berlin = "berlin", e3.London = "london", e3.Shanghai = "shanghai", e3.Merge = "merge";
        }(c = t.Hardfork || (t.Hardfork = {})), function(e3) {
          e3.ProofOfStake = "pos", e3.ProofOfWork = "pow", e3.ProofOfAuthority = "poa";
        }(t.ConsensusType || (t.ConsensusType = {})), function(e3) {
          e3.Ethash = "ethash", e3.Clique = "clique", e3.Casper = "casper";
        }(t.ConsensusAlgorithm || (t.ConsensusAlgorithm = {}));
        var y = function(t2) {
          function n2(e3) {
            var r3, n3, i2, o2, a2 = t2.call(this) || this;
            a2._supportedHardforks = [], a2._eips = [], a2._customChains = null !== (i2 = e3.customChains) && void 0 !== i2 ? i2 : [], a2._chainParams = a2.setChain(e3.chain), a2.DEFAULT_HARDFORK = null !== (o2 = a2._chainParams.defaultHardfork) && void 0 !== o2 ? o2 : c.Istanbul;
            try {
              for (var f3 = s2(a2._chainParams.hardforks), u2 = f3.next(); !u2.done; u2 = f3.next()) {
                var d2 = u2.value;
                d2.forkHash || (d2.forkHash = a2._calcForkHash(d2.name));
              }
            } catch (e4) {
              r3 = { error: e4 };
            } finally {
              try {
                u2 && !u2.done && (n3 = f3.return) && n3.call(f3);
              } finally {
                if (r3)
                  throw r3.error;
              }
            }
            return a2._hardfork = a2.DEFAULT_HARDFORK, e3.supportedHardforks && (a2._supportedHardforks = e3.supportedHardforks), e3.hardfork && a2.setHardfork(e3.hardfork), e3.eips && a2.setEIPs(e3.eips), a2;
          }
          return o(n2, t2), n2.custom = function(e3, t3) {
            var r3;
            void 0 === t3 && (t3 = {});
            var i2 = null !== (r3 = t3.baseChain) && void 0 !== r3 ? r3 : "mainnet", o2 = a({}, n2._getChainParams(i2));
            if (o2.name = "custom-chain", "string" != typeof e3)
              return new n2(a({ chain: a(a({}, o2), e3) }, t3));
            if (e3 === f2.PolygonMainnet)
              return n2.custom({ name: f2.PolygonMainnet, chainId: 137, networkId: 137 });
            if (e3 === f2.PolygonMumbai)
              return n2.custom({ name: f2.PolygonMumbai, chainId: 80001, networkId: 80001 });
            if (e3 === f2.ArbitrumRinkebyTestnet)
              return n2.custom({ name: f2.ArbitrumRinkebyTestnet, chainId: 421611, networkId: 421611 });
            if (e3 === f2.xDaiChain)
              return n2.custom({ name: f2.xDaiChain, chainId: 100, networkId: 100 });
            throw new Error("Custom chain " + e3 + " not supported");
          }, n2.forCustomChain = function(e3, t3, r3, i2) {
            var o2 = n2._getChainParams(e3);
            return new n2({ chain: a(a({}, o2), t3), hardfork: r3, supportedHardforks: i2 });
          }, n2.isSupportedChainId = function(e3) {
            var t3 = (0, l._getInitializedChains)();
            return Boolean(t3.names[e3.toString()]);
          }, n2._getChainParams = function(e3, t3) {
            var r3 = (0, l._getInitializedChains)(t3);
            if ("number" == typeof e3 || h.BN.isBN(e3)) {
              if (e3 = e3.toString(), r3.names[e3])
                return r3[r3.names[e3]];
              throw new Error("Chain with ID " + e3 + " not supported");
            }
            if (r3[e3])
              return r3[e3];
            throw new Error("Chain with name " + e3 + " not supported");
          }, n2.prototype.setChain = function(e3) {
            var t3, r3;
            if ("number" == typeof e3 || "string" == typeof e3 || h.BN.isBN(e3)) {
              var o2 = void 0;
              o2 = this._customChains && this._customChains.length > 0 && Array.isArray(this._customChains[0]) ? this._customChains.map(function(e4) {
                return e4[0];
              }) : this._customChains, this._chainParams = n2._getChainParams(e3, o2);
            } else {
              if ("object" !== (0, i.default)(e3))
                throw new Error("Wrong input format");
              if (this._customChains.length > 0)
                throw new Error("Chain must be a string, number, or BN when initialized with customChains passed in");
              try {
                for (var a2 = s2(["networkId", "genesis", "hardforks", "bootstrapNodes"]), f3 = a2.next(); !f3.done; f3 = a2.next()) {
                  var c2 = f3.value;
                  if (void 0 === e3[c2])
                    throw new Error("Missing required chain parameter: " + c2);
                }
              } catch (e4) {
                t3 = { error: e4 };
              } finally {
                try {
                  f3 && !f3.done && (r3 = a2.return) && r3.call(a2);
                } finally {
                  if (t3)
                    throw t3.error;
                }
              }
              this._chainParams = e3;
            }
            return this._chainParams;
          }, n2.prototype.setHardfork = function(e3) {
            var t3, r3;
            if (!this._isSupportedHardfork(e3))
              throw new Error("Hardfork " + e3 + " not set as supported in supportedHardforks");
            var n3 = false;
            try {
              for (var i2 = s2(p.hardforks), o2 = i2.next(); !o2.done; o2 = i2.next()) {
                o2.value[0] === e3 && (this._hardfork !== e3 && (this._hardfork = e3, this.emit("hardforkChanged", e3)), n3 = true);
              }
            } catch (e4) {
              t3 = { error: e4 };
            } finally {
              try {
                o2 && !o2.done && (r3 = i2.return) && r3.call(i2);
              } finally {
                if (t3)
                  throw t3.error;
              }
            }
            if (!n3)
              throw new Error("Hardfork with name " + e3 + " not supported");
          }, n2.prototype.getHardforkByBlockNumber = function(e3, t3) {
            var r3, n3;
            e3 = (0, h.toType)(e3, h.TypeOutput.BN), t3 = t3 ? (0, h.toType)(t3, h.TypeOutput.BN) : void 0;
            var i2, o2, a2, f3 = c.Chainstart;
            try {
              for (var u2 = s2(this.hardforks()), d2 = u2.next(); !d2.done; d2 = u2.next()) {
                var l2 = d2.value;
                if (null !== l2.block)
                  e3.gte(new h.BN(l2.block)) && (f3 = l2.name), t3 && l2.td && (t3.gten(l2.td) ? i2 = l2.name : o2 = a2), a2 = l2.name;
                else if (t3 && l2.td && t3.gten(l2.td))
                  return l2.name;
              }
            } catch (e4) {
              r3 = { error: e4 };
            } finally {
              try {
                d2 && !d2.done && (n3 = u2.return) && n3.call(u2);
              } finally {
                if (r3)
                  throw r3.error;
              }
            }
            if (t3) {
              var p2 = "block number: " + e3 + " (-> " + f3 + "), ";
              if (i2 && !this.hardforkGteHardfork(f3, i2)) {
                var b2 = "HF determined by block number is lower than the minimum total difficulty HF";
                throw p2 += "total difficulty: " + t3 + " (-> " + i2 + ")", new Error(b2 + ": " + p2);
              }
              if (o2 && !this.hardforkGteHardfork(o2, f3)) {
                b2 = "Maximum HF determined by total difficulty is lower than the block number HF";
                throw p2 += "total difficulty: " + t3 + " (-> " + o2 + ")", new Error(b2 + ": " + p2);
              }
            }
            return f3;
          }, n2.prototype.setHardforkByBlockNumber = function(e3, t3) {
            var r3 = this.getHardforkByBlockNumber(e3, t3);
            return this.setHardfork(r3), r3;
          }, n2.prototype._chooseHardfork = function(e3, t3) {
            if (void 0 === t3 && (t3 = true), e3) {
              if (t3 && !this._isSupportedHardfork(e3))
                throw new Error("Hardfork " + e3 + " not set as supported in supportedHardforks");
            } else
              e3 = this._hardfork;
            return e3;
          }, n2.prototype._getHardfork = function(e3) {
            var t3, r3, n3 = this.hardforks();
            try {
              for (var i2 = s2(n3), o2 = i2.next(); !o2.done; o2 = i2.next()) {
                var a2 = o2.value;
                if (a2.name === e3)
                  return a2;
              }
            } catch (e4) {
              t3 = { error: e4 };
            } finally {
              try {
                o2 && !o2.done && (r3 = i2.return) && r3.call(i2);
              } finally {
                if (t3)
                  throw t3.error;
              }
            }
            throw new Error("Hardfork " + e3 + " not defined for chain " + this.chainName());
          }, n2.prototype._isSupportedHardfork = function(e3) {
            var t3, r3;
            if (!(this._supportedHardforks.length > 0))
              return true;
            try {
              for (var n3 = s2(this._supportedHardforks), i2 = n3.next(); !i2.done; i2 = n3.next()) {
                if (e3 === i2.value)
                  return true;
              }
            } catch (e4) {
              t3 = { error: e4 };
            } finally {
              try {
                i2 && !i2.done && (r3 = n3.return) && r3.call(n3);
              } finally {
                if (t3)
                  throw t3.error;
              }
            }
            return false;
          }, n2.prototype.setEIPs = function(e3) {
            var t3, r3, n3 = this;
            void 0 === e3 && (e3 = []);
            var i2 = function(t4) {
              if (!(t4 in b.EIPs))
                throw new Error(t4 + " not supported");
              var r4 = o2.gteHardfork(b.EIPs[t4].minimumHardfork);
              if (!r4)
                throw new Error(t4 + " cannot be activated on hardfork " + o2.hardfork() + ", minimumHardfork: " + r4);
              b.EIPs[t4].requiredEIPs && b.EIPs[t4].requiredEIPs.forEach(function(r5) {
                if (!e3.includes(r5) && !n3.isActivatedEIP(r5))
                  throw new Error(t4 + " requires EIP " + r5 + ", but is not included in the EIP list");
              });
            }, o2 = this;
            try {
              for (var a2 = s2(e3), f3 = a2.next(); !f3.done; f3 = a2.next()) {
                i2(f3.value);
              }
            } catch (e4) {
              t3 = { error: e4 };
            } finally {
              try {
                f3 && !f3.done && (r3 = a2.return) && r3.call(a2);
              } finally {
                if (t3)
                  throw t3.error;
              }
            }
            this._eips = e3;
          }, n2.prototype.param = function(e3, t3) {
            var r3, n3, i2 = null;
            try {
              for (var o2 = s2(this._eips), a2 = o2.next(); !a2.done; a2 = o2.next()) {
                var f3 = a2.value;
                if (null !== (i2 = this.paramByEIP(e3, t3, f3)))
                  return i2;
              }
            } catch (e4) {
              r3 = { error: e4 };
            } finally {
              try {
                a2 && !a2.done && (n3 = o2.return) && n3.call(o2);
              } finally {
                if (r3)
                  throw r3.error;
              }
            }
            return this.paramByHardfork(e3, t3, this._hardfork);
          }, n2.prototype.paramByHardfork = function(e3, t3, r3) {
            var n3, i2, o2, a2;
            r3 = this._chooseHardfork(r3);
            var f3 = null;
            try {
              for (var c2 = s2(p.hardforks), u2 = c2.next(); !u2.done; u2 = c2.next()) {
                var d2 = u2.value;
                if ("eips" in d2[1]) {
                  var h2 = d2[1].eips;
                  try {
                    for (var l2 = (o2 = void 0, s2(h2)), b2 = l2.next(); !b2.done; b2 = l2.next()) {
                      var y2 = b2.value, v = this.paramByEIP(e3, t3, y2);
                      f3 = null !== v ? v : f3;
                    }
                  } catch (e4) {
                    o2 = { error: e4 };
                  } finally {
                    try {
                      b2 && !b2.done && (a2 = l2.return) && a2.call(l2);
                    } finally {
                      if (o2)
                        throw o2.error;
                    }
                  }
                } else {
                  if (!d2[1][e3])
                    throw new Error("Topic " + e3 + " not defined");
                  void 0 !== d2[1][e3][t3] && (f3 = d2[1][e3][t3].v);
                }
                if (d2[0] === r3)
                  break;
              }
            } catch (e4) {
              n3 = { error: e4 };
            } finally {
              try {
                u2 && !u2.done && (i2 = c2.return) && i2.call(c2);
              } finally {
                if (n3)
                  throw n3.error;
              }
            }
            return f3;
          }, n2.prototype.paramByEIP = function(e3, t3, r3) {
            if (!(r3 in b.EIPs))
              throw new Error(r3 + " not supported");
            var n3 = b.EIPs[r3];
            if (!(e3 in n3))
              throw new Error("Topic " + e3 + " not defined");
            return void 0 === n3[e3][t3] ? null : n3[e3][t3].v;
          }, n2.prototype.paramByBlock = function(e3, t3, r3) {
            var n3 = this.activeHardforks(r3), i2 = n3[n3.length - 1].name;
            return this.paramByHardfork(e3, t3, i2);
          }, n2.prototype.isActivatedEIP = function(e3) {
            var t3, r3;
            if (this.eips().includes(e3))
              return true;
            try {
              for (var n3 = s2(p.hardforks), i2 = n3.next(); !i2.done; i2 = n3.next()) {
                var o2 = i2.value[1];
                if (this.gteHardfork(o2.name) && "eips" in o2 && o2.eips.includes(e3))
                  return true;
              }
            } catch (e4) {
              t3 = { error: e4 };
            } finally {
              try {
                i2 && !i2.done && (r3 = n3.return) && r3.call(n3);
              } finally {
                if (t3)
                  throw t3.error;
              }
            }
            return false;
          }, n2.prototype.hardforkIsActiveOnBlock = function(e3, t3, r3) {
            var n3;
            void 0 === r3 && (r3 = {}), t3 = (0, h.toType)(t3, h.TypeOutput.BN);
            var i2 = null !== (n3 = r3.onlySupported) && void 0 !== n3 && n3;
            e3 = this._chooseHardfork(e3, i2);
            var o2 = this.hardforkBlockBN(e3);
            return !(!o2 || !t3.gte(o2));
          }, n2.prototype.activeOnBlock = function(e3, t3) {
            return this.hardforkIsActiveOnBlock(null, e3, t3);
          }, n2.prototype.hardforkGteHardfork = function(e3, t3, r3) {
            var n3, i2;
            void 0 === r3 && (r3 = {});
            var o2, a2 = void 0 !== r3.onlyActive && r3.onlyActive;
            e3 = this._chooseHardfork(e3, r3.onlySupported), o2 = a2 ? this.activeHardforks(null, r3) : this.hardforks();
            var f3 = -1, c2 = -1, u2 = 0;
            try {
              for (var d2 = s2(o2), h2 = d2.next(); !h2.done; h2 = d2.next()) {
                var l2 = h2.value;
                l2.name === e3 && (f3 = u2), l2.name === t3 && (c2 = u2), u2 += 1;
              }
            } catch (e4) {
              n3 = { error: e4 };
            } finally {
              try {
                h2 && !h2.done && (i2 = d2.return) && i2.call(d2);
              } finally {
                if (n3)
                  throw n3.error;
              }
            }
            return f3 >= c2 && -1 !== c2;
          }, n2.prototype.gteHardfork = function(e3, t3) {
            return this.hardforkGteHardfork(null, e3, t3);
          }, n2.prototype.hardforkIsActiveOnChain = function(e3, t3) {
            var r3, n3, i2;
            void 0 === t3 && (t3 = {});
            var o2 = null !== (i2 = t3.onlySupported) && void 0 !== i2 && i2;
            e3 = this._chooseHardfork(e3, o2);
            try {
              for (var a2 = s2(this.hardforks()), f3 = a2.next(); !f3.done; f3 = a2.next()) {
                var c2 = f3.value;
                if (c2.name === e3 && null !== c2.block)
                  return true;
              }
            } catch (e4) {
              r3 = { error: e4 };
            } finally {
              try {
                f3 && !f3.done && (n3 = a2.return) && n3.call(a2);
              } finally {
                if (r3)
                  throw r3.error;
              }
            }
            return false;
          }, n2.prototype.activeHardforks = function(e3, t3) {
            var r3, n3;
            void 0 === t3 && (t3 = {});
            var i2 = [], o2 = this.hardforks();
            try {
              for (var a2 = s2(o2), f3 = a2.next(); !f3.done; f3 = a2.next()) {
                var c2 = f3.value;
                if (null !== c2.block) {
                  if (null != e3 && e3 < c2.block)
                    break;
                  t3.onlySupported && !this._isSupportedHardfork(c2.name) || i2.push(c2);
                }
              }
            } catch (e4) {
              r3 = { error: e4 };
            } finally {
              try {
                f3 && !f3.done && (n3 = a2.return) && n3.call(a2);
              } finally {
                if (r3)
                  throw r3.error;
              }
            }
            return i2;
          }, n2.prototype.activeHardfork = function(e3, t3) {
            void 0 === t3 && (t3 = {});
            var r3 = this.activeHardforks(e3, t3);
            if (r3.length > 0)
              return r3[r3.length - 1].name;
            throw new Error("No (supported) active hardfork found");
          }, n2.prototype.hardforkBlock = function(e3) {
            var t3 = this.hardforkBlockBN(e3);
            return t3 ? (0, h.toType)(t3, h.TypeOutput.Number) : null;
          }, n2.prototype.hardforkBlockBN = function(e3) {
            e3 = this._chooseHardfork(e3, false);
            var t3 = this._getHardfork(e3).block;
            return null == t3 ? null : new h.BN(t3);
          }, n2.prototype.hardforkTD = function(e3) {
            e3 = this._chooseHardfork(e3, false);
            var t3 = this._getHardfork(e3).td;
            return null == t3 ? null : new h.BN(t3);
          }, n2.prototype.isHardforkBlock = function(e3, t3) {
            e3 = (0, h.toType)(e3, h.TypeOutput.BN), t3 = this._chooseHardfork(t3, false);
            var r3 = this.hardforkBlockBN(t3);
            return !!r3 && r3.eq(e3);
          }, n2.prototype.nextHardforkBlock = function(e3) {
            var t3 = this.nextHardforkBlockBN(e3);
            return null === t3 ? null : (0, h.toType)(t3, h.TypeOutput.Number);
          }, n2.prototype.nextHardforkBlockBN = function(e3) {
            e3 = this._chooseHardfork(e3, false);
            var t3 = this.hardforkBlockBN(e3);
            return null === t3 ? null : this.hardforks().reduce(function(e4, r3) {
              var n3 = new h.BN(r3.block);
              return n3.gt(t3) && null === e4 ? n3 : e4;
            }, null);
          }, n2.prototype.isNextHardforkBlock = function(e3, t3) {
            e3 = (0, h.toType)(e3, h.TypeOutput.BN), t3 = this._chooseHardfork(t3, false);
            var r3 = this.nextHardforkBlockBN(t3);
            return null !== r3 && r3.eq(e3);
          }, n2.prototype._calcForkHash = function(t3) {
            var r3, n3, i2 = e2.from(this.genesis().hash.substr(2), "hex"), o2 = e2.alloc(0), a2 = 0;
            try {
              for (var f3 = s2(this.hardforks()), c2 = f3.next(); !c2.done; c2 = f3.next()) {
                var u2 = c2.value, l2 = u2.block;
                if (0 !== l2 && null !== l2 && l2 !== a2) {
                  var p2 = e2.from(l2.toString(16).padStart(16, "0"), "hex");
                  o2 = e2.concat([o2, p2]);
                }
                if (u2.name === t3)
                  break;
                null !== l2 && (a2 = l2);
              }
            } catch (e3) {
              r3 = { error: e3 };
            } finally {
              try {
                c2 && !c2.done && (n3 = f3.return) && n3.call(f3);
              } finally {
                if (r3)
                  throw r3.error;
              }
            }
            var b2 = e2.concat([i2, o2]);
            return "0x" + (0, h.intToBuffer)((0, d.buf)(b2) >>> 0).toString("hex");
          }, n2.prototype.forkHash = function(e3) {
            e3 = this._chooseHardfork(e3, false);
            var t3 = this._getHardfork(e3);
            if (null === t3.block) {
              throw new Error("No fork hash calculation possible for non-applied or future hardfork");
            }
            return void 0 !== t3.forkHash ? t3.forkHash : this._calcForkHash(e3);
          }, n2.prototype.hardforkForForkHash = function(e3) {
            var t3 = this.hardforks().filter(function(t4) {
              return t4.forkHash === e3;
            });
            return t3.length >= 1 ? t3[t3.length - 1] : null;
          }, n2.prototype.genesis = function() {
            return this._chainParams.genesis;
          }, n2.prototype.genesisState = function() {
            var e3, t3;
            switch (this.chainName()) {
              case "mainnet":
                return r2(!function() {
                  var e4 = new Error("Cannot find module './genesisStates/mainnet.json'");
                  throw e4.code = "MODULE_NOT_FOUND", e4;
                }());
              case "ropsten":
                return r2(!function() {
                  var e4 = new Error("Cannot find module './genesisStates/ropsten.json'");
                  throw e4.code = "MODULE_NOT_FOUND", e4;
                }());
              case "rinkeby":
                return r2(!function() {
                  var e4 = new Error("Cannot find module './genesisStates/rinkeby.json'");
                  throw e4.code = "MODULE_NOT_FOUND", e4;
                }());
              case "kovan":
                return r2(!function() {
                  var e4 = new Error("Cannot find module './genesisStates/kovan.json'");
                  throw e4.code = "MODULE_NOT_FOUND", e4;
                }());
              case "goerli":
                return r2(!function() {
                  var e4 = new Error("Cannot find module './genesisStates/goerli.json'");
                  throw e4.code = "MODULE_NOT_FOUND", e4;
                }());
            }
            if (this._customChains && this._customChains.length > 0 && Array.isArray(this._customChains[0]))
              try {
                for (var n3 = s2(this._customChains), i2 = n3.next(); !i2.done; i2 = n3.next()) {
                  var o2 = i2.value;
                  if (o2[0].name === this.chainName())
                    return o2[1];
                }
              } catch (t4) {
                e3 = { error: t4 };
              } finally {
                try {
                  i2 && !i2.done && (t3 = n3.return) && t3.call(n3);
                } finally {
                  if (e3)
                    throw e3.error;
                }
              }
            return {};
          }, n2.prototype.hardforks = function() {
            return this._chainParams.hardforks;
          }, n2.prototype.bootstrapNodes = function() {
            return this._chainParams.bootstrapNodes;
          }, n2.prototype.dnsNetworks = function() {
            return this._chainParams.dnsNetworks;
          }, n2.prototype.hardfork = function() {
            return this._hardfork;
          }, n2.prototype.chainId = function() {
            return (0, h.toType)(this.chainIdBN(), h.TypeOutput.Number);
          }, n2.prototype.chainIdBN = function() {
            return new h.BN(this._chainParams.chainId);
          }, n2.prototype.chainName = function() {
            return this._chainParams.name;
          }, n2.prototype.networkId = function() {
            return (0, h.toType)(this.networkIdBN(), h.TypeOutput.Number);
          }, n2.prototype.networkIdBN = function() {
            return new h.BN(this._chainParams.networkId);
          }, n2.prototype.eips = function() {
            return this._eips;
          }, n2.prototype.consensusType = function() {
            var e3, t3, r3, n3 = this.hardfork();
            try {
              for (var i2 = s2(p.hardforks), o2 = i2.next(); !o2.done; o2 = i2.next()) {
                var a2 = o2.value;
                if ("consensus" in a2[1] && (r3 = a2[1].consensus.type), a2[0] === n3)
                  break;
              }
            } catch (t4) {
              e3 = { error: t4 };
            } finally {
              try {
                o2 && !o2.done && (t3 = i2.return) && t3.call(i2);
              } finally {
                if (e3)
                  throw e3.error;
              }
            }
            return r3 || this._chainParams.consensus.type;
          }, n2.prototype.consensusAlgorithm = function() {
            var e3, t3, r3, n3 = this.hardfork();
            try {
              for (var i2 = s2(p.hardforks), o2 = i2.next(); !o2.done; o2 = i2.next()) {
                var a2 = o2.value;
                if ("consensus" in a2[1] && (r3 = a2[1].consensus.algorithm), a2[0] === n3)
                  break;
              }
            } catch (t4) {
              e3 = { error: t4 };
            } finally {
              try {
                o2 && !o2.done && (t3 = i2.return) && t3.call(i2);
              } finally {
                if (e3)
                  throw e3.error;
              }
            }
            return r3 || this._chainParams.consensus.algorithm;
          }, n2.prototype.consensusConfig = function() {
            var e3, t3, r3, n3 = this.hardfork();
            try {
              for (var i2 = s2(p.hardforks), o2 = i2.next(); !o2.done; o2 = i2.next()) {
                var a2 = o2.value;
                if ("consensus" in a2[1] && (r3 = a2[1].consensus[a2[1].consensus.algorithm]), a2[0] === n3)
                  break;
              }
            } catch (t4) {
              e3 = { error: t4 };
            } finally {
              try {
                o2 && !o2.done && (t3 = i2.return) && t3.call(i2);
              } finally {
                if (e3)
                  throw e3.error;
              }
            }
            if (r3)
              return r3;
            var f3 = this.consensusAlgorithm();
            return this._chainParams.consensus[f3];
          }, n2.prototype.copy = function() {
            return Object.assign(Object.create(Object.getPrototypeOf(this)), this);
          }, n2;
        }(u.EventEmitter);
        t.default = y;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n, i = t, o = r2(122), a = r2(238), s2 = r2(22).assert;
      function f2(e2) {
        "short" === e2.type ? this.curve = new a.short(e2) : "edwards" === e2.type ? this.curve = new a.edwards(e2) : this.curve = new a.mont(e2), this.g = this.curve.g, this.n = this.curve.n, this.hash = e2.hash, s2(this.g.validate(), "Invalid curve"), s2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      function c(e2, t2) {
        Object.defineProperty(i, e2, { configurable: true, enumerable: true, get: function() {
          var r3 = new f2(t2);
          return Object.defineProperty(i, e2, { configurable: true, enumerable: true, value: r3 }), r3;
        } });
      }
      i.PresetCurve = f2, c("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: o.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), c("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: o.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), c("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: o.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), c("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: o.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), c("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: o.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), c("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["9"] }), c("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
      try {
        n = r2(562);
      } catch (e2) {
        n = void 0;
      }
      c("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: o.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n] });
    }, function(e, t, r2) {
      var n = t;
      n.utils = r2(26), n.common = r2(70), n.sha = r2(556), n.ripemd = r2(560), n.hmac = r2(561), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.rlphash = t.ripemd160FromArray = t.ripemd160FromString = t.ripemd160 = t.sha256FromArray = t.sha256FromString = t.sha256 = t.keccakFromArray = t.keccakFromHexString = t.keccakFromString = t.keccak256 = t.keccak = void 0;
        var n = r2(572), i = r2(588), o = r2(29), a = r2(42), s2 = r2(90);
        t.keccak = function(e3, t2) {
          switch (void 0 === t2 && (t2 = 256), (0, s2.assertIsBuffer)(e3), t2) {
            case 224:
              return (0, n.keccak224)(e3);
            case 256:
              return (0, n.keccak256)(e3);
            case 384:
              return (0, n.keccak384)(e3);
            case 512:
              return (0, n.keccak512)(e3);
            default:
              throw new Error("Invald algorithm: keccak".concat(t2));
          }
        };
        t.keccak256 = function(e3) {
          return (0, t.keccak)(e3);
        };
        t.keccakFromString = function(r3, n2) {
          void 0 === n2 && (n2 = 256), (0, s2.assertIsString)(r3);
          var i2 = e2.from(r3, "utf8");
          return (0, t.keccak)(i2, n2);
        };
        t.keccakFromHexString = function(e3, r3) {
          return void 0 === r3 && (r3 = 256), (0, s2.assertIsHexString)(e3), (0, t.keccak)((0, a.toBuffer)(e3), r3);
        };
        t.keccakFromArray = function(e3, r3) {
          return void 0 === r3 && (r3 = 256), (0, s2.assertIsArray)(e3), (0, t.keccak)((0, a.toBuffer)(e3), r3);
        };
        var f2 = function(e3) {
          return e3 = (0, a.toBuffer)(e3), i("sha256").update(e3).digest();
        };
        t.sha256 = function(e3) {
          return (0, s2.assertIsBuffer)(e3), f2(e3);
        };
        t.sha256FromString = function(e3) {
          return (0, s2.assertIsString)(e3), f2(e3);
        };
        t.sha256FromArray = function(e3) {
          return (0, s2.assertIsArray)(e3), f2(e3);
        };
        var c = function(e3, t2) {
          e3 = (0, a.toBuffer)(e3);
          var r3 = i("rmd160").update(e3).digest();
          return true === t2 ? (0, a.setLengthLeft)(r3, 32) : r3;
        };
        t.ripemd160 = function(e3, t2) {
          return (0, s2.assertIsBuffer)(e3), c(e3, t2);
        };
        t.ripemd160FromString = function(e3, t2) {
          return (0, s2.assertIsString)(e3), c(e3, t2);
        };
        t.ripemd160FromArray = function(e3, t2) {
          return (0, s2.assertIsArray)(e3), c(e3, t2);
        };
        t.rlphash = function(e3) {
          return (0, t.keccak)(o.rlp.encode(e3));
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (t = e.exports = r2(242)).Stream = t, t.Readable = t, t.Writable = r2(246), t.Duplex = r2(56), t.Transform = r2(247), t.PassThrough = r2(583), t.finished = r2(125), t.pipeline = r2(584);
    }, function(e, t, r2) {
      var n = r2(55).codes.ERR_STREAM_PREMATURE_CLOSE;
      function i() {
      }
      e.exports = function e2(t2, r3, o) {
        if ("function" == typeof r3)
          return e2(t2, null, r3);
        r3 || (r3 = {}), o = function(e3) {
          var t3 = false;
          return function() {
            if (!t3) {
              t3 = true;
              for (var r4 = arguments.length, n2 = new Array(r4), i2 = 0; i2 < r4; i2++)
                n2[i2] = arguments[i2];
              e3.apply(this, n2);
            }
          };
        }(o || i);
        var a = r3.readable || false !== r3.readable && t2.readable, s2 = r3.writable || false !== r3.writable && t2.writable, f2 = function() {
          t2.writable || u();
        }, c = t2._writableState && t2._writableState.finished, u = function() {
          s2 = false, c = true, a || o.call(t2);
        }, d = t2._readableState && t2._readableState.endEmitted, h = function() {
          a = false, d = true, s2 || o.call(t2);
        }, l = function(e3) {
          o.call(t2, e3);
        }, p = function() {
          var e3;
          return a && !d ? (t2._readableState && t2._readableState.ended || (e3 = new n()), o.call(t2, e3)) : s2 && !c ? (t2._writableState && t2._writableState.ended || (e3 = new n()), o.call(t2, e3)) : void 0;
        }, b = function() {
          t2.req.on("finish", u);
        };
        return !function(e3) {
          return e3.setHeader && "function" == typeof e3.abort;
        }(t2) ? s2 && !t2._writableState && (t2.on("end", f2), t2.on("close", f2)) : (t2.on("complete", u), t2.on("abort", p), t2.req ? b() : t2.on("request", b)), t2.on("end", h), t2.on("finish", u), false !== r3.error && t2.on("error", l), t2.on("close", p), function() {
          t2.removeListener("complete", u), t2.removeListener("abort", p), t2.removeListener("request", b), t2.req && t2.req.removeListener("finish", u), t2.removeListener("end", f2), t2.removeListener("close", f2), t2.removeListener("finish", u), t2.removeListener("end", h), t2.removeListener("error", l), t2.removeListener("close", p);
        };
      };
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.toType = t.TypeOutput = t.bnToRlp = t.bnToUnpaddedBuffer = t.bnToHex = void 0;
        var n, i = r2(29), o = r2(54), a = r2(42);
        function s2(t2) {
          return (0, a.unpadBuffer)(t2.toArrayLike(e2));
        }
        t.bnToHex = function(e3) {
          return "0x".concat(e3.toString(16));
        }, t.bnToUnpaddedBuffer = s2, t.bnToRlp = function(e3) {
          return s2(e3);
        }, function(e3) {
          e3[e3.Number = 0] = "Number", e3[e3.BN = 1] = "BN", e3[e3.Buffer = 2] = "Buffer", e3[e3.PrefixedHexString = 3] = "PrefixedHexString";
        }(n = t.TypeOutput || (t.TypeOutput = {})), t.toType = function(e3, t2) {
          if (null === e3)
            return null;
          if (void 0 !== e3) {
            if ("string" == typeof e3 && !(0, o.isHexString)(e3))
              throw new Error("A string must be provided with a 0x-prefix, given: ".concat(e3));
            if ("number" == typeof e3 && !Number.isSafeInteger(e3))
              throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
            var r3 = (0, a.toBuffer)(e3);
            if (t2 === n.Buffer)
              return r3;
            if (t2 === n.BN)
              return new i.BN(r3);
            if (t2 === n.Number) {
              var s3 = new i.BN(r3), f2 = new i.BN(Number.MAX_SAFE_INTEGER.toString());
              if (s3.gt(f2))
                throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");
              return s3.toNumber();
            }
            return "0x".concat(r3.toString("hex"));
          }
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(0)(r2(2)), i = Object.getOwnPropertyDescriptors || function(e3) {
          for (var t2 = Object.keys(e3), r3 = {}, n2 = 0; n2 < t2.length; n2++)
            r3[t2[n2]] = Object.getOwnPropertyDescriptor(e3, t2[n2]);
          return r3;
        }, o = /%[sdj%]/g;
        t.format = function(e3) {
          if (!m(e3)) {
            for (var t2 = [], r3 = 0; r3 < arguments.length; r3++)
              t2.push(f2(arguments[r3]));
            return t2.join(" ");
          }
          r3 = 1;
          for (var n2 = arguments, i2 = n2.length, a2 = String(e3).replace(o, function(e4) {
            if ("%%" === e4)
              return "%";
            if (r3 >= i2)
              return e4;
            switch (e4) {
              case "%s":
                return String(n2[r3++]);
              case "%d":
                return Number(n2[r3++]);
              case "%j":
                try {
                  return JSON.stringify(n2[r3++]);
                } catch (e5) {
                  return "[Circular]";
                }
              default:
                return e4;
            }
          }), s3 = n2[r3]; r3 < i2; s3 = n2[++r3])
            y(s3) || !_(s3) ? a2 += " " + s3 : a2 += " " + f2(s3);
          return a2;
        }, t.deprecate = function(r3, n2) {
          if (void 0 !== e2 && true === e2.noDeprecation)
            return r3;
          if (void 0 === e2)
            return function() {
              return t.deprecate(r3, n2).apply(this, arguments);
            };
          var i2 = false;
          return function() {
            if (!i2) {
              if (e2.throwDeprecation)
                throw new Error(n2);
              e2.traceDeprecation ? console.trace(n2) : console.error(n2), i2 = true;
            }
            return r3.apply(this, arguments);
          };
        };
        var a, s2 = {};
        function f2(e3, r3) {
          var n2 = { seen: [], stylize: u };
          return arguments.length >= 3 && (n2.depth = arguments[2]), arguments.length >= 4 && (n2.colors = arguments[3]), b(r3) ? n2.showHidden = r3 : r3 && t._extend(n2, r3), g(n2.showHidden) && (n2.showHidden = false), g(n2.depth) && (n2.depth = 2), g(n2.colors) && (n2.colors = false), g(n2.customInspect) && (n2.customInspect = true), n2.colors && (n2.stylize = c), d(n2, e3, n2.depth);
        }
        function c(e3, t2) {
          var r3 = f2.styles[t2];
          return r3 ? "\x1B[" + f2.colors[r3][0] + "m" + e3 + "\x1B[" + f2.colors[r3][1] + "m" : e3;
        }
        function u(e3, t2) {
          return e3;
        }
        function d(e3, r3, n2) {
          if (e3.customInspect && r3 && S(r3.inspect) && r3.inspect !== t.inspect && (!r3.constructor || r3.constructor.prototype !== r3)) {
            var i2 = r3.inspect(n2, e3);
            return m(i2) || (i2 = d(e3, i2, n2)), i2;
          }
          var o2 = function(e4, t2) {
            if (g(t2))
              return e4.stylize("undefined", "undefined");
            if (m(t2)) {
              var r4 = "'" + JSON.stringify(t2).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return e4.stylize(r4, "string");
            }
            if (v(t2))
              return e4.stylize("" + t2, "number");
            if (b(t2))
              return e4.stylize("" + t2, "boolean");
            if (y(t2))
              return e4.stylize("null", "null");
          }(e3, r3);
          if (o2)
            return o2;
          var a2 = Object.keys(r3), s3 = function(e4) {
            var t2 = {};
            return e4.forEach(function(e5, r4) {
              t2[e5] = true;
            }), t2;
          }(a2);
          if (e3.showHidden && (a2 = Object.getOwnPropertyNames(r3)), A(r3) && (a2.indexOf("message") >= 0 || a2.indexOf("description") >= 0))
            return h(r3);
          if (0 === a2.length) {
            if (S(r3)) {
              var f3 = r3.name ? ": " + r3.name : "";
              return e3.stylize("[Function" + f3 + "]", "special");
            }
            if (w(r3))
              return e3.stylize(RegExp.prototype.toString.call(r3), "regexp");
            if (k(r3))
              return e3.stylize(Date.prototype.toString.call(r3), "date");
            if (A(r3))
              return h(r3);
          }
          var c2, u2 = "", _2 = false, E2 = ["{", "}"];
          (p(r3) && (_2 = true, E2 = ["[", "]"]), S(r3)) && (u2 = " [Function" + (r3.name ? ": " + r3.name : "") + "]");
          return w(r3) && (u2 = " " + RegExp.prototype.toString.call(r3)), k(r3) && (u2 = " " + Date.prototype.toUTCString.call(r3)), A(r3) && (u2 = " " + h(r3)), 0 !== a2.length || _2 && 0 != r3.length ? n2 < 0 ? w(r3) ? e3.stylize(RegExp.prototype.toString.call(r3), "regexp") : e3.stylize("[Object]", "special") : (e3.seen.push(r3), c2 = _2 ? function(e4, t2, r4, n3, i3) {
            for (var o3 = [], a3 = 0, s4 = t2.length; a3 < s4; ++a3)
              T(t2, String(a3)) ? o3.push(l(e4, t2, r4, n3, String(a3), true)) : o3.push("");
            return i3.forEach(function(i4) {
              i4.match(/^\d+$/) || o3.push(l(e4, t2, r4, n3, i4, true));
            }), o3;
          }(e3, r3, n2, s3, a2) : a2.map(function(t2) {
            return l(e3, r3, n2, s3, t2, _2);
          }), e3.seen.pop(), function(e4, t2, r4) {
            if (e4.reduce(function(e5, t3) {
              return t3.indexOf("\n") >= 0 && 0, e5 + t3.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0) > 60)
              return r4[0] + ("" === t2 ? "" : t2 + "\n ") + " " + e4.join(",\n  ") + " " + r4[1];
            return r4[0] + t2 + " " + e4.join(", ") + " " + r4[1];
          }(c2, u2, E2)) : E2[0] + u2 + E2[1];
        }
        function h(e3) {
          return "[" + Error.prototype.toString.call(e3) + "]";
        }
        function l(e3, t2, r3, n2, i2, o2) {
          var a2, s3, f3;
          if ((f3 = Object.getOwnPropertyDescriptor(t2, i2) || { value: t2[i2] }).get ? s3 = f3.set ? e3.stylize("[Getter/Setter]", "special") : e3.stylize("[Getter]", "special") : f3.set && (s3 = e3.stylize("[Setter]", "special")), T(n2, i2) || (a2 = "[" + i2 + "]"), s3 || (e3.seen.indexOf(f3.value) < 0 ? (s3 = y(r3) ? d(e3, f3.value, null) : d(e3, f3.value, r3 - 1)).indexOf("\n") > -1 && (s3 = o2 ? s3.split("\n").map(function(e4) {
            return "  " + e4;
          }).join("\n").substr(2) : "\n" + s3.split("\n").map(function(e4) {
            return "   " + e4;
          }).join("\n")) : s3 = e3.stylize("[Circular]", "special")), g(a2)) {
            if (o2 && i2.match(/^\d+$/))
              return s3;
            (a2 = JSON.stringify("" + i2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a2 = a2.substr(1, a2.length - 2), a2 = e3.stylize(a2, "name")) : (a2 = a2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a2 = e3.stylize(a2, "string"));
          }
          return a2 + ": " + s3;
        }
        function p(e3) {
          return Array.isArray(e3);
        }
        function b(e3) {
          return "boolean" == typeof e3;
        }
        function y(e3) {
          return null === e3;
        }
        function v(e3) {
          return "number" == typeof e3;
        }
        function m(e3) {
          return "string" == typeof e3;
        }
        function g(e3) {
          return void 0 === e3;
        }
        function w(e3) {
          return _(e3) && "[object RegExp]" === E(e3);
        }
        function _(e3) {
          return "object" === (0, n.default)(e3) && null !== e3;
        }
        function k(e3) {
          return _(e3) && "[object Date]" === E(e3);
        }
        function A(e3) {
          return _(e3) && ("[object Error]" === E(e3) || e3 instanceof Error);
        }
        function S(e3) {
          return "function" == typeof e3;
        }
        function E(e3) {
          return Object.prototype.toString.call(e3);
        }
        function x(e3) {
          return e3 < 10 ? "0" + e3.toString(10) : e3.toString(10);
        }
        t.debuglog = function(r3) {
          if (g(a) && (a = e2.env.NODE_DEBUG || ""), r3 = r3.toUpperCase(), !s2[r3])
            if (new RegExp("\\b" + r3 + "\\b", "i").test(a)) {
              var n2 = e2.pid;
              s2[r3] = function() {
                var e3 = t.format.apply(t, arguments);
                console.error("%s %d: %s", r3, n2, e3);
              };
            } else
              s2[r3] = function() {
              };
          return s2[r3];
        }, t.inspect = f2, f2.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, f2.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, t.isArray = p, t.isBoolean = b, t.isNull = y, t.isNullOrUndefined = function(e3) {
          return null == e3;
        }, t.isNumber = v, t.isString = m, t.isSymbol = function(e3) {
          return "symbol" === (0, n.default)(e3);
        }, t.isUndefined = g, t.isRegExp = w, t.isObject = _, t.isDate = k, t.isError = A, t.isFunction = S, t.isPrimitive = function(e3) {
          return null === e3 || "boolean" == typeof e3 || "number" == typeof e3 || "string" == typeof e3 || "symbol" === (0, n.default)(e3) || void 0 === e3;
        }, t.isBuffer = r2(255);
        var P = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function O() {
          var e3 = new Date(), t2 = [x(e3.getHours()), x(e3.getMinutes()), x(e3.getSeconds())].join(":");
          return [e3.getDate(), P[e3.getMonth()], t2].join(" ");
        }
        function T(e3, t2) {
          return Object.prototype.hasOwnProperty.call(e3, t2);
        }
        t.log = function() {
          console.log("%s - %s", O(), t.format.apply(t, arguments));
        }, t.inherits = r2(91), t._extend = function(e3, t2) {
          if (!t2 || !_(t2))
            return e3;
          for (var r3 = Object.keys(t2), n2 = r3.length; n2--; )
            e3[r3[n2]] = t2[r3[n2]];
          return e3;
        };
        var B = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
        function M(e3, t2) {
          if (!e3) {
            var r3 = new Error("Promise was rejected with a falsy value");
            r3.reason = e3, e3 = r3;
          }
          return t2(e3);
        }
        t.promisify = function(e3) {
          if ("function" != typeof e3)
            throw new TypeError('The "original" argument must be of type Function');
          if (B && e3[B]) {
            var t2;
            if ("function" != typeof (t2 = e3[B]))
              throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(t2, B, { value: t2, enumerable: false, writable: false, configurable: true }), t2;
          }
          function t2() {
            for (var t3, r3, n2 = new Promise(function(e4, n3) {
              t3 = e4, r3 = n3;
            }), i2 = [], o2 = 0; o2 < arguments.length; o2++)
              i2.push(arguments[o2]);
            i2.push(function(e4, n3) {
              e4 ? r3(e4) : t3(n3);
            });
            try {
              e3.apply(this, i2);
            } catch (e4) {
              r3(e4);
            }
            return n2;
          }
          return Object.setPrototypeOf(t2, Object.getPrototypeOf(e3)), B && Object.defineProperty(t2, B, { value: t2, enumerable: false, writable: false, configurable: true }), Object.defineProperties(t2, i(e3));
        }, t.promisify.custom = B, t.callbackify = function(t2) {
          if ("function" != typeof t2)
            throw new TypeError('The "original" argument must be of type Function');
          function r3() {
            for (var r4 = [], n2 = 0; n2 < arguments.length; n2++)
              r4.push(arguments[n2]);
            var i2 = r4.pop();
            if ("function" != typeof i2)
              throw new TypeError("The last argument must be of type Function");
            var o2 = this, a2 = function() {
              return i2.apply(o2, arguments);
            };
            t2.apply(this, r4).then(function(t3) {
              e2.nextTick(a2, null, t3);
            }, function(t3) {
              e2.nextTick(M, t3, a2);
            });
          }
          return Object.setPrototypeOf(r3, Object.getPrototypeOf(t2)), Object.defineProperties(r3, i(t2)), r3;
        };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(4), o = r2(260);
      e.exports = function(e2) {
        if ("string" == typeof e2 || "number" == typeof e2) {
          var t2 = new i(1), r3 = String(e2).toLowerCase().trim(), a = "0x" === r3.substr(0, 2) || "-0x" === r3.substr(0, 3), s2 = o(r3);
          if ("-" === s2.substr(0, 1) && (s2 = o(s2.slice(1)), t2 = new i(-1, 10)), !(s2 = "" === s2 ? "0" : s2).match(/^-?[0-9]+$/) && s2.match(/^[0-9A-Fa-f]+$/) || s2.match(/^[a-fA-F]+$/) || true === a && s2.match(/^[0-9A-Fa-f]+$/))
            return new i(s2, 16).mul(t2);
          if ((s2.match(/^-?[0-9]+$/) || "" === s2) && false === a)
            return new i(s2, 10).mul(t2);
        } else if ("object" === (0, n.default)(e2) && e2.toString && !e2.pop && !e2.push && e2.toString(10).match(/^-?[0-9]+$/) && (e2.mul || e2.dividedToIntegerBy))
          return new i(e2.toString(10), 10);
        throw new Error("[number-to-bn] while converting number " + JSON.stringify(e2) + " to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.");
      };
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(0), i = n(r2(30)), o = n(r2(2)), a = r2(4), s2 = r2(128), f2 = r2(267), c = r2(27), u = r2(330), d = function(e2) {
          return a.isBN(e2);
        }, h = function(e2) {
          return e2 && e2.constructor && "BigNumber" === e2.constructor.name;
        }, l = function(e2) {
          try {
            return s2.apply(null, arguments);
          } catch (t3) {
            throw new Error(t3 + ' Given value: "' + e2 + '"');
          }
        }, p = function(e2) {
          return !!/^(0x)?[0-9a-f]{40}$/i.test(e2) && (!(!/^(0x|0X)?[0-9a-f]{40}$/.test(e2) && !/^(0x|0X)?[0-9A-F]{40}$/.test(e2)) || b(e2));
        }, b = function(e2) {
          e2 = e2.replace(/^0x/i, "");
          for (var t3 = A(e2.toLowerCase()).replace(/^0x/i, ""), r3 = 0; r3 < 40; r3++)
            if (parseInt(t3[r3], 16) > 7 && e2[r3].toUpperCase() !== e2[r3] || parseInt(t3[r3], 16) <= 7 && e2[r3].toLowerCase() !== e2[r3])
              return false;
          return true;
        }, y = function(e2) {
          var t3 = "";
          e2 = (e2 = (e2 = (e2 = (e2 = f2.encode(e2)).replace(/^(?:\u0000)*/, "")).split("").reverse().join("")).replace(/^(?:\u0000)*/, "")).split("").reverse().join("");
          for (var r3 = 0; r3 < e2.length; r3++) {
            var n2 = e2.charCodeAt(r3).toString(16);
            t3 += n2.length < 2 ? "0" + n2 : n2;
          }
          return "0x" + t3;
        }, v = function(e2) {
          if (!e2)
            return e2;
          if ("string" == typeof e2 && !w(e2))
            throw new Error('Given value "' + e2 + '" is not a valid hex string.');
          return l(e2).toNumber();
        }, m = function(e2) {
          if (null == e2)
            return e2;
          if (!isFinite(e2) && !w(e2))
            throw new Error('Given input "' + e2 + '" is not a number.');
          var t3 = l(e2), r3 = t3.toString(16);
          return t3.lt(new a(0)) ? "-0x" + r3.slice(1) : "0x" + r3;
        }, g = function(e2, r3) {
          if (p(e2))
            return r3 ? "address" : "0x" + e2.toLowerCase().replace(/^0x/i, "");
          if ("boolean" == typeof e2)
            return r3 ? "bool" : e2 ? "0x01" : "0x00";
          if (t2.isBuffer(e2))
            return "0x" + e2.toString("hex");
          if ("object" === (0, o.default)(e2) && e2 && !h(e2) && !d(e2))
            return r3 ? "string" : y(JSON.stringify(e2));
          if ("string" == typeof e2) {
            if (0 === e2.indexOf("-0x") || 0 === e2.indexOf("-0X"))
              return r3 ? "int256" : m(e2);
            if (0 === e2.indexOf("0x") || 0 === e2.indexOf("0X"))
              return r3 ? "bytes" : e2;
            if (!isFinite(e2))
              return r3 ? "string" : y(e2);
          }
          return r3 ? e2 < 0 ? "int256" : "uint256" : m(e2);
        }, w = function(e2) {
          return ("string" == typeof e2 || "number" == typeof e2) && /^(-)?0x[0-9a-f]*$/i.test(e2);
        }, _ = function(e2) {
          return ("string" == typeof e2 || "number" == typeof e2) && /^(-0x|0x)?[0-9a-f]*$/i.test(e2);
        }, k = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", A = function(e2) {
          d(e2) && (e2 = e2.toString()), w(e2) && /^0x/i.test(e2.toString()) ? e2 = c.toBuffer(e2) : "string" == typeof e2 && (e2 = t2.from(e2, "utf-8"));
          var r3 = c.bufferToHex(c.keccak256(e2));
          return r3 === k ? null : r3;
        };
        A._Hash = c.keccak256;
        var S = function(e2) {
          if ("string" == typeof e2 && e2.includes("0x")) {
            var t3 = e2.toLocaleLowerCase().startsWith("-") ? ["-", e2.slice(3)] : ["", e2.slice(2)], r3 = (0, i.default)(t3, 2), n2 = r3[0], o2 = r3[1];
            return new a(n2 + o2, 16);
          }
          return new a(e2);
        };
        Object.setPrototypeOf(S, a), Object.setPrototypeOf(S.prototype, a.prototype), e.exports = { BN: S, isBN: d, isBigNumber: h, toBN: l, isAddress: p, isBloom: function(e2) {
          return u.isBloom(e2);
        }, isUserEthereumAddressInBloom: function(e2, t3) {
          return u.isUserEthereumAddressInBloom(e2, t3);
        }, isContractAddressInBloom: function(e2, t3) {
          return u.isContractAddressInBloom(e2, t3);
        }, isTopic: function(e2) {
          return u.isTopic(e2);
        }, isTopicInBloom: function(e2, t3) {
          return u.isTopicInBloom(e2, t3);
        }, isInBloom: function(e2, t3) {
          return u.isInBloom(e2, t3);
        }, checkAddressChecksum: b, utf8ToHex: y, hexToUtf8: function(e2) {
          if (!w(e2))
            throw new Error('The parameter "' + e2 + '" must be a valid HEX string.');
          for (var t3 = "", r3 = 0, n2 = (e2 = (e2 = (e2 = (e2 = (e2 = e2.replace(/^0x/i, "")).replace(/^(?:00)*/, "")).split("").reverse().join("")).replace(/^(?:00)*/, "")).split("").reverse().join("")).length, i2 = 0; i2 < n2; i2 += 2)
            r3 = parseInt(e2.slice(i2, i2 + 2), 16), t3 += String.fromCharCode(r3);
          return f2.decode(t3);
        }, hexToNumber: v, hexToNumberString: function(e2) {
          if (!e2)
            return e2;
          if ("string" == typeof e2 && !w(e2))
            throw new Error('Given value "' + e2 + '" is not a valid hex string.');
          return l(e2).toString(10);
        }, numberToHex: m, toHex: g, hexToBytes: function(e2) {
          if (e2 = e2.toString(16), !w(e2))
            throw new Error('Given value "' + e2 + '" is not a valid hex string.');
          e2 = e2.replace(/^0x/i, "");
          for (var t3 = [], r3 = 0; r3 < e2.length; r3 += 2)
            t3.push(parseInt(e2.slice(r3, r3 + 2), 16));
          return t3;
        }, bytesToHex: function(e2) {
          for (var t3 = [], r3 = 0; r3 < e2.length; r3++)
            t3.push((e2[r3] >>> 4).toString(16)), t3.push((15 & e2[r3]).toString(16));
          return "0x" + t3.join("");
        }, isHex: _, isHexStrict: w, stripHexPrefix: function(e2) {
          return 0 !== e2 && _(e2) ? e2.replace(/^(-)?0x/i, "$1") : e2;
        }, leftPad: function(e2, t3, r3) {
          var n2 = /^0x/i.test(e2) || "number" == typeof e2, i2 = t3 - (e2 = e2.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? t3 - e2.length + 1 : 0;
          return (n2 ? "0x" : "") + new Array(i2).join(r3 || "0") + e2;
        }, rightPad: function(e2, t3, r3) {
          var n2 = /^0x/i.test(e2) || "number" == typeof e2, i2 = t3 - (e2 = e2.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? t3 - e2.length + 1 : 0;
          return (n2 ? "0x" : "") + e2 + new Array(i2).join(r3 || "0");
        }, toTwosComplement: function(e2) {
          return "0x" + l(e2).toTwos(256).toString(16, 64);
        }, sha3: A, sha3Raw: function(e2) {
          return null === (e2 = A(e2)) ? k : e2;
        }, toNumber: function(e2) {
          return "number" == typeof e2 ? e2 : v(g(e2));
        } };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = {}.toString;
      e.exports = Array.isArray || function(e2) {
        return "[object Array]" == n.call(e2);
      };
    }, function(e, t, r2) {
      var n = r2(132);
      e.exports = function(e2, t2) {
        if (e2) {
          if ("string" == typeof e2)
            return n(e2, t2);
          var r3 = Object.prototype.toString.call(e2).slice(8, -1);
          return "Object" === r3 && e2.constructor && (r3 = e2.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(e2) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? n(e2, t2) : void 0;
        }
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      e.exports = function(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n = new Array(t2); r3 < t2; r3++)
          n[r3] = e2[r3];
        return n;
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.KECCAK256_RLP = t.KECCAK256_RLP_S = t.KECCAK256_RLP_ARRAY = t.KECCAK256_RLP_ARRAY_S = t.KECCAK256_NULL = t.KECCAK256_NULL_S = t.TWO_POW256 = t.MAX_INTEGER = t.MAX_UINT64 = void 0;
      var n = r2(1), i = r2(28);
      t.MAX_UINT64 = new i.BN("ffffffffffffffff", 16), t.MAX_INTEGER = new i.BN("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16), t.TWO_POW256 = new i.BN("10000000000000000000000000000000000000000000000000000000000000000", 16), t.KECCAK256_NULL_S = "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", t.KECCAK256_NULL = n.Buffer.from(t.KECCAK256_NULL_S, "hex"), t.KECCAK256_RLP_ARRAY_S = "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347", t.KECCAK256_RLP_ARRAY = n.Buffer.from(t.KECCAK256_RLP_ARRAY_S, "hex"), t.KECCAK256_RLP_S = "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421", t.KECCAK256_RLP = n.Buffer.from(t.KECCAK256_RLP_S, "hex");
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3, t2) {
          var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
          if (!r3)
            return e3;
          var n2, i2, o2 = r3.call(e3), a2 = [];
          try {
            for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
              a2.push(n2.value);
          } catch (e4) {
            i2 = { error: e4 };
          } finally {
            try {
              n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (i2)
                throw i2.error;
            }
          }
          return a2;
        }, i = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.isZeroAddress = t.zeroAddress = t.importPublic = t.privateToAddress = t.privateToPublic = t.publicToAddress = t.pubToAddress = t.isValidPublic = t.isValidPrivate = t.generateAddress2 = t.generateAddress = t.isValidChecksumAddress = t.toChecksumAddress = t.isValidAddress = t.Account = void 0;
        var o = i(r2(43)), a = r2(28), s2 = r2(135), f2 = r2(44), c = r2(133), u = r2(36), d = r2(95), h = r2(73), l = r2(103), p = function() {
          function e3(e4, t2, r3, n2) {
            void 0 === e4 && (e4 = new a.BN(0)), void 0 === t2 && (t2 = new a.BN(0)), void 0 === r3 && (r3 = c.KECCAK256_RLP), void 0 === n2 && (n2 = c.KECCAK256_NULL), this.nonce = e4, this.balance = t2, this.stateRoot = r3, this.codeHash = n2, this._validate();
          }
          return e3.fromAccountData = function(t2) {
            var r3 = t2.nonce, n2 = t2.balance, i2 = t2.stateRoot, o2 = t2.codeHash;
            return new e3(r3 ? new a.BN((0, u.toBuffer)(r3)) : void 0, n2 ? new a.BN((0, u.toBuffer)(n2)) : void 0, i2 ? (0, u.toBuffer)(i2) : void 0, o2 ? (0, u.toBuffer)(o2) : void 0);
          }, e3.fromRlpSerializedAccount = function(e4) {
            var t2 = a.rlp.decode(e4);
            if (!Array.isArray(t2))
              throw new Error("Invalid serialized account input. Must be array");
            return this.fromValuesArray(t2);
          }, e3.fromValuesArray = function(t2) {
            var r3 = n(t2, 4), i2 = r3[0], o2 = r3[1], s3 = r3[2], f3 = r3[3];
            return new e3(new a.BN(i2), new a.BN(o2), s3, f3);
          }, e3.prototype._validate = function() {
            if (this.nonce.lt(new a.BN(0)))
              throw new Error("nonce must be greater than zero");
            if (this.balance.lt(new a.BN(0)))
              throw new Error("balance must be greater than zero");
            if (32 !== this.stateRoot.length)
              throw new Error("stateRoot must have a length of 32");
            if (32 !== this.codeHash.length)
              throw new Error("codeHash must have a length of 32");
          }, e3.prototype.raw = function() {
            return [(0, l.bnToUnpaddedBuffer)(this.nonce), (0, l.bnToUnpaddedBuffer)(this.balance), this.stateRoot, this.codeHash];
          }, e3.prototype.serialize = function() {
            return a.rlp.encode(this.raw());
          }, e3.prototype.isContract = function() {
            return !this.codeHash.equals(c.KECCAK256_NULL);
          }, e3.prototype.isEmpty = function() {
            return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(c.KECCAK256_NULL);
          }, e3;
        }();
        t.Account = p;
        t.isValidAddress = function(e3) {
          try {
            (0, h.assertIsString)(e3);
          } catch (e4) {
            return false;
          }
          return /^0x[0-9a-fA-F]{40}$/.test(e3);
        };
        t.toChecksumAddress = function(e3, t2) {
          (0, h.assertIsHexString)(e3);
          var r3 = (0, f2.stripHexPrefix)(e3).toLowerCase(), n2 = "";
          t2 && (n2 = (0, l.toType)(t2, l.TypeOutput.BN).toString() + "0x");
          for (var i2 = (0, d.keccakFromString)(n2 + r3).toString("hex"), o2 = "0x", a2 = 0; a2 < r3.length; a2++)
            parseInt(i2[a2], 16) >= 8 ? o2 += r3[a2].toUpperCase() : o2 += r3[a2];
          return o2;
        };
        t.isValidChecksumAddress = function(e3, r3) {
          return (0, t.isValidAddress)(e3) && (0, t.toChecksumAddress)(e3, r3) === e3;
        };
        t.generateAddress = function(t2, r3) {
          (0, h.assertIsBuffer)(t2), (0, h.assertIsBuffer)(r3);
          var n2 = new a.BN(r3);
          return n2.isZero() ? (0, d.rlphash)([t2, null]).slice(-20) : (0, d.rlphash)([t2, e2.from(n2.toArray())]).slice(-20);
        };
        t.generateAddress2 = function(t2, r3, n2) {
          return (0, h.assertIsBuffer)(t2), (0, h.assertIsBuffer)(r3), (0, h.assertIsBuffer)(n2), (0, o.default)(20 === t2.length), (0, o.default)(32 === r3.length), (0, d.keccak256)(e2.concat([e2.from("ff", "hex"), t2, r3, (0, d.keccak256)(n2)])).slice(-20);
        };
        t.isValidPrivate = function(e3) {
          return (0, s2.privateKeyVerify)(e3);
        };
        t.isValidPublic = function(t2, r3) {
          return void 0 === r3 && (r3 = false), (0, h.assertIsBuffer)(t2), 64 === t2.length ? (0, s2.publicKeyVerify)(e2.concat([e2.from([4]), t2])) : !!r3 && (0, s2.publicKeyVerify)(t2);
        };
        t.pubToAddress = function(t2, r3) {
          return void 0 === r3 && (r3 = false), (0, h.assertIsBuffer)(t2), r3 && 64 !== t2.length && (t2 = e2.from((0, s2.publicKeyConvert)(t2, false).slice(1))), (0, o.default)(64 === t2.length), (0, d.keccak)(t2).slice(-20);
        }, t.publicToAddress = t.pubToAddress;
        t.privateToPublic = function(t2) {
          return (0, h.assertIsBuffer)(t2), e2.from((0, s2.publicKeyCreate)(t2, false)).slice(1);
        };
        t.privateToAddress = function(e3) {
          return (0, t.publicToAddress)((0, t.privateToPublic)(e3));
        };
        t.importPublic = function(t2) {
          return (0, h.assertIsBuffer)(t2), 64 !== t2.length && (t2 = e2.from((0, s2.publicKeyConvert)(t2, false).slice(1))), t2;
        };
        t.zeroAddress = function() {
          var e3 = (0, u.zeros)(20);
          return (0, u.bufferToHex)(e3);
        };
        t.isZeroAddress = function(e3) {
          try {
            (0, h.assertIsString)(e3);
          } catch (e4) {
            return false;
          }
          return (0, t.zeroAddress)() === e3;
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = function(e2, t2, r3, n2) {
        return new (r3 || (r3 = Promise))(function(i2, o2) {
          function a2(e3) {
            try {
              f2(n2.next(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function s2(e3) {
            try {
              f2(n2.throw(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function f2(e3) {
            var t3;
            e3.done ? i2(e3.value) : (t3 = e3.value, t3 instanceof r3 ? t3 : new r3(function(e4) {
              e4(t3);
            })).then(a2, s2);
          }
          f2((n2 = n2.apply(e2, t2 || [])).next());
        });
      }, i = function(e2, t2) {
        var r3, n2, i2, o2, a2 = { label: 0, sent: function() {
          if (1 & i2[0])
            throw i2[1];
          return i2[1];
        }, trys: [], ops: [] };
        return o2 = { next: s2(0), throw: s2(1), return: s2(2) }, "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
          return this;
        }), o2;
        function s2(o3) {
          return function(s3) {
            return function(o4) {
              if (r3)
                throw new TypeError("Generator is already executing.");
              for (; a2; )
                try {
                  if (r3 = 1, n2 && (i2 = 2 & o4[0] ? n2.return : o4[0] ? n2.throw || ((i2 = n2.return) && i2.call(n2), 0) : n2.next) && !(i2 = i2.call(n2, o4[1])).done)
                    return i2;
                  switch (n2 = 0, i2 && (o4 = [2 & o4[0], i2.value]), o4[0]) {
                    case 0:
                    case 1:
                      i2 = o4;
                      break;
                    case 4:
                      return a2.label++, { value: o4[1], done: false };
                    case 5:
                      a2.label++, n2 = o4[1], o4 = [0];
                      continue;
                    case 7:
                      o4 = a2.ops.pop(), a2.trys.pop();
                      continue;
                    default:
                      if (!(i2 = a2.trys, (i2 = i2.length > 0 && i2[i2.length - 1]) || 6 !== o4[0] && 2 !== o4[0])) {
                        a2 = 0;
                        continue;
                      }
                      if (3 === o4[0] && (!i2 || o4[1] > i2[0] && o4[1] < i2[3])) {
                        a2.label = o4[1];
                        break;
                      }
                      if (6 === o4[0] && a2.label < i2[1]) {
                        a2.label = i2[1], i2 = o4;
                        break;
                      }
                      if (i2 && a2.label < i2[2]) {
                        a2.label = i2[2], a2.ops.push(o4);
                        break;
                      }
                      i2[2] && a2.ops.pop(), a2.trys.pop();
                      continue;
                  }
                  o4 = t2.call(e2, a2);
                } catch (e3) {
                  o4 = [6, e3], n2 = 0;
                } finally {
                  r3 = i2 = 0;
                }
              if (5 & o4[0])
                throw o4[1];
              return { value: o4[0] ? o4[1] : void 0, done: true };
            }([o3, s3]);
          };
        }
      };
      Object.defineProperty(t, "__esModule", { value: true });
      var o = r2(136), a = r2(290);
      t.createPrivateKey = function() {
        return n(this, void 0, void 0, function() {
          var e2;
          return i(this, function(t2) {
            switch (t2.label) {
              case 0:
                return [4, a.getRandomBytes(32)];
              case 1:
                return e2 = t2.sent(), o.privateKeyVerify(e2) ? [2, e2] : [3, 0];
              case 2:
                return [2];
            }
          });
        });
      }, t.createPrivateKeySync = function() {
        for (; ; ) {
          var e2 = a.getRandomBytesSync(32);
          if (o.privateKeyVerify(e2))
            return e2;
        }
      }, function(e2) {
        for (var r3 in e2)
          t.hasOwnProperty(r3) || (t[r3] = e2[r3]);
      }(r2(136));
    }, function(e, t, r2) {
      e.exports = r2(269)(r2(270));
    }, function(e, t, r2) {
      var n = t;
      function i(e2) {
        return 1 === e2.length ? "0" + e2 : e2;
      }
      function o(e2) {
        for (var t2 = "", r3 = 0; r3 < e2.length; r3++)
          t2 += i(e2[r3].toString(16));
        return t2;
      }
      n.toArray = function(e2, t2) {
        if (Array.isArray(e2))
          return e2.slice();
        if (!e2)
          return [];
        var r3 = [];
        if ("string" != typeof e2) {
          for (var n2 = 0; n2 < e2.length; n2++)
            r3[n2] = 0 | e2[n2];
          return r3;
        }
        if ("hex" === t2) {
          (e2 = e2.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e2 = "0" + e2);
          for (n2 = 0; n2 < e2.length; n2 += 2)
            r3.push(parseInt(e2[n2] + e2[n2 + 1], 16));
        } else
          for (n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2.charCodeAt(n2), o2 = i2 >> 8, a = 255 & i2;
            o2 ? r3.push(o2, a) : r3.push(a);
          }
        return r3;
      }, n.zero2 = i, n.toHex = o, n.encode = function(e2, t2) {
        return "hex" === t2 ? o(e2) : e2;
      };
    }, function(e, t, r2) {
      var n = t;
      n.base = r2(71), n.short = r2(273), n.mont = r2(274), n.edwards = r2(275);
    }, function(e, t, r2) {
      var n = r2(25).rotr32;
      function i(e2, t2, r3) {
        return e2 & t2 ^ ~e2 & r3;
      }
      function o(e2, t2, r3) {
        return e2 & t2 ^ e2 & r3 ^ t2 & r3;
      }
      function a(e2, t2, r3) {
        return e2 ^ t2 ^ r3;
      }
      t.ft_1 = function(e2, t2, r3, n2) {
        return 0 === e2 ? i(t2, r3, n2) : 1 === e2 || 3 === e2 ? a(t2, r3, n2) : 2 === e2 ? o(t2, r3, n2) : void 0;
      }, t.ch32 = i, t.maj32 = o, t.p32 = a, t.s0_256 = function(e2) {
        return n(e2, 2) ^ n(e2, 13) ^ n(e2, 22);
      }, t.s1_256 = function(e2) {
        return n(e2, 6) ^ n(e2, 11) ^ n(e2, 25);
      }, t.g0_256 = function(e2) {
        return n(e2, 7) ^ n(e2, 18) ^ e2 >>> 3;
      }, t.g1_256 = function(e2) {
        return n(e2, 17) ^ n(e2, 19) ^ e2 >>> 10;
      };
    }, function(e, t, r2) {
      var n = r2(25), i = r2(60), o = r2(139), a = r2(19), s2 = n.sum32, f2 = n.sum32_4, c = n.sum32_5, u = o.ch32, d = o.maj32, h = o.s0_256, l = o.s1_256, p = o.g0_256, b = o.g1_256, y = i.BlockHash, v = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
      function m() {
        if (!(this instanceof m))
          return new m();
        y.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = v, this.W = new Array(64);
      }
      n.inherits(m, y), e.exports = m, m.blockSize = 512, m.outSize = 256, m.hmacStrength = 192, m.padLength = 64, m.prototype._update = function(e2, t2) {
        for (var r3 = this.W, n2 = 0; n2 < 16; n2++)
          r3[n2] = e2[t2 + n2];
        for (; n2 < r3.length; n2++)
          r3[n2] = f2(b(r3[n2 - 2]), r3[n2 - 7], p(r3[n2 - 15]), r3[n2 - 16]);
        var i2 = this.h[0], o2 = this.h[1], y2 = this.h[2], v2 = this.h[3], m2 = this.h[4], g = this.h[5], w = this.h[6], _ = this.h[7];
        for (a(this.k.length === r3.length), n2 = 0; n2 < r3.length; n2++) {
          var k = c(_, l(m2), u(m2, g, w), this.k[n2], r3[n2]), A = s2(h(i2), d(i2, o2, y2));
          _ = w, w = g, g = m2, m2 = s2(v2, k), v2 = y2, y2 = o2, o2 = i2, i2 = s2(k, A);
        }
        this.h[0] = s2(this.h[0], i2), this.h[1] = s2(this.h[1], o2), this.h[2] = s2(this.h[2], y2), this.h[3] = s2(this.h[3], v2), this.h[4] = s2(this.h[4], m2), this.h[5] = s2(this.h[5], g), this.h[6] = s2(this.h[6], w), this.h[7] = s2(this.h[7], _);
      }, m.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r2) {
      var n = r2(25), i = r2(60), o = r2(19), a = n.rotr64_hi, s2 = n.rotr64_lo, f2 = n.shr64_hi, c = n.shr64_lo, u = n.sum64, d = n.sum64_hi, h = n.sum64_lo, l = n.sum64_4_hi, p = n.sum64_4_lo, b = n.sum64_5_hi, y = n.sum64_5_lo, v = i.BlockHash, m = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
      function g() {
        if (!(this instanceof g))
          return new g();
        v.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = m, this.W = new Array(160);
      }
      function w(e2, t2, r3, n2, i2) {
        var o2 = e2 & r3 ^ ~e2 & i2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function _(e2, t2, r3, n2, i2, o2) {
        var a2 = t2 & n2 ^ ~t2 & o2;
        return a2 < 0 && (a2 += 4294967296), a2;
      }
      function k(e2, t2, r3, n2, i2) {
        var o2 = e2 & r3 ^ e2 & i2 ^ r3 & i2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function A(e2, t2, r3, n2, i2, o2) {
        var a2 = t2 & n2 ^ t2 & o2 ^ n2 & o2;
        return a2 < 0 && (a2 += 4294967296), a2;
      }
      function S(e2, t2) {
        var r3 = a(e2, t2, 28) ^ a(t2, e2, 2) ^ a(t2, e2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function E(e2, t2) {
        var r3 = s2(e2, t2, 28) ^ s2(t2, e2, 2) ^ s2(t2, e2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function x(e2, t2) {
        var r3 = a(e2, t2, 14) ^ a(e2, t2, 18) ^ a(t2, e2, 9);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function P(e2, t2) {
        var r3 = s2(e2, t2, 14) ^ s2(e2, t2, 18) ^ s2(t2, e2, 9);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function O(e2, t2) {
        var r3 = a(e2, t2, 1) ^ a(e2, t2, 8) ^ f2(e2, t2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function T(e2, t2) {
        var r3 = s2(e2, t2, 1) ^ s2(e2, t2, 8) ^ c(e2, t2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function B(e2, t2) {
        var r3 = a(e2, t2, 19) ^ a(t2, e2, 29) ^ f2(e2, t2, 6);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function M(e2, t2) {
        var r3 = s2(e2, t2, 19) ^ s2(t2, e2, 29) ^ c(e2, t2, 6);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      n.inherits(g, v), e.exports = g, g.blockSize = 1024, g.outSize = 512, g.hmacStrength = 192, g.padLength = 128, g.prototype._prepareBlock = function(e2, t2) {
        for (var r3 = this.W, n2 = 0; n2 < 32; n2++)
          r3[n2] = e2[t2 + n2];
        for (; n2 < r3.length; n2 += 2) {
          var i2 = B(r3[n2 - 4], r3[n2 - 3]), o2 = M(r3[n2 - 4], r3[n2 - 3]), a2 = r3[n2 - 14], s3 = r3[n2 - 13], f3 = O(r3[n2 - 30], r3[n2 - 29]), c2 = T(r3[n2 - 30], r3[n2 - 29]), u2 = r3[n2 - 32], d2 = r3[n2 - 31];
          r3[n2] = l(i2, o2, a2, s3, f3, c2, u2, d2), r3[n2 + 1] = p(i2, o2, a2, s3, f3, c2, u2, d2);
        }
      }, g.prototype._update = function(e2, t2) {
        this._prepareBlock(e2, t2);
        var r3 = this.W, n2 = this.h[0], i2 = this.h[1], a2 = this.h[2], s3 = this.h[3], f3 = this.h[4], c2 = this.h[5], l2 = this.h[6], p2 = this.h[7], v2 = this.h[8], m2 = this.h[9], g2 = this.h[10], O2 = this.h[11], T2 = this.h[12], B2 = this.h[13], M2 = this.h[14], R = this.h[15];
        o(this.k.length === r3.length);
        for (var I = 0; I < r3.length; I += 2) {
          var C = M2, U = R, j = x(v2, m2), N = P(v2, m2), L = w(v2, m2, g2, O2, T2), D = _(v2, m2, g2, O2, T2, B2), F = this.k[I], q = this.k[I + 1], z = r3[I], H = r3[I + 1], K2 = b(C, U, j, N, L, D, F, q, z, H), G = y(C, U, j, N, L, D, F, q, z, H);
          C = S(n2, i2), U = E(n2, i2), j = k(n2, i2, a2, s3, f3), N = A(n2, i2, a2, s3, f3, c2);
          var W = d(C, U, j, N), V = h(C, U, j, N);
          M2 = T2, R = B2, T2 = g2, B2 = O2, g2 = v2, O2 = m2, v2 = d(l2, p2, K2, G), m2 = h(p2, p2, K2, G), l2 = f3, p2 = c2, f3 = a2, c2 = s3, a2 = n2, s3 = i2, n2 = d(K2, G, W, V), i2 = h(K2, G, W, V);
        }
        u(this.h, 0, n2, i2), u(this.h, 2, a2, s3), u(this.h, 4, f3, c2), u(this.h, 6, l2, p2), u(this.h, 8, v2, m2), u(this.h, 10, g2, O2), u(this.h, 12, T2, B2), u(this.h, 14, M2, R);
      }, g.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r2) {
      function n(t2, r3) {
        return e.exports = n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e2, t3) {
          return e2.__proto__ = t3, e2;
        }, e.exports.__esModule = true, e.exports.default = e.exports, n(t2, r3);
      }
      e.exports = n, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      e.exports = function(e2) {
        if (void 0 === e2)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e2;
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      (t = e.exports = r2(145)).Stream = t, t.Readable = t, t.Writable = r2(149), t.Duplex = r2(46), t.Transform = r2(150), t.PassThrough = r2(301), t.finished = r2(96), t.pipeline = r2(302);
    }, function(e, t, r2) {
      (function(t2, n) {
        var i;
        e.exports = E, E.ReadableState = S;
        r2(20).EventEmitter;
        var o = function(e2, t3) {
          return e2.listeners(t3).length;
        }, a = r2(146), s2 = r2(1).Buffer, f2 = t2.Uint8Array || function() {
        };
        var c, u = r2(296);
        c = u && u.debuglog ? u.debuglog("stream") : function() {
        };
        var d, h, l, p = r2(297), b = r2(147), y = r2(148).getHighWaterMark, v = r2(45).codes, m = v.ERR_INVALID_ARG_TYPE, g = v.ERR_STREAM_PUSH_AFTER_EOF, w = v.ERR_METHOD_NOT_IMPLEMENTED, _ = v.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r2(3)(E, a);
        var k = b.errorOrDestroy, A = ["error", "close", "destroy", "pause", "resume"];
        function S(e2, t3, n2) {
          i = i || r2(46), e2 = e2 || {}, "boolean" != typeof n2 && (n2 = t3 instanceof i), this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.readableObjectMode), this.highWaterMark = y(this, e2, "readableHighWaterMark", n2), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.destroyed = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (d || (d = r2(21).StringDecoder), this.decoder = new d(e2.encoding), this.encoding = e2.encoding);
        }
        function E(e2) {
          if (i = i || r2(46), !(this instanceof E))
            return new E(e2);
          var t3 = this instanceof i;
          this._readableState = new S(e2, this, t3), this.readable = true, e2 && ("function" == typeof e2.read && (this._read = e2.read), "function" == typeof e2.destroy && (this._destroy = e2.destroy)), a.call(this);
        }
        function x(e2, t3, r3, n2, i2) {
          c("readableAddChunk", t3);
          var o2, a2 = e2._readableState;
          if (null === t3)
            a2.reading = false, function(e3, t4) {
              if (c("onEofChunk"), t4.ended)
                return;
              if (t4.decoder) {
                var r4 = t4.decoder.end();
                r4 && r4.length && (t4.buffer.push(r4), t4.length += t4.objectMode ? 1 : r4.length);
              }
              t4.ended = true, t4.sync ? T(e3) : (t4.needReadable = false, t4.emittedReadable || (t4.emittedReadable = true, B(e3)));
            }(e2, a2);
          else if (i2 || (o2 = function(e3, t4) {
            var r4;
            n3 = t4, s2.isBuffer(n3) || n3 instanceof f2 || "string" == typeof t4 || void 0 === t4 || e3.objectMode || (r4 = new m("chunk", ["string", "Buffer", "Uint8Array"], t4));
            var n3;
            return r4;
          }(a2, t3)), o2)
            k(e2, o2);
          else if (a2.objectMode || t3 && t3.length > 0)
            if ("string" == typeof t3 || a2.objectMode || Object.getPrototypeOf(t3) === s2.prototype || (t3 = function(e3) {
              return s2.from(e3);
            }(t3)), n2)
              a2.endEmitted ? k(e2, new _()) : P(e2, a2, t3, true);
            else if (a2.ended)
              k(e2, new g());
            else {
              if (a2.destroyed)
                return false;
              a2.reading = false, a2.decoder && !r3 ? (t3 = a2.decoder.write(t3), a2.objectMode || 0 !== t3.length ? P(e2, a2, t3, false) : M(e2, a2)) : P(e2, a2, t3, false);
            }
          else
            n2 || (a2.reading = false, M(e2, a2));
          return !a2.ended && (a2.length < a2.highWaterMark || 0 === a2.length);
        }
        function P(e2, t3, r3, n2) {
          t3.flowing && 0 === t3.length && !t3.sync ? (t3.awaitDrain = 0, e2.emit("data", r3)) : (t3.length += t3.objectMode ? 1 : r3.length, n2 ? t3.buffer.unshift(r3) : t3.buffer.push(r3), t3.needReadable && T(e2)), M(e2, t3);
        }
        Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function(e2) {
          this._readableState && (this._readableState.destroyed = e2);
        } }), E.prototype.destroy = b.destroy, E.prototype._undestroy = b.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        }, E.prototype.push = function(e2, t3) {
          var r3, n2 = this._readableState;
          return n2.objectMode ? r3 = true : "string" == typeof e2 && ((t3 = t3 || n2.defaultEncoding) !== n2.encoding && (e2 = s2.from(e2, t3), t3 = ""), r3 = true), x(this, e2, t3, false, r3);
        }, E.prototype.unshift = function(e2) {
          return x(this, e2, null, true, false);
        }, E.prototype.isPaused = function() {
          return false === this._readableState.flowing;
        }, E.prototype.setEncoding = function(e2) {
          d || (d = r2(21).StringDecoder);
          var t3 = new d(e2);
          this._readableState.decoder = t3, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var n2 = this._readableState.buffer.head, i2 = ""; null !== n2; )
            i2 += t3.write(n2.data), n2 = n2.next;
          return this._readableState.buffer.clear(), "" !== i2 && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
        };
        function O(e2, t3) {
          return e2 <= 0 || 0 === t3.length && t3.ended ? 0 : t3.objectMode ? 1 : e2 != e2 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e2 > t3.highWaterMark && (t3.highWaterMark = function(e3) {
            return e3 >= 1073741824 ? e3 = 1073741824 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
          }(e2)), e2 <= t3.length ? e2 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function T(e2) {
          var t3 = e2._readableState;
          c("emitReadable", t3.needReadable, t3.emittedReadable), t3.needReadable = false, t3.emittedReadable || (c("emitReadable", t3.flowing), t3.emittedReadable = true, n.nextTick(B, e2));
        }
        function B(e2) {
          var t3 = e2._readableState;
          c("emitReadable_", t3.destroyed, t3.length, t3.ended), t3.destroyed || !t3.length && !t3.ended || (e2.emit("readable"), t3.emittedReadable = false), t3.needReadable = !t3.flowing && !t3.ended && t3.length <= t3.highWaterMark, j(e2);
        }
        function M(e2, t3) {
          t3.readingMore || (t3.readingMore = true, n.nextTick(R, e2, t3));
        }
        function R(e2, t3) {
          for (; !t3.reading && !t3.ended && (t3.length < t3.highWaterMark || t3.flowing && 0 === t3.length); ) {
            var r3 = t3.length;
            if (c("maybeReadMore read 0"), e2.read(0), r3 === t3.length)
              break;
          }
          t3.readingMore = false;
        }
        function I(e2) {
          var t3 = e2._readableState;
          t3.readableListening = e2.listenerCount("readable") > 0, t3.resumeScheduled && !t3.paused ? t3.flowing = true : e2.listenerCount("data") > 0 && e2.resume();
        }
        function C(e2) {
          c("readable nexttick read 0"), e2.read(0);
        }
        function U(e2, t3) {
          c("resume", t3.reading), t3.reading || e2.read(0), t3.resumeScheduled = false, e2.emit("resume"), j(e2), t3.flowing && !t3.reading && e2.read(0);
        }
        function j(e2) {
          var t3 = e2._readableState;
          for (c("flow", t3.flowing); t3.flowing && null !== e2.read(); )
            ;
        }
        function N(e2, t3) {
          return 0 === t3.length ? null : (t3.objectMode ? r3 = t3.buffer.shift() : !e2 || e2 >= t3.length ? (r3 = t3.decoder ? t3.buffer.join("") : 1 === t3.buffer.length ? t3.buffer.first() : t3.buffer.concat(t3.length), t3.buffer.clear()) : r3 = t3.buffer.consume(e2, t3.decoder), r3);
          var r3;
        }
        function L(e2) {
          var t3 = e2._readableState;
          c("endReadable", t3.endEmitted), t3.endEmitted || (t3.ended = true, n.nextTick(D, t3, e2));
        }
        function D(e2, t3) {
          if (c("endReadableNT", e2.endEmitted, e2.length), !e2.endEmitted && 0 === e2.length && (e2.endEmitted = true, t3.readable = false, t3.emit("end"), e2.autoDestroy)) {
            var r3 = t3._writableState;
            (!r3 || r3.autoDestroy && r3.finished) && t3.destroy();
          }
        }
        function F(e2, t3) {
          for (var r3 = 0, n2 = e2.length; r3 < n2; r3++)
            if (e2[r3] === t3)
              return r3;
          return -1;
        }
        E.prototype.read = function(e2) {
          c("read", e2), e2 = parseInt(e2, 10);
          var t3 = this._readableState, r3 = e2;
          if (0 !== e2 && (t3.emittedReadable = false), 0 === e2 && t3.needReadable && ((0 !== t3.highWaterMark ? t3.length >= t3.highWaterMark : t3.length > 0) || t3.ended))
            return c("read: emitReadable", t3.length, t3.ended), 0 === t3.length && t3.ended ? L(this) : T(this), null;
          if (0 === (e2 = O(e2, t3)) && t3.ended)
            return 0 === t3.length && L(this), null;
          var n2, i2 = t3.needReadable;
          return c("need readable", i2), (0 === t3.length || t3.length - e2 < t3.highWaterMark) && c("length less than watermark", i2 = true), t3.ended || t3.reading ? c("reading or ended", i2 = false) : i2 && (c("do read"), t3.reading = true, t3.sync = true, 0 === t3.length && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e2 = O(r3, t3))), null === (n2 = e2 > 0 ? N(e2, t3) : null) ? (t3.needReadable = t3.length <= t3.highWaterMark, e2 = 0) : (t3.length -= e2, t3.awaitDrain = 0), 0 === t3.length && (t3.ended || (t3.needReadable = true), r3 !== e2 && t3.ended && L(this)), null !== n2 && this.emit("data", n2), n2;
        }, E.prototype._read = function(e2) {
          k(this, new w("_read()"));
        }, E.prototype.pipe = function(e2, t3) {
          var r3 = this, i2 = this._readableState;
          switch (i2.pipesCount) {
            case 0:
              i2.pipes = e2;
              break;
            case 1:
              i2.pipes = [i2.pipes, e2];
              break;
            default:
              i2.pipes.push(e2);
          }
          i2.pipesCount += 1, c("pipe count=%d opts=%j", i2.pipesCount, t3);
          var a2 = (!t3 || false !== t3.end) && e2 !== n.stdout && e2 !== n.stderr ? f3 : y2;
          function s3(t4, n2) {
            c("onunpipe"), t4 === r3 && n2 && false === n2.hasUnpiped && (n2.hasUnpiped = true, c("cleanup"), e2.removeListener("close", p2), e2.removeListener("finish", b2), e2.removeListener("drain", u2), e2.removeListener("error", l2), e2.removeListener("unpipe", s3), r3.removeListener("end", f3), r3.removeListener("end", y2), r3.removeListener("data", h2), d2 = true, !i2.awaitDrain || e2._writableState && !e2._writableState.needDrain || u2());
          }
          function f3() {
            c("onend"), e2.end();
          }
          i2.endEmitted ? n.nextTick(a2) : r3.once("end", a2), e2.on("unpipe", s3);
          var u2 = function(e3) {
            return function() {
              var t4 = e3._readableState;
              c("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, 0 === t4.awaitDrain && o(e3, "data") && (t4.flowing = true, j(e3));
            };
          }(r3);
          e2.on("drain", u2);
          var d2 = false;
          function h2(t4) {
            c("ondata");
            var n2 = e2.write(t4);
            c("dest.write", n2), false === n2 && ((1 === i2.pipesCount && i2.pipes === e2 || i2.pipesCount > 1 && -1 !== F(i2.pipes, e2)) && !d2 && (c("false write response, pause", i2.awaitDrain), i2.awaitDrain++), r3.pause());
          }
          function l2(t4) {
            c("onerror", t4), y2(), e2.removeListener("error", l2), 0 === o(e2, "error") && k(e2, t4);
          }
          function p2() {
            e2.removeListener("finish", b2), y2();
          }
          function b2() {
            c("onfinish"), e2.removeListener("close", p2), y2();
          }
          function y2() {
            c("unpipe"), r3.unpipe(e2);
          }
          return r3.on("data", h2), function(e3, t4, r4) {
            if ("function" == typeof e3.prependListener)
              return e3.prependListener(t4, r4);
            e3._events && e3._events[t4] ? Array.isArray(e3._events[t4]) ? e3._events[t4].unshift(r4) : e3._events[t4] = [r4, e3._events[t4]] : e3.on(t4, r4);
          }(e2, "error", l2), e2.once("close", p2), e2.once("finish", b2), e2.emit("pipe", r3), i2.flowing || (c("pipe resume"), r3.resume()), e2;
        }, E.prototype.unpipe = function(e2) {
          var t3 = this._readableState, r3 = { hasUnpiped: false };
          if (0 === t3.pipesCount)
            return this;
          if (1 === t3.pipesCount)
            return e2 && e2 !== t3.pipes || (e2 || (e2 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e2 && e2.emit("unpipe", this, r3)), this;
          if (!e2) {
            var n2 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var o2 = 0; o2 < i2; o2++)
              n2[o2].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var a2 = F(t3.pipes, e2);
          return -1 === a2 || (t3.pipes.splice(a2, 1), t3.pipesCount -= 1, 1 === t3.pipesCount && (t3.pipes = t3.pipes[0]), e2.emit("unpipe", this, r3)), this;
        }, E.prototype.on = function(e2, t3) {
          var r3 = a.prototype.on.call(this, e2, t3), i2 = this._readableState;
          return "data" === e2 ? (i2.readableListening = this.listenerCount("readable") > 0, false !== i2.flowing && this.resume()) : "readable" === e2 && (i2.endEmitted || i2.readableListening || (i2.readableListening = i2.needReadable = true, i2.flowing = false, i2.emittedReadable = false, c("on readable", i2.length, i2.reading), i2.length ? T(this) : i2.reading || n.nextTick(C, this))), r3;
        }, E.prototype.addListener = E.prototype.on, E.prototype.removeListener = function(e2, t3) {
          var r3 = a.prototype.removeListener.call(this, e2, t3);
          return "readable" === e2 && n.nextTick(I, this), r3;
        }, E.prototype.removeAllListeners = function(e2) {
          var t3 = a.prototype.removeAllListeners.apply(this, arguments);
          return "readable" !== e2 && void 0 !== e2 || n.nextTick(I, this), t3;
        }, E.prototype.resume = function() {
          var e2 = this._readableState;
          return e2.flowing || (c("resume"), e2.flowing = !e2.readableListening, function(e3, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, n.nextTick(U, e3, t3));
          }(this, e2)), e2.paused = false, this;
        }, E.prototype.pause = function() {
          return c("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (c("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, E.prototype.wrap = function(e2) {
          var t3 = this, r3 = this._readableState, n2 = false;
          for (var i2 in e2.on("end", function() {
            if (c("wrapped end"), r3.decoder && !r3.ended) {
              var e3 = r3.decoder.end();
              e3 && e3.length && t3.push(e3);
            }
            t3.push(null);
          }), e2.on("data", function(i3) {
            (c("wrapped data"), r3.decoder && (i3 = r3.decoder.write(i3)), r3.objectMode && null == i3) || (r3.objectMode || i3 && i3.length) && (t3.push(i3) || (n2 = true, e2.pause()));
          }), e2)
            void 0 === this[i2] && "function" == typeof e2[i2] && (this[i2] = function(t4) {
              return function() {
                return e2[t4].apply(e2, arguments);
              };
            }(i2));
          for (var o2 = 0; o2 < A.length; o2++)
            e2.on(A[o2], this.emit.bind(this, A[o2]));
          return this._read = function(t4) {
            c("wrapped _read", t4), n2 && (n2 = false, e2.resume());
          }, this;
        }, "function" == typeof Symbol && (E.prototype[Symbol.asyncIterator] = function() {
          return void 0 === h && (h = r2(299)), h(this);
        }), Object.defineProperty(E.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(E.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(E.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(e2) {
          this._readableState && (this._readableState.flowing = e2);
        } }), E._fromList = N, Object.defineProperty(E.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), "function" == typeof Symbol && (E.from = function(e2, t3) {
          return void 0 === l && (l = r2(300)), l(E, e2, t3);
        });
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = r2(20).EventEmitter;
    }, function(e, t, r2) {
      (function(t2) {
        function r3(e2, t3) {
          i(e2, t3), n(e2);
        }
        function n(e2) {
          e2._writableState && !e2._writableState.emitClose || e2._readableState && !e2._readableState.emitClose || e2.emit("close");
        }
        function i(e2, t3) {
          e2.emit("error", t3);
        }
        e.exports = { destroy: function(e2, o) {
          var a = this, s2 = this._readableState && this._readableState.destroyed, f2 = this._writableState && this._writableState.destroyed;
          return s2 || f2 ? (o ? o(e2) : e2 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, t2.nextTick(i, this, e2)) : t2.nextTick(i, this, e2)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e2 || null, function(e3) {
            !o && e3 ? a._writableState ? a._writableState.errorEmitted ? t2.nextTick(n, a) : (a._writableState.errorEmitted = true, t2.nextTick(r3, a, e3)) : t2.nextTick(r3, a, e3) : o ? (t2.nextTick(n, a), o(e3)) : t2.nextTick(n, a);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(e2, t3) {
          var r4 = e2._readableState, n2 = e2._writableState;
          r4 && r4.autoDestroy || n2 && n2.autoDestroy ? e2.destroy(t3) : e2.emit("error", t3);
        } };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(45).codes.ERR_INVALID_OPT_VALUE;
      e.exports = { getHighWaterMark: function(e2, t2, r3, i) {
        var o = function(e3, t3, r4) {
          return null != e3.highWaterMark ? e3.highWaterMark : t3 ? e3[r4] : null;
        }(t2, i, r3);
        if (null != o) {
          if (!isFinite(o) || Math.floor(o) !== o || o < 0)
            throw new n(i ? r3 : "highWaterMark", o);
          return Math.floor(o);
        }
        return e2.objectMode ? 16 : 16384;
      } };
    }, function(e, t, r2) {
      (function(t2, n) {
        function i(e2) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e3, t4, r3) {
              var n2 = e3.entry;
              e3.entry = null;
              for (; n2; ) {
                var i2 = n2.callback;
                t4.pendingcb--, i2(r3), n2 = n2.next;
              }
              t4.corkedRequestsFree.next = e3;
            }(t3, e2);
          };
        }
        var o;
        e.exports = E, E.WritableState = S;
        var a = { deprecate: r2(74) }, s2 = r2(146), f2 = r2(1).Buffer, c = t2.Uint8Array || function() {
        };
        var u, d = r2(147), h = r2(148).getHighWaterMark, l = r2(45).codes, p = l.ERR_INVALID_ARG_TYPE, b = l.ERR_METHOD_NOT_IMPLEMENTED, y = l.ERR_MULTIPLE_CALLBACK, v = l.ERR_STREAM_CANNOT_PIPE, m = l.ERR_STREAM_DESTROYED, g = l.ERR_STREAM_NULL_VALUES, w = l.ERR_STREAM_WRITE_AFTER_END, _ = l.ERR_UNKNOWN_ENCODING, k = d.errorOrDestroy;
        function A() {
        }
        function S(e2, t3, a2) {
          o = o || r2(46), e2 = e2 || {}, "boolean" != typeof a2 && (a2 = t3 instanceof o), this.objectMode = !!e2.objectMode, a2 && (this.objectMode = this.objectMode || !!e2.writableObjectMode), this.highWaterMark = h(this, e2, "writableHighWaterMark", a2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var s3 = false === e2.decodeStrings;
          this.decodeStrings = !s3, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
            !function(e4, t4) {
              var r3 = e4._writableState, i2 = r3.sync, o2 = r3.writecb;
              if ("function" != typeof o2)
                throw new y();
              if (function(e5) {
                e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
              }(r3), t4)
                !function(e5, t5, r4, i3, o3) {
                  --t5.pendingcb, r4 ? (n.nextTick(o3, i3), n.nextTick(M, e5, t5), e5._writableState.errorEmitted = true, k(e5, i3)) : (o3(i3), e5._writableState.errorEmitted = true, k(e5, i3), M(e5, t5));
                }(e4, r3, i2, t4, o2);
              else {
                var a3 = T(r3) || e4.destroyed;
                a3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || O(e4, r3), i2 ? n.nextTick(P, e4, r3, a3, o2) : P(e4, r3, a3, o2);
              }
            }(t3, e3);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
        }
        function E(e2) {
          var t3 = this instanceof (o = o || r2(46));
          if (!t3 && !u.call(E, this))
            return new E(e2);
          this._writableState = new S(e2, this, t3), this.writable = true, e2 && ("function" == typeof e2.write && (this._write = e2.write), "function" == typeof e2.writev && (this._writev = e2.writev), "function" == typeof e2.destroy && (this._destroy = e2.destroy), "function" == typeof e2.final && (this._final = e2.final)), s2.call(this);
        }
        function x(e2, t3, r3, n2, i2, o2, a2) {
          t3.writelen = n2, t3.writecb = a2, t3.writing = true, t3.sync = true, t3.destroyed ? t3.onwrite(new m("write")) : r3 ? e2._writev(i2, t3.onwrite) : e2._write(i2, o2, t3.onwrite), t3.sync = false;
        }
        function P(e2, t3, r3, n2) {
          r3 || function(e3, t4) {
            0 === t4.length && t4.needDrain && (t4.needDrain = false, e3.emit("drain"));
          }(e2, t3), t3.pendingcb--, n2(), M(e2, t3);
        }
        function O(e2, t3) {
          t3.bufferProcessing = true;
          var r3 = t3.bufferedRequest;
          if (e2._writev && r3 && r3.next) {
            var n2 = t3.bufferedRequestCount, o2 = new Array(n2), a2 = t3.corkedRequestsFree;
            a2.entry = r3;
            for (var s3 = 0, f3 = true; r3; )
              o2[s3] = r3, r3.isBuf || (f3 = false), r3 = r3.next, s3 += 1;
            o2.allBuffers = f3, x(e2, t3, true, t3.length, o2, "", a2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, a2.next ? (t3.corkedRequestsFree = a2.next, a2.next = null) : t3.corkedRequestsFree = new i(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r3; ) {
              var c2 = r3.chunk, u2 = r3.encoding, d2 = r3.callback;
              if (x(e2, t3, false, t3.objectMode ? 1 : c2.length, c2, u2, d2), r3 = r3.next, t3.bufferedRequestCount--, t3.writing)
                break;
            }
            null === r3 && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r3, t3.bufferProcessing = false;
        }
        function T(e2) {
          return e2.ending && 0 === e2.length && null === e2.bufferedRequest && !e2.finished && !e2.writing;
        }
        function B(e2, t3) {
          e2._final(function(r3) {
            t3.pendingcb--, r3 && k(e2, r3), t3.prefinished = true, e2.emit("prefinish"), M(e2, t3);
          });
        }
        function M(e2, t3) {
          var r3 = T(t3);
          if (r3 && (function(e3, t4) {
            t4.prefinished || t4.finalCalled || ("function" != typeof e3._final || t4.destroyed ? (t4.prefinished = true, e3.emit("prefinish")) : (t4.pendingcb++, t4.finalCalled = true, n.nextTick(B, e3, t4)));
          }(e2, t3), 0 === t3.pendingcb && (t3.finished = true, e2.emit("finish"), t3.autoDestroy))) {
            var i2 = e2._readableState;
            (!i2 || i2.autoDestroy && i2.endEmitted) && e2.destroy();
          }
          return r3;
        }
        r2(3)(E, s2), S.prototype.getBuffer = function() {
          for (var e2 = this.bufferedRequest, t3 = []; e2; )
            t3.push(e2), e2 = e2.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(S.prototype, "buffer", { get: a.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch (e2) {
          }
        }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (u = Function.prototype[Symbol.hasInstance], Object.defineProperty(E, Symbol.hasInstance, { value: function(e2) {
          return !!u.call(this, e2) || this === E && (e2 && e2._writableState instanceof S);
        } })) : u = function(e2) {
          return e2 instanceof this;
        }, E.prototype.pipe = function() {
          k(this, new v());
        }, E.prototype.write = function(e2, t3, r3) {
          var i2, o2 = this._writableState, a2 = false, s3 = !o2.objectMode && (i2 = e2, f2.isBuffer(i2) || i2 instanceof c);
          return s3 && !f2.isBuffer(e2) && (e2 = function(e3) {
            return f2.from(e3);
          }(e2)), "function" == typeof t3 && (r3 = t3, t3 = null), s3 ? t3 = "buffer" : t3 || (t3 = o2.defaultEncoding), "function" != typeof r3 && (r3 = A), o2.ending ? function(e3, t4) {
            var r4 = new w();
            k(e3, r4), n.nextTick(t4, r4);
          }(this, r3) : (s3 || function(e3, t4, r4, i3) {
            var o3;
            return null === r4 ? o3 = new g() : "string" == typeof r4 || t4.objectMode || (o3 = new p("chunk", ["string", "Buffer"], r4)), !o3 || (k(e3, o3), n.nextTick(i3, o3), false);
          }(this, o2, e2, r3)) && (o2.pendingcb++, a2 = function(e3, t4, r4, n2, i3, o3) {
            if (!r4) {
              var a3 = function(e4, t5, r5) {
                e4.objectMode || false === e4.decodeStrings || "string" != typeof t5 || (t5 = f2.from(t5, r5));
                return t5;
              }(t4, n2, i3);
              n2 !== a3 && (r4 = true, i3 = "buffer", n2 = a3);
            }
            var s4 = t4.objectMode ? 1 : n2.length;
            t4.length += s4;
            var c2 = t4.length < t4.highWaterMark;
            c2 || (t4.needDrain = true);
            if (t4.writing || t4.corked) {
              var u2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = { chunk: n2, encoding: i3, isBuf: r4, callback: o3, next: null }, u2 ? u2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else
              x(e3, t4, false, s4, n2, i3, o3);
            return c2;
          }(this, o2, s3, e2, t3, r3)), a2;
        }, E.prototype.cork = function() {
          this._writableState.corked++;
        }, E.prototype.uncork = function() {
          var e2 = this._writableState;
          e2.corked && (e2.corked--, e2.writing || e2.corked || e2.bufferProcessing || !e2.bufferedRequest || O(this, e2));
        }, E.prototype.setDefaultEncoding = function(e2) {
          if ("string" == typeof e2 && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
            throw new _(e2);
          return this._writableState.defaultEncoding = e2, this;
        }, Object.defineProperty(E.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(E.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), E.prototype._write = function(e2, t3, r3) {
          r3(new b("_write()"));
        }, E.prototype._writev = null, E.prototype.end = function(e2, t3, r3) {
          var i2 = this._writableState;
          return "function" == typeof e2 ? (r3 = e2, e2 = null, t3 = null) : "function" == typeof t3 && (r3 = t3, t3 = null), null != e2 && this.write(e2, t3), i2.corked && (i2.corked = 1, this.uncork()), i2.ending || function(e3, t4, r4) {
            t4.ending = true, M(e3, t4), r4 && (t4.finished ? n.nextTick(r4) : e3.once("finish", r4));
            t4.ended = true, e3.writable = false;
          }(this, i2, r3), this;
        }, Object.defineProperty(E.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function(e2) {
          this._writableState && (this._writableState.destroyed = e2);
        } }), E.prototype.destroy = d.destroy, E.prototype._undestroy = d.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        };
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = u;
      var n = r2(45).codes, i = n.ERR_METHOD_NOT_IMPLEMENTED, o = n.ERR_MULTIPLE_CALLBACK, a = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, s2 = n.ERR_TRANSFORM_WITH_LENGTH_0, f2 = r2(46);
      function c(e2, t2) {
        var r3 = this._transformState;
        r3.transforming = false;
        var n2 = r3.writecb;
        if (null === n2)
          return this.emit("error", new o());
        r3.writechunk = null, r3.writecb = null, null != t2 && this.push(t2), n2(e2);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function u(e2) {
        if (!(this instanceof u))
          return new u(e2);
        f2.call(this, e2), this._transformState = { afterTransform: c.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e2 && ("function" == typeof e2.transform && (this._transform = e2.transform), "function" == typeof e2.flush && (this._flush = e2.flush)), this.on("prefinish", d);
      }
      function d() {
        var e2 = this;
        "function" != typeof this._flush || this._readableState.destroyed ? h(this, null, null) : this._flush(function(t2, r3) {
          h(e2, t2, r3);
        });
      }
      function h(e2, t2, r3) {
        if (t2)
          return e2.emit("error", t2);
        if (null != r3 && e2.push(r3), e2._writableState.length)
          throw new s2();
        if (e2._transformState.transforming)
          throw new a();
        return e2.push(null);
      }
      r2(3)(u, f2), u.prototype.push = function(e2, t2) {
        return this._transformState.needTransform = false, f2.prototype.push.call(this, e2, t2);
      }, u.prototype._transform = function(e2, t2, r3) {
        r3(new i("_transform()"));
      }, u.prototype._write = function(e2, t2, r3) {
        var n2 = this._transformState;
        if (n2.writecb = r3, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, u.prototype._read = function(e2) {
        var t2 = this._transformState;
        null === t2.writechunk || t2.transforming ? t2.needTransform = true : (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform));
      }, u.prototype._destroy = function(e2, t2) {
        f2.prototype._destroy.call(this, e2, function(e3) {
          t2(e3);
        });
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = r2(306).Transform;
      function o(e2) {
        i.call(this), this._block = n.allocUnsafe(e2), this._blockSize = e2, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = false;
      }
      r2(3)(o, i), o.prototype._transform = function(e2, t2, r3) {
        var n2 = null;
        try {
          this.update(e2, t2);
        } catch (e3) {
          n2 = e3;
        }
        r3(n2);
      }, o.prototype._flush = function(e2) {
        var t2 = null;
        try {
          this.push(this.digest());
        } catch (e3) {
          t2 = e3;
        }
        e2(t2);
      }, o.prototype.update = function(e2, t2) {
        if (function(e3, t3) {
          if (!n.isBuffer(e3) && "string" != typeof e3)
            throw new TypeError(t3 + " must be a string or a buffer");
        }(e2, "Data"), this._finalized)
          throw new Error("Digest already called");
        n.isBuffer(e2) || (e2 = n.from(e2, t2));
        for (var r3 = this._block, i2 = 0; this._blockOffset + e2.length - i2 >= this._blockSize; ) {
          for (var o2 = this._blockOffset; o2 < this._blockSize; )
            r3[o2++] = e2[i2++];
          this._update(), this._blockOffset = 0;
        }
        for (; i2 < e2.length; )
          r3[this._blockOffset++] = e2[i2++];
        for (var a = 0, s2 = 8 * e2.length; s2 > 0; ++a)
          this._length[a] += s2, (s2 = this._length[a] / 4294967296 | 0) > 0 && (this._length[a] -= 4294967296 * s2);
        return this;
      }, o.prototype._update = function() {
        throw new Error("_update is not implemented");
      }, o.prototype.digest = function(e2) {
        if (this._finalized)
          throw new Error("Digest already called");
        this._finalized = true;
        var t2 = this._digest();
        void 0 !== e2 && (t2 = t2.toString(e2)), this._block.fill(0), this._blockOffset = 0;
        for (var r3 = 0; r3 < 4; ++r3)
          this._length[r3] = 0;
        return t2;
      }, o.prototype._digest = function() {
        throw new Error("_digest is not implemented");
      }, e.exports = o;
    }, function(e, t, r2) {
      (function(t2, n) {
        var i;
        e.exports = E, E.ReadableState = S;
        r2(20).EventEmitter;
        var o = function(e2, t3) {
          return e2.listeners(t3).length;
        }, a = r2(153), s2 = r2(1).Buffer, f2 = t2.Uint8Array || function() {
        };
        var c, u = r2(307);
        c = u && u.debuglog ? u.debuglog("stream") : function() {
        };
        var d, h, l, p = r2(308), b = r2(154), y = r2(155).getHighWaterMark, v = r2(48).codes, m = v.ERR_INVALID_ARG_TYPE, g = v.ERR_STREAM_PUSH_AFTER_EOF, w = v.ERR_METHOD_NOT_IMPLEMENTED, _ = v.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r2(3)(E, a);
        var k = b.errorOrDestroy, A = ["error", "close", "destroy", "pause", "resume"];
        function S(e2, t3, n2) {
          i = i || r2(49), e2 = e2 || {}, "boolean" != typeof n2 && (n2 = t3 instanceof i), this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.readableObjectMode), this.highWaterMark = y(this, e2, "readableHighWaterMark", n2), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.destroyed = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (d || (d = r2(21).StringDecoder), this.decoder = new d(e2.encoding), this.encoding = e2.encoding);
        }
        function E(e2) {
          if (i = i || r2(49), !(this instanceof E))
            return new E(e2);
          var t3 = this instanceof i;
          this._readableState = new S(e2, this, t3), this.readable = true, e2 && ("function" == typeof e2.read && (this._read = e2.read), "function" == typeof e2.destroy && (this._destroy = e2.destroy)), a.call(this);
        }
        function x(e2, t3, r3, n2, i2) {
          c("readableAddChunk", t3);
          var o2, a2 = e2._readableState;
          if (null === t3)
            a2.reading = false, function(e3, t4) {
              if (c("onEofChunk"), t4.ended)
                return;
              if (t4.decoder) {
                var r4 = t4.decoder.end();
                r4 && r4.length && (t4.buffer.push(r4), t4.length += t4.objectMode ? 1 : r4.length);
              }
              t4.ended = true, t4.sync ? T(e3) : (t4.needReadable = false, t4.emittedReadable || (t4.emittedReadable = true, B(e3)));
            }(e2, a2);
          else if (i2 || (o2 = function(e3, t4) {
            var r4;
            n3 = t4, s2.isBuffer(n3) || n3 instanceof f2 || "string" == typeof t4 || void 0 === t4 || e3.objectMode || (r4 = new m("chunk", ["string", "Buffer", "Uint8Array"], t4));
            var n3;
            return r4;
          }(a2, t3)), o2)
            k(e2, o2);
          else if (a2.objectMode || t3 && t3.length > 0)
            if ("string" == typeof t3 || a2.objectMode || Object.getPrototypeOf(t3) === s2.prototype || (t3 = function(e3) {
              return s2.from(e3);
            }(t3)), n2)
              a2.endEmitted ? k(e2, new _()) : P(e2, a2, t3, true);
            else if (a2.ended)
              k(e2, new g());
            else {
              if (a2.destroyed)
                return false;
              a2.reading = false, a2.decoder && !r3 ? (t3 = a2.decoder.write(t3), a2.objectMode || 0 !== t3.length ? P(e2, a2, t3, false) : M(e2, a2)) : P(e2, a2, t3, false);
            }
          else
            n2 || (a2.reading = false, M(e2, a2));
          return !a2.ended && (a2.length < a2.highWaterMark || 0 === a2.length);
        }
        function P(e2, t3, r3, n2) {
          t3.flowing && 0 === t3.length && !t3.sync ? (t3.awaitDrain = 0, e2.emit("data", r3)) : (t3.length += t3.objectMode ? 1 : r3.length, n2 ? t3.buffer.unshift(r3) : t3.buffer.push(r3), t3.needReadable && T(e2)), M(e2, t3);
        }
        Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function(e2) {
          this._readableState && (this._readableState.destroyed = e2);
        } }), E.prototype.destroy = b.destroy, E.prototype._undestroy = b.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        }, E.prototype.push = function(e2, t3) {
          var r3, n2 = this._readableState;
          return n2.objectMode ? r3 = true : "string" == typeof e2 && ((t3 = t3 || n2.defaultEncoding) !== n2.encoding && (e2 = s2.from(e2, t3), t3 = ""), r3 = true), x(this, e2, t3, false, r3);
        }, E.prototype.unshift = function(e2) {
          return x(this, e2, null, true, false);
        }, E.prototype.isPaused = function() {
          return false === this._readableState.flowing;
        }, E.prototype.setEncoding = function(e2) {
          d || (d = r2(21).StringDecoder);
          var t3 = new d(e2);
          this._readableState.decoder = t3, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var n2 = this._readableState.buffer.head, i2 = ""; null !== n2; )
            i2 += t3.write(n2.data), n2 = n2.next;
          return this._readableState.buffer.clear(), "" !== i2 && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
        };
        function O(e2, t3) {
          return e2 <= 0 || 0 === t3.length && t3.ended ? 0 : t3.objectMode ? 1 : e2 != e2 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e2 > t3.highWaterMark && (t3.highWaterMark = function(e3) {
            return e3 >= 1073741824 ? e3 = 1073741824 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
          }(e2)), e2 <= t3.length ? e2 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function T(e2) {
          var t3 = e2._readableState;
          c("emitReadable", t3.needReadable, t3.emittedReadable), t3.needReadable = false, t3.emittedReadable || (c("emitReadable", t3.flowing), t3.emittedReadable = true, n.nextTick(B, e2));
        }
        function B(e2) {
          var t3 = e2._readableState;
          c("emitReadable_", t3.destroyed, t3.length, t3.ended), t3.destroyed || !t3.length && !t3.ended || (e2.emit("readable"), t3.emittedReadable = false), t3.needReadable = !t3.flowing && !t3.ended && t3.length <= t3.highWaterMark, j(e2);
        }
        function M(e2, t3) {
          t3.readingMore || (t3.readingMore = true, n.nextTick(R, e2, t3));
        }
        function R(e2, t3) {
          for (; !t3.reading && !t3.ended && (t3.length < t3.highWaterMark || t3.flowing && 0 === t3.length); ) {
            var r3 = t3.length;
            if (c("maybeReadMore read 0"), e2.read(0), r3 === t3.length)
              break;
          }
          t3.readingMore = false;
        }
        function I(e2) {
          var t3 = e2._readableState;
          t3.readableListening = e2.listenerCount("readable") > 0, t3.resumeScheduled && !t3.paused ? t3.flowing = true : e2.listenerCount("data") > 0 && e2.resume();
        }
        function C(e2) {
          c("readable nexttick read 0"), e2.read(0);
        }
        function U(e2, t3) {
          c("resume", t3.reading), t3.reading || e2.read(0), t3.resumeScheduled = false, e2.emit("resume"), j(e2), t3.flowing && !t3.reading && e2.read(0);
        }
        function j(e2) {
          var t3 = e2._readableState;
          for (c("flow", t3.flowing); t3.flowing && null !== e2.read(); )
            ;
        }
        function N(e2, t3) {
          return 0 === t3.length ? null : (t3.objectMode ? r3 = t3.buffer.shift() : !e2 || e2 >= t3.length ? (r3 = t3.decoder ? t3.buffer.join("") : 1 === t3.buffer.length ? t3.buffer.first() : t3.buffer.concat(t3.length), t3.buffer.clear()) : r3 = t3.buffer.consume(e2, t3.decoder), r3);
          var r3;
        }
        function L(e2) {
          var t3 = e2._readableState;
          c("endReadable", t3.endEmitted), t3.endEmitted || (t3.ended = true, n.nextTick(D, t3, e2));
        }
        function D(e2, t3) {
          if (c("endReadableNT", e2.endEmitted, e2.length), !e2.endEmitted && 0 === e2.length && (e2.endEmitted = true, t3.readable = false, t3.emit("end"), e2.autoDestroy)) {
            var r3 = t3._writableState;
            (!r3 || r3.autoDestroy && r3.finished) && t3.destroy();
          }
        }
        function F(e2, t3) {
          for (var r3 = 0, n2 = e2.length; r3 < n2; r3++)
            if (e2[r3] === t3)
              return r3;
          return -1;
        }
        E.prototype.read = function(e2) {
          c("read", e2), e2 = parseInt(e2, 10);
          var t3 = this._readableState, r3 = e2;
          if (0 !== e2 && (t3.emittedReadable = false), 0 === e2 && t3.needReadable && ((0 !== t3.highWaterMark ? t3.length >= t3.highWaterMark : t3.length > 0) || t3.ended))
            return c("read: emitReadable", t3.length, t3.ended), 0 === t3.length && t3.ended ? L(this) : T(this), null;
          if (0 === (e2 = O(e2, t3)) && t3.ended)
            return 0 === t3.length && L(this), null;
          var n2, i2 = t3.needReadable;
          return c("need readable", i2), (0 === t3.length || t3.length - e2 < t3.highWaterMark) && c("length less than watermark", i2 = true), t3.ended || t3.reading ? c("reading or ended", i2 = false) : i2 && (c("do read"), t3.reading = true, t3.sync = true, 0 === t3.length && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e2 = O(r3, t3))), null === (n2 = e2 > 0 ? N(e2, t3) : null) ? (t3.needReadable = t3.length <= t3.highWaterMark, e2 = 0) : (t3.length -= e2, t3.awaitDrain = 0), 0 === t3.length && (t3.ended || (t3.needReadable = true), r3 !== e2 && t3.ended && L(this)), null !== n2 && this.emit("data", n2), n2;
        }, E.prototype._read = function(e2) {
          k(this, new w("_read()"));
        }, E.prototype.pipe = function(e2, t3) {
          var r3 = this, i2 = this._readableState;
          switch (i2.pipesCount) {
            case 0:
              i2.pipes = e2;
              break;
            case 1:
              i2.pipes = [i2.pipes, e2];
              break;
            default:
              i2.pipes.push(e2);
          }
          i2.pipesCount += 1, c("pipe count=%d opts=%j", i2.pipesCount, t3);
          var a2 = (!t3 || false !== t3.end) && e2 !== n.stdout && e2 !== n.stderr ? f3 : y2;
          function s3(t4, n2) {
            c("onunpipe"), t4 === r3 && n2 && false === n2.hasUnpiped && (n2.hasUnpiped = true, c("cleanup"), e2.removeListener("close", p2), e2.removeListener("finish", b2), e2.removeListener("drain", u2), e2.removeListener("error", l2), e2.removeListener("unpipe", s3), r3.removeListener("end", f3), r3.removeListener("end", y2), r3.removeListener("data", h2), d2 = true, !i2.awaitDrain || e2._writableState && !e2._writableState.needDrain || u2());
          }
          function f3() {
            c("onend"), e2.end();
          }
          i2.endEmitted ? n.nextTick(a2) : r3.once("end", a2), e2.on("unpipe", s3);
          var u2 = function(e3) {
            return function() {
              var t4 = e3._readableState;
              c("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, 0 === t4.awaitDrain && o(e3, "data") && (t4.flowing = true, j(e3));
            };
          }(r3);
          e2.on("drain", u2);
          var d2 = false;
          function h2(t4) {
            c("ondata");
            var n2 = e2.write(t4);
            c("dest.write", n2), false === n2 && ((1 === i2.pipesCount && i2.pipes === e2 || i2.pipesCount > 1 && -1 !== F(i2.pipes, e2)) && !d2 && (c("false write response, pause", i2.awaitDrain), i2.awaitDrain++), r3.pause());
          }
          function l2(t4) {
            c("onerror", t4), y2(), e2.removeListener("error", l2), 0 === o(e2, "error") && k(e2, t4);
          }
          function p2() {
            e2.removeListener("finish", b2), y2();
          }
          function b2() {
            c("onfinish"), e2.removeListener("close", p2), y2();
          }
          function y2() {
            c("unpipe"), r3.unpipe(e2);
          }
          return r3.on("data", h2), function(e3, t4, r4) {
            if ("function" == typeof e3.prependListener)
              return e3.prependListener(t4, r4);
            e3._events && e3._events[t4] ? Array.isArray(e3._events[t4]) ? e3._events[t4].unshift(r4) : e3._events[t4] = [r4, e3._events[t4]] : e3.on(t4, r4);
          }(e2, "error", l2), e2.once("close", p2), e2.once("finish", b2), e2.emit("pipe", r3), i2.flowing || (c("pipe resume"), r3.resume()), e2;
        }, E.prototype.unpipe = function(e2) {
          var t3 = this._readableState, r3 = { hasUnpiped: false };
          if (0 === t3.pipesCount)
            return this;
          if (1 === t3.pipesCount)
            return e2 && e2 !== t3.pipes || (e2 || (e2 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e2 && e2.emit("unpipe", this, r3)), this;
          if (!e2) {
            var n2 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var o2 = 0; o2 < i2; o2++)
              n2[o2].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var a2 = F(t3.pipes, e2);
          return -1 === a2 || (t3.pipes.splice(a2, 1), t3.pipesCount -= 1, 1 === t3.pipesCount && (t3.pipes = t3.pipes[0]), e2.emit("unpipe", this, r3)), this;
        }, E.prototype.on = function(e2, t3) {
          var r3 = a.prototype.on.call(this, e2, t3), i2 = this._readableState;
          return "data" === e2 ? (i2.readableListening = this.listenerCount("readable") > 0, false !== i2.flowing && this.resume()) : "readable" === e2 && (i2.endEmitted || i2.readableListening || (i2.readableListening = i2.needReadable = true, i2.flowing = false, i2.emittedReadable = false, c("on readable", i2.length, i2.reading), i2.length ? T(this) : i2.reading || n.nextTick(C, this))), r3;
        }, E.prototype.addListener = E.prototype.on, E.prototype.removeListener = function(e2, t3) {
          var r3 = a.prototype.removeListener.call(this, e2, t3);
          return "readable" === e2 && n.nextTick(I, this), r3;
        }, E.prototype.removeAllListeners = function(e2) {
          var t3 = a.prototype.removeAllListeners.apply(this, arguments);
          return "readable" !== e2 && void 0 !== e2 || n.nextTick(I, this), t3;
        }, E.prototype.resume = function() {
          var e2 = this._readableState;
          return e2.flowing || (c("resume"), e2.flowing = !e2.readableListening, function(e3, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, n.nextTick(U, e3, t3));
          }(this, e2)), e2.paused = false, this;
        }, E.prototype.pause = function() {
          return c("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (c("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, E.prototype.wrap = function(e2) {
          var t3 = this, r3 = this._readableState, n2 = false;
          for (var i2 in e2.on("end", function() {
            if (c("wrapped end"), r3.decoder && !r3.ended) {
              var e3 = r3.decoder.end();
              e3 && e3.length && t3.push(e3);
            }
            t3.push(null);
          }), e2.on("data", function(i3) {
            (c("wrapped data"), r3.decoder && (i3 = r3.decoder.write(i3)), r3.objectMode && null == i3) || (r3.objectMode || i3 && i3.length) && (t3.push(i3) || (n2 = true, e2.pause()));
          }), e2)
            void 0 === this[i2] && "function" == typeof e2[i2] && (this[i2] = function(t4) {
              return function() {
                return e2[t4].apply(e2, arguments);
              };
            }(i2));
          for (var o2 = 0; o2 < A.length; o2++)
            e2.on(A[o2], this.emit.bind(this, A[o2]));
          return this._read = function(t4) {
            c("wrapped _read", t4), n2 && (n2 = false, e2.resume());
          }, this;
        }, "function" == typeof Symbol && (E.prototype[Symbol.asyncIterator] = function() {
          return void 0 === h && (h = r2(310)), h(this);
        }), Object.defineProperty(E.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(E.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(E.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(e2) {
          this._readableState && (this._readableState.flowing = e2);
        } }), E._fromList = N, Object.defineProperty(E.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), "function" == typeof Symbol && (E.from = function(e2, t3) {
          return void 0 === l && (l = r2(311)), l(E, e2, t3);
        });
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = r2(20).EventEmitter;
    }, function(e, t, r2) {
      (function(t2) {
        function r3(e2, t3) {
          i(e2, t3), n(e2);
        }
        function n(e2) {
          e2._writableState && !e2._writableState.emitClose || e2._readableState && !e2._readableState.emitClose || e2.emit("close");
        }
        function i(e2, t3) {
          e2.emit("error", t3);
        }
        e.exports = { destroy: function(e2, o) {
          var a = this, s2 = this._readableState && this._readableState.destroyed, f2 = this._writableState && this._writableState.destroyed;
          return s2 || f2 ? (o ? o(e2) : e2 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, t2.nextTick(i, this, e2)) : t2.nextTick(i, this, e2)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e2 || null, function(e3) {
            !o && e3 ? a._writableState ? a._writableState.errorEmitted ? t2.nextTick(n, a) : (a._writableState.errorEmitted = true, t2.nextTick(r3, a, e3)) : t2.nextTick(r3, a, e3) : o ? (t2.nextTick(n, a), o(e3)) : t2.nextTick(n, a);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(e2, t3) {
          var r4 = e2._readableState, n2 = e2._writableState;
          r4 && r4.autoDestroy || n2 && n2.autoDestroy ? e2.destroy(t3) : e2.emit("error", t3);
        } };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(48).codes.ERR_INVALID_OPT_VALUE;
      e.exports = { getHighWaterMark: function(e2, t2, r3, i) {
        var o = function(e3, t3, r4) {
          return null != e3.highWaterMark ? e3.highWaterMark : t3 ? e3[r4] : null;
        }(t2, i, r3);
        if (null != o) {
          if (!isFinite(o) || Math.floor(o) !== o || o < 0)
            throw new n(i ? r3 : "highWaterMark", o);
          return Math.floor(o);
        }
        return e2.objectMode ? 16 : 16384;
      } };
    }, function(e, t, r2) {
      (function(t2, n) {
        function i(e2) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e3, t4, r3) {
              var n2 = e3.entry;
              e3.entry = null;
              for (; n2; ) {
                var i2 = n2.callback;
                t4.pendingcb--, i2(r3), n2 = n2.next;
              }
              t4.corkedRequestsFree.next = e3;
            }(t3, e2);
          };
        }
        var o;
        e.exports = E, E.WritableState = S;
        var a = { deprecate: r2(74) }, s2 = r2(153), f2 = r2(1).Buffer, c = t2.Uint8Array || function() {
        };
        var u, d = r2(154), h = r2(155).getHighWaterMark, l = r2(48).codes, p = l.ERR_INVALID_ARG_TYPE, b = l.ERR_METHOD_NOT_IMPLEMENTED, y = l.ERR_MULTIPLE_CALLBACK, v = l.ERR_STREAM_CANNOT_PIPE, m = l.ERR_STREAM_DESTROYED, g = l.ERR_STREAM_NULL_VALUES, w = l.ERR_STREAM_WRITE_AFTER_END, _ = l.ERR_UNKNOWN_ENCODING, k = d.errorOrDestroy;
        function A() {
        }
        function S(e2, t3, a2) {
          o = o || r2(49), e2 = e2 || {}, "boolean" != typeof a2 && (a2 = t3 instanceof o), this.objectMode = !!e2.objectMode, a2 && (this.objectMode = this.objectMode || !!e2.writableObjectMode), this.highWaterMark = h(this, e2, "writableHighWaterMark", a2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var s3 = false === e2.decodeStrings;
          this.decodeStrings = !s3, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
            !function(e4, t4) {
              var r3 = e4._writableState, i2 = r3.sync, o2 = r3.writecb;
              if ("function" != typeof o2)
                throw new y();
              if (function(e5) {
                e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
              }(r3), t4)
                !function(e5, t5, r4, i3, o3) {
                  --t5.pendingcb, r4 ? (n.nextTick(o3, i3), n.nextTick(M, e5, t5), e5._writableState.errorEmitted = true, k(e5, i3)) : (o3(i3), e5._writableState.errorEmitted = true, k(e5, i3), M(e5, t5));
                }(e4, r3, i2, t4, o2);
              else {
                var a3 = T(r3) || e4.destroyed;
                a3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || O(e4, r3), i2 ? n.nextTick(P, e4, r3, a3, o2) : P(e4, r3, a3, o2);
              }
            }(t3, e3);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
        }
        function E(e2) {
          var t3 = this instanceof (o = o || r2(49));
          if (!t3 && !u.call(E, this))
            return new E(e2);
          this._writableState = new S(e2, this, t3), this.writable = true, e2 && ("function" == typeof e2.write && (this._write = e2.write), "function" == typeof e2.writev && (this._writev = e2.writev), "function" == typeof e2.destroy && (this._destroy = e2.destroy), "function" == typeof e2.final && (this._final = e2.final)), s2.call(this);
        }
        function x(e2, t3, r3, n2, i2, o2, a2) {
          t3.writelen = n2, t3.writecb = a2, t3.writing = true, t3.sync = true, t3.destroyed ? t3.onwrite(new m("write")) : r3 ? e2._writev(i2, t3.onwrite) : e2._write(i2, o2, t3.onwrite), t3.sync = false;
        }
        function P(e2, t3, r3, n2) {
          r3 || function(e3, t4) {
            0 === t4.length && t4.needDrain && (t4.needDrain = false, e3.emit("drain"));
          }(e2, t3), t3.pendingcb--, n2(), M(e2, t3);
        }
        function O(e2, t3) {
          t3.bufferProcessing = true;
          var r3 = t3.bufferedRequest;
          if (e2._writev && r3 && r3.next) {
            var n2 = t3.bufferedRequestCount, o2 = new Array(n2), a2 = t3.corkedRequestsFree;
            a2.entry = r3;
            for (var s3 = 0, f3 = true; r3; )
              o2[s3] = r3, r3.isBuf || (f3 = false), r3 = r3.next, s3 += 1;
            o2.allBuffers = f3, x(e2, t3, true, t3.length, o2, "", a2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, a2.next ? (t3.corkedRequestsFree = a2.next, a2.next = null) : t3.corkedRequestsFree = new i(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r3; ) {
              var c2 = r3.chunk, u2 = r3.encoding, d2 = r3.callback;
              if (x(e2, t3, false, t3.objectMode ? 1 : c2.length, c2, u2, d2), r3 = r3.next, t3.bufferedRequestCount--, t3.writing)
                break;
            }
            null === r3 && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r3, t3.bufferProcessing = false;
        }
        function T(e2) {
          return e2.ending && 0 === e2.length && null === e2.bufferedRequest && !e2.finished && !e2.writing;
        }
        function B(e2, t3) {
          e2._final(function(r3) {
            t3.pendingcb--, r3 && k(e2, r3), t3.prefinished = true, e2.emit("prefinish"), M(e2, t3);
          });
        }
        function M(e2, t3) {
          var r3 = T(t3);
          if (r3 && (function(e3, t4) {
            t4.prefinished || t4.finalCalled || ("function" != typeof e3._final || t4.destroyed ? (t4.prefinished = true, e3.emit("prefinish")) : (t4.pendingcb++, t4.finalCalled = true, n.nextTick(B, e3, t4)));
          }(e2, t3), 0 === t3.pendingcb && (t3.finished = true, e2.emit("finish"), t3.autoDestroy))) {
            var i2 = e2._readableState;
            (!i2 || i2.autoDestroy && i2.endEmitted) && e2.destroy();
          }
          return r3;
        }
        r2(3)(E, s2), S.prototype.getBuffer = function() {
          for (var e2 = this.bufferedRequest, t3 = []; e2; )
            t3.push(e2), e2 = e2.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(S.prototype, "buffer", { get: a.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch (e2) {
          }
        }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (u = Function.prototype[Symbol.hasInstance], Object.defineProperty(E, Symbol.hasInstance, { value: function(e2) {
          return !!u.call(this, e2) || this === E && (e2 && e2._writableState instanceof S);
        } })) : u = function(e2) {
          return e2 instanceof this;
        }, E.prototype.pipe = function() {
          k(this, new v());
        }, E.prototype.write = function(e2, t3, r3) {
          var i2, o2 = this._writableState, a2 = false, s3 = !o2.objectMode && (i2 = e2, f2.isBuffer(i2) || i2 instanceof c);
          return s3 && !f2.isBuffer(e2) && (e2 = function(e3) {
            return f2.from(e3);
          }(e2)), "function" == typeof t3 && (r3 = t3, t3 = null), s3 ? t3 = "buffer" : t3 || (t3 = o2.defaultEncoding), "function" != typeof r3 && (r3 = A), o2.ending ? function(e3, t4) {
            var r4 = new w();
            k(e3, r4), n.nextTick(t4, r4);
          }(this, r3) : (s3 || function(e3, t4, r4, i3) {
            var o3;
            return null === r4 ? o3 = new g() : "string" == typeof r4 || t4.objectMode || (o3 = new p("chunk", ["string", "Buffer"], r4)), !o3 || (k(e3, o3), n.nextTick(i3, o3), false);
          }(this, o2, e2, r3)) && (o2.pendingcb++, a2 = function(e3, t4, r4, n2, i3, o3) {
            if (!r4) {
              var a3 = function(e4, t5, r5) {
                e4.objectMode || false === e4.decodeStrings || "string" != typeof t5 || (t5 = f2.from(t5, r5));
                return t5;
              }(t4, n2, i3);
              n2 !== a3 && (r4 = true, i3 = "buffer", n2 = a3);
            }
            var s4 = t4.objectMode ? 1 : n2.length;
            t4.length += s4;
            var c2 = t4.length < t4.highWaterMark;
            c2 || (t4.needDrain = true);
            if (t4.writing || t4.corked) {
              var u2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = { chunk: n2, encoding: i3, isBuf: r4, callback: o3, next: null }, u2 ? u2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else
              x(e3, t4, false, s4, n2, i3, o3);
            return c2;
          }(this, o2, s3, e2, t3, r3)), a2;
        }, E.prototype.cork = function() {
          this._writableState.corked++;
        }, E.prototype.uncork = function() {
          var e2 = this._writableState;
          e2.corked && (e2.corked--, e2.writing || e2.corked || e2.bufferProcessing || !e2.bufferedRequest || O(this, e2));
        }, E.prototype.setDefaultEncoding = function(e2) {
          if ("string" == typeof e2 && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
            throw new _(e2);
          return this._writableState.defaultEncoding = e2, this;
        }, Object.defineProperty(E.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(E.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), E.prototype._write = function(e2, t3, r3) {
          r3(new b("_write()"));
        }, E.prototype._writev = null, E.prototype.end = function(e2, t3, r3) {
          var i2 = this._writableState;
          return "function" == typeof e2 ? (r3 = e2, e2 = null, t3 = null) : "function" == typeof t3 && (r3 = t3, t3 = null), null != e2 && this.write(e2, t3), i2.corked && (i2.corked = 1, this.uncork()), i2.ending || function(e3, t4, r4) {
            t4.ending = true, M(e3, t4), r4 && (t4.finished ? n.nextTick(r4) : e3.once("finish", r4));
            t4.ended = true, e3.writable = false;
          }(this, i2, r3), this;
        }, Object.defineProperty(E.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function(e2) {
          this._writableState && (this._writableState.destroyed = e2);
        } }), E.prototype.destroy = d.destroy, E.prototype._undestroy = d.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        };
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = u;
      var n = r2(48).codes, i = n.ERR_METHOD_NOT_IMPLEMENTED, o = n.ERR_MULTIPLE_CALLBACK, a = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, s2 = n.ERR_TRANSFORM_WITH_LENGTH_0, f2 = r2(49);
      function c(e2, t2) {
        var r3 = this._transformState;
        r3.transforming = false;
        var n2 = r3.writecb;
        if (null === n2)
          return this.emit("error", new o());
        r3.writechunk = null, r3.writecb = null, null != t2 && this.push(t2), n2(e2);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function u(e2) {
        if (!(this instanceof u))
          return new u(e2);
        f2.call(this, e2), this._transformState = { afterTransform: c.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e2 && ("function" == typeof e2.transform && (this._transform = e2.transform), "function" == typeof e2.flush && (this._flush = e2.flush)), this.on("prefinish", d);
      }
      function d() {
        var e2 = this;
        "function" != typeof this._flush || this._readableState.destroyed ? h(this, null, null) : this._flush(function(t2, r3) {
          h(e2, t2, r3);
        });
      }
      function h(e2, t2, r3) {
        if (t2)
          return e2.emit("error", t2);
        if (null != r3 && e2.push(r3), e2._writableState.length)
          throw new s2();
        if (e2._transformState.transforming)
          throw new a();
        return e2.push(null);
      }
      r2(3)(u, f2), u.prototype.push = function(e2, t2) {
        return this._transformState.needTransform = false, f2.prototype.push.call(this, e2, t2);
      }, u.prototype._transform = function(e2, t2, r3) {
        r3(new i("_transform()"));
      }, u.prototype._write = function(e2, t2, r3) {
        var n2 = this._transformState;
        if (n2.writecb = r3, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, u.prototype._read = function(e2) {
        var t2 = this._transformState;
        null === t2.writechunk || t2.transforming ? t2.needTransform = true : (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform));
      }, u.prototype._destroy = function(e2, t2) {
        f2.prototype._destroy.call(this, e2, function(e3) {
          t2(e3);
        });
      };
    }, function(e, t, r2) {
      var n = r2(3), i = r2(50), o = r2(5).Buffer, a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], s2 = new Array(64);
      function f2() {
        this.init(), this._w = s2, i.call(this, 64, 56);
      }
      function c(e2, t2, r3) {
        return r3 ^ e2 & (t2 ^ r3);
      }
      function u(e2, t2, r3) {
        return e2 & t2 | r3 & (e2 | t2);
      }
      function d(e2) {
        return (e2 >>> 2 | e2 << 30) ^ (e2 >>> 13 | e2 << 19) ^ (e2 >>> 22 | e2 << 10);
      }
      function h(e2) {
        return (e2 >>> 6 | e2 << 26) ^ (e2 >>> 11 | e2 << 21) ^ (e2 >>> 25 | e2 << 7);
      }
      function l(e2) {
        return (e2 >>> 7 | e2 << 25) ^ (e2 >>> 18 | e2 << 14) ^ e2 >>> 3;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
      }, f2.prototype._update = function(e2) {
        for (var t2, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s3 = 0 | this._d, f3 = 0 | this._e, p = 0 | this._f, b = 0 | this._g, y = 0 | this._h, v = 0; v < 16; ++v)
          r3[v] = e2.readInt32BE(4 * v);
        for (; v < 64; ++v)
          r3[v] = 0 | (((t2 = r3[v - 2]) >>> 17 | t2 << 15) ^ (t2 >>> 19 | t2 << 13) ^ t2 >>> 10) + r3[v - 7] + l(r3[v - 15]) + r3[v - 16];
        for (var m = 0; m < 64; ++m) {
          var g = y + h(f3) + c(f3, p, b) + a[m] + r3[m] | 0, w = d(n2) + u(n2, i2, o2) | 0;
          y = b, b = p, p = f3, f3 = s3 + g | 0, s3 = o2, o2 = i2, i2 = n2, n2 = g + w | 0;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s3 + this._d | 0, this._e = f3 + this._e | 0, this._f = p + this._f | 0, this._g = b + this._g | 0, this._h = y + this._h | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(32);
        return e2.writeInt32BE(this._a, 0), e2.writeInt32BE(this._b, 4), e2.writeInt32BE(this._c, 8), e2.writeInt32BE(this._d, 12), e2.writeInt32BE(this._e, 16), e2.writeInt32BE(this._f, 20), e2.writeInt32BE(this._g, 24), e2.writeInt32BE(this._h, 28), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(3), i = r2(50), o = r2(5).Buffer, a = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], s2 = new Array(160);
      function f2() {
        this.init(), this._w = s2, i.call(this, 128, 112);
      }
      function c(e2, t2, r3) {
        return r3 ^ e2 & (t2 ^ r3);
      }
      function u(e2, t2, r3) {
        return e2 & t2 | r3 & (e2 | t2);
      }
      function d(e2, t2) {
        return (e2 >>> 28 | t2 << 4) ^ (t2 >>> 2 | e2 << 30) ^ (t2 >>> 7 | e2 << 25);
      }
      function h(e2, t2) {
        return (e2 >>> 14 | t2 << 18) ^ (e2 >>> 18 | t2 << 14) ^ (t2 >>> 9 | e2 << 23);
      }
      function l(e2, t2) {
        return (e2 >>> 1 | t2 << 31) ^ (e2 >>> 8 | t2 << 24) ^ e2 >>> 7;
      }
      function p(e2, t2) {
        return (e2 >>> 1 | t2 << 31) ^ (e2 >>> 8 | t2 << 24) ^ (e2 >>> 7 | t2 << 25);
      }
      function b(e2, t2) {
        return (e2 >>> 19 | t2 << 13) ^ (t2 >>> 29 | e2 << 3) ^ e2 >>> 6;
      }
      function y(e2, t2) {
        return (e2 >>> 19 | t2 << 13) ^ (t2 >>> 29 | e2 << 3) ^ (e2 >>> 6 | t2 << 26);
      }
      function v(e2, t2) {
        return e2 >>> 0 < t2 >>> 0 ? 1 : 0;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
      }, f2.prototype._update = function(e2) {
        for (var t2 = this._w, r3 = 0 | this._ah, n2 = 0 | this._bh, i2 = 0 | this._ch, o2 = 0 | this._dh, s3 = 0 | this._eh, f3 = 0 | this._fh, m = 0 | this._gh, g = 0 | this._hh, w = 0 | this._al, _ = 0 | this._bl, k = 0 | this._cl, A = 0 | this._dl, S = 0 | this._el, E = 0 | this._fl, x = 0 | this._gl, P = 0 | this._hl, O = 0; O < 32; O += 2)
          t2[O] = e2.readInt32BE(4 * O), t2[O + 1] = e2.readInt32BE(4 * O + 4);
        for (; O < 160; O += 2) {
          var T = t2[O - 30], B = t2[O - 30 + 1], M = l(T, B), R = p(B, T), I = b(T = t2[O - 4], B = t2[O - 4 + 1]), C = y(B, T), U = t2[O - 14], j = t2[O - 14 + 1], N = t2[O - 32], L = t2[O - 32 + 1], D = R + j | 0, F = M + U + v(D, R) | 0;
          F = (F = F + I + v(D = D + C | 0, C) | 0) + N + v(D = D + L | 0, L) | 0, t2[O] = F, t2[O + 1] = D;
        }
        for (var q = 0; q < 160; q += 2) {
          F = t2[q], D = t2[q + 1];
          var z = u(r3, n2, i2), H = u(w, _, k), K2 = d(r3, w), G = d(w, r3), W = h(s3, S), V = h(S, s3), J = a[q], Y = a[q + 1], X = c(s3, f3, m), Q = c(S, E, x), Z = P + V | 0, $ = g + W + v(Z, P) | 0;
          $ = ($ = ($ = $ + X + v(Z = Z + Q | 0, Q) | 0) + J + v(Z = Z + Y | 0, Y) | 0) + F + v(Z = Z + D | 0, D) | 0;
          var ee = G + H | 0, te = K2 + z + v(ee, G) | 0;
          g = m, P = x, m = f3, x = E, f3 = s3, E = S, s3 = o2 + $ + v(S = A + Z | 0, A) | 0, o2 = i2, A = k, i2 = n2, k = _, n2 = r3, _ = w, r3 = $ + te + v(w = Z + ee | 0, Z) | 0;
        }
        this._al = this._al + w | 0, this._bl = this._bl + _ | 0, this._cl = this._cl + k | 0, this._dl = this._dl + A | 0, this._el = this._el + S | 0, this._fl = this._fl + E | 0, this._gl = this._gl + x | 0, this._hl = this._hl + P | 0, this._ah = this._ah + r3 + v(this._al, w) | 0, this._bh = this._bh + n2 + v(this._bl, _) | 0, this._ch = this._ch + i2 + v(this._cl, k) | 0, this._dh = this._dh + o2 + v(this._dl, A) | 0, this._eh = this._eh + s3 + v(this._el, S) | 0, this._fh = this._fh + f3 + v(this._fl, E) | 0, this._gh = this._gh + m + v(this._gl, x) | 0, this._hh = this._hh + g + v(this._hl, P) | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(64);
        function t2(t3, r3, n2) {
          e2.writeInt32BE(t3, n2), e2.writeInt32BE(r3, n2 + 4);
        }
        return t2(this._ah, this._al, 0), t2(this._bh, this._bl, 8), t2(this._ch, this._cl, 16), t2(this._dh, this._dl, 24), t2(this._eh, this._el, 32), t2(this._fh, this._fl, 40), t2(this._gh, this._gl, 48), t2(this._hh, this._hl, 56), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      e.exports = i;
      var n = r2(20).EventEmitter;
      function i() {
        n.call(this);
      }
      r2(3)(i, n), i.Readable = r2(61), i.Writable = r2(323), i.Duplex = r2(324), i.Transform = r2(325), i.PassThrough = r2(326), i.Stream = i, i.prototype.pipe = function(e2, t2) {
        var r3 = this;
        function i2(t3) {
          e2.writable && false === e2.write(t3) && r3.pause && r3.pause();
        }
        function o() {
          r3.readable && r3.resume && r3.resume();
        }
        r3.on("data", i2), e2.on("drain", o), e2._isStdio || t2 && false === t2.end || (r3.on("end", s2), r3.on("close", f2));
        var a = false;
        function s2() {
          a || (a = true, e2.end());
        }
        function f2() {
          a || (a = true, "function" == typeof e2.destroy && e2.destroy());
        }
        function c(e3) {
          if (u(), 0 === n.listenerCount(this, "error"))
            throw e3;
        }
        function u() {
          r3.removeListener("data", i2), e2.removeListener("drain", o), r3.removeListener("end", s2), r3.removeListener("close", f2), r3.removeListener("error", c), e2.removeListener("error", c), r3.removeListener("end", u), r3.removeListener("close", u), e2.removeListener("close", u);
        }
        return r3.on("error", c), e2.on("error", c), r3.on("end", u), r3.on("close", u), e2.on("close", u), e2.emit("pipe", r3), e2;
      };
    }, function(e, t, r2) {
      (function(t2, n) {
        var i = r2(75);
        e.exports = g;
        var o, a = r2(130);
        g.ReadableState = m;
        r2(20).EventEmitter;
        var s2 = function(e2, t3) {
          return e2.listeners(t3).length;
        }, f2 = r2(162), c = r2(101).Buffer, u = t2.Uint8Array || function() {
        };
        var d = Object.create(r2(62));
        d.inherits = r2(3);
        var h = r2(318), l = void 0;
        l = h && h.debuglog ? h.debuglog("stream") : function() {
        };
        var p, b = r2(319), y = r2(163);
        d.inherits(g, f2);
        var v = ["error", "close", "destroy", "pause", "resume"];
        function m(e2, t3) {
          e2 = e2 || {};
          var n2 = t3 instanceof (o = o || r2(37));
          this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.readableObjectMode);
          var i2 = e2.highWaterMark, a2 = e2.readableHighWaterMark, s3 = this.objectMode ? 16 : 16384;
          this.highWaterMark = i2 || 0 === i2 ? i2 : n2 && (a2 || 0 === a2) ? a2 : s3, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new b(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.destroyed = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (p || (p = r2(21).StringDecoder), this.decoder = new p(e2.encoding), this.encoding = e2.encoding);
        }
        function g(e2) {
          if (o = o || r2(37), !(this instanceof g))
            return new g(e2);
          this._readableState = new m(e2, this), this.readable = true, e2 && ("function" == typeof e2.read && (this._read = e2.read), "function" == typeof e2.destroy && (this._destroy = e2.destroy)), f2.call(this);
        }
        function w(e2, t3, r3, n2, i2) {
          var o2, a2 = e2._readableState;
          null === t3 ? (a2.reading = false, function(e3, t4) {
            if (t4.ended)
              return;
            if (t4.decoder) {
              var r4 = t4.decoder.end();
              r4 && r4.length && (t4.buffer.push(r4), t4.length += t4.objectMode ? 1 : r4.length);
            }
            t4.ended = true, A(e3);
          }(e2, a2)) : (i2 || (o2 = function(e3, t4) {
            var r4;
            n3 = t4, c.isBuffer(n3) || n3 instanceof u || "string" == typeof t4 || void 0 === t4 || e3.objectMode || (r4 = new TypeError("Invalid non-string/buffer chunk"));
            var n3;
            return r4;
          }(a2, t3)), o2 ? e2.emit("error", o2) : a2.objectMode || t3 && t3.length > 0 ? ("string" == typeof t3 || a2.objectMode || Object.getPrototypeOf(t3) === c.prototype || (t3 = function(e3) {
            return c.from(e3);
          }(t3)), n2 ? a2.endEmitted ? e2.emit("error", new Error("stream.unshift() after end event")) : _(e2, a2, t3, true) : a2.ended ? e2.emit("error", new Error("stream.push() after EOF")) : (a2.reading = false, a2.decoder && !r3 ? (t3 = a2.decoder.write(t3), a2.objectMode || 0 !== t3.length ? _(e2, a2, t3, false) : E(e2, a2)) : _(e2, a2, t3, false))) : n2 || (a2.reading = false));
          return function(e3) {
            return !e3.ended && (e3.needReadable || e3.length < e3.highWaterMark || 0 === e3.length);
          }(a2);
        }
        function _(e2, t3, r3, n2) {
          t3.flowing && 0 === t3.length && !t3.sync ? (e2.emit("data", r3), e2.read(0)) : (t3.length += t3.objectMode ? 1 : r3.length, n2 ? t3.buffer.unshift(r3) : t3.buffer.push(r3), t3.needReadable && A(e2)), E(e2, t3);
        }
        Object.defineProperty(g.prototype, "destroyed", { get: function() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function(e2) {
          this._readableState && (this._readableState.destroyed = e2);
        } }), g.prototype.destroy = y.destroy, g.prototype._undestroy = y.undestroy, g.prototype._destroy = function(e2, t3) {
          this.push(null), t3(e2);
        }, g.prototype.push = function(e2, t3) {
          var r3, n2 = this._readableState;
          return n2.objectMode ? r3 = true : "string" == typeof e2 && ((t3 = t3 || n2.defaultEncoding) !== n2.encoding && (e2 = c.from(e2, t3), t3 = ""), r3 = true), w(this, e2, t3, false, r3);
        }, g.prototype.unshift = function(e2) {
          return w(this, e2, null, true, false);
        }, g.prototype.isPaused = function() {
          return false === this._readableState.flowing;
        }, g.prototype.setEncoding = function(e2) {
          return p || (p = r2(21).StringDecoder), this._readableState.decoder = new p(e2), this._readableState.encoding = e2, this;
        };
        function k(e2, t3) {
          return e2 <= 0 || 0 === t3.length && t3.ended ? 0 : t3.objectMode ? 1 : e2 != e2 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e2 > t3.highWaterMark && (t3.highWaterMark = function(e3) {
            return e3 >= 8388608 ? e3 = 8388608 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
          }(e2)), e2 <= t3.length ? e2 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function A(e2) {
          var t3 = e2._readableState;
          t3.needReadable = false, t3.emittedReadable || (l("emitReadable", t3.flowing), t3.emittedReadable = true, t3.sync ? i.nextTick(S, e2) : S(e2));
        }
        function S(e2) {
          l("emit readable"), e2.emit("readable"), T(e2);
        }
        function E(e2, t3) {
          t3.readingMore || (t3.readingMore = true, i.nextTick(x, e2, t3));
        }
        function x(e2, t3) {
          for (var r3 = t3.length; !t3.reading && !t3.flowing && !t3.ended && t3.length < t3.highWaterMark && (l("maybeReadMore read 0"), e2.read(0), r3 !== t3.length); )
            r3 = t3.length;
          t3.readingMore = false;
        }
        function P(e2) {
          l("readable nexttick read 0"), e2.read(0);
        }
        function O(e2, t3) {
          t3.reading || (l("resume read 0"), e2.read(0)), t3.resumeScheduled = false, t3.awaitDrain = 0, e2.emit("resume"), T(e2), t3.flowing && !t3.reading && e2.read(0);
        }
        function T(e2) {
          var t3 = e2._readableState;
          for (l("flow", t3.flowing); t3.flowing && null !== e2.read(); )
            ;
        }
        function B(e2, t3) {
          return 0 === t3.length ? null : (t3.objectMode ? r3 = t3.buffer.shift() : !e2 || e2 >= t3.length ? (r3 = t3.decoder ? t3.buffer.join("") : 1 === t3.buffer.length ? t3.buffer.head.data : t3.buffer.concat(t3.length), t3.buffer.clear()) : r3 = function(e3, t4, r4) {
            var n2;
            e3 < t4.head.data.length ? (n2 = t4.head.data.slice(0, e3), t4.head.data = t4.head.data.slice(e3)) : n2 = e3 === t4.head.data.length ? t4.shift() : r4 ? function(e4, t5) {
              var r5 = t5.head, n3 = 1, i2 = r5.data;
              e4 -= i2.length;
              for (; r5 = r5.next; ) {
                var o2 = r5.data, a2 = e4 > o2.length ? o2.length : e4;
                if (a2 === o2.length ? i2 += o2 : i2 += o2.slice(0, e4), 0 === (e4 -= a2)) {
                  a2 === o2.length ? (++n3, r5.next ? t5.head = r5.next : t5.head = t5.tail = null) : (t5.head = r5, r5.data = o2.slice(a2));
                  break;
                }
                ++n3;
              }
              return t5.length -= n3, i2;
            }(e3, t4) : function(e4, t5) {
              var r5 = c.allocUnsafe(e4), n3 = t5.head, i2 = 1;
              n3.data.copy(r5), e4 -= n3.data.length;
              for (; n3 = n3.next; ) {
                var o2 = n3.data, a2 = e4 > o2.length ? o2.length : e4;
                if (o2.copy(r5, r5.length - e4, 0, a2), 0 === (e4 -= a2)) {
                  a2 === o2.length ? (++i2, n3.next ? t5.head = n3.next : t5.head = t5.tail = null) : (t5.head = n3, n3.data = o2.slice(a2));
                  break;
                }
                ++i2;
              }
              return t5.length -= i2, r5;
            }(e3, t4);
            return n2;
          }(e2, t3.buffer, t3.decoder), r3);
          var r3;
        }
        function M(e2) {
          var t3 = e2._readableState;
          if (t3.length > 0)
            throw new Error('"endReadable()" called on non-empty stream');
          t3.endEmitted || (t3.ended = true, i.nextTick(R, t3, e2));
        }
        function R(e2, t3) {
          e2.endEmitted || 0 !== e2.length || (e2.endEmitted = true, t3.readable = false, t3.emit("end"));
        }
        function I(e2, t3) {
          for (var r3 = 0, n2 = e2.length; r3 < n2; r3++)
            if (e2[r3] === t3)
              return r3;
          return -1;
        }
        g.prototype.read = function(e2) {
          l("read", e2), e2 = parseInt(e2, 10);
          var t3 = this._readableState, r3 = e2;
          if (0 !== e2 && (t3.emittedReadable = false), 0 === e2 && t3.needReadable && (t3.length >= t3.highWaterMark || t3.ended))
            return l("read: emitReadable", t3.length, t3.ended), 0 === t3.length && t3.ended ? M(this) : A(this), null;
          if (0 === (e2 = k(e2, t3)) && t3.ended)
            return 0 === t3.length && M(this), null;
          var n2, i2 = t3.needReadable;
          return l("need readable", i2), (0 === t3.length || t3.length - e2 < t3.highWaterMark) && l("length less than watermark", i2 = true), t3.ended || t3.reading ? l("reading or ended", i2 = false) : i2 && (l("do read"), t3.reading = true, t3.sync = true, 0 === t3.length && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e2 = k(r3, t3))), null === (n2 = e2 > 0 ? B(e2, t3) : null) ? (t3.needReadable = true, e2 = 0) : t3.length -= e2, 0 === t3.length && (t3.ended || (t3.needReadable = true), r3 !== e2 && t3.ended && M(this)), null !== n2 && this.emit("data", n2), n2;
        }, g.prototype._read = function(e2) {
          this.emit("error", new Error("_read() is not implemented"));
        }, g.prototype.pipe = function(e2, t3) {
          var r3 = this, o2 = this._readableState;
          switch (o2.pipesCount) {
            case 0:
              o2.pipes = e2;
              break;
            case 1:
              o2.pipes = [o2.pipes, e2];
              break;
            default:
              o2.pipes.push(e2);
          }
          o2.pipesCount += 1, l("pipe count=%d opts=%j", o2.pipesCount, t3);
          var f3 = (!t3 || false !== t3.end) && e2 !== n.stdout && e2 !== n.stderr ? u2 : g2;
          function c2(t4, n2) {
            l("onunpipe"), t4 === r3 && n2 && false === n2.hasUnpiped && (n2.hasUnpiped = true, l("cleanup"), e2.removeListener("close", v2), e2.removeListener("finish", m2), e2.removeListener("drain", d2), e2.removeListener("error", y2), e2.removeListener("unpipe", c2), r3.removeListener("end", u2), r3.removeListener("end", g2), r3.removeListener("data", b2), h2 = true, !o2.awaitDrain || e2._writableState && !e2._writableState.needDrain || d2());
          }
          function u2() {
            l("onend"), e2.end();
          }
          o2.endEmitted ? i.nextTick(f3) : r3.once("end", f3), e2.on("unpipe", c2);
          var d2 = function(e3) {
            return function() {
              var t4 = e3._readableState;
              l("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, 0 === t4.awaitDrain && s2(e3, "data") && (t4.flowing = true, T(e3));
            };
          }(r3);
          e2.on("drain", d2);
          var h2 = false;
          var p2 = false;
          function b2(t4) {
            l("ondata"), p2 = false, false !== e2.write(t4) || p2 || ((1 === o2.pipesCount && o2.pipes === e2 || o2.pipesCount > 1 && -1 !== I(o2.pipes, e2)) && !h2 && (l("false write response, pause", r3._readableState.awaitDrain), r3._readableState.awaitDrain++, p2 = true), r3.pause());
          }
          function y2(t4) {
            l("onerror", t4), g2(), e2.removeListener("error", y2), 0 === s2(e2, "error") && e2.emit("error", t4);
          }
          function v2() {
            e2.removeListener("finish", m2), g2();
          }
          function m2() {
            l("onfinish"), e2.removeListener("close", v2), g2();
          }
          function g2() {
            l("unpipe"), r3.unpipe(e2);
          }
          return r3.on("data", b2), function(e3, t4, r4) {
            if ("function" == typeof e3.prependListener)
              return e3.prependListener(t4, r4);
            e3._events && e3._events[t4] ? a(e3._events[t4]) ? e3._events[t4].unshift(r4) : e3._events[t4] = [r4, e3._events[t4]] : e3.on(t4, r4);
          }(e2, "error", y2), e2.once("close", v2), e2.once("finish", m2), e2.emit("pipe", r3), o2.flowing || (l("pipe resume"), r3.resume()), e2;
        }, g.prototype.unpipe = function(e2) {
          var t3 = this._readableState, r3 = { hasUnpiped: false };
          if (0 === t3.pipesCount)
            return this;
          if (1 === t3.pipesCount)
            return e2 && e2 !== t3.pipes || (e2 || (e2 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e2 && e2.emit("unpipe", this, r3)), this;
          if (!e2) {
            var n2 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var o2 = 0; o2 < i2; o2++)
              n2[o2].emit("unpipe", this, r3);
            return this;
          }
          var a2 = I(t3.pipes, e2);
          return -1 === a2 || (t3.pipes.splice(a2, 1), t3.pipesCount -= 1, 1 === t3.pipesCount && (t3.pipes = t3.pipes[0]), e2.emit("unpipe", this, r3)), this;
        }, g.prototype.on = function(e2, t3) {
          var r3 = f2.prototype.on.call(this, e2, t3);
          if ("data" === e2)
            false !== this._readableState.flowing && this.resume();
          else if ("readable" === e2) {
            var n2 = this._readableState;
            n2.endEmitted || n2.readableListening || (n2.readableListening = n2.needReadable = true, n2.emittedReadable = false, n2.reading ? n2.length && A(this) : i.nextTick(P, this));
          }
          return r3;
        }, g.prototype.addListener = g.prototype.on, g.prototype.resume = function() {
          var e2 = this._readableState;
          return e2.flowing || (l("resume"), e2.flowing = true, function(e3, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, i.nextTick(O, e3, t3));
          }(this, e2)), this;
        }, g.prototype.pause = function() {
          return l("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (l("pause"), this._readableState.flowing = false, this.emit("pause")), this;
        }, g.prototype.wrap = function(e2) {
          var t3 = this, r3 = this._readableState, n2 = false;
          for (var i2 in e2.on("end", function() {
            if (l("wrapped end"), r3.decoder && !r3.ended) {
              var e3 = r3.decoder.end();
              e3 && e3.length && t3.push(e3);
            }
            t3.push(null);
          }), e2.on("data", function(i3) {
            (l("wrapped data"), r3.decoder && (i3 = r3.decoder.write(i3)), r3.objectMode && null == i3) || (r3.objectMode || i3 && i3.length) && (t3.push(i3) || (n2 = true, e2.pause()));
          }), e2)
            void 0 === this[i2] && "function" == typeof e2[i2] && (this[i2] = function(t4) {
              return function() {
                return e2[t4].apply(e2, arguments);
              };
            }(i2));
          for (var o2 = 0; o2 < v.length; o2++)
            e2.on(v[o2], this.emit.bind(this, v[o2]));
          return this._read = function(t4) {
            l("wrapped _read", t4), n2 && (n2 = false, e2.resume());
          }, this;
        }, Object.defineProperty(g.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), g._fromList = B;
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = r2(20).EventEmitter;
    }, function(e, t, r2) {
      var n = r2(75);
      function i(e2, t2) {
        e2.emit("error", t2);
      }
      e.exports = { destroy: function(e2, t2) {
        var r3 = this, o = this._readableState && this._readableState.destroyed, a = this._writableState && this._writableState.destroyed;
        return o || a ? (t2 ? t2(e2) : !e2 || this._writableState && this._writableState.errorEmitted || n.nextTick(i, this, e2), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e2 || null, function(e3) {
          !t2 && e3 ? (n.nextTick(i, r3, e3), r3._writableState && (r3._writableState.errorEmitted = true)) : t2 && t2(e3);
        }), this);
      }, undestroy: function() {
        this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
      } };
    }, function(e, t, r2) {
      (function(e2) {
        var n = void 0 !== e2 && e2 || "undefined" != typeof self && self || window, i = Function.prototype.apply;
        function o(e3, t2) {
          this._id = e3, this._clearFn = t2;
        }
        t.setTimeout = function() {
          return new o(i.call(setTimeout, n, arguments), clearTimeout);
        }, t.setInterval = function() {
          return new o(i.call(setInterval, n, arguments), clearInterval);
        }, t.clearTimeout = t.clearInterval = function(e3) {
          e3 && e3.close();
        }, o.prototype.unref = o.prototype.ref = function() {
        }, o.prototype.close = function() {
          this._clearFn.call(n, this._id);
        }, t.enroll = function(e3, t2) {
          clearTimeout(e3._idleTimeoutId), e3._idleTimeout = t2;
        }, t.unenroll = function(e3) {
          clearTimeout(e3._idleTimeoutId), e3._idleTimeout = -1;
        }, t._unrefActive = t.active = function(e3) {
          clearTimeout(e3._idleTimeoutId);
          var t2 = e3._idleTimeout;
          t2 >= 0 && (e3._idleTimeoutId = setTimeout(function() {
            e3._onTimeout && e3._onTimeout();
          }, t2));
        }, r2(321), t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e2 && e2.setImmediate || void 0, t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e2 && e2.clearImmediate || void 0;
      }).call(this, r2(7));
    }, function(e, t, r2) {
      e.exports = a;
      var n = r2(37), i = Object.create(r2(62));
      function o(e2, t2) {
        var r3 = this._transformState;
        r3.transforming = false;
        var n2 = r3.writecb;
        if (!n2)
          return this.emit("error", new Error("write callback called multiple times"));
        r3.writechunk = null, r3.writecb = null, null != t2 && this.push(t2), n2(e2);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function a(e2) {
        if (!(this instanceof a))
          return new a(e2);
        n.call(this, e2), this._transformState = { afterTransform: o.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e2 && ("function" == typeof e2.transform && (this._transform = e2.transform), "function" == typeof e2.flush && (this._flush = e2.flush)), this.on("prefinish", s2);
      }
      function s2() {
        var e2 = this;
        "function" == typeof this._flush ? this._flush(function(t2, r3) {
          f2(e2, t2, r3);
        }) : f2(this, null, null);
      }
      function f2(e2, t2, r3) {
        if (t2)
          return e2.emit("error", t2);
        if (null != r3 && e2.push(r3), e2._writableState.length)
          throw new Error("Calling transform done when ws.length != 0");
        if (e2._transformState.transforming)
          throw new Error("Calling transform done when still transforming");
        return e2.push(null);
      }
      i.inherits = r2(3), i.inherits(a, n), a.prototype.push = function(e2, t2) {
        return this._transformState.needTransform = false, n.prototype.push.call(this, e2, t2);
      }, a.prototype._transform = function(e2, t2, r3) {
        throw new Error("_transform() is not implemented");
      }, a.prototype._write = function(e2, t2, r3) {
        var n2 = this._transformState;
        if (n2.writecb = r3, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, a.prototype._read = function(e2) {
        var t2 = this._transformState;
        null !== t2.writechunk && t2.writecb && !t2.transforming ? (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform)) : t2.needTransform = true;
      }, a.prototype._destroy = function(e2, t2) {
        var r3 = this;
        n.prototype._destroy.call(this, e2, function(e3) {
          t2(e3), r3.emit("close");
        });
      };
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = r2(17), s2 = r2(4), f2 = function(e2) {
        var t2 = "A".charCodeAt(0), r3 = "Z".charCodeAt(0);
        return (e2 = (e2 = e2.toUpperCase()).slice(4) + e2.slice(0, 4)).split("").map(function(e3) {
          var n2 = e3.charCodeAt(0);
          return n2 >= t2 && n2 <= r3 ? n2 - t2 + 10 : e3;
        }).join("");
      }, c = function(e2) {
        for (var t2, r3 = e2; r3.length > 2; )
          t2 = r3.slice(0, 9), r3 = parseInt(t2, 10) % 97 + r3.slice(t2.length);
        return parseInt(r3, 10) % 97;
      }, u = function() {
        function e2(t2) {
          (0, i.default)(this, e2), this._iban = t2;
        }
        return (0, o.default)(e2, [{ key: "isValid", value: function() {
          return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) && 1 === c(f2(this._iban));
        } }, { key: "isDirect", value: function() {
          return 34 === this._iban.length || 35 === this._iban.length;
        } }, { key: "isIndirect", value: function() {
          return 20 === this._iban.length;
        } }, { key: "checksum", value: function() {
          return this._iban.slice(2, 4);
        } }, { key: "institution", value: function() {
          return this.isIndirect() ? this._iban.slice(7, 11) : "";
        } }, { key: "client", value: function() {
          return this.isIndirect() ? this._iban.slice(11) : "";
        } }, { key: "toAddress", value: function() {
          if (this.isDirect()) {
            var e3 = this._iban.slice(4), t2 = new s2(e3, 36);
            return a.toChecksumAddress(t2.toString(16, 20));
          }
          return "";
        } }, { key: "toString", value: function() {
          return this._iban;
        } }], [{ key: "toAddress", value: function(t2) {
          if (!(t2 = new e2(t2)).isDirect())
            throw new Error("IBAN is indirect and can't be converted");
          return t2.toAddress();
        } }, { key: "toIban", value: function(t2) {
          return e2.fromAddress(t2).toString();
        } }, { key: "fromAddress", value: function(t2) {
          if (!a.isAddress(t2))
            throw new Error("Provided address is not a valid address: " + t2);
          t2 = t2.replace("0x", "").replace("0X", "");
          var r3 = function(e3, t3) {
            for (var r4 = e3; r4.length < 2 * t3; )
              r4 = "0" + r4;
            return r4;
          }(new s2(t2, 16).toString(36), 15);
          return e2.fromBban(r3.toUpperCase());
        } }, { key: "fromBban", value: function(t2) {
          return new e2("XE" + ("0" + (98 - c(f2("XE00" + t2)))).slice(-2) + t2);
        } }, { key: "createIndirect", value: function(t2) {
          return e2.fromBban("ETH" + t2.institution + t2.identifier);
        } }, { key: "isValid", value: function(t2) {
          return new e2(t2).isValid();
        } }]), e2;
      }();
      e.exports = u;
    }, function(e, t, r2) {
      var n = { messageId: Math.floor(Math.random() * Number.MAX_SAFE_INTEGER), toPayload: function(e2, t2) {
        if (!e2)
          throw new Error('JSONRPC method should be specified for params: "' + JSON.stringify(t2) + '"!');
        return n.messageId === Number.MAX_SAFE_INTEGER ? n.messageId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER) : n.messageId++, { jsonrpc: "2.0", id: n.messageId, method: e2, params: t2 || [] };
      }, isValidResponse: function(e2) {
        return Array.isArray(e2) ? e2.every(t2) : t2(e2);
        function t2(e3) {
          return !(!e3 || e3.error || "2.0" !== e3.jsonrpc || "number" != typeof e3.id && "string" != typeof e3.id || void 0 === e3.result);
        }
      }, toBatchPayload: function(e2) {
        return e2.map(function(e3) {
          return n.toPayload(e3.method, e3.params);
        });
      } };
      e.exports = n;
    }, function(e, t, r2) {
      (function(e2, n) {
        var i, o = r2(0)(r2(2));
        !function(a) {
          var s2 = "object" == (0, o.default)(t) && t && !t.nodeType && t, f2 = "object" == (0, o.default)(e2) && e2 && !e2.nodeType && e2, c = "object" == (void 0 === n ? "undefined" : (0, o.default)(n)) && n;
          c.global !== c && c.window !== c && c.self !== c || (a = c);
          var u, d, h = 2147483647, l = /^xn--/, p = /[^\x20-\x7E]/, b = /[\x2E\u3002\uFF0E\uFF61]/g, y = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, v = Math.floor, m = String.fromCharCode;
          function g(e3) {
            throw new RangeError(y[e3]);
          }
          function w(e3, t2) {
            for (var r3 = e3.length, n2 = []; r3--; )
              n2[r3] = t2(e3[r3]);
            return n2;
          }
          function _(e3, t2) {
            var r3 = e3.split("@"), n2 = "";
            return r3.length > 1 && (n2 = r3[0] + "@", e3 = r3[1]), n2 + w((e3 = e3.replace(b, ".")).split("."), t2).join(".");
          }
          function k(e3) {
            for (var t2, r3, n2 = [], i2 = 0, o2 = e3.length; i2 < o2; )
              (t2 = e3.charCodeAt(i2++)) >= 55296 && t2 <= 56319 && i2 < o2 ? 56320 == (64512 & (r3 = e3.charCodeAt(i2++))) ? n2.push(((1023 & t2) << 10) + (1023 & r3) + 65536) : (n2.push(t2), i2--) : n2.push(t2);
            return n2;
          }
          function A(e3) {
            return w(e3, function(e4) {
              var t2 = "";
              return e4 > 65535 && (t2 += m((e4 -= 65536) >>> 10 & 1023 | 55296), e4 = 56320 | 1023 & e4), t2 += m(e4);
            }).join("");
          }
          function S(e3, t2) {
            return e3 + 22 + 75 * (e3 < 26) - ((0 != t2) << 5);
          }
          function E(e3, t2, r3) {
            var n2 = 0;
            for (e3 = r3 ? v(e3 / 700) : e3 >> 1, e3 += v(e3 / t2); e3 > 455; n2 += 36)
              e3 = v(e3 / 35);
            return v(n2 + 36 * e3 / (e3 + 38));
          }
          function x(e3) {
            var t2, r3, n2, i2, o2, a2, s3, f3, c2, u2, d2, l2 = [], p2 = e3.length, b2 = 0, y2 = 128, m2 = 72;
            for ((r3 = e3.lastIndexOf("-")) < 0 && (r3 = 0), n2 = 0; n2 < r3; ++n2)
              e3.charCodeAt(n2) >= 128 && g("not-basic"), l2.push(e3.charCodeAt(n2));
            for (i2 = r3 > 0 ? r3 + 1 : 0; i2 < p2; ) {
              for (o2 = b2, a2 = 1, s3 = 36; i2 >= p2 && g("invalid-input"), ((f3 = (d2 = e3.charCodeAt(i2++)) - 48 < 10 ? d2 - 22 : d2 - 65 < 26 ? d2 - 65 : d2 - 97 < 26 ? d2 - 97 : 36) >= 36 || f3 > v((h - b2) / a2)) && g("overflow"), b2 += f3 * a2, !(f3 < (c2 = s3 <= m2 ? 1 : s3 >= m2 + 26 ? 26 : s3 - m2)); s3 += 36)
                a2 > v(h / (u2 = 36 - c2)) && g("overflow"), a2 *= u2;
              m2 = E(b2 - o2, t2 = l2.length + 1, 0 == o2), v(b2 / t2) > h - y2 && g("overflow"), y2 += v(b2 / t2), b2 %= t2, l2.splice(b2++, 0, y2);
            }
            return A(l2);
          }
          function P(e3) {
            var t2, r3, n2, i2, o2, a2, s3, f3, c2, u2, d2, l2, p2, b2, y2, w2 = [];
            for (l2 = (e3 = k(e3)).length, t2 = 128, r3 = 0, o2 = 72, a2 = 0; a2 < l2; ++a2)
              (d2 = e3[a2]) < 128 && w2.push(m(d2));
            for (n2 = i2 = w2.length, i2 && w2.push("-"); n2 < l2; ) {
              for (s3 = h, a2 = 0; a2 < l2; ++a2)
                (d2 = e3[a2]) >= t2 && d2 < s3 && (s3 = d2);
              for (s3 - t2 > v((h - r3) / (p2 = n2 + 1)) && g("overflow"), r3 += (s3 - t2) * p2, t2 = s3, a2 = 0; a2 < l2; ++a2)
                if ((d2 = e3[a2]) < t2 && ++r3 > h && g("overflow"), d2 == t2) {
                  for (f3 = r3, c2 = 36; !(f3 < (u2 = c2 <= o2 ? 1 : c2 >= o2 + 26 ? 26 : c2 - o2)); c2 += 36)
                    y2 = f3 - u2, b2 = 36 - u2, w2.push(m(S(u2 + y2 % b2, 0))), f3 = v(y2 / b2);
                  w2.push(m(S(f3, 0))), o2 = E(r3, p2, n2 == i2), r3 = 0, ++n2;
                }
              ++r3, ++t2;
            }
            return w2.join("");
          }
          if (u = { version: "1.4.1", ucs2: { decode: k, encode: A }, decode: x, encode: P, toASCII: function(e3) {
            return _(e3, function(e4) {
              return p.test(e4) ? "xn--" + P(e4) : e4;
            });
          }, toUnicode: function(e3) {
            return _(e3, function(e4) {
              return l.test(e4) ? x(e4.slice(4).toLowerCase()) : e4;
            });
          } }, "object" == (0, o.default)(r2(76)) && r2(76))
            void 0 === (i = function() {
              return u;
            }.call(t, r2, t, e2)) || (e2.exports = i);
          else if (s2 && f2)
            if (e2.exports == s2)
              f2.exports = u;
            else
              for (d in u)
                u.hasOwnProperty(d) && (s2[d] = u[d]);
          else
            a.punycode = u;
        }(void 0);
      }).call(this, r2(35)(e), r2(7));
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(347), i = r2(171), o = r2(172), a = r2(349), s2 = r2(77), f2 = t;
        f2.request = function(t2, r3) {
          t2 = "string" == typeof t2 ? s2.parse(t2) : o(t2);
          var i2 = -1 === e2.location.protocol.search(/^https?:$/) ? "http:" : "", a2 = t2.protocol || i2, f3 = t2.hostname || t2.host, c = t2.port, u = t2.path || "/";
          f3 && -1 !== f3.indexOf(":") && (f3 = "[" + f3 + "]"), t2.url = (f3 ? a2 + "//" + f3 : "") + (c ? ":" + c : "") + u, t2.method = (t2.method || "GET").toUpperCase(), t2.headers = t2.headers || {};
          var d = new n(t2);
          return r3 && d.on("response", r3), d;
        }, f2.get = function(e3, t2) {
          var r3 = f2.request(e3, t2);
          return r3.end(), r3;
        }, f2.ClientRequest = n, f2.IncomingMessage = i.IncomingMessage, f2.Agent = function() {
        }, f2.Agent.defaultMaxSockets = 4, f2.globalAgent = new f2.Agent(), f2.STATUS_CODES = a, f2.METHODS = ["CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE"];
      }).call(this, r2(7));
    }, function(e, t, r2) {
      (function(e2) {
        t.fetch = s2(e2.fetch) && s2(e2.ReadableStream), t.writableStream = s2(e2.WritableStream), t.abortController = s2(e2.AbortController), t.blobConstructor = false;
        try {
          new Blob([new ArrayBuffer(1)]), t.blobConstructor = true;
        } catch (e3) {
        }
        var r3;
        function n() {
          if (void 0 !== r3)
            return r3;
          if (e2.XMLHttpRequest) {
            r3 = new e2.XMLHttpRequest();
            try {
              r3.open("GET", e2.XDomainRequest ? "/" : "https://example.com");
            } catch (e3) {
              r3 = null;
            }
          } else
            r3 = null;
          return r3;
        }
        function i(e3) {
          var t2 = n();
          if (!t2)
            return false;
          try {
            return t2.responseType = e3, t2.responseType === e3;
          } catch (e4) {
          }
          return false;
        }
        var o = void 0 !== e2.ArrayBuffer, a = o && s2(e2.ArrayBuffer.prototype.slice);
        function s2(e3) {
          return "function" == typeof e3;
        }
        t.arraybuffer = t.fetch || o && i("arraybuffer"), t.msstream = !t.fetch && a && i("ms-stream"), t.mozchunkedarraybuffer = !t.fetch && o && i("moz-chunked-arraybuffer"), t.overrideMimeType = t.fetch || !!n() && s2(n().overrideMimeType), t.vbArray = s2(e2.VBArray), r3 = null;
      }).call(this, r2(7));
    }, function(e, t, r2) {
      (function(e2, n, i) {
        var o = r2(170), a = r2(91), s2 = r2(61), f2 = t.readyStates = { UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, DONE: 4 }, c = t.IncomingMessage = function(t2, r3, a2, f3) {
          var c2 = this;
          if (s2.Readable.call(c2), c2._mode = a2, c2.headers = {}, c2.rawHeaders = [], c2.trailers = {}, c2.rawTrailers = [], c2.on("end", function() {
            e2.nextTick(function() {
              c2.emit("close");
            });
          }), "fetch" === a2) {
            if (c2._fetchResponse = r3, c2.url = r3.url, c2.statusCode = r3.status, c2.statusMessage = r3.statusText, r3.headers.forEach(function(e3, t3) {
              c2.headers[t3.toLowerCase()] = e3, c2.rawHeaders.push(t3, e3);
            }), o.writableStream) {
              var u = new WritableStream({ write: function(e3) {
                return new Promise(function(t3, r4) {
                  c2._destroyed ? r4() : c2.push(new i(e3)) ? t3() : c2._resumeFetch = t3;
                });
              }, close: function() {
                n.clearTimeout(f3), c2._destroyed || c2.push(null);
              }, abort: function(e3) {
                c2._destroyed || c2.emit("error", e3);
              } });
              try {
                return void r3.body.pipeTo(u).catch(function(e3) {
                  n.clearTimeout(f3), c2._destroyed || c2.emit("error", e3);
                });
              } catch (e3) {
              }
            }
            var d = r3.body.getReader();
            !function e3() {
              d.read().then(function(t3) {
                if (!c2._destroyed) {
                  if (t3.done)
                    return n.clearTimeout(f3), void c2.push(null);
                  c2.push(new i(t3.value)), e3();
                }
              }).catch(function(e4) {
                n.clearTimeout(f3), c2._destroyed || c2.emit("error", e4);
              });
            }();
          } else {
            if (c2._xhr = t2, c2._pos = 0, c2.url = t2.responseURL, c2.statusCode = t2.status, c2.statusMessage = t2.statusText, t2.getAllResponseHeaders().split(/\r?\n/).forEach(function(e3) {
              var t3 = e3.match(/^([^:]+):\s*(.*)/);
              if (t3) {
                var r4 = t3[1].toLowerCase();
                "set-cookie" === r4 ? (void 0 === c2.headers[r4] && (c2.headers[r4] = []), c2.headers[r4].push(t3[2])) : void 0 !== c2.headers[r4] ? c2.headers[r4] += ", " + t3[2] : c2.headers[r4] = t3[2], c2.rawHeaders.push(t3[1], t3[2]);
              }
            }), c2._charset = "x-user-defined", !o.overrideMimeType) {
              var h = c2.rawHeaders["mime-type"];
              if (h) {
                var l = h.match(/;\s*charset=([^;])(;|$)/);
                l && (c2._charset = l[1].toLowerCase());
              }
              c2._charset || (c2._charset = "utf-8");
            }
          }
        };
        a(c, s2.Readable), c.prototype._read = function() {
          var e3 = this._resumeFetch;
          e3 && (this._resumeFetch = null, e3());
        }, c.prototype._onXHRProgress = function() {
          var e3 = this, t2 = e3._xhr, r3 = null;
          switch (e3._mode) {
            case "text:vbarray":
              if (t2.readyState !== f2.DONE)
                break;
              try {
                r3 = new n.VBArray(t2.responseBody).toArray();
              } catch (e4) {
              }
              if (null !== r3) {
                e3.push(new i(r3));
                break;
              }
            case "text":
              try {
                r3 = t2.responseText;
              } catch (t3) {
                e3._mode = "text:vbarray";
                break;
              }
              if (r3.length > e3._pos) {
                var o2 = r3.substr(e3._pos);
                if ("x-user-defined" === e3._charset) {
                  for (var a2 = new i(o2.length), s3 = 0; s3 < o2.length; s3++)
                    a2[s3] = 255 & o2.charCodeAt(s3);
                  e3.push(a2);
                } else
                  e3.push(o2, e3._charset);
                e3._pos = r3.length;
              }
              break;
            case "arraybuffer":
              if (t2.readyState !== f2.DONE || !t2.response)
                break;
              r3 = t2.response, e3.push(new i(new Uint8Array(r3)));
              break;
            case "moz-chunked-arraybuffer":
              if (r3 = t2.response, t2.readyState !== f2.LOADING || !r3)
                break;
              e3.push(new i(new Uint8Array(r3)));
              break;
            case "ms-stream":
              if (r3 = t2.response, t2.readyState !== f2.LOADING)
                break;
              var c2 = new n.MSStreamReader();
              c2.onprogress = function() {
                c2.result.byteLength > e3._pos && (e3.push(new i(new Uint8Array(c2.result.slice(e3._pos)))), e3._pos = c2.result.byteLength);
              }, c2.onload = function() {
                e3.push(null);
              }, c2.readAsArrayBuffer(r3);
          }
          e3._xhr.readyState === f2.DONE && "ms-stream" !== e3._mode && e3.push(null);
        };
      }).call(this, r2(6), r2(7), r2(1).Buffer);
    }, function(e, t, r2) {
      e.exports = function() {
        for (var e2 = {}, t2 = 0; t2 < arguments.length; t2++) {
          var r3 = arguments[t2];
          for (var i in r3)
            n.call(r3, i) && (e2[i] = r3[i]);
        }
        return e2;
      };
      var n = Object.prototype.hasOwnProperty;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.BigNumber = void 0, t._base16To36 = function(e2) {
        return new u(e2, 16).toString(36);
      }, t._base36To16 = function(e2) {
        return new u(e2, 36).toString(16);
      }, t.isBigNumberish = function(e2) {
        return null != e2 && (p.isBigNumber(e2) || "number" == typeof e2 && e2 % 1 == 0 || "string" == typeof e2 && !!e2.match(/^-?[0-9]+$/) || (0, s2.isHexString)(e2) || "bigint" == typeof e2 || (0, s2.isBytes)(e2));
      };
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(4)), s2 = r2(11), f2 = r2(16), c = r2(174), u = a.default.BN, d = new f2.Logger(c.version), h = {};
      var l = false, p = function() {
        function e2(t2, r3) {
          (0, i.default)(this, e2), t2 !== h && d.throwError("cannot call constructor directly; use BigNumber.from", f2.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }), this._hex = r3, this._isBigNumber = true, Object.freeze(this);
        }
        return (0, o.default)(e2, [{ key: "fromTwos", value: function(e3) {
          return y(v(this).fromTwos(e3));
        } }, { key: "toTwos", value: function(e3) {
          return y(v(this).toTwos(e3));
        } }, { key: "abs", value: function() {
          return "-" === this._hex[0] ? e2.from(this._hex.substring(1)) : this;
        } }, { key: "add", value: function(e3) {
          return y(v(this).add(v(e3)));
        } }, { key: "sub", value: function(e3) {
          return y(v(this).sub(v(e3)));
        } }, { key: "div", value: function(t2) {
          return e2.from(t2).isZero() && m("division-by-zero", "div"), y(v(this).div(v(t2)));
        } }, { key: "mul", value: function(e3) {
          return y(v(this).mul(v(e3)));
        } }, { key: "mod", value: function(e3) {
          var t2 = v(e3);
          return t2.isNeg() && m("division-by-zero", "mod"), y(v(this).umod(t2));
        } }, { key: "pow", value: function(e3) {
          var t2 = v(e3);
          return t2.isNeg() && m("negative-power", "pow"), y(v(this).pow(t2));
        } }, { key: "and", value: function(e3) {
          var t2 = v(e3);
          return (this.isNegative() || t2.isNeg()) && m("unbound-bitwise-result", "and"), y(v(this).and(t2));
        } }, { key: "or", value: function(e3) {
          var t2 = v(e3);
          return (this.isNegative() || t2.isNeg()) && m("unbound-bitwise-result", "or"), y(v(this).or(t2));
        } }, { key: "xor", value: function(e3) {
          var t2 = v(e3);
          return (this.isNegative() || t2.isNeg()) && m("unbound-bitwise-result", "xor"), y(v(this).xor(t2));
        } }, { key: "mask", value: function(e3) {
          return (this.isNegative() || e3 < 0) && m("negative-width", "mask"), y(v(this).maskn(e3));
        } }, { key: "shl", value: function(e3) {
          return (this.isNegative() || e3 < 0) && m("negative-width", "shl"), y(v(this).shln(e3));
        } }, { key: "shr", value: function(e3) {
          return (this.isNegative() || e3 < 0) && m("negative-width", "shr"), y(v(this).shrn(e3));
        } }, { key: "eq", value: function(e3) {
          return v(this).eq(v(e3));
        } }, { key: "lt", value: function(e3) {
          return v(this).lt(v(e3));
        } }, { key: "lte", value: function(e3) {
          return v(this).lte(v(e3));
        } }, { key: "gt", value: function(e3) {
          return v(this).gt(v(e3));
        } }, { key: "gte", value: function(e3) {
          return v(this).gte(v(e3));
        } }, { key: "isNegative", value: function() {
          return "-" === this._hex[0];
        } }, { key: "isZero", value: function() {
          return v(this).isZero();
        } }, { key: "toNumber", value: function() {
          try {
            return v(this).toNumber();
          } catch (e3) {
            m("overflow", "toNumber", this.toString());
          }
          return null;
        } }, { key: "toBigInt", value: function() {
          try {
            return BigInt(this.toString());
          } catch (e3) {
          }
          return d.throwError("this platform does not support BigInt", f2.Logger.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
        } }, { key: "toString", value: function() {
          return arguments.length > 0 && (10 === arguments[0] ? l || (l = true, d.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? d.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", f2.Logger.errors.UNEXPECTED_ARGUMENT, {}) : d.throwError("BigNumber.toString does not accept parameters", f2.Logger.errors.UNEXPECTED_ARGUMENT, {})), v(this).toString(10);
        } }, { key: "toHexString", value: function() {
          return this._hex;
        } }, { key: "toJSON", value: function(e3) {
          return { type: "BigNumber", hex: this.toHexString() };
        } }], [{ key: "from", value: function(t2) {
          if (t2 instanceof e2)
            return t2;
          if ("string" == typeof t2)
            return t2.match(/^-?0x[0-9a-f]+$/i) ? new e2(h, b(t2)) : t2.match(/^-?[0-9]+$/) ? new e2(h, b(new u(t2))) : d.throwArgumentError("invalid BigNumber string", "value", t2);
          if ("number" == typeof t2)
            return t2 % 1 && m("underflow", "BigNumber.from", t2), (t2 >= 9007199254740991 || t2 <= -9007199254740991) && m("overflow", "BigNumber.from", t2), e2.from(String(t2));
          var r3 = t2;
          if ("bigint" == typeof r3)
            return e2.from(r3.toString());
          if ((0, s2.isBytes)(r3))
            return e2.from((0, s2.hexlify)(r3));
          if (r3)
            if (r3.toHexString) {
              var n2 = r3.toHexString();
              if ("string" == typeof n2)
                return e2.from(n2);
            } else {
              var i2 = r3._hex;
              if (null == i2 && "BigNumber" === r3.type && (i2 = r3.hex), "string" == typeof i2 && ((0, s2.isHexString)(i2) || "-" === i2[0] && (0, s2.isHexString)(i2.substring(1))))
                return e2.from(i2);
            }
          return d.throwArgumentError("invalid BigNumber value", "value", t2);
        } }, { key: "isBigNumber", value: function(e3) {
          return !(!e3 || !e3._isBigNumber);
        } }]), e2;
      }();
      function b(e2) {
        if ("string" != typeof e2)
          return b(e2.toString(16));
        if ("-" === e2[0])
          return "-" === (e2 = e2.substring(1))[0] && d.throwArgumentError("invalid hex", "value", e2), "0x00" === (e2 = b(e2)) ? e2 : "-" + e2;
        if ("0x" !== e2.substring(0, 2) && (e2 = "0x" + e2), "0x" === e2)
          return "0x00";
        for (e2.length % 2 && (e2 = "0x0" + e2.substring(2)); e2.length > 4 && "0x00" === e2.substring(0, 4); )
          e2 = "0x" + e2.substring(4);
        return e2;
      }
      function y(e2) {
        return p.from(b(e2));
      }
      function v(e2) {
        var t2 = p.from(e2).toHexString();
        return "-" === t2[0] ? new u("-" + t2.substring(3), 16) : new u(t2.substring(2), 16);
      }
      function m(e2, t2, r3) {
        var n2 = { fault: e2, operation: t2 };
        return null != r3 && (n2.value = r3), d.throwError(e2, f2.Logger.errors.NUMERIC_FAULT, n2);
      }
      t.BigNumber = p;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "bignumber/5.7.0";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.decode = function(e2) {
        var t2 = (0, n.arrayify)(e2), r3 = u(t2, 0);
        r3.consumed !== t2.length && a.throwArgumentError("invalid rlp data", "data", e2);
        return r3.result;
      }, t.encode = function(e2) {
        return (0, n.hexlify)(function e3(t2) {
          if (Array.isArray(t2)) {
            var r3 = [];
            if (t2.forEach(function(t3) {
              r3 = r3.concat(e3(t3));
            }), r3.length <= 55)
              return r3.unshift(192 + r3.length), r3;
            var i2 = s2(r3.length);
            return i2.unshift(247 + i2.length), i2.concat(r3);
          }
          (0, n.isBytesLike)(t2) || a.throwArgumentError("RLP object must be BytesLike", "object", t2);
          var o2 = Array.prototype.slice.call((0, n.arrayify)(t2));
          if (1 === o2.length && o2[0] <= 127)
            return o2;
          if (o2.length <= 55)
            return o2.unshift(128 + o2.length), o2;
          var f3 = s2(o2.length);
          return f3.unshift(183 + f3.length), f3.concat(o2);
        }(e2));
      };
      var n = r2(11), i = r2(16), o = r2(364), a = new i.Logger(o.version);
      function s2(e2) {
        for (var t2 = []; e2; )
          t2.unshift(255 & e2), e2 >>= 8;
        return t2;
      }
      function f2(e2, t2, r3) {
        for (var n2 = 0, i2 = 0; i2 < r3; i2++)
          n2 = 256 * n2 + e2[t2 + i2];
        return n2;
      }
      function c(e2, t2, r3, n2) {
        for (var o2 = []; r3 < t2 + 1 + n2; ) {
          var s3 = u(e2, r3);
          o2.push(s3.result), (r3 += s3.consumed) > t2 + 1 + n2 && a.throwError("child data too short", i.Logger.errors.BUFFER_OVERRUN, {});
        }
        return { consumed: 1 + n2, result: o2 };
      }
      function u(e2, t2) {
        if (0 === e2.length && a.throwError("data too short", i.Logger.errors.BUFFER_OVERRUN, {}), e2[t2] >= 248) {
          var r3 = e2[t2] - 247;
          t2 + 1 + r3 > e2.length && a.throwError("data short segment too short", i.Logger.errors.BUFFER_OVERRUN, {});
          var o2 = f2(e2, t2 + 1, r3);
          return t2 + 1 + r3 + o2 > e2.length && a.throwError("data long segment too short", i.Logger.errors.BUFFER_OVERRUN, {}), c(e2, t2, t2 + 1 + r3, r3 + o2);
        }
        if (e2[t2] >= 192) {
          var s3 = e2[t2] - 192;
          return t2 + 1 + s3 > e2.length && a.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {}), c(e2, t2, t2 + 1, s3);
        }
        if (e2[t2] >= 184) {
          var u2 = e2[t2] - 183;
          t2 + 1 + u2 > e2.length && a.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {});
          var d = f2(e2, t2 + 1, u2);
          return t2 + 1 + u2 + d > e2.length && a.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {}), { consumed: 1 + u2 + d, result: (0, n.hexlify)(e2.slice(t2 + 1 + u2, t2 + 1 + u2 + d)) };
        }
        if (e2[t2] >= 128) {
          var h = e2[t2] - 128;
          return t2 + 1 + h > e2.length && a.throwError("data too short", i.Logger.errors.BUFFER_OVERRUN, {}), { consumed: 1 + h, result: (0, n.hexlify)(e2.slice(t2 + 1, t2 + 1 + h)) };
        }
        return { consumed: 1, result: (0, n.hexlify)(e2[t2]) };
      }
    }, function(e, t, r2) {
      e.exports = { addresses: { main: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", ropsten: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", rinkeby: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", goerli: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e" }, interfaceIds: { addr: "0x3b3b57de", setAddr: "0x3b3b57de", pubkey: "0xc8690233", setPubkey: "0xc8690233", contenthash: "0xbc1c58d1", setContenthash: "0xbc1c58d1", content: "0xd8389dc5", setContent: "0xd8389dc5" } };
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(58)), o = n(r2(2));
      function a(e2, t2) {
        var r3 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function s2(e2) {
        for (var t2 = 1; t2 < arguments.length; t2++) {
          var r3 = null != arguments[t2] ? arguments[t2] : {};
          t2 % 2 ? a(Object(r3), true).forEach(function(t3) {
            (0, i.default)(e2, t3, r3[t3]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(r3)) : a(Object(r3)).forEach(function(t3) {
            Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(r3, t3));
          });
        }
        return e2;
      }
      var f2 = r2(34), c = r2(38), u = r2(17), d = r2(79).subscription, h = r2(12).formatters, l = r2(12).errors, p = r2(78), b = r2(178), y = function e2(t2, r3, n2) {
        var i2 = this, a2 = Array.prototype.slice.call(arguments);
        if (!(this instanceof e2))
          throw new Error('Please use the "new" keyword to instantiate a web3.eth.Contract() object!');
        if (this.setProvider = function() {
          f2.packageInit(i2, arguments), i2.clearSubscriptions = i2._requestManager.clearSubscriptions;
        }, f2.packageInit(this, [this.constructor]), this.clearSubscriptions = this._requestManager.clearSubscriptions, !t2 || !Array.isArray(t2))
          throw l.ContractMissingABIError();
        this.options = {};
        var c2 = a2[a2.length - 1];
        c2 && "object" === (0, o.default)(c2) && !Array.isArray(c2) && (n2 = c2, this.options = s2(s2({}, this.options), this._getOrSetDefaultOptions(n2)), r3 && "object" === (0, o.default)(r3) && (r3 = null)), Object.defineProperty(this.options, "address", { set: function(e3) {
          e3 && (i2._address = u.toChecksumAddress(h.inputAddressFormatter(e3)));
        }, get: function() {
          return i2._address;
        }, enumerable: true }), Object.defineProperty(this.options, "jsonInterface", { set: function(e3) {
          return i2.methods = {}, i2.events = {}, i2._jsonInterface = e3.map(function(e4) {
            var t3, r4;
            if (e4.constant = "view" === e4.stateMutability || "pure" === e4.stateMutability || e4.constant, e4.payable = "payable" === e4.stateMutability || e4.payable, e4.name && (r4 = u._jsonInterfaceMethodToString(e4)), "function" === e4.type) {
              if (e4.signature = b.encodeFunctionSignature(r4), t3 = i2._createTxObject.bind({ method: e4, parent: i2 }), i2.methods[e4.name]) {
                var n3 = i2._createTxObject.bind({ method: e4, parent: i2, nextMethod: i2.methods[e4.name] });
                i2.methods[e4.name] = n3;
              } else
                i2.methods[e4.name] = t3;
              i2.methods[e4.signature] = t3, i2.methods[r4] = t3;
            } else if ("event" === e4.type) {
              e4.signature = b.encodeEventSignature(r4);
              var o2 = i2._on.bind(i2, e4.signature);
              i2.events[e4.name] && "bound " !== i2.events[e4.name].name || (i2.events[e4.name] = o2), i2.events[e4.signature] = o2, i2.events[r4] = o2;
            }
            return e4;
          }), i2.events.allEvents = i2._on.bind(i2, "allevents"), i2._jsonInterface;
        }, get: function() {
          return i2._jsonInterface;
        }, enumerable: true });
        var d2 = this.constructor.defaultAccount, p2 = this.constructor.defaultBlock || "latest";
        Object.defineProperty(this, "handleRevert", { get: function() {
          return false === i2.options.handleRevert || true === i2.options.handleRevert ? i2.options.handleRevert : this.constructor.handleRevert;
        }, set: function(e3) {
          i2.options.handleRevert = e3;
        }, enumerable: true }), Object.defineProperty(this, "defaultCommon", { get: function() {
          return i2.options.common || this.constructor.defaultCommon;
        }, set: function(e3) {
          i2.options.common = e3;
        }, enumerable: true }), Object.defineProperty(this, "defaultHardfork", { get: function() {
          return i2.options.hardfork || this.constructor.defaultHardfork;
        }, set: function(e3) {
          i2.options.hardfork = e3;
        }, enumerable: true }), Object.defineProperty(this, "defaultChain", { get: function() {
          return i2.options.chain || this.constructor.defaultChain;
        }, set: function(e3) {
          i2.options.chain = e3;
        }, enumerable: true }), Object.defineProperty(this, "transactionPollingTimeout", { get: function() {
          return 0 === i2.options.transactionPollingTimeout ? i2.options.transactionPollingTimeout : i2.options.transactionPollingTimeout || this.constructor.transactionPollingTimeout;
        }, set: function(e3) {
          i2.options.transactionPollingTimeout = e3;
        }, enumerable: true }), Object.defineProperty(this, "transactionPollingInterval", { get: function() {
          return 0 === i2.options.transactionPollingInterval ? i2.options.transactionPollingInterval : i2.options.transactionPollingInterval || this.constructor.transactionPollingInterval;
        }, set: function(e3) {
          i2.options.transactionPollingInterval = e3;
        }, enumerable: true }), Object.defineProperty(this, "transactionConfirmationBlocks", { get: function() {
          return 0 === i2.options.transactionConfirmationBlocks ? i2.options.transactionConfirmationBlocks : i2.options.transactionConfirmationBlocks || this.constructor.transactionConfirmationBlocks;
        }, set: function(e3) {
          i2.options.transactionConfirmationBlocks = e3;
        }, enumerable: true }), Object.defineProperty(this, "transactionBlockTimeout", { get: function() {
          return 0 === i2.options.transactionBlockTimeout ? i2.options.transactionBlockTimeout : i2.options.transactionBlockTimeout || this.constructor.transactionBlockTimeout;
        }, set: function(e3) {
          i2.options.transactionBlockTimeout = e3;
        }, enumerable: true }), Object.defineProperty(this, "blockHeaderTimeout", { get: function() {
          return 0 === i2.options.blockHeaderTimeout ? i2.options.blockHeaderTimeout : i2.options.blockHeaderTimeout || this.constructor.blockHeaderTimeout;
        }, set: function(e3) {
          i2.options.blockHeaderTimeout = e3;
        }, enumerable: true }), Object.defineProperty(this, "defaultAccount", { get: function() {
          return d2;
        }, set: function(e3) {
          return e3 && (d2 = u.toChecksumAddress(h.inputAddressFormatter(e3))), e3;
        }, enumerable: true }), Object.defineProperty(this, "defaultBlock", { get: function() {
          return p2;
        }, set: function(e3) {
          return p2 = e3, e3;
        }, enumerable: true }), this.methods = {}, this.events = {}, this._address = null, this._jsonInterface = [], this.options.address = r3, this.options.jsonInterface = t2;
      };
      y.setProvider = function(e2, t2) {
        f2.packageInit(this, [e2]), this._ethAccounts = t2;
      }, y.prototype._getCallback = function(e2) {
        if (e2 && e2[e2.length - 1] && "function" == typeof e2[e2.length - 1])
          return e2.pop();
      }, y.prototype._checkListener = function(e2, t2) {
        if (t2 === e2)
          throw l.ContractReservedEventError(e2);
      }, y.prototype._getOrSetDefaultOptions = function(e2) {
        var t2 = s2({}, e2), r3 = t2.gasPrice ? String(t2.gasPrice) : null, n2 = t2.from ? u.toChecksumAddress(h.inputAddressFormatter(t2.from)) : null;
        return t2.data = t2.data || this.options.data, t2.from = n2 || this.options.from, t2.gasPrice = r3 || this.options.gasPrice, t2.gas = t2.gas || t2.gasLimit || this.options.gas, delete t2.gasLimit, t2;
      }, y.prototype._encodeEventABI = function(e2, t2) {
        var r3 = (t2 = t2 || {}).filter || {}, n2 = {};
        if (["fromBlock", "toBlock"].filter(function(e3) {
          return void 0 !== t2[e3];
        }).forEach(function(e3) {
          n2[e3] = h.inputBlockNumberFormatter(t2[e3]);
        }), Array.isArray(t2.topics))
          n2.topics = t2.topics;
        else {
          if (n2.topics = [], e2 && !e2.anonymous && "ALLEVENTS" !== e2.name && n2.topics.push(e2.signature), "ALLEVENTS" !== e2.name) {
            var i2 = e2.inputs.filter(function(e3) {
              return true === e3.indexed;
            }).map(function(e3) {
              var t3 = r3[e3.name];
              return t3 ? Array.isArray(t3) ? t3.map(function(t4) {
                return b.encodeParameter(e3.type, t4);
              }) : b.encodeParameter(e3.type, t3) : null;
            });
            n2.topics = n2.topics.concat(i2);
          }
          n2.topics.length || delete n2.topics;
        }
        return this.options.address && (n2.address = this.options.address.toLowerCase()), n2;
      }, y.prototype._decodeEventABI = function(e2) {
        var t2 = this;
        e2.data = e2.data || "", e2.topics = e2.topics || [];
        var r3 = h.outputLogFormatter(e2);
        if ("ALLEVENTS" === t2.name && (t2 = t2.jsonInterface.find(function(t3) {
          return t3.signature === e2.topics[0];
        }) || { anonymous: true }), t2.inputs = t2.inputs || [], !t2.anonymous) {
          var n2 = 0;
          t2.inputs.forEach(function(e3) {
            return e3.indexed ? n2++ : null;
          }), n2 > 0 && e2.topics.length !== n2 + 1 && (t2 = { anonymous: true, inputs: [] });
        }
        var i2 = t2.anonymous ? e2.topics : e2.topics.slice(1);
        return r3.returnValues = b.decodeLog(t2.inputs, e2.data, i2), delete r3.returnValues.__length__, r3.event = t2.name, r3.signature = t2.anonymous || !e2.topics[0] ? null : e2.topics[0], r3.raw = { data: r3.data, topics: r3.topics }, delete r3.data, delete r3.topics, r3;
      }, y.prototype._encodeMethodABI = function() {
        var e2 = this._method.signature, t2 = this.arguments || [], r3 = false, n2 = this._parent.options.jsonInterface.filter(function(t3) {
          return "constructor" === e2 && t3.type === e2 || (t3.signature === e2 || t3.signature === e2.replace("0x", "") || t3.name === e2) && "function" === t3.type;
        }).map(function(e3) {
          var n3 = Array.isArray(e3.inputs) ? e3.inputs.length : 0;
          if (n3 !== t2.length)
            throw new Error("The number of arguments is not matching the methods required number. You need to pass " + n3 + " arguments.");
          return "function" === e3.type && (r3 = e3.signature), Array.isArray(e3.inputs) ? e3.inputs : [];
        }).map(function(e3) {
          return b.encodeParameters(e3, t2).replace("0x", "");
        })[0] || "";
        if ("constructor" === e2) {
          if (!this._deployData)
            throw new Error("The contract has no contract data option set. This is necessary to append the constructor parameters.");
          return this._deployData.startsWith("0x") || (this._deployData = "0x" + this._deployData), this._deployData + n2;
        }
        var i2 = r3 ? r3 + n2 : n2;
        if (!i2)
          throw new Error(`Couldn't find a matching contract method named "` + this._method.name + '".');
        return i2;
      }, y.prototype._decodeMethodReturn = function(e2, t2) {
        if (!t2)
          return null;
        t2 = t2.length >= 2 ? t2.slice(2) : t2;
        var r3 = b.decodeParameters(e2, t2);
        return 1 === r3.__length__ ? r3[0] : (delete r3.__length__, r3);
      }, y.prototype.deploy = function(e2, t2) {
        if ((e2 = e2 || {}).arguments = e2.arguments || [], !(e2 = this._getOrSetDefaultOptions(e2)).data) {
          if ("function" == typeof t2)
            return t2(l.ContractMissingDeployDataError());
          throw l.ContractMissingDeployDataError();
        }
        var r3 = this.options.jsonInterface.find(function(e3) {
          return "constructor" === e3.type;
        }) || {};
        return r3.signature = "constructor", this._createTxObject.apply({ method: r3, parent: this, deployData: e2.data, _ethAccounts: this.constructor._ethAccounts }, e2.arguments);
      }, y.prototype._generateEventOptions = function() {
        var e2 = Array.prototype.slice.call(arguments), t2 = this._getCallback(e2), r3 = "object" === (!!e2[e2.length - 1] && (0, o.default)(e2[e2.length - 1])) ? e2.pop() : {}, n2 = "string" == typeof e2[0] ? e2[0] : "allevents", i2 = "allevents" === n2.toLowerCase() ? { name: "ALLEVENTS", jsonInterface: this.options.jsonInterface } : this.options.jsonInterface.find(function(e3) {
          return "event" === e3.type && (e3.name === n2 || e3.signature === "0x" + n2.replace("0x", ""));
        });
        if (!i2)
          throw l.ContractEventDoesNotExistError(n2);
        if (!u.isAddress(this.options.address))
          throw l.ContractNoAddressDefinedError();
        return { params: this._encodeEventABI(i2, r3), event: i2, callback: t2 };
      }, y.prototype.clone = function() {
        return new this.constructor(this.options.jsonInterface, this.options.address, this.options);
      }, y.prototype.once = function(e2, t2, r3) {
        var n2 = Array.prototype.slice.call(arguments);
        if (!(r3 = this._getCallback(n2)))
          throw l.ContractOnceRequiresCallbackError();
        t2 && delete t2.fromBlock, this._on(e2, t2, function(e3, t3, n3) {
          n3.unsubscribe(), "function" == typeof r3 && r3(e3, t3, n3);
        });
      }, y.prototype._on = function() {
        var e2 = this._generateEventOptions.apply(this, arguments);
        e2.params && e2.params.toBlock && (delete e2.params.toBlock, console.warn("Invalid option: toBlock. Use getPastEvents for specific range.")), this._checkListener("newListener", e2.event.name), this._checkListener("removeListener", e2.event.name);
        var t2 = new d({ subscription: { params: 1, inputFormatter: [h.inputLogFormatter], outputFormatter: this._decodeEventABI.bind(e2.event), subscriptionHandler: function(e3) {
          e3.removed ? this.emit("changed", e3) : this.emit("data", e3), "function" == typeof this.callback && this.callback(null, e3, this);
        } }, type: "eth", requestManager: this._requestManager });
        return t2.subscribe("logs", e2.params, e2.callback || function() {
        }), t2;
      }, y.prototype.getPastEvents = function() {
        var e2 = this._generateEventOptions.apply(this, arguments), t2 = new c({ name: "getPastLogs", call: "eth_getLogs", params: 1, inputFormatter: [h.inputLogFormatter], outputFormatter: this._decodeEventABI.bind(e2.event) });
        t2.setRequestManager(this._requestManager);
        var r3 = t2.buildCall();
        return t2 = null, r3(e2.params, e2.callback);
      }, y.prototype._createTxObject = function() {
        var e2 = Array.prototype.slice.call(arguments), t2 = {};
        if ("function" === this.method.type && (t2.call = this.parent._executeMethod.bind(t2, "call"), t2.call.request = this.parent._executeMethod.bind(t2, "call", true)), t2.send = this.parent._executeMethod.bind(t2, "send"), t2.send.request = this.parent._executeMethod.bind(t2, "send", true), t2.encodeABI = this.parent._encodeMethodABI.bind(t2), t2.estimateGas = this.parent._executeMethod.bind(t2, "estimate"), t2.createAccessList = this.parent._executeMethod.bind(t2, "createAccessList"), e2 && this.method.inputs && e2.length !== this.method.inputs.length) {
          if (this.nextMethod)
            return this.nextMethod.apply(null, e2);
          throw l.InvalidNumberOfParams(e2.length, this.method.inputs.length, this.method.name);
        }
        return t2.arguments = e2 || [], t2._method = this.method, t2._parent = this.parent, t2._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts, this.deployData && (t2._deployData = this.deployData), t2;
      }, y.prototype._processExecuteArguments = function(e2, t2) {
        var r3 = {};
        if (r3.type = e2.shift(), r3.callback = this._parent._getCallback(e2), "call" !== r3.type || true === e2[e2.length - 1] || "string" != typeof e2[e2.length - 1] && !isFinite(e2[e2.length - 1]) || (r3.defaultBlock = e2.pop()), r3.options = "object" === (!!e2[e2.length - 1] && (0, o.default)(e2[e2.length - 1])) ? e2.pop() : {}, r3.generateRequest = true === e2[e2.length - 1] && e2.pop(), r3.options = this._parent._getOrSetDefaultOptions(r3.options), r3.options.data = this.encodeABI(), !this._deployData && !u.isAddress(this._parent.options.address))
          throw l.ContractNoAddressDefinedError();
        return this._deployData || (r3.options.to = this._parent.options.address), r3.options.data ? r3 : u._fireError(new Error("Couldn't find a matching contract method, or the number of parameters is wrong."), t2.eventEmitter, t2.reject, r3.callback);
      }, y.prototype._executeMethod = function() {
        var e2 = this, t2 = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), r3), r3 = p("send" !== t2.type), n2 = e2.constructor._ethAccounts || e2._ethAccounts;
        if (t2.generateRequest) {
          var i2 = { params: [h.inputCallFormatter.call(this._parent, t2.options)], callback: t2.callback };
          return "call" === t2.type ? (i2.params.push(h.inputDefaultBlockNumberFormatter.call(this._parent, t2.defaultBlock)), i2.method = "eth_call", i2.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs)) : i2.method = "eth_sendTransaction", i2;
        }
        switch (t2.type) {
          case "createAccessList":
            if (!u.isAddress(t2.options.from))
              return u._fireError(l.ContractNoFromAddressDefinedError(), r3.eventEmitter, r3.reject, t2.callback);
            var o2 = new c({ name: "createAccessList", call: "eth_createAccessList", params: 2, inputFormatter: [h.inputTransactionFormatter, h.inputDefaultBlockNumberFormatter], requestManager: e2._parent._requestManager, accounts: n2, defaultAccount: e2._parent.defaultAccount, defaultBlock: e2._parent.defaultBlock }).createFunction();
            return o2(t2.options, t2.callback);
          case "estimate":
            var a2 = new c({ name: "estimateGas", call: "eth_estimateGas", params: 1, inputFormatter: [h.inputCallFormatter], outputFormatter: u.hexToNumber, requestManager: e2._parent._requestManager, accounts: n2, defaultAccount: e2._parent.defaultAccount, defaultBlock: e2._parent.defaultBlock }).createFunction();
            return a2(t2.options, t2.callback);
          case "call":
            var s3 = new c({ name: "call", call: "eth_call", params: 2, inputFormatter: [h.inputCallFormatter, h.inputDefaultBlockNumberFormatter], outputFormatter: function(t3) {
              return e2._parent._decodeMethodReturn(e2._method.outputs, t3);
            }, requestManager: e2._parent._requestManager, accounts: n2, defaultAccount: e2._parent.defaultAccount, defaultBlock: e2._parent.defaultBlock, handleRevert: e2._parent.handleRevert, abiCoder: b }).createFunction();
            return s3(t2.options, t2.defaultBlock, t2.callback);
          case "send":
            if (!u.isAddress(t2.options.from))
              return u._fireError(l.ContractNoFromAddressDefinedError(), r3.eventEmitter, r3.reject, t2.callback);
            if ("boolean" == typeof this._method.payable && !this._method.payable && t2.options.value && t2.options.value > 0)
              return u._fireError(new Error("Can not send value to non-payable contract method or constructor"), r3.eventEmitter, r3.reject, t2.callback);
            var f3 = { receiptFormatter: function(t3) {
              if (Array.isArray(t3.logs)) {
                var r4 = t3.logs.map(function(t4) {
                  return e2._parent._decodeEventABI.call({ name: "ALLEVENTS", jsonInterface: e2._parent.options.jsonInterface }, t4);
                });
                t3.events = {};
                var n3 = 0;
                r4.forEach(function(e3) {
                  e3.event ? t3.events[e3.event] ? Array.isArray(t3.events[e3.event]) ? t3.events[e3.event].push(e3) : t3.events[e3.event] = [t3.events[e3.event], e3] : t3.events[e3.event] = e3 : (t3.events[n3] = e3, n3++);
                }), delete t3.logs;
              }
              return t3;
            }, contractDeployFormatter: function(t3) {
              var r4 = e2._parent.clone();
              return r4.options.address = t3.contractAddress, r4;
            } }, d2 = new c({ name: "sendTransaction", call: "eth_sendTransaction", params: 1, inputFormatter: [h.inputTransactionFormatter], requestManager: e2._parent._requestManager, accounts: e2.constructor._ethAccounts || e2._ethAccounts, defaultAccount: e2._parent.defaultAccount, defaultBlock: e2._parent.defaultBlock, transactionBlockTimeout: e2._parent.transactionBlockTimeout, transactionConfirmationBlocks: e2._parent.transactionConfirmationBlocks, transactionPollingTimeout: e2._parent.transactionPollingTimeout, transactionPollingInterval: e2._parent.transactionPollingInterval, defaultCommon: e2._parent.defaultCommon, defaultChain: e2._parent.defaultChain, defaultHardfork: e2._parent.defaultHardfork, handleRevert: e2._parent.handleRevert, extraFormatters: f3, abiCoder: b }).createFunction();
            return d2(t2.options, t2.callback);
          default:
            throw new Error('Method "' + t2.type + '" not implemented.');
        }
      }, e.exports = y;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(1).Buffer, o = r2(17), a = r2(179).AbiCoder, s2 = r2(179).ParamType, f2 = new a(function(e2, t2) {
        return !e2.match(/^u?int/) || Array.isArray(t2) || t2 && "object" === (0, n.default)(t2) && "BN" === t2.constructor.name ? t2 : t2.toString();
      });
      function c() {
      }
      var u = function() {
      };
      u.prototype.encodeFunctionSignature = function(e2) {
        return ("function" == typeof e2 || "object" === (0, n.default)(e2) && e2) && (e2 = o._jsonInterfaceMethodToString(e2)), o.sha3(e2).slice(0, 10);
      }, u.prototype.encodeEventSignature = function(e2) {
        return ("function" == typeof e2 || "object" === (0, n.default)(e2) && e2) && (e2 = o._jsonInterfaceMethodToString(e2)), o.sha3(e2);
      }, u.prototype.encodeParameter = function(e2, t2) {
        return this.encodeParameters([e2], [t2]);
      }, u.prototype.encodeParameters = function(e2, t2) {
        var r3 = this;
        return e2 = r3.mapTypes(e2), t2 = t2.map(function(t3, i2) {
          var o2 = e2[i2];
          if ("object" === (0, n.default)(o2) && o2.type && (o2 = o2.type), t3 = r3.formatParam(o2, t3), "string" == typeof o2 && o2.includes("tuple")) {
            !function e3(t4, n2) {
              if ("array" === t4.name) {
                if (!t4.type.match(/\[(\d+)\]/))
                  return n2.map(function(r4) {
                    return e3(f2._getCoder(s2.from(t4.type.replace("[]", ""))), r4);
                  });
                var i3 = parseInt(t4.type.match(/\[(\d+)\]/)[1]);
                if (n2.length !== i3)
                  throw new Error("Array length does not matches with the given input");
                return n2.map(function(r4) {
                  return e3(f2._getCoder(s2.from(t4.type.replace(/\[\d+\]/, ""))), r4);
                });
              }
              t4.coders.forEach(function(t5, i4) {
                "tuple" === t5.name ? e3(t5, n2[i4]) : n2[i4] = r3.formatParam(t5.name, n2[i4]);
              });
            }(f2._getCoder(s2.from(o2)), t3);
          }
          return t3;
        }), f2.encode(e2, t2);
      }, u.prototype.mapTypes = function(e2) {
        var t2 = this, r3 = [];
        return e2.forEach(function(e3) {
          if ("object" === (0, n.default)(e3) && "function" === e3.type && (e3 = Object.assign({}, e3, { type: "bytes24" })), t2.isSimplifiedStructFormat(e3)) {
            var i2 = Object.keys(e3)[0];
            r3.push(Object.assign(t2.mapStructNameAndType(i2), { components: t2.mapStructToCoderFormat(e3[i2]) }));
          } else
            r3.push(e3);
        }), r3;
      }, u.prototype.isSimplifiedStructFormat = function(e2) {
        return "object" === (0, n.default)(e2) && void 0 === e2.components && void 0 === e2.name;
      }, u.prototype.mapStructNameAndType = function(e2) {
        var t2 = "tuple";
        return e2.indexOf("[]") > -1 && (t2 = "tuple[]", e2 = e2.slice(0, -2)), { type: t2, name: e2 };
      }, u.prototype.mapStructToCoderFormat = function(e2) {
        var t2 = this, r3 = [];
        return Object.keys(e2).forEach(function(i2) {
          "object" !== (0, n.default)(e2[i2]) ? r3.push({ name: i2, type: e2[i2] }) : r3.push(Object.assign(t2.mapStructNameAndType(i2), { components: t2.mapStructToCoderFormat(e2[i2]) }));
        }), r3;
      }, u.prototype.formatParam = function(e2, t2) {
        var r3 = this, n2 = new RegExp(/^bytes([0-9]*)$/), a2 = new RegExp(/^bytes([0-9]*)\[\]$/), s3 = new RegExp(/^(u?int)([0-9]*)$/), f3 = new RegExp(/^(u?int)([0-9]*)\[\]$/);
        if (o.isBN(t2) || o.isBigNumber(t2))
          return t2.toString(10);
        if (e2.match(a2) || e2.match(f3))
          return t2.map(function(t3) {
            return r3.formatParam(e2.replace("[]", ""), t3);
          });
        var c2 = e2.match(s3);
        if (c2) {
          var u2 = parseInt(c2[2] || "256");
          u2 / 8 < t2.length && (t2 = o.leftPad(t2, u2));
        }
        if (c2 = e2.match(n2)) {
          i.isBuffer(t2) && (t2 = o.toHex(t2));
          var d2 = parseInt(c2[1]);
          if (d2) {
            var h = 2 * d2;
            "0x" === t2.substring(0, 2) && (h += 2), t2.length < h && (t2 = o.rightPad(t2, 2 * d2));
          }
          t2.length % 2 == 1 && (t2 = "0x0" + t2.substring(2));
        }
        return t2;
      }, u.prototype.encodeFunctionCall = function(e2, t2) {
        return this.encodeFunctionSignature(e2) + this.encodeParameters(e2.inputs, t2).replace("0x", "");
      }, u.prototype.decodeParameter = function(e2, t2) {
        return this.decodeParameters([e2], t2)[0];
      }, u.prototype.decodeParameters = function(e2, t2) {
        return this.decodeParametersWith(e2, t2, false);
      }, u.prototype.decodeParametersWith = function(e2, t2, r3) {
        if (e2.length > 0 && (!t2 || "0x" === t2 || "0X" === t2))
          throw new Error("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");
        var i2 = f2.decode(this.mapTypes(e2), "0x" + t2.replace(/0x/i, ""), r3), o2 = new c();
        return o2.__length__ = 0, e2.forEach(function(e3, t3) {
          var r4 = i2[o2.__length__], a2 = "object" === (0, n.default)(e3) && e3.type && "string" === e3.type;
          r4 = "0x" !== r4 || a2 || "string" == typeof e3 && "string" === e3 ? r4 : null, o2[t3] = r4, ("function" == typeof e3 || e3 && "object" === (0, n.default)(e3)) && e3.name && (o2[e3.name] = r4), o2.__length__++;
        }), o2;
      }, u.prototype.decodeLog = function(e2, t2, r3) {
        var n2 = this;
        r3 = Array.isArray(r3) ? r3 : [r3], t2 = t2 || "";
        var i2 = [], o2 = [], a2 = 0;
        e2.forEach(function(e3, t3) {
          e3.indexed ? (o2[t3] = ["bool", "int", "uint", "address", "fixed", "ufixed"].find(function(t4) {
            return -1 !== e3.type.indexOf(t4);
          }) ? n2.decodeParameter(e3.type, r3[a2]) : r3[a2], a2++) : i2[t3] = e3;
        });
        var s3 = t2, f3 = s3 ? this.decodeParametersWith(i2, s3, true) : [], u2 = new c();
        return u2.__length__ = 0, e2.forEach(function(e3, t3) {
          u2[t3] = "string" === e3.type ? "" : null, void 0 !== f3[t3] && (u2[t3] = f3[t3]), void 0 !== o2[t3] && (u2[t3] = o2[t3]), e3.name && (u2[e3.name] = u2[t3]), u2.__length__++;
        }), u2;
      };
      var d = new u();
      e.exports = d;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "AbiCoder", { enumerable: true, get: function() {
        return i.AbiCoder;
      } }), Object.defineProperty(t, "ConstructorFragment", { enumerable: true, get: function() {
        return n.ConstructorFragment;
      } }), Object.defineProperty(t, "ErrorFragment", { enumerable: true, get: function() {
        return n.ErrorFragment;
      } }), Object.defineProperty(t, "EventFragment", { enumerable: true, get: function() {
        return n.EventFragment;
      } }), Object.defineProperty(t, "FormatTypes", { enumerable: true, get: function() {
        return n.FormatTypes;
      } }), Object.defineProperty(t, "Fragment", { enumerable: true, get: function() {
        return n.Fragment;
      } }), Object.defineProperty(t, "FunctionFragment", { enumerable: true, get: function() {
        return n.FunctionFragment;
      } }), Object.defineProperty(t, "Indexed", { enumerable: true, get: function() {
        return o.Indexed;
      } }), Object.defineProperty(t, "Interface", { enumerable: true, get: function() {
        return o.Interface;
      } }), Object.defineProperty(t, "LogDescription", { enumerable: true, get: function() {
        return o.LogDescription;
      } }), Object.defineProperty(t, "ParamType", { enumerable: true, get: function() {
        return n.ParamType;
      } }), Object.defineProperty(t, "TransactionDescription", { enumerable: true, get: function() {
        return o.TransactionDescription;
      } }), Object.defineProperty(t, "checkResultErrors", { enumerable: true, get: function() {
        return o.checkResultErrors;
      } }), Object.defineProperty(t, "defaultAbiCoder", { enumerable: true, get: function() {
        return i.defaultAbiCoder;
      } });
      var n = r2(107), i = r2(180), o = r2(391);
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.defaultAbiCoder = t.AbiCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = r2(11), s2 = r2(40), f2 = r2(16), c = r2(64), u = r2(23), d = r2(379), h = r2(181), l = r2(381), p = r2(182), b = r2(383), y = r2(384), v = r2(385), m = r2(386), g = r2(390), w = r2(107), _ = new f2.Logger(c.version), k = new RegExp(/^bytes([0-9]*)$/), A = new RegExp(/^(u?int)([0-9]*)$/), S = function() {
        function e2(t2) {
          (0, i.default)(this, e2), (0, s2.defineReadOnly)(this, "coerceFunc", t2 || null);
        }
        return (0, o.default)(e2, [{ key: "_getCoder", value: function(e3) {
          var t2 = this;
          switch (e3.baseType) {
            case "address":
              return new d.AddressCoder(e3.name);
            case "bool":
              return new l.BooleanCoder(e3.name);
            case "string":
              return new m.StringCoder(e3.name);
            case "bytes":
              return new p.BytesCoder(e3.name);
            case "array":
              return new h.ArrayCoder(this._getCoder(e3.arrayChildren), e3.arrayLength, e3.name);
            case "tuple":
              return new g.TupleCoder((e3.components || []).map(function(e4) {
                return t2._getCoder(e4);
              }), e3.name);
            case "":
              return new y.NullCoder(e3.name);
          }
          var r3 = e3.type.match(A);
          if (r3) {
            var n2 = parseInt(r3[2] || "256");
            return (0 === n2 || n2 > 256 || n2 % 8 != 0) && _.throwArgumentError("invalid " + r3[1] + " bit length", "param", e3), new v.NumberCoder(n2 / 8, "int" === r3[1], e3.name);
          }
          if (r3 = e3.type.match(k)) {
            var i2 = parseInt(r3[1]);
            return (0 === i2 || i2 > 32) && _.throwArgumentError("invalid bytes length", "param", e3), new b.FixedBytesCoder(i2, e3.name);
          }
          return _.throwArgumentError("invalid type", "type", e3.type);
        } }, { key: "_getWordSize", value: function() {
          return 32;
        } }, { key: "_getReader", value: function(e3, t2) {
          return new u.Reader(e3, this._getWordSize(), this.coerceFunc, t2);
        } }, { key: "_getWriter", value: function() {
          return new u.Writer(this._getWordSize());
        } }, { key: "getDefaultValue", value: function(e3) {
          var t2 = this, r3 = e3.map(function(e4) {
            return t2._getCoder(w.ParamType.from(e4));
          });
          return new g.TupleCoder(r3, "_").defaultValue();
        } }, { key: "encode", value: function(e3, t2) {
          var r3 = this;
          e3.length !== t2.length && _.throwError("types/values length mismatch", f2.Logger.errors.INVALID_ARGUMENT, { count: { types: e3.length, values: t2.length }, value: { types: e3, values: t2 } });
          var n2 = e3.map(function(e4) {
            return r3._getCoder(w.ParamType.from(e4));
          }), i2 = new g.TupleCoder(n2, "_"), o2 = this._getWriter();
          return i2.encode(o2, t2), o2.data;
        } }, { key: "decode", value: function(e3, t2, r3) {
          var n2 = this, i2 = e3.map(function(e4) {
            return n2._getCoder(w.ParamType.from(e4));
          });
          return new g.TupleCoder(i2, "_").decode(this._getReader((0, a.arrayify)(t2), r3));
        } }]), e2;
      }();
      t.AbiCoder = S;
      var E = new S();
      t.defaultAbiCoder = E;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.ArrayCoder = void 0, t.pack = y, t.unpack = v;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13)), c = n(r2(2)), u = r2(16), d = r2(64), h = r2(23), l = r2(380);
      function p(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var b = new u.Logger(d.version);
      function y(e2, t2, r3) {
        var n2 = null;
        if (Array.isArray(r3))
          n2 = r3;
        else if (r3 && "object" === (0, c.default)(r3)) {
          var i2 = {};
          n2 = t2.map(function(e3) {
            var t3 = e3.localName;
            return t3 || b.throwError("cannot encode object for signature with missing names", u.Logger.errors.INVALID_ARGUMENT, { argument: "values", coder: e3, value: r3 }), i2[t3] && b.throwError("cannot encode object for signature with duplicate names", u.Logger.errors.INVALID_ARGUMENT, { argument: "values", coder: e3, value: r3 }), i2[t3] = true, r3[t3];
          });
        } else
          b.throwArgumentError("invalid tuple value", "tuple", r3);
        t2.length !== n2.length && b.throwArgumentError("types/value length mismatch", "tuple", r3);
        var o2 = new h.Writer(e2.wordSize), a2 = new h.Writer(e2.wordSize), s3 = [];
        t2.forEach(function(e3, t3) {
          var r4 = n2[t3];
          if (e3.dynamic) {
            var i3 = a2.length;
            e3.encode(a2, r4);
            var f4 = o2.writeUpdatableValue();
            s3.push(function(e4) {
              f4(e4 + i3);
            });
          } else
            e3.encode(o2, r4);
        }), s3.forEach(function(e3) {
          e3(o2.length);
        });
        var f3 = e2.appendWriter(o2);
        return f3 += e2.appendWriter(a2);
      }
      function v(e2, t2) {
        var r3 = [], n2 = e2.subReader(0);
        t2.forEach(function(t3) {
          var i3 = null;
          if (t3.dynamic) {
            var o3 = e2.readValue(), a3 = n2.subReader(o3.toNumber());
            try {
              i3 = t3.decode(a3);
            } catch (e3) {
              if (e3.code === u.Logger.errors.BUFFER_OVERRUN)
                throw e3;
              (i3 = e3).baseType = t3.name, i3.name = t3.localName, i3.type = t3.type;
            }
          } else
            try {
              i3 = t3.decode(e2);
            } catch (e3) {
              if (e3.code === u.Logger.errors.BUFFER_OVERRUN)
                throw e3;
              (i3 = e3).baseType = t3.name, i3.name = t3.localName, i3.type = t3.type;
            }
          null != i3 && r3.push(i3);
        });
        var i2 = t2.reduce(function(e3, t3) {
          var r4 = t3.localName;
          return r4 && (e3[r4] || (e3[r4] = 0), e3[r4]++), e3;
        }, {});
        t2.forEach(function(e3, t3) {
          var n3 = e3.localName;
          if (n3 && 1 === i2[n3] && ("length" === n3 && (n3 = "_length"), null == r3[n3])) {
            var o3 = r3[t3];
            o3 instanceof Error ? Object.defineProperty(r3, n3, { enumerable: true, get: function() {
              throw o3;
            } }) : r3[n3] = o3;
          }
        });
        for (var o2 = function(e3) {
          var t3 = r3[e3];
          t3 instanceof Error && Object.defineProperty(r3, e3, { enumerable: true, get: function() {
            throw t3;
          } });
        }, a2 = 0; a2 < r3.length; a2++)
          o2(a2);
        return Object.freeze(r3);
      }
      var m = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = p(r3);
        function r3(e3, n2, o2) {
          var a2;
          (0, i.default)(this, r3);
          var s3 = e3.type + "[" + (n2 >= 0 ? n2 : "") + "]", f3 = -1 === n2 || e3.dynamic;
          return (a2 = t2.call(this, "array", s3, o2, f3)).coder = e3, a2.length = n2, a2;
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          for (var e3 = this.coder.defaultValue(), t3 = [], r4 = 0; r4 < this.length; r4++)
            t3.push(e3);
          return t3;
        } }, { key: "encode", value: function(e3, t3) {
          Array.isArray(t3) || this._throwError("expected array value", t3);
          var r4 = this.length;
          -1 === r4 && (r4 = t3.length, e3.writeValue(t3.length)), b.checkArgumentCount(t3.length, r4, "coder array" + (this.localName ? " " + this.localName : ""));
          for (var n2 = [], i2 = 0; i2 < t3.length; i2++)
            n2.push(this.coder);
          return y(e3, n2, t3);
        } }, { key: "decode", value: function(e3) {
          var t3 = this.length;
          -1 === t3 && 32 * (t3 = e3.readValue().toNumber()) > e3._data.length && b.throwError("insufficient data length", u.Logger.errors.BUFFER_OVERRUN, { length: e3._data.length, count: t3 });
          for (var r4 = [], n2 = 0; n2 < t3; n2++)
            r4.push(new l.AnonymousCoder(this.coder));
          return e3.coerce(this.name, v(e3, r4));
        } }]), r3;
      }(h.Coder);
      t.ArrayCoder = m;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.DynamicBytesCoder = t.BytesCoder = void 0;
      var i = n(r2(183)), o = n(r2(8)), a = n(r2(9)), s2 = n(r2(14)), f2 = n(r2(15)), c = n(r2(13)), u = r2(11);
      function d(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, c.default)(e2);
          if (t2) {
            var i2 = (0, c.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, f2.default)(this, r3);
        };
      }
      var h = function(e2) {
        (0, s2.default)(r3, e2);
        var t2 = d(r3);
        function r3(e3, n2) {
          return (0, o.default)(this, r3), t2.call(this, e3, e3, n2, true);
        }
        return (0, a.default)(r3, [{ key: "defaultValue", value: function() {
          return "0x";
        } }, { key: "encode", value: function(e3, t3) {
          t3 = (0, u.arrayify)(t3);
          var r4 = e3.writeValue(t3.length);
          return r4 += e3.writeBytes(t3);
        } }, { key: "decode", value: function(e3) {
          return e3.readBytes(e3.readValue().toNumber(), true);
        } }]), r3;
      }(r2(23).Coder);
      t.DynamicBytesCoder = h;
      var l = function(e2) {
        (0, s2.default)(r3, e2);
        var t2 = d(r3);
        function r3(e3) {
          return (0, o.default)(this, r3), t2.call(this, "bytes", e3);
        }
        return (0, a.default)(r3, [{ key: "decode", value: function(e3) {
          return e3.coerce(this.name, (0, u.hexlify)((0, i.default)((0, c.default)(r3.prototype), "decode", this).call(this, e3)));
        } }]), r3;
      }(h);
      t.BytesCoder = l;
    }, function(e, t, r2) {
      var n = r2(382);
      function i() {
        return "undefined" != typeof Reflect && Reflect.get ? (e.exports = i = Reflect.get.bind(), e.exports.__esModule = true, e.exports.default = e.exports) : (e.exports = i = function(e2, t2, r3) {
          var i2 = n(e2, t2);
          if (i2) {
            var o = Object.getOwnPropertyDescriptor(i2, t2);
            return o.get ? o.get.call(arguments.length < 3 ? e2 : r3) : o.value;
          }
        }, e.exports.__esModule = true, e.exports.default = e.exports), i.apply(this, arguments);
      }
      e.exports = i, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.id = function(e2) {
        return (0, n.keccak256)((0, i.toUtf8Bytes)(e2));
      };
      var n = r2(39), i = r2(65);
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "hash/5.7.0";
    }, function(e, t, r2) {
      var n = r2(395), i = r2(396), o = r2(131), a = r2(397);
      e.exports = function(e2) {
        return n(e2) || i(e2) || o(e2) || a();
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      function n(e2, t2) {
        null == t2 && (t2 = 1);
        var r3 = [], n2 = r3.forEach;
        return function e3(t3, i2) {
          n2.call(t3, function(t4) {
            i2 > 0 && Array.isArray(t4) ? e3(t4, i2 - 1) : r3.push(t4);
          });
        }(e2, t2), r3;
      }
      function i(e2) {
        var t2 = 0;
        function r3() {
          return e2[t2++] << 8 | e2[t2++];
        }
        for (var n2 = r3(), i2 = 1, o2 = [0, 1], a2 = 1; a2 < n2; a2++)
          o2.push(i2 += r3());
        var s3 = r3(), f3 = t2;
        t2 += s3;
        var c2 = 0, u2 = 0;
        function d2() {
          return 0 == c2 && (u2 = u2 << 8 | e2[t2++], c2 = 8), u2 >> --c2 & 1;
        }
        for (var h2 = Math.pow(2, 31), l2 = h2 >>> 1, p = l2 >> 1, b = h2 - 1, y = 0, v = 0; v < 31; v++)
          y = y << 1 | d2();
        for (var m = [], g = 0, w = h2; ; ) {
          for (var _ = Math.floor(((y - g + 1) * i2 - 1) / w), k = 0, A = n2; A - k > 1; ) {
            var S = k + A >>> 1;
            _ < o2[S] ? A = S : k = S;
          }
          if (0 == k)
            break;
          m.push(k);
          for (var E = g + Math.floor(w * o2[k] / i2), x = g + Math.floor(w * o2[k + 1] / i2) - 1; 0 == ((E ^ x) & l2); )
            y = y << 1 & b | d2(), E = E << 1 & b, x = x << 1 & b | 1;
          for (; E & ~x & p; )
            y = y & l2 | y << 1 & b >>> 1 | d2(), E = E << 1 ^ l2, x = (x ^ l2) << 1 | l2 | 1;
          g = E, w = 1 + x - E;
        }
        var P = n2 - 4;
        return m.map(function(t3) {
          switch (t3 - P) {
            case 3:
              return P + 65792 + (e2[f3++] << 16 | e2[f3++] << 8 | e2[f3++]);
            case 2:
              return P + 256 + (e2[f3++] << 8 | e2[f3++]);
            case 1:
              return P + e2[f3++];
            default:
              return t3 - 1;
          }
        });
      }
      function o(e2) {
        var t2 = 0;
        return function() {
          return e2[t2++];
        };
      }
      function a(e2) {
        return 1 & e2 ? ~e2 >> 1 : e2 >> 1;
      }
      function s2(e2, t2) {
        for (var r3 = Array(e2), n2 = 0, i2 = -1; n2 < e2; n2++)
          r3[n2] = i2 += 1 + t2();
        return r3;
      }
      function f2(e2, t2) {
        for (var r3 = Array(e2), n2 = 0, i2 = 0; n2 < e2; n2++)
          r3[n2] = i2 += a(t2());
        return r3;
      }
      function c(e2, t2) {
        for (var r3 = s2(e2(), e2), n2 = e2(), i2 = s2(n2, e2), o2 = function(e3, t3) {
          for (var r4 = Array(e3), n3 = 0; n3 < e3; n3++)
            r4[n3] = 1 + t3();
          return r4;
        }(n2, e2), a2 = 0; a2 < n2; a2++)
          for (var f3 = 0; f3 < o2[a2]; f3++)
            r3.push(i2[a2] + f3);
        return t2 ? r3.map(function(e3) {
          return t2[e3];
        }) : r3;
      }
      function u(e2) {
        for (var t2 = []; ; ) {
          var r3 = e2();
          if (0 == r3)
            break;
          t2.push(r3);
        }
        return t2;
      }
      function d(e2, t2, r3) {
        for (var n2 = Array(e2).fill(void 0).map(function() {
          return [];
        }), i2 = 0; i2 < t2; i2++)
          f2(e2, r3).forEach(function(e3, t3) {
            return n2[t3].push(e3);
          });
        return n2;
      }
      function h(e2, t2) {
        var r3 = 1 + t2(), i2 = t2(), o2 = u(t2);
        return n(d(o2.length, 1 + e2, t2).map(function(e3, t3) {
          var n2 = e3[0], a2 = e3.slice(1);
          return Array(o2[t3]).fill(void 0).map(function(e4, t4) {
            var o3 = t4 * i2;
            return [n2 + t4 * r3, a2.map(function(e5) {
              return e5 + o3;
            })];
          });
        }));
      }
      function l(e2, t2) {
        return d(1 + t2(), 1 + e2, t2).map(function(e3) {
          return [e3[0], e3.slice(1)];
        });
      }
      Object.defineProperty(t, "__esModule", { value: true }), t.decode_arithmetic = i, t.read_compressed_payload = function(e2) {
        return o(i(e2));
      }, t.read_emoji_trie = function(e2) {
        var t2 = c(e2).sort(function(e3, t3) {
          return e3 - t3;
        });
        return function r3() {
          var n2 = [];
          for (; ; ) {
            var i2 = c(e2, t2);
            if (0 == i2.length)
              break;
            n2.push({ set: new Set(i2), node: r3() });
          }
          n2.sort(function(e3, t3) {
            return t3.set.size - e3.set.size;
          });
          var o2 = e2();
          return { branches: n2, valid: o2 % 3, fe0f: !!(1 & (o2 = o2 / 3 | 0)), save: 1 == (o2 >>= 1), check: 2 == o2 };
        }();
      }, t.read_mapped_map = function(e2) {
        var t2 = [];
        for (; ; ) {
          var r3 = e2();
          if (0 == r3)
            break;
          t2.push(h(r3, e2));
        }
        for (; ; ) {
          var i2 = e2() - 1;
          if (i2 < 0)
            break;
          t2.push(l(i2, e2));
        }
        return function(e3) {
          for (var t3 = {}, r4 = 0; r4 < e3.length; r4++) {
            var n2 = e3[r4];
            t3[n2[0]] = n2[1];
          }
          return t3;
        }(n(t2));
      }, t.read_member_array = c, t.read_payload = o, t.read_zero_terminated_array = u, t.signed = a;
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(403).keccak_256, i = r2(404);
        function o(e3) {
          return e3 ? i.toUnicode(e3, { useStd3ASCII: true, transitional: false }) : e3;
        }
        t.hash = function(t2) {
          for (var r3 = "", i2 = 0; i2 < 32; i2++)
            r3 += "00";
          if (name = o(t2), name) {
            var a = name.split(".");
            for (i2 = a.length - 1; i2 >= 0; i2--) {
              var s2 = n(a[i2]);
              r3 = n(new e2(r3 + s2, "hex"));
            }
          }
          return "0x" + r3;
        }, t.normalize = o;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(66);
        function i(e2) {
          return parseInt(e2.toString("hex"), 16);
        }
        function o(e2) {
          var r3 = e2.toString(16);
          return r3.length % 2 == 1 && (r3 = "0" + r3), t2.from(r3, "hex");
        }
        e.exports = { numberToBuffer: o, bufferToNumber: i, varintBufferEncode: function(e2) {
          return t2.from(n.encode(i(e2)));
        }, varintBufferDecode: function(e2) {
          return o(n.decode(e2));
        }, varintEncode: function(e2) {
          return t2.from(n.encode(e2));
        } };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = r2(1).Buffer, s2 = r2(109), f2 = r2(427), c = r2(433), u = r2(67), d = r2(438), h = r2(439)(function(e2) {
        function t2(e3, r3, n2, o2) {
          if ((0, i.default)(this, t2), h.isCID(e3)) {
            var u2 = e3;
            return this.version = u2.version, this.codec = u2.codec, this.multihash = a.from(u2.multihash), void (this.multibaseName = u2.multibaseName || (0 === u2.version ? "base58btc" : "base32"));
          }
          if ("string" == typeof e3) {
            var d2 = f2.isEncoded(e3);
            if (d2) {
              var l = f2.decode(e3);
              this.version = parseInt(l.slice(0, 1).toString("hex"), 16), this.codec = c.getCodec(l.slice(1)), this.multihash = c.rmPrefix(l.slice(1)), this.multibaseName = d2;
            } else
              this.version = 0, this.codec = "dag-pb", this.multihash = s2.fromB58String(e3), this.multibaseName = "base58btc";
            return t2.validateCID(this), void Object.defineProperty(this, "string", { value: e3 });
          }
          if (a.isBuffer(e3)) {
            var p = e3.slice(0, 1), b = parseInt(p.toString("hex"), 16);
            if (1 === b) {
              var y = e3;
              this.version = b, this.codec = c.getCodec(y.slice(1)), this.multihash = c.rmPrefix(y.slice(1)), this.multibaseName = "base32";
            } else
              this.version = 0, this.codec = "dag-pb", this.multihash = e3, this.multibaseName = "base58btc";
            t2.validateCID(this);
          } else
            this.version = e3, this.codec = r3, this.multihash = n2, this.multibaseName = o2 || (0 === e3 ? "base58btc" : "base32"), t2.validateCID(this);
        }
        return (0, o.default)(t2, [{ key: "buffer", get: function() {
          var e3 = this._buffer;
          if (!e3) {
            if (0 === this.version)
              e3 = this.multihash;
            else {
              if (1 !== this.version)
                throw new Error("unsupported version");
              e3 = a.concat([a.from("01", "hex"), c.getCodeVarint(this.codec), this.multihash]);
            }
            Object.defineProperty(this, "_buffer", { value: e3 });
          }
          return e3;
        } }, { key: "prefix", get: function() {
          return a.concat([a.from("0".concat(this.version), "hex"), c.getCodeVarint(this.codec), s2.prefix(this.multihash)]);
        } }, { key: "toV0", value: function() {
          if ("dag-pb" !== this.codec)
            throw new Error("Cannot convert a non dag-pb CID to CIDv0");
          var e3 = s2.decode(this.multihash), t3 = e3.name, r3 = e3.length;
          if ("sha2-256" !== t3)
            throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
          if (32 !== r3)
            throw new Error("Cannot convert non 32 byte multihash CID to CIDv0");
          return new h(0, this.codec, this.multihash);
        } }, { key: "toV1", value: function() {
          return new h(1, this.codec, this.multihash);
        } }, { key: "toBaseEncodedString", value: function() {
          var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.multibaseName;
          if (this.string && e3 === this.multibaseName)
            return this.string;
          var t3 = null;
          if (0 === this.version) {
            if ("base58btc" !== e3)
              throw new Error("not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()");
            t3 = s2.toB58String(this.multihash);
          } else {
            if (1 !== this.version)
              throw new Error("unsupported version");
            t3 = f2.encode(e3, this.buffer).toString();
          }
          return e3 === this.multibaseName && Object.defineProperty(this, "string", { value: t3 }), t3;
        } }, { key: e2, value: function() {
          return "CID(" + this.toString() + ")";
        } }, { key: "toString", value: function(e3) {
          return this.toBaseEncodedString(e3);
        } }, { key: "toJSON", value: function() {
          return { codec: this.codec, version: this.version, hash: this.multihash };
        } }, { key: "equals", value: function(e3) {
          return this.codec === e3.codec && this.version === e3.version && this.multihash.equals(e3.multihash);
        } }], [{ key: "validateCID", value: function(e3) {
          var t3 = d.checkCIDComponents(e3);
          if (t3)
            throw new Error(t3);
        } }]), t2;
      }(Symbol.for("nodejs.util.inspect.custom")), { className: "CID", symbolName: "@ipld/js-cid/CID" });
      h.codecs = u, e.exports = h;
    }, function(e, t, r2) {
      var n = r2(5).Buffer;
      e.exports = function(e2) {
        if (e2.length >= 255)
          throw new TypeError("Alphabet too long");
        for (var t2 = new Uint8Array(256), r3 = 0; r3 < t2.length; r3++)
          t2[r3] = 255;
        for (var i = 0; i < e2.length; i++) {
          var o = e2.charAt(i), a = o.charCodeAt(0);
          if (255 !== t2[a])
            throw new TypeError(o + " is ambiguous");
          t2[a] = i;
        }
        var s2 = e2.length, f2 = e2.charAt(0), c = Math.log(s2) / Math.log(256), u = Math.log(256) / Math.log(s2);
        function d(e3) {
          if ("string" != typeof e3)
            throw new TypeError("Expected String");
          if (0 === e3.length)
            return n.alloc(0);
          for (var r4 = 0, i2 = 0, o2 = 0; e3[r4] === f2; )
            i2++, r4++;
          for (var a2 = (e3.length - r4) * c + 1 >>> 0, u2 = new Uint8Array(a2); e3[r4]; ) {
            var d2 = t2[e3.charCodeAt(r4)];
            if (255 === d2)
              return;
            for (var h = 0, l = a2 - 1; (0 !== d2 || h < o2) && -1 !== l; l--, h++)
              d2 += s2 * u2[l] >>> 0, u2[l] = d2 % 256 >>> 0, d2 = d2 / 256 >>> 0;
            if (0 !== d2)
              throw new Error("Non-zero carry");
            o2 = h, r4++;
          }
          for (var p = a2 - o2; p !== a2 && 0 === u2[p]; )
            p++;
          var b = n.allocUnsafe(i2 + (a2 - p));
          b.fill(0, 0, i2);
          for (var y = i2; p !== a2; )
            b[y++] = u2[p++];
          return b;
        }
        return { encode: function(t3) {
          if ((Array.isArray(t3) || t3 instanceof Uint8Array) && (t3 = n.from(t3)), !n.isBuffer(t3))
            throw new TypeError("Expected Buffer");
          if (0 === t3.length)
            return "";
          for (var r4 = 0, i2 = 0, o2 = 0, a2 = t3.length; o2 !== a2 && 0 === t3[o2]; )
            o2++, r4++;
          for (var c2 = (a2 - o2) * u + 1 >>> 0, d2 = new Uint8Array(c2); o2 !== a2; ) {
            for (var h = t3[o2], l = 0, p = c2 - 1; (0 !== h || l < i2) && -1 !== p; p--, l++)
              h += 256 * d2[p] >>> 0, d2[p] = h % s2 >>> 0, h = h / s2 >>> 0;
            if (0 !== h)
              throw new Error("Non-zero carry");
            i2 = l, o2++;
          }
          for (var b = c2 - i2; b !== c2 && 0 === d2[b]; )
            b++;
          for (var y = f2.repeat(r4); b < c2; ++b)
            y += e2.charAt(d2[b]);
          return y;
        }, decodeUnsafe: d, decode: function(e3) {
          var t3 = d(e3);
          if (t3)
            return t3;
          throw new Error("Non-base" + s2 + " character");
        } };
      };
    }, function(e, t, r2) {
      var n = r2(66), i = r2(1).Buffer;
      function o(e2) {
        return parseInt(e2.toString("hex"), 16);
      }
      function a(e2) {
        var t2 = e2.toString(16);
        return t2.length % 2 == 1 && (t2 = "0" + t2), i.from(t2, "hex");
      }
      e.exports = { numberToBuffer: a, bufferToNumber: o, varintBufferEncode: function(e2) {
        return i.from(n.encode(o(e2)));
      }, varintBufferDecode: function(e2) {
        return a(n.decode(e2));
      }, varintEncode: function(e2) {
        return i.from(n.encode(e2));
      } };
    }, function(e, t, r2) {
      var n = r2(34), i = r2(38), o = r2(17), a = r2(81), s2 = r2(12).formatters, f2 = function() {
        var e2 = this;
        n.packageInit(this, arguments), this.net = new a(this);
        var t2 = null, r3 = "latest";
        Object.defineProperty(this, "defaultAccount", { get: function() {
          return t2;
        }, set: function(e3) {
          return e3 && (t2 = o.toChecksumAddress(s2.inputAddressFormatter(e3))), f3.forEach(function(e4) {
            e4.defaultAccount = t2;
          }), e3;
        }, enumerable: true }), Object.defineProperty(this, "defaultBlock", { get: function() {
          return r3;
        }, set: function(e3) {
          return r3 = e3, f3.forEach(function(e4) {
            e4.defaultBlock = r3;
          }), e3;
        }, enumerable: true });
        var f3 = [new i({ name: "getAccounts", call: "personal_listAccounts", params: 0, outputFormatter: o.toChecksumAddress }), new i({ name: "newAccount", call: "personal_newAccount", params: 1, inputFormatter: [null], outputFormatter: o.toChecksumAddress }), new i({ name: "unlockAccount", call: "personal_unlockAccount", params: 3, inputFormatter: [s2.inputAddressFormatter, null, null] }), new i({ name: "lockAccount", call: "personal_lockAccount", params: 1, inputFormatter: [s2.inputAddressFormatter] }), new i({ name: "importRawKey", call: "personal_importRawKey", params: 2 }), new i({ name: "sendTransaction", call: "personal_sendTransaction", params: 2, inputFormatter: [s2.inputTransactionFormatter, null] }), new i({ name: "signTransaction", call: "personal_signTransaction", params: 2, inputFormatter: [s2.inputTransactionFormatter, null] }), new i({ name: "sign", call: "personal_sign", params: 3, inputFormatter: [s2.inputSignFormatter, s2.inputAddressFormatter, null] }), new i({ name: "ecRecover", call: "personal_ecRecover", params: 2, inputFormatter: [s2.inputSignFormatter, null] })];
        f3.forEach(function(t3) {
          t3.attachToObject(e2), t3.setRequestManager(e2._requestManager), t3.defaultBlock = e2.defaultBlock, t3.defaultAccount = e2.defaultAccount;
        });
      };
      n.addProviders(f2), e.exports = f2;
    }, function(e, t, r2) {
      r2(445);
      var n = function(e2, t2) {
        return parseInt(e2.slice(2 * t2 + 2, 2 * t2 + 4), 16);
      }, i = function(e2) {
        return (e2.length - 2) / 2;
      }, o = function(e2) {
        for (var t2 = [], r3 = 2, n2 = e2.length; r3 < n2; r3 += 2)
          t2.push(parseInt(e2.slice(r3, r3 + 2), 16));
        return t2;
      }, a = function(e2) {
        for (var t2 = "0x", r3 = 0, n2 = e2.length; r3 < n2; ++r3) {
          var i2 = e2[r3];
          t2 += (i2 < 16 ? "0" : "") + i2.toString(16);
        }
        return t2;
      };
      e.exports = { random: function(e2) {
        var t2;
        t2 = "undefined" != typeof window && window.crypto && window.crypto.getRandomValues ? window.crypto.getRandomValues(new Uint8Array(e2)) : r2(83).randomBytes(e2);
        for (var n2 = "0x", i2 = 0; i2 < e2; ++i2)
          n2 += ("00" + t2[i2].toString(16)).slice(-2);
        return n2;
      }, length: i, concat: function(e2, t2) {
        return e2.concat(t2.slice(2));
      }, flatten: function(e2) {
        return "0x" + e2.reduce(function(e3, t2) {
          return e3 + t2.slice(2);
        }, "");
      }, slice: function(e2, t2, r3) {
        return "0x" + r3.slice(2 * e2 + 2, 2 * t2 + 2);
      }, reverse: function(e2) {
        for (var t2 = "0x", r3 = 0, n2 = i(e2); r3 < n2; ++r3)
          t2 += e2.slice(2 * (n2 - r3), 2 * (n2 - r3 + 1));
        return t2;
      }, pad: function e2(t2, r3) {
        return r3.length === 2 * t2 + 2 ? r3 : e2(t2, "0x0" + r3.slice(2));
      }, padRight: function e2(t2, r3) {
        return r3.length === 2 * t2 + 2 ? r3 : e2(t2, r3 + "0");
      }, fromAscii: function(e2) {
        for (var t2 = "0x", r3 = 0; r3 < e2.length; ++r3)
          t2 += ("00" + e2.charCodeAt(r3).toString(16)).slice(-2);
        return t2;
      }, toAscii: function(e2) {
        for (var t2 = "", r3 = 2; r3 < e2.length; r3 += 2)
          t2 += String.fromCharCode(parseInt(e2.slice(r3, r3 + 2), 16));
        return t2;
      }, fromString: function(e2) {
        for (var t2 = function(e3) {
          var t3 = e3.toString(16);
          return t3.length < 2 ? "0" + t3 : t3;
        }, r3 = "0x", n2 = 0; n2 != e2.length; n2++) {
          var i2 = e2.charCodeAt(n2);
          if (i2 < 128)
            r3 += t2(i2);
          else {
            if (i2 < 2048)
              r3 += t2(i2 >> 6 | 192);
            else {
              if (i2 > 55295 && i2 < 56320) {
                if (++n2 == e2.length)
                  return null;
                var o2 = e2.charCodeAt(n2);
                if (o2 < 56320 || o2 > 57343)
                  return null;
                r3 += t2((i2 = 65536 + ((1023 & i2) << 10) + (1023 & o2)) >> 18 | 240), r3 += t2(i2 >> 12 & 63 | 128);
              } else
                r3 += t2(i2 >> 12 | 224);
              r3 += t2(i2 >> 6 & 63 | 128);
            }
            r3 += t2(63 & i2 | 128);
          }
        }
        return r3;
      }, toString: function(e2) {
        for (var t2 = "", r3 = 0, o2 = i(e2); r3 < o2; ) {
          var a2 = n(e2, r3++);
          if (a2 > 127) {
            if (a2 > 191 && a2 < 224) {
              if (r3 >= o2)
                return null;
              a2 = (31 & a2) << 6 | 63 & n(e2, r3);
            } else if (a2 > 223 && a2 < 240) {
              if (r3 + 1 >= o2)
                return null;
              a2 = (15 & a2) << 12 | (63 & n(e2, r3)) << 6 | 63 & n(e2, ++r3);
            } else {
              if (!(a2 > 239 && a2 < 248))
                return null;
              if (r3 + 2 >= o2)
                return null;
              a2 = (7 & a2) << 18 | (63 & n(e2, r3)) << 12 | (63 & n(e2, ++r3)) << 6 | 63 & n(e2, ++r3);
            }
            ++r3;
          }
          if (a2 <= 65535)
            t2 += String.fromCharCode(a2);
          else {
            if (!(a2 <= 1114111))
              return null;
            a2 -= 65536, t2 += String.fromCharCode(a2 >> 10 | 55296), t2 += String.fromCharCode(1023 & a2 | 56320);
          }
        }
        return t2;
      }, fromNumber: function(e2) {
        var t2 = e2.toString(16);
        return t2.length % 2 == 0 ? "0x" + t2 : "0x0" + t2;
      }, toNumber: function(e2) {
        return parseInt(e2.slice(2), 16);
      }, fromNat: function(e2) {
        return "0x0" === e2 ? "0x" : e2.length % 2 == 0 ? e2 : "0x0" + e2.slice(2);
      }, toNat: function(e2) {
        return "0" === e2[2] ? "0x" + e2.slice(3) : e2;
      }, fromArray: a, toArray: o, fromUint8Array: function(e2) {
        return a([].slice.call(e2, 0));
      }, toUint8Array: function(e2) {
        return new Uint8Array(o(e2));
      } };
    }, function(e, t, r2) {
      var n = r2(3), i = r2(446), o = r2(32), a = r2(5).Buffer, s2 = r2(196), f2 = r2(99), c = r2(100), u = a.alloc(128);
      function d(e2, t2) {
        o.call(this, "digest"), "string" == typeof t2 && (t2 = a.from(t2));
        var r3 = "sha512" === e2 || "sha384" === e2 ? 128 : 64;
        (this._alg = e2, this._key = t2, t2.length > r3) ? t2 = ("rmd160" === e2 ? new f2() : c(e2)).update(t2).digest() : t2.length < r3 && (t2 = a.concat([t2, u], r3));
        for (var n2 = this._ipad = a.allocUnsafe(r3), i2 = this._opad = a.allocUnsafe(r3), s3 = 0; s3 < r3; s3++)
          n2[s3] = 54 ^ t2[s3], i2[s3] = 92 ^ t2[s3];
        this._hash = "rmd160" === e2 ? new f2() : c(e2), this._hash.update(n2);
      }
      n(d, o), d.prototype._update = function(e2) {
        this._hash.update(e2);
      }, d.prototype._final = function() {
        var e2 = this._hash.digest();
        return ("rmd160" === this._alg ? new f2() : c(this._alg)).update(this._opad).update(e2).digest();
      }, e.exports = function(e2, t2) {
        return "rmd160" === (e2 = e2.toLowerCase()) || "ripemd160" === e2 ? new d("rmd160", t2) : "md5" === e2 ? new i(s2, t2) : new d(e2, t2);
      };
    }, function(e, t, r2) {
      var n = r2(97);
      e.exports = function(e2) {
        return new n().update(e2).digest();
      };
    }, function(e) {
      e.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');
    }, function(e, t, r2) {
      t.pbkdf2 = r2(448), t.pbkdf2Sync = r2(201);
    }, function(e, t, r2) {
      var n = Math.pow(2, 30) - 1;
      e.exports = function(e2, t2) {
        if ("number" != typeof e2)
          throw new TypeError("Iterations not a number");
        if (e2 < 0)
          throw new TypeError("Bad iterations");
        if ("number" != typeof t2)
          throw new TypeError("Key length not a number");
        if (t2 < 0 || t2 > n || t2 != t2)
          throw new TypeError("Bad key length");
      };
    }, function(e, t, r2) {
      (function(t2, r3) {
        var n;
        if (t2.process && t2.process.browser)
          n = "utf-8";
        else if (t2.process && t2.process.version) {
          n = parseInt(r3.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary";
        } else
          n = "utf-8";
        e.exports = n;
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      var n = r2(196), i = r2(99), o = r2(100), a = r2(5).Buffer, s2 = r2(199), f2 = r2(200), c = r2(202), u = a.alloc(128), d = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
      function h(e2, t2, r3) {
        var s3 = function(e3) {
          function t3(t4) {
            return o(e3).update(t4).digest();
          }
          return "rmd160" === e3 || "ripemd160" === e3 ? function(e4) {
            return new i().update(e4).digest();
          } : "md5" === e3 ? n : t3;
        }(e2), f3 = "sha512" === e2 || "sha384" === e2 ? 128 : 64;
        t2.length > f3 ? t2 = s3(t2) : t2.length < f3 && (t2 = a.concat([t2, u], f3));
        for (var c2 = a.allocUnsafe(f3 + d[e2]), h2 = a.allocUnsafe(f3 + d[e2]), l = 0; l < f3; l++)
          c2[l] = 54 ^ t2[l], h2[l] = 92 ^ t2[l];
        var p = a.allocUnsafe(f3 + r3 + 4);
        c2.copy(p, 0, 0, f3), this.ipad1 = p, this.ipad2 = c2, this.opad = h2, this.alg = e2, this.blocksize = f3, this.hash = s3, this.size = d[e2];
      }
      h.prototype.run = function(e2, t2) {
        return e2.copy(t2, this.blocksize), this.hash(t2).copy(this.opad, this.blocksize), this.hash(this.opad);
      }, e.exports = function(e2, t2, r3, n2, i2) {
        s2(r3, n2);
        var o2 = new h(i2 = i2 || "sha1", e2 = c(e2, f2, "Password"), (t2 = c(t2, f2, "Salt")).length), u2 = a.allocUnsafe(n2), l = a.allocUnsafe(t2.length + 4);
        t2.copy(l, 0, 0, t2.length);
        for (var p = 0, b = d[i2], y = Math.ceil(n2 / b), v = 1; v <= y; v++) {
          l.writeUInt32BE(v, t2.length);
          for (var m = o2.run(l, o2.ipad1), g = m, w = 1; w < r3; w++) {
            g = o2.run(g, o2.ipad2);
            for (var _ = 0; _ < b; _++)
              m[_] ^= g[_];
          }
          m.copy(u2, p), p += b;
        }
        return u2;
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer;
      e.exports = function(e2, t2, r3) {
        if (n.isBuffer(e2))
          return e2;
        if ("string" == typeof e2)
          return n.from(e2, t2);
        if (ArrayBuffer.isView(e2))
          return n.from(e2.buffer);
        throw new TypeError(r3 + " must be a string, a Buffer, a typed array or a DataView");
      };
    }, function(e, t, r2) {
      t.readUInt32BE = function(e2, t2) {
        return (e2[0 + t2] << 24 | e2[1 + t2] << 16 | e2[2 + t2] << 8 | e2[3 + t2]) >>> 0;
      }, t.writeUInt32BE = function(e2, t2, r3) {
        e2[0 + r3] = t2 >>> 24, e2[1 + r3] = t2 >>> 16 & 255, e2[2 + r3] = t2 >>> 8 & 255, e2[3 + r3] = 255 & t2;
      }, t.ip = function(e2, t2, r3, n2) {
        for (var i2 = 0, o2 = 0, a = 6; a >= 0; a -= 2) {
          for (var s2 = 0; s2 <= 24; s2 += 8)
            i2 <<= 1, i2 |= t2 >>> s2 + a & 1;
          for (s2 = 0; s2 <= 24; s2 += 8)
            i2 <<= 1, i2 |= e2 >>> s2 + a & 1;
        }
        for (a = 6; a >= 0; a -= 2) {
          for (s2 = 1; s2 <= 25; s2 += 8)
            o2 <<= 1, o2 |= t2 >>> s2 + a & 1;
          for (s2 = 1; s2 <= 25; s2 += 8)
            o2 <<= 1, o2 |= e2 >>> s2 + a & 1;
        }
        r3[n2 + 0] = i2 >>> 0, r3[n2 + 1] = o2 >>> 0;
      }, t.rip = function(e2, t2, r3, n2) {
        for (var i2 = 0, o2 = 0, a = 0; a < 4; a++)
          for (var s2 = 24; s2 >= 0; s2 -= 8)
            i2 <<= 1, i2 |= t2 >>> s2 + a & 1, i2 <<= 1, i2 |= e2 >>> s2 + a & 1;
        for (a = 4; a < 8; a++)
          for (s2 = 24; s2 >= 0; s2 -= 8)
            o2 <<= 1, o2 |= t2 >>> s2 + a & 1, o2 <<= 1, o2 |= e2 >>> s2 + a & 1;
        r3[n2 + 0] = i2 >>> 0, r3[n2 + 1] = o2 >>> 0;
      }, t.pc1 = function(e2, t2, r3, n2) {
        for (var i2 = 0, o2 = 0, a = 7; a >= 5; a--) {
          for (var s2 = 0; s2 <= 24; s2 += 8)
            i2 <<= 1, i2 |= t2 >> s2 + a & 1;
          for (s2 = 0; s2 <= 24; s2 += 8)
            i2 <<= 1, i2 |= e2 >> s2 + a & 1;
        }
        for (s2 = 0; s2 <= 24; s2 += 8)
          i2 <<= 1, i2 |= t2 >> s2 + a & 1;
        for (a = 1; a <= 3; a++) {
          for (s2 = 0; s2 <= 24; s2 += 8)
            o2 <<= 1, o2 |= t2 >> s2 + a & 1;
          for (s2 = 0; s2 <= 24; s2 += 8)
            o2 <<= 1, o2 |= e2 >> s2 + a & 1;
        }
        for (s2 = 0; s2 <= 24; s2 += 8)
          o2 <<= 1, o2 |= e2 >> s2 + a & 1;
        r3[n2 + 0] = i2 >>> 0, r3[n2 + 1] = o2 >>> 0;
      }, t.r28shl = function(e2, t2) {
        return e2 << t2 & 268435455 | e2 >>> 28 - t2;
      };
      var n = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
      t.pc2 = function(e2, t2, r3, i2) {
        for (var o2 = 0, a = 0, s2 = n.length >>> 1, f2 = 0; f2 < s2; f2++)
          o2 <<= 1, o2 |= e2 >>> n[f2] & 1;
        for (f2 = s2; f2 < n.length; f2++)
          a <<= 1, a |= t2 >>> n[f2] & 1;
        r3[i2 + 0] = o2 >>> 0, r3[i2 + 1] = a >>> 0;
      }, t.expand = function(e2, t2, r3) {
        var n2 = 0, i2 = 0;
        n2 = (1 & e2) << 5 | e2 >>> 27;
        for (var o2 = 23; o2 >= 15; o2 -= 4)
          n2 <<= 6, n2 |= e2 >>> o2 & 63;
        for (o2 = 11; o2 >= 3; o2 -= 4)
          i2 |= e2 >>> o2 & 63, i2 <<= 6;
        i2 |= (31 & e2) << 1 | e2 >>> 31, t2[r3 + 0] = n2 >>> 0, t2[r3 + 1] = i2 >>> 0;
      };
      var i = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
      t.substitute = function(e2, t2) {
        for (var r3 = 0, n2 = 0; n2 < 4; n2++) {
          r3 <<= 4, r3 |= i[64 * n2 + (e2 >>> 18 - 6 * n2 & 63)];
        }
        for (n2 = 0; n2 < 4; n2++) {
          r3 <<= 4, r3 |= i[256 + 64 * n2 + (t2 >>> 18 - 6 * n2 & 63)];
        }
        return r3 >>> 0;
      };
      var o = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
      t.permute = function(e2) {
        for (var t2 = 0, r3 = 0; r3 < o.length; r3++)
          t2 <<= 1, t2 |= e2 >>> o[r3] & 1;
        return t2 >>> 0;
      }, t.padSplit = function(e2, t2, r3) {
        for (var n2 = e2.toString(2); n2.length < t2; )
          n2 = "0" + n2;
        for (var i2 = [], o2 = 0; o2 < t2; o2 += r3)
          i2.push(n2.slice(o2, o2 + r3));
        return i2.join(" ");
      };
    }, function(e, t, r2) {
      var n = r2(19), i = r2(3), o = r2(203), a = r2(110);
      function s2() {
        this.tmp = new Array(2), this.keys = null;
      }
      function f2(e2) {
        a.call(this, e2);
        var t2 = new s2();
        this._desState = t2, this.deriveKeys(t2, e2.key);
      }
      i(f2, a), e.exports = f2, f2.create = function(e2) {
        return new f2(e2);
      };
      var c = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
      f2.prototype.deriveKeys = function(e2, t2) {
        e2.keys = new Array(32), n.equal(t2.length, this.blockSize, "Invalid key length");
        var r3 = o.readUInt32BE(t2, 0), i2 = o.readUInt32BE(t2, 4);
        o.pc1(r3, i2, e2.tmp, 0), r3 = e2.tmp[0], i2 = e2.tmp[1];
        for (var a2 = 0; a2 < e2.keys.length; a2 += 2) {
          var s3 = c[a2 >>> 1];
          r3 = o.r28shl(r3, s3), i2 = o.r28shl(i2, s3), o.pc2(r3, i2, e2.keys, a2);
        }
      }, f2.prototype._update = function(e2, t2, r3, n2) {
        var i2 = this._desState, a2 = o.readUInt32BE(e2, t2), s3 = o.readUInt32BE(e2, t2 + 4);
        o.ip(a2, s3, i2.tmp, 0), a2 = i2.tmp[0], s3 = i2.tmp[1], "encrypt" === this.type ? this._encrypt(i2, a2, s3, i2.tmp, 0) : this._decrypt(i2, a2, s3, i2.tmp, 0), a2 = i2.tmp[0], s3 = i2.tmp[1], o.writeUInt32BE(r3, a2, n2), o.writeUInt32BE(r3, s3, n2 + 4);
      }, f2.prototype._pad = function(e2, t2) {
        for (var r3 = e2.length - t2, n2 = t2; n2 < e2.length; n2++)
          e2[n2] = r3;
        return true;
      }, f2.prototype._unpad = function(e2) {
        for (var t2 = e2[e2.length - 1], r3 = e2.length - t2; r3 < e2.length; r3++)
          n.equal(e2[r3], t2);
        return e2.slice(0, e2.length - t2);
      }, f2.prototype._encrypt = function(e2, t2, r3, n2, i2) {
        for (var a2 = t2, s3 = r3, f3 = 0; f3 < e2.keys.length; f3 += 2) {
          var c2 = e2.keys[f3], u = e2.keys[f3 + 1];
          o.expand(s3, e2.tmp, 0), c2 ^= e2.tmp[0], u ^= e2.tmp[1];
          var d = o.substitute(c2, u), h = s3;
          s3 = (a2 ^ o.permute(d)) >>> 0, a2 = h;
        }
        o.rip(s3, a2, n2, i2);
      }, f2.prototype._decrypt = function(e2, t2, r3, n2, i2) {
        for (var a2 = r3, s3 = t2, f3 = e2.keys.length - 2; f3 >= 0; f3 -= 2) {
          var c2 = e2.keys[f3], u = e2.keys[f3 + 1];
          o.expand(a2, e2.tmp, 0), c2 ^= e2.tmp[0], u ^= e2.tmp[1];
          var d = o.substitute(c2, u), h = a2;
          a2 = (s3 ^ o.permute(d)) >>> 0, s3 = h;
        }
        o.rip(a2, s3, n2, i2);
      };
    }, function(e, t, r2) {
      var n = r2(68), i = r2(5).Buffer, o = r2(206);
      function a(e2) {
        var t2 = e2._cipher.encryptBlockRaw(e2._prev);
        return o(e2._prev), t2;
      }
      t.encrypt = function(e2, t2) {
        var r3 = Math.ceil(t2.length / 16), o2 = e2._cache.length;
        e2._cache = i.concat([e2._cache, i.allocUnsafe(16 * r3)]);
        for (var s2 = 0; s2 < r3; s2++) {
          var f2 = a(e2), c = o2 + 16 * s2;
          e2._cache.writeUInt32BE(f2[0], c + 0), e2._cache.writeUInt32BE(f2[1], c + 4), e2._cache.writeUInt32BE(f2[2], c + 8), e2._cache.writeUInt32BE(f2[3], c + 12);
        }
        var u = e2._cache.slice(0, t2.length);
        return e2._cache = e2._cache.slice(t2.length), n(t2, u);
      };
    }, function(e, t, r2) {
      e.exports = function(e2) {
        for (var t2, r3 = e2.length; r3--; ) {
          if (255 !== (t2 = e2.readUInt8(r3))) {
            t2++, e2.writeUInt8(t2, r3);
            break;
          }
          e2.writeUInt8(0, r3);
        }
      };
    }, function(e) {
      e.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');
    }, function(e, t, r2) {
      var n = r2(84), i = r2(5).Buffer, o = r2(32), a = r2(3), s2 = r2(461), f2 = r2(68), c = r2(206);
      function u(e2, t2, r3, a2) {
        o.call(this);
        var f3 = i.alloc(4, 0);
        this._cipher = new n.AES(t2);
        var u2 = this._cipher.encryptBlock(f3);
        this._ghash = new s2(u2), r3 = function(e3, t3, r4) {
          if (12 === t3.length)
            return e3._finID = i.concat([t3, i.from([0, 0, 0, 1])]), i.concat([t3, i.from([0, 0, 0, 2])]);
          var n2 = new s2(r4), o2 = t3.length, a3 = o2 % 16;
          n2.update(t3), a3 && (a3 = 16 - a3, n2.update(i.alloc(a3, 0))), n2.update(i.alloc(8, 0));
          var f4 = 8 * o2, u3 = i.alloc(8);
          u3.writeUIntBE(f4, 0, 8), n2.update(u3), e3._finID = n2.state;
          var d = i.from(e3._finID);
          return c(d), d;
        }(this, r3, u2), this._prev = i.from(r3), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a2, this._alen = 0, this._len = 0, this._mode = e2, this._authTag = null, this._called = false;
      }
      a(u, o), u.prototype._update = function(e2) {
        if (!this._called && this._alen) {
          var t2 = 16 - this._alen % 16;
          t2 < 16 && (t2 = i.alloc(t2, 0), this._ghash.update(t2));
        }
        this._called = true;
        var r3 = this._mode.encrypt(this, e2);
        return this._decrypt ? this._ghash.update(e2) : this._ghash.update(r3), this._len += e2.length, r3;
      }, u.prototype._final = function() {
        if (this._decrypt && !this._authTag)
          throw new Error("Unsupported state or unable to authenticate data");
        var e2 = f2(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
        if (this._decrypt && function(e3, t2) {
          var r3 = 0;
          e3.length !== t2.length && r3++;
          for (var n2 = Math.min(e3.length, t2.length), i2 = 0; i2 < n2; ++i2)
            r3 += e3[i2] ^ t2[i2];
          return r3;
        }(e2, this._authTag))
          throw new Error("Unsupported state or unable to authenticate data");
        this._authTag = e2, this._cipher.scrub();
      }, u.prototype.getAuthTag = function() {
        if (this._decrypt || !i.isBuffer(this._authTag))
          throw new Error("Attempting to get auth tag in unsupported state");
        return this._authTag;
      }, u.prototype.setAuthTag = function(e2) {
        if (!this._decrypt)
          throw new Error("Attempting to set auth tag in unsupported state");
        this._authTag = e2;
      }, u.prototype.setAAD = function(e2) {
        if (this._called)
          throw new Error("Attempting to set AAD in unsupported state");
        this._ghash.update(e2), this._alen += e2.length;
      }, e.exports = u;
    }, function(e, t, r2) {
      var n = r2(84), i = r2(5).Buffer, o = r2(32);
      function a(e2, t2, r3, a2) {
        o.call(this), this._cipher = new n.AES(t2), this._prev = i.from(r3), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a2, this._mode = e2;
      }
      r2(3)(a, o), a.prototype._update = function(e2) {
        return this._mode.encrypt(this, e2, this._decrypt);
      }, a.prototype._final = function() {
        this._cipher.scrub();
      }, e.exports = a;
    }, function(e, t, r2) {
      var n = r2(31);
      e.exports = m, m.simpleSieve = y, m.fermatTest = v;
      var i = r2(4), o = new i(24), a = new (r2(211))(), s2 = new i(1), f2 = new i(2), c = new i(5), u = (new i(16), new i(8), new i(10)), d = new i(3), h = (new i(7), new i(11)), l = new i(4), p = (new i(12), null);
      function b() {
        if (null !== p)
          return p;
        var e2 = [];
        e2[0] = 2;
        for (var t2 = 1, r3 = 3; r3 < 1048576; r3 += 2) {
          for (var n2 = Math.ceil(Math.sqrt(r3)), i2 = 0; i2 < t2 && e2[i2] <= n2 && r3 % e2[i2] != 0; i2++)
            ;
          t2 !== i2 && e2[i2] <= n2 || (e2[t2++] = r3);
        }
        return p = e2, e2;
      }
      function y(e2) {
        for (var t2 = b(), r3 = 0; r3 < t2.length; r3++)
          if (0 === e2.modn(t2[r3]))
            return 0 === e2.cmpn(t2[r3]);
        return true;
      }
      function v(e2) {
        var t2 = i.mont(e2);
        return 0 === f2.toRed(t2).redPow(e2.subn(1)).fromRed().cmpn(1);
      }
      function m(e2, t2) {
        if (e2 < 16)
          return new i(2 === t2 || 5 === t2 ? [140, 123] : [140, 39]);
        var r3, p2;
        for (t2 = new i(t2); ; ) {
          for (r3 = new i(n(Math.ceil(e2 / 8))); r3.bitLength() > e2; )
            r3.ishrn(1);
          if (r3.isEven() && r3.iadd(s2), r3.testn(1) || r3.iadd(f2), t2.cmp(f2)) {
            if (!t2.cmp(c))
              for (; r3.mod(u).cmp(d); )
                r3.iadd(l);
          } else
            for (; r3.mod(o).cmp(h); )
              r3.iadd(l);
          if (y(p2 = r3.shrn(1)) && y(r3) && v(p2) && v(r3) && a.test(p2) && a.test(r3))
            return r3;
        }
      }
    }, function(e, t, r2) {
      var n = r2(4), i = r2(93);
      function o(e2) {
        this.rand = e2 || new i.Rand();
      }
      e.exports = o, o.create = function(e2) {
        return new o(e2);
      }, o.prototype._randbelow = function(e2) {
        var t2 = e2.bitLength(), r3 = Math.ceil(t2 / 8);
        do {
          var i2 = new n(this.rand.generate(r3));
        } while (i2.cmp(e2) >= 0);
        return i2;
      }, o.prototype._randrange = function(e2, t2) {
        var r3 = t2.sub(e2);
        return e2.add(this._randbelow(r3));
      }, o.prototype.test = function(e2, t2, r3) {
        var i2 = e2.bitLength(), o2 = n.mont(e2), a = new n(1).toRed(o2);
        t2 || (t2 = Math.max(1, i2 / 48 | 0));
        for (var s2 = e2.subn(1), f2 = 0; !s2.testn(f2); f2++)
          ;
        for (var c = e2.shrn(f2), u = s2.toRed(o2); t2 > 0; t2--) {
          var d = this._randrange(new n(2), s2);
          r3 && r3(d);
          var h = d.toRed(o2).redPow(c);
          if (0 !== h.cmp(a) && 0 !== h.cmp(u)) {
            for (var l = 1; l < f2; l++) {
              if (0 === (h = h.redSqr()).cmp(a))
                return false;
              if (0 === h.cmp(u))
                break;
            }
            if (l === f2)
              return false;
          }
        }
        return true;
      }, o.prototype.getDivisor = function(e2, t2) {
        var r3 = e2.bitLength(), i2 = n.mont(e2), o2 = new n(1).toRed(i2);
        t2 || (t2 = Math.max(1, r3 / 48 | 0));
        for (var a = e2.subn(1), s2 = 0; !a.testn(s2); s2++)
          ;
        for (var f2 = e2.shrn(s2), c = a.toRed(i2); t2 > 0; t2--) {
          var u = this._randrange(new n(2), a), d = e2.gcd(u);
          if (0 !== d.cmpn(1))
            return d;
          var h = u.toRed(i2).redPow(f2);
          if (0 !== h.cmp(o2) && 0 !== h.cmp(c)) {
            for (var l = 1; l < s2; l++) {
              if (0 === (h = h.redSqr()).cmp(o2))
                return h.fromRed().subn(1).gcd(e2);
              if (0 === h.cmp(c))
                break;
            }
            if (l === s2)
              return (h = h.redSqr()).fromRed().subn(1).gcd(e2);
          }
        }
        return false;
      };
    }, function(e, t, r2) {
      (function(t2, n) {
        var i;
        e.exports = E, E.ReadableState = S;
        r2(20).EventEmitter;
        var o = function(e2, t3) {
          return e2.listeners(t3).length;
        }, a = r2(213), s2 = r2(1).Buffer, f2 = t2.Uint8Array || function() {
        };
        var c, u = r2(469);
        c = u && u.debuglog ? u.debuglog("stream") : function() {
        };
        var d, h, l, p = r2(470), b = r2(214), y = r2(215).getHighWaterMark, v = r2(51).codes, m = v.ERR_INVALID_ARG_TYPE, g = v.ERR_STREAM_PUSH_AFTER_EOF, w = v.ERR_METHOD_NOT_IMPLEMENTED, _ = v.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r2(3)(E, a);
        var k = b.errorOrDestroy, A = ["error", "close", "destroy", "pause", "resume"];
        function S(e2, t3, n2) {
          i = i || r2(52), e2 = e2 || {}, "boolean" != typeof n2 && (n2 = t3 instanceof i), this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.readableObjectMode), this.highWaterMark = y(this, e2, "readableHighWaterMark", n2), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.destroyed = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (d || (d = r2(21).StringDecoder), this.decoder = new d(e2.encoding), this.encoding = e2.encoding);
        }
        function E(e2) {
          if (i = i || r2(52), !(this instanceof E))
            return new E(e2);
          var t3 = this instanceof i;
          this._readableState = new S(e2, this, t3), this.readable = true, e2 && ("function" == typeof e2.read && (this._read = e2.read), "function" == typeof e2.destroy && (this._destroy = e2.destroy)), a.call(this);
        }
        function x(e2, t3, r3, n2, i2) {
          c("readableAddChunk", t3);
          var o2, a2 = e2._readableState;
          if (null === t3)
            a2.reading = false, function(e3, t4) {
              if (c("onEofChunk"), t4.ended)
                return;
              if (t4.decoder) {
                var r4 = t4.decoder.end();
                r4 && r4.length && (t4.buffer.push(r4), t4.length += t4.objectMode ? 1 : r4.length);
              }
              t4.ended = true, t4.sync ? T(e3) : (t4.needReadable = false, t4.emittedReadable || (t4.emittedReadable = true, B(e3)));
            }(e2, a2);
          else if (i2 || (o2 = function(e3, t4) {
            var r4;
            n3 = t4, s2.isBuffer(n3) || n3 instanceof f2 || "string" == typeof t4 || void 0 === t4 || e3.objectMode || (r4 = new m("chunk", ["string", "Buffer", "Uint8Array"], t4));
            var n3;
            return r4;
          }(a2, t3)), o2)
            k(e2, o2);
          else if (a2.objectMode || t3 && t3.length > 0)
            if ("string" == typeof t3 || a2.objectMode || Object.getPrototypeOf(t3) === s2.prototype || (t3 = function(e3) {
              return s2.from(e3);
            }(t3)), n2)
              a2.endEmitted ? k(e2, new _()) : P(e2, a2, t3, true);
            else if (a2.ended)
              k(e2, new g());
            else {
              if (a2.destroyed)
                return false;
              a2.reading = false, a2.decoder && !r3 ? (t3 = a2.decoder.write(t3), a2.objectMode || 0 !== t3.length ? P(e2, a2, t3, false) : M(e2, a2)) : P(e2, a2, t3, false);
            }
          else
            n2 || (a2.reading = false, M(e2, a2));
          return !a2.ended && (a2.length < a2.highWaterMark || 0 === a2.length);
        }
        function P(e2, t3, r3, n2) {
          t3.flowing && 0 === t3.length && !t3.sync ? (t3.awaitDrain = 0, e2.emit("data", r3)) : (t3.length += t3.objectMode ? 1 : r3.length, n2 ? t3.buffer.unshift(r3) : t3.buffer.push(r3), t3.needReadable && T(e2)), M(e2, t3);
        }
        Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function(e2) {
          this._readableState && (this._readableState.destroyed = e2);
        } }), E.prototype.destroy = b.destroy, E.prototype._undestroy = b.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        }, E.prototype.push = function(e2, t3) {
          var r3, n2 = this._readableState;
          return n2.objectMode ? r3 = true : "string" == typeof e2 && ((t3 = t3 || n2.defaultEncoding) !== n2.encoding && (e2 = s2.from(e2, t3), t3 = ""), r3 = true), x(this, e2, t3, false, r3);
        }, E.prototype.unshift = function(e2) {
          return x(this, e2, null, true, false);
        }, E.prototype.isPaused = function() {
          return false === this._readableState.flowing;
        }, E.prototype.setEncoding = function(e2) {
          d || (d = r2(21).StringDecoder);
          var t3 = new d(e2);
          this._readableState.decoder = t3, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var n2 = this._readableState.buffer.head, i2 = ""; null !== n2; )
            i2 += t3.write(n2.data), n2 = n2.next;
          return this._readableState.buffer.clear(), "" !== i2 && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
        };
        function O(e2, t3) {
          return e2 <= 0 || 0 === t3.length && t3.ended ? 0 : t3.objectMode ? 1 : e2 != e2 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e2 > t3.highWaterMark && (t3.highWaterMark = function(e3) {
            return e3 >= 1073741824 ? e3 = 1073741824 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
          }(e2)), e2 <= t3.length ? e2 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function T(e2) {
          var t3 = e2._readableState;
          c("emitReadable", t3.needReadable, t3.emittedReadable), t3.needReadable = false, t3.emittedReadable || (c("emitReadable", t3.flowing), t3.emittedReadable = true, n.nextTick(B, e2));
        }
        function B(e2) {
          var t3 = e2._readableState;
          c("emitReadable_", t3.destroyed, t3.length, t3.ended), t3.destroyed || !t3.length && !t3.ended || (e2.emit("readable"), t3.emittedReadable = false), t3.needReadable = !t3.flowing && !t3.ended && t3.length <= t3.highWaterMark, j(e2);
        }
        function M(e2, t3) {
          t3.readingMore || (t3.readingMore = true, n.nextTick(R, e2, t3));
        }
        function R(e2, t3) {
          for (; !t3.reading && !t3.ended && (t3.length < t3.highWaterMark || t3.flowing && 0 === t3.length); ) {
            var r3 = t3.length;
            if (c("maybeReadMore read 0"), e2.read(0), r3 === t3.length)
              break;
          }
          t3.readingMore = false;
        }
        function I(e2) {
          var t3 = e2._readableState;
          t3.readableListening = e2.listenerCount("readable") > 0, t3.resumeScheduled && !t3.paused ? t3.flowing = true : e2.listenerCount("data") > 0 && e2.resume();
        }
        function C(e2) {
          c("readable nexttick read 0"), e2.read(0);
        }
        function U(e2, t3) {
          c("resume", t3.reading), t3.reading || e2.read(0), t3.resumeScheduled = false, e2.emit("resume"), j(e2), t3.flowing && !t3.reading && e2.read(0);
        }
        function j(e2) {
          var t3 = e2._readableState;
          for (c("flow", t3.flowing); t3.flowing && null !== e2.read(); )
            ;
        }
        function N(e2, t3) {
          return 0 === t3.length ? null : (t3.objectMode ? r3 = t3.buffer.shift() : !e2 || e2 >= t3.length ? (r3 = t3.decoder ? t3.buffer.join("") : 1 === t3.buffer.length ? t3.buffer.first() : t3.buffer.concat(t3.length), t3.buffer.clear()) : r3 = t3.buffer.consume(e2, t3.decoder), r3);
          var r3;
        }
        function L(e2) {
          var t3 = e2._readableState;
          c("endReadable", t3.endEmitted), t3.endEmitted || (t3.ended = true, n.nextTick(D, t3, e2));
        }
        function D(e2, t3) {
          if (c("endReadableNT", e2.endEmitted, e2.length), !e2.endEmitted && 0 === e2.length && (e2.endEmitted = true, t3.readable = false, t3.emit("end"), e2.autoDestroy)) {
            var r3 = t3._writableState;
            (!r3 || r3.autoDestroy && r3.finished) && t3.destroy();
          }
        }
        function F(e2, t3) {
          for (var r3 = 0, n2 = e2.length; r3 < n2; r3++)
            if (e2[r3] === t3)
              return r3;
          return -1;
        }
        E.prototype.read = function(e2) {
          c("read", e2), e2 = parseInt(e2, 10);
          var t3 = this._readableState, r3 = e2;
          if (0 !== e2 && (t3.emittedReadable = false), 0 === e2 && t3.needReadable && ((0 !== t3.highWaterMark ? t3.length >= t3.highWaterMark : t3.length > 0) || t3.ended))
            return c("read: emitReadable", t3.length, t3.ended), 0 === t3.length && t3.ended ? L(this) : T(this), null;
          if (0 === (e2 = O(e2, t3)) && t3.ended)
            return 0 === t3.length && L(this), null;
          var n2, i2 = t3.needReadable;
          return c("need readable", i2), (0 === t3.length || t3.length - e2 < t3.highWaterMark) && c("length less than watermark", i2 = true), t3.ended || t3.reading ? c("reading or ended", i2 = false) : i2 && (c("do read"), t3.reading = true, t3.sync = true, 0 === t3.length && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e2 = O(r3, t3))), null === (n2 = e2 > 0 ? N(e2, t3) : null) ? (t3.needReadable = t3.length <= t3.highWaterMark, e2 = 0) : (t3.length -= e2, t3.awaitDrain = 0), 0 === t3.length && (t3.ended || (t3.needReadable = true), r3 !== e2 && t3.ended && L(this)), null !== n2 && this.emit("data", n2), n2;
        }, E.prototype._read = function(e2) {
          k(this, new w("_read()"));
        }, E.prototype.pipe = function(e2, t3) {
          var r3 = this, i2 = this._readableState;
          switch (i2.pipesCount) {
            case 0:
              i2.pipes = e2;
              break;
            case 1:
              i2.pipes = [i2.pipes, e2];
              break;
            default:
              i2.pipes.push(e2);
          }
          i2.pipesCount += 1, c("pipe count=%d opts=%j", i2.pipesCount, t3);
          var a2 = (!t3 || false !== t3.end) && e2 !== n.stdout && e2 !== n.stderr ? f3 : y2;
          function s3(t4, n2) {
            c("onunpipe"), t4 === r3 && n2 && false === n2.hasUnpiped && (n2.hasUnpiped = true, c("cleanup"), e2.removeListener("close", p2), e2.removeListener("finish", b2), e2.removeListener("drain", u2), e2.removeListener("error", l2), e2.removeListener("unpipe", s3), r3.removeListener("end", f3), r3.removeListener("end", y2), r3.removeListener("data", h2), d2 = true, !i2.awaitDrain || e2._writableState && !e2._writableState.needDrain || u2());
          }
          function f3() {
            c("onend"), e2.end();
          }
          i2.endEmitted ? n.nextTick(a2) : r3.once("end", a2), e2.on("unpipe", s3);
          var u2 = function(e3) {
            return function() {
              var t4 = e3._readableState;
              c("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, 0 === t4.awaitDrain && o(e3, "data") && (t4.flowing = true, j(e3));
            };
          }(r3);
          e2.on("drain", u2);
          var d2 = false;
          function h2(t4) {
            c("ondata");
            var n2 = e2.write(t4);
            c("dest.write", n2), false === n2 && ((1 === i2.pipesCount && i2.pipes === e2 || i2.pipesCount > 1 && -1 !== F(i2.pipes, e2)) && !d2 && (c("false write response, pause", i2.awaitDrain), i2.awaitDrain++), r3.pause());
          }
          function l2(t4) {
            c("onerror", t4), y2(), e2.removeListener("error", l2), 0 === o(e2, "error") && k(e2, t4);
          }
          function p2() {
            e2.removeListener("finish", b2), y2();
          }
          function b2() {
            c("onfinish"), e2.removeListener("close", p2), y2();
          }
          function y2() {
            c("unpipe"), r3.unpipe(e2);
          }
          return r3.on("data", h2), function(e3, t4, r4) {
            if ("function" == typeof e3.prependListener)
              return e3.prependListener(t4, r4);
            e3._events && e3._events[t4] ? Array.isArray(e3._events[t4]) ? e3._events[t4].unshift(r4) : e3._events[t4] = [r4, e3._events[t4]] : e3.on(t4, r4);
          }(e2, "error", l2), e2.once("close", p2), e2.once("finish", b2), e2.emit("pipe", r3), i2.flowing || (c("pipe resume"), r3.resume()), e2;
        }, E.prototype.unpipe = function(e2) {
          var t3 = this._readableState, r3 = { hasUnpiped: false };
          if (0 === t3.pipesCount)
            return this;
          if (1 === t3.pipesCount)
            return e2 && e2 !== t3.pipes || (e2 || (e2 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e2 && e2.emit("unpipe", this, r3)), this;
          if (!e2) {
            var n2 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var o2 = 0; o2 < i2; o2++)
              n2[o2].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var a2 = F(t3.pipes, e2);
          return -1 === a2 || (t3.pipes.splice(a2, 1), t3.pipesCount -= 1, 1 === t3.pipesCount && (t3.pipes = t3.pipes[0]), e2.emit("unpipe", this, r3)), this;
        }, E.prototype.on = function(e2, t3) {
          var r3 = a.prototype.on.call(this, e2, t3), i2 = this._readableState;
          return "data" === e2 ? (i2.readableListening = this.listenerCount("readable") > 0, false !== i2.flowing && this.resume()) : "readable" === e2 && (i2.endEmitted || i2.readableListening || (i2.readableListening = i2.needReadable = true, i2.flowing = false, i2.emittedReadable = false, c("on readable", i2.length, i2.reading), i2.length ? T(this) : i2.reading || n.nextTick(C, this))), r3;
        }, E.prototype.addListener = E.prototype.on, E.prototype.removeListener = function(e2, t3) {
          var r3 = a.prototype.removeListener.call(this, e2, t3);
          return "readable" === e2 && n.nextTick(I, this), r3;
        }, E.prototype.removeAllListeners = function(e2) {
          var t3 = a.prototype.removeAllListeners.apply(this, arguments);
          return "readable" !== e2 && void 0 !== e2 || n.nextTick(I, this), t3;
        }, E.prototype.resume = function() {
          var e2 = this._readableState;
          return e2.flowing || (c("resume"), e2.flowing = !e2.readableListening, function(e3, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, n.nextTick(U, e3, t3));
          }(this, e2)), e2.paused = false, this;
        }, E.prototype.pause = function() {
          return c("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (c("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, E.prototype.wrap = function(e2) {
          var t3 = this, r3 = this._readableState, n2 = false;
          for (var i2 in e2.on("end", function() {
            if (c("wrapped end"), r3.decoder && !r3.ended) {
              var e3 = r3.decoder.end();
              e3 && e3.length && t3.push(e3);
            }
            t3.push(null);
          }), e2.on("data", function(i3) {
            (c("wrapped data"), r3.decoder && (i3 = r3.decoder.write(i3)), r3.objectMode && null == i3) || (r3.objectMode || i3 && i3.length) && (t3.push(i3) || (n2 = true, e2.pause()));
          }), e2)
            void 0 === this[i2] && "function" == typeof e2[i2] && (this[i2] = function(t4) {
              return function() {
                return e2[t4].apply(e2, arguments);
              };
            }(i2));
          for (var o2 = 0; o2 < A.length; o2++)
            e2.on(A[o2], this.emit.bind(this, A[o2]));
          return this._read = function(t4) {
            c("wrapped _read", t4), n2 && (n2 = false, e2.resume());
          }, this;
        }, "function" == typeof Symbol && (E.prototype[Symbol.asyncIterator] = function() {
          return void 0 === h && (h = r2(472)), h(this);
        }), Object.defineProperty(E.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(E.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(E.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(e2) {
          this._readableState && (this._readableState.flowing = e2);
        } }), E._fromList = N, Object.defineProperty(E.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), "function" == typeof Symbol && (E.from = function(e2, t3) {
          return void 0 === l && (l = r2(473)), l(E, e2, t3);
        });
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = r2(20).EventEmitter;
    }, function(e, t, r2) {
      (function(t2) {
        function r3(e2, t3) {
          i(e2, t3), n(e2);
        }
        function n(e2) {
          e2._writableState && !e2._writableState.emitClose || e2._readableState && !e2._readableState.emitClose || e2.emit("close");
        }
        function i(e2, t3) {
          e2.emit("error", t3);
        }
        e.exports = { destroy: function(e2, o) {
          var a = this, s2 = this._readableState && this._readableState.destroyed, f2 = this._writableState && this._writableState.destroyed;
          return s2 || f2 ? (o ? o(e2) : e2 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, t2.nextTick(i, this, e2)) : t2.nextTick(i, this, e2)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e2 || null, function(e3) {
            !o && e3 ? a._writableState ? a._writableState.errorEmitted ? t2.nextTick(n, a) : (a._writableState.errorEmitted = true, t2.nextTick(r3, a, e3)) : t2.nextTick(r3, a, e3) : o ? (t2.nextTick(n, a), o(e3)) : t2.nextTick(n, a);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(e2, t3) {
          var r4 = e2._readableState, n2 = e2._writableState;
          r4 && r4.autoDestroy || n2 && n2.autoDestroy ? e2.destroy(t3) : e2.emit("error", t3);
        } };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(51).codes.ERR_INVALID_OPT_VALUE;
      e.exports = { getHighWaterMark: function(e2, t2, r3, i) {
        var o = function(e3, t3, r4) {
          return null != e3.highWaterMark ? e3.highWaterMark : t3 ? e3[r4] : null;
        }(t2, i, r3);
        if (null != o) {
          if (!isFinite(o) || Math.floor(o) !== o || o < 0)
            throw new n(i ? r3 : "highWaterMark", o);
          return Math.floor(o);
        }
        return e2.objectMode ? 16 : 16384;
      } };
    }, function(e, t, r2) {
      (function(t2, n) {
        function i(e2) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e3, t4, r3) {
              var n2 = e3.entry;
              e3.entry = null;
              for (; n2; ) {
                var i2 = n2.callback;
                t4.pendingcb--, i2(r3), n2 = n2.next;
              }
              t4.corkedRequestsFree.next = e3;
            }(t3, e2);
          };
        }
        var o;
        e.exports = E, E.WritableState = S;
        var a = { deprecate: r2(74) }, s2 = r2(213), f2 = r2(1).Buffer, c = t2.Uint8Array || function() {
        };
        var u, d = r2(214), h = r2(215).getHighWaterMark, l = r2(51).codes, p = l.ERR_INVALID_ARG_TYPE, b = l.ERR_METHOD_NOT_IMPLEMENTED, y = l.ERR_MULTIPLE_CALLBACK, v = l.ERR_STREAM_CANNOT_PIPE, m = l.ERR_STREAM_DESTROYED, g = l.ERR_STREAM_NULL_VALUES, w = l.ERR_STREAM_WRITE_AFTER_END, _ = l.ERR_UNKNOWN_ENCODING, k = d.errorOrDestroy;
        function A() {
        }
        function S(e2, t3, a2) {
          o = o || r2(52), e2 = e2 || {}, "boolean" != typeof a2 && (a2 = t3 instanceof o), this.objectMode = !!e2.objectMode, a2 && (this.objectMode = this.objectMode || !!e2.writableObjectMode), this.highWaterMark = h(this, e2, "writableHighWaterMark", a2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var s3 = false === e2.decodeStrings;
          this.decodeStrings = !s3, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
            !function(e4, t4) {
              var r3 = e4._writableState, i2 = r3.sync, o2 = r3.writecb;
              if ("function" != typeof o2)
                throw new y();
              if (function(e5) {
                e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
              }(r3), t4)
                !function(e5, t5, r4, i3, o3) {
                  --t5.pendingcb, r4 ? (n.nextTick(o3, i3), n.nextTick(M, e5, t5), e5._writableState.errorEmitted = true, k(e5, i3)) : (o3(i3), e5._writableState.errorEmitted = true, k(e5, i3), M(e5, t5));
                }(e4, r3, i2, t4, o2);
              else {
                var a3 = T(r3) || e4.destroyed;
                a3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || O(e4, r3), i2 ? n.nextTick(P, e4, r3, a3, o2) : P(e4, r3, a3, o2);
              }
            }(t3, e3);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
        }
        function E(e2) {
          var t3 = this instanceof (o = o || r2(52));
          if (!t3 && !u.call(E, this))
            return new E(e2);
          this._writableState = new S(e2, this, t3), this.writable = true, e2 && ("function" == typeof e2.write && (this._write = e2.write), "function" == typeof e2.writev && (this._writev = e2.writev), "function" == typeof e2.destroy && (this._destroy = e2.destroy), "function" == typeof e2.final && (this._final = e2.final)), s2.call(this);
        }
        function x(e2, t3, r3, n2, i2, o2, a2) {
          t3.writelen = n2, t3.writecb = a2, t3.writing = true, t3.sync = true, t3.destroyed ? t3.onwrite(new m("write")) : r3 ? e2._writev(i2, t3.onwrite) : e2._write(i2, o2, t3.onwrite), t3.sync = false;
        }
        function P(e2, t3, r3, n2) {
          r3 || function(e3, t4) {
            0 === t4.length && t4.needDrain && (t4.needDrain = false, e3.emit("drain"));
          }(e2, t3), t3.pendingcb--, n2(), M(e2, t3);
        }
        function O(e2, t3) {
          t3.bufferProcessing = true;
          var r3 = t3.bufferedRequest;
          if (e2._writev && r3 && r3.next) {
            var n2 = t3.bufferedRequestCount, o2 = new Array(n2), a2 = t3.corkedRequestsFree;
            a2.entry = r3;
            for (var s3 = 0, f3 = true; r3; )
              o2[s3] = r3, r3.isBuf || (f3 = false), r3 = r3.next, s3 += 1;
            o2.allBuffers = f3, x(e2, t3, true, t3.length, o2, "", a2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, a2.next ? (t3.corkedRequestsFree = a2.next, a2.next = null) : t3.corkedRequestsFree = new i(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r3; ) {
              var c2 = r3.chunk, u2 = r3.encoding, d2 = r3.callback;
              if (x(e2, t3, false, t3.objectMode ? 1 : c2.length, c2, u2, d2), r3 = r3.next, t3.bufferedRequestCount--, t3.writing)
                break;
            }
            null === r3 && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r3, t3.bufferProcessing = false;
        }
        function T(e2) {
          return e2.ending && 0 === e2.length && null === e2.bufferedRequest && !e2.finished && !e2.writing;
        }
        function B(e2, t3) {
          e2._final(function(r3) {
            t3.pendingcb--, r3 && k(e2, r3), t3.prefinished = true, e2.emit("prefinish"), M(e2, t3);
          });
        }
        function M(e2, t3) {
          var r3 = T(t3);
          if (r3 && (function(e3, t4) {
            t4.prefinished || t4.finalCalled || ("function" != typeof e3._final || t4.destroyed ? (t4.prefinished = true, e3.emit("prefinish")) : (t4.pendingcb++, t4.finalCalled = true, n.nextTick(B, e3, t4)));
          }(e2, t3), 0 === t3.pendingcb && (t3.finished = true, e2.emit("finish"), t3.autoDestroy))) {
            var i2 = e2._readableState;
            (!i2 || i2.autoDestroy && i2.endEmitted) && e2.destroy();
          }
          return r3;
        }
        r2(3)(E, s2), S.prototype.getBuffer = function() {
          for (var e2 = this.bufferedRequest, t3 = []; e2; )
            t3.push(e2), e2 = e2.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(S.prototype, "buffer", { get: a.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch (e2) {
          }
        }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (u = Function.prototype[Symbol.hasInstance], Object.defineProperty(E, Symbol.hasInstance, { value: function(e2) {
          return !!u.call(this, e2) || this === E && (e2 && e2._writableState instanceof S);
        } })) : u = function(e2) {
          return e2 instanceof this;
        }, E.prototype.pipe = function() {
          k(this, new v());
        }, E.prototype.write = function(e2, t3, r3) {
          var i2, o2 = this._writableState, a2 = false, s3 = !o2.objectMode && (i2 = e2, f2.isBuffer(i2) || i2 instanceof c);
          return s3 && !f2.isBuffer(e2) && (e2 = function(e3) {
            return f2.from(e3);
          }(e2)), "function" == typeof t3 && (r3 = t3, t3 = null), s3 ? t3 = "buffer" : t3 || (t3 = o2.defaultEncoding), "function" != typeof r3 && (r3 = A), o2.ending ? function(e3, t4) {
            var r4 = new w();
            k(e3, r4), n.nextTick(t4, r4);
          }(this, r3) : (s3 || function(e3, t4, r4, i3) {
            var o3;
            return null === r4 ? o3 = new g() : "string" == typeof r4 || t4.objectMode || (o3 = new p("chunk", ["string", "Buffer"], r4)), !o3 || (k(e3, o3), n.nextTick(i3, o3), false);
          }(this, o2, e2, r3)) && (o2.pendingcb++, a2 = function(e3, t4, r4, n2, i3, o3) {
            if (!r4) {
              var a3 = function(e4, t5, r5) {
                e4.objectMode || false === e4.decodeStrings || "string" != typeof t5 || (t5 = f2.from(t5, r5));
                return t5;
              }(t4, n2, i3);
              n2 !== a3 && (r4 = true, i3 = "buffer", n2 = a3);
            }
            var s4 = t4.objectMode ? 1 : n2.length;
            t4.length += s4;
            var c2 = t4.length < t4.highWaterMark;
            c2 || (t4.needDrain = true);
            if (t4.writing || t4.corked) {
              var u2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = { chunk: n2, encoding: i3, isBuf: r4, callback: o3, next: null }, u2 ? u2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else
              x(e3, t4, false, s4, n2, i3, o3);
            return c2;
          }(this, o2, s3, e2, t3, r3)), a2;
        }, E.prototype.cork = function() {
          this._writableState.corked++;
        }, E.prototype.uncork = function() {
          var e2 = this._writableState;
          e2.corked && (e2.corked--, e2.writing || e2.corked || e2.bufferProcessing || !e2.bufferedRequest || O(this, e2));
        }, E.prototype.setDefaultEncoding = function(e2) {
          if ("string" == typeof e2 && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
            throw new _(e2);
          return this._writableState.defaultEncoding = e2, this;
        }, Object.defineProperty(E.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(E.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), E.prototype._write = function(e2, t3, r3) {
          r3(new b("_write()"));
        }, E.prototype._writev = null, E.prototype.end = function(e2, t3, r3) {
          var i2 = this._writableState;
          return "function" == typeof e2 ? (r3 = e2, e2 = null, t3 = null) : "function" == typeof t3 && (r3 = t3, t3 = null), null != e2 && this.write(e2, t3), i2.corked && (i2.corked = 1, this.uncork()), i2.ending || function(e3, t4, r4) {
            t4.ending = true, M(e3, t4), r4 && (t4.finished ? n.nextTick(r4) : e3.once("finish", r4));
            t4.ended = true, e3.writable = false;
          }(this, i2, r3), this;
        }, Object.defineProperty(E.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function(e2) {
          this._writableState && (this._writableState.destroyed = e2);
        } }), E.prototype.destroy = d.destroy, E.prototype._undestroy = d.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        };
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = u;
      var n = r2(51).codes, i = n.ERR_METHOD_NOT_IMPLEMENTED, o = n.ERR_MULTIPLE_CALLBACK, a = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, s2 = n.ERR_TRANSFORM_WITH_LENGTH_0, f2 = r2(52);
      function c(e2, t2) {
        var r3 = this._transformState;
        r3.transforming = false;
        var n2 = r3.writecb;
        if (null === n2)
          return this.emit("error", new o());
        r3.writechunk = null, r3.writecb = null, null != t2 && this.push(t2), n2(e2);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function u(e2) {
        if (!(this instanceof u))
          return new u(e2);
        f2.call(this, e2), this._transformState = { afterTransform: c.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e2 && ("function" == typeof e2.transform && (this._transform = e2.transform), "function" == typeof e2.flush && (this._flush = e2.flush)), this.on("prefinish", d);
      }
      function d() {
        var e2 = this;
        "function" != typeof this._flush || this._readableState.destroyed ? h(this, null, null) : this._flush(function(t2, r3) {
          h(e2, t2, r3);
        });
      }
      function h(e2, t2, r3) {
        if (t2)
          return e2.emit("error", t2);
        if (null != r3 && e2.push(r3), e2._writableState.length)
          throw new s2();
        if (e2._transformState.transforming)
          throw new a();
        return e2.push(null);
      }
      r2(3)(u, f2), u.prototype.push = function(e2, t2) {
        return this._transformState.needTransform = false, f2.prototype.push.call(this, e2, t2);
      }, u.prototype._transform = function(e2, t2, r3) {
        r3(new i("_transform()"));
      }, u.prototype._write = function(e2, t2, r3) {
        var n2 = this._transformState;
        if (n2.writecb = r3, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, u.prototype._read = function(e2) {
        var t2 = this._transformState;
        null === t2.writechunk || t2.transforming ? t2.needTransform = true : (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform));
      }, u.prototype._destroy = function(e2, t2) {
        f2.prototype._destroy.call(this, e2, function(e3) {
          t2(e3);
        });
      };
    }, function(e, t, r2) {
      var n = t;
      n.bignum = r2(4), n.define = r2(478).define, n.base = r2(481), n.constants = r2(482), n.decoders = r2(221), n.encoders = r2(219);
    }, function(e, t, r2) {
      var n = t;
      n.der = r2(220), n.pem = r2(479);
    }, function(e, t, r2) {
      var n = r2(3), i = r2(115).Buffer, o = r2(116), a = r2(118);
      function s2(e2) {
        this.enc = "der", this.name = e2.name, this.entity = e2, this.tree = new f2(), this.tree._init(e2.body);
      }
      function f2(e2) {
        o.call(this, "der", e2);
      }
      function c(e2) {
        return e2 < 10 ? "0" + e2 : e2;
      }
      e.exports = s2, s2.prototype.encode = function(e2, t2) {
        return this.tree._encode(e2, t2).join();
      }, n(f2, o), f2.prototype._encodeComposite = function(e2, t2, r3, n2) {
        var o2 = function(e3, t3, r4, n3) {
          var i2;
          "seqof" === e3 ? e3 = "seq" : "setof" === e3 && (e3 = "set");
          if (a.tagByName.hasOwnProperty(e3))
            i2 = a.tagByName[e3];
          else {
            if ("number" != typeof e3 || (0 | e3) !== e3)
              return n3.error("Unknown tag: " + e3);
            i2 = e3;
          }
          if (i2 >= 31)
            return n3.error("Multi-octet tag encoding unsupported");
          t3 || (i2 |= 32);
          return i2 |= a.tagClassByName[r4 || "universal"] << 6;
        }(e2, t2, r3, this.reporter);
        if (n2.length < 128) {
          var s3 = i.alloc(2);
          return s3[0] = o2, s3[1] = n2.length, this._createEncoderBuffer([s3, n2]);
        }
        for (var f3 = 1, c2 = n2.length; c2 >= 256; c2 >>= 8)
          f3++;
        var u = i.alloc(2 + f3);
        u[0] = o2, u[1] = 128 | f3;
        for (var d = 1 + f3, h = n2.length; h > 0; d--, h >>= 8)
          u[d] = 255 & h;
        return this._createEncoderBuffer([u, n2]);
      }, f2.prototype._encodeStr = function(e2, t2) {
        if ("bitstr" === t2)
          return this._createEncoderBuffer([0 | e2.unused, e2.data]);
        if ("bmpstr" === t2) {
          for (var r3 = i.alloc(2 * e2.length), n2 = 0; n2 < e2.length; n2++)
            r3.writeUInt16BE(e2.charCodeAt(n2), 2 * n2);
          return this._createEncoderBuffer(r3);
        }
        return "numstr" === t2 ? this._isNumstr(e2) ? this._createEncoderBuffer(e2) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === t2 ? this._isPrintstr(e2) ? this._createEncoderBuffer(e2) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(t2) || "objDesc" === t2 ? this._createEncoderBuffer(e2) : this.reporter.error("Encoding of string type: " + t2 + " unsupported");
      }, f2.prototype._encodeObjid = function(e2, t2, r3) {
        if ("string" == typeof e2) {
          if (!t2)
            return this.reporter.error("string objid given, but no values map found");
          if (!t2.hasOwnProperty(e2))
            return this.reporter.error("objid not found in values map");
          e2 = t2[e2].split(/[\s.]+/g);
          for (var n2 = 0; n2 < e2.length; n2++)
            e2[n2] |= 0;
        } else if (Array.isArray(e2)) {
          e2 = e2.slice();
          for (var o2 = 0; o2 < e2.length; o2++)
            e2[o2] |= 0;
        }
        if (!Array.isArray(e2))
          return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(e2));
        if (!r3) {
          if (e2[1] >= 40)
            return this.reporter.error("Second objid identifier OOB");
          e2.splice(0, 2, 40 * e2[0] + e2[1]);
        }
        for (var a2 = 0, s3 = 0; s3 < e2.length; s3++) {
          var f3 = e2[s3];
          for (a2++; f3 >= 128; f3 >>= 7)
            a2++;
        }
        for (var c2 = i.alloc(a2), u = c2.length - 1, d = e2.length - 1; d >= 0; d--) {
          var h = e2[d];
          for (c2[u--] = 127 & h; (h >>= 7) > 0; )
            c2[u--] = 128 | 127 & h;
        }
        return this._createEncoderBuffer(c2);
      }, f2.prototype._encodeTime = function(e2, t2) {
        var r3, n2 = new Date(e2);
        return "gentime" === t2 ? r3 = [c(n2.getUTCFullYear()), c(n2.getUTCMonth() + 1), c(n2.getUTCDate()), c(n2.getUTCHours()), c(n2.getUTCMinutes()), c(n2.getUTCSeconds()), "Z"].join("") : "utctime" === t2 ? r3 = [c(n2.getUTCFullYear() % 100), c(n2.getUTCMonth() + 1), c(n2.getUTCDate()), c(n2.getUTCHours()), c(n2.getUTCMinutes()), c(n2.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + t2 + " time is not supported yet"), this._encodeStr(r3, "octstr");
      }, f2.prototype._encodeNull = function() {
        return this._createEncoderBuffer("");
      }, f2.prototype._encodeInt = function(e2, t2) {
        if ("string" == typeof e2) {
          if (!t2)
            return this.reporter.error("String int or enum given, but no values map");
          if (!t2.hasOwnProperty(e2))
            return this.reporter.error("Values map doesn't contain: " + JSON.stringify(e2));
          e2 = t2[e2];
        }
        if ("number" != typeof e2 && !i.isBuffer(e2)) {
          var r3 = e2.toArray();
          !e2.sign && 128 & r3[0] && r3.unshift(0), e2 = i.from(r3);
        }
        if (i.isBuffer(e2)) {
          var n2 = e2.length;
          0 === e2.length && n2++;
          var o2 = i.alloc(n2);
          return e2.copy(o2), 0 === e2.length && (o2[0] = 0), this._createEncoderBuffer(o2);
        }
        if (e2 < 128)
          return this._createEncoderBuffer(e2);
        if (e2 < 256)
          return this._createEncoderBuffer([0, e2]);
        for (var a2 = 1, s3 = e2; s3 >= 256; s3 >>= 8)
          a2++;
        for (var f3 = new Array(a2), c2 = f3.length - 1; c2 >= 0; c2--)
          f3[c2] = 255 & e2, e2 >>= 8;
        return 128 & f3[0] && f3.unshift(0), this._createEncoderBuffer(i.from(f3));
      }, f2.prototype._encodeBool = function(e2) {
        return this._createEncoderBuffer(e2 ? 255 : 0);
      }, f2.prototype._use = function(e2, t2) {
        return "function" == typeof e2 && (e2 = e2(t2)), e2._getEncoder("der").tree;
      }, f2.prototype._skipDefault = function(e2, t2, r3) {
        var n2, i2 = this._baseState;
        if (null === i2.default)
          return false;
        var o2 = e2.join();
        if (void 0 === i2.defaultBuffer && (i2.defaultBuffer = this._encodeValue(i2.default, t2, r3).join()), o2.length !== i2.defaultBuffer.length)
          return false;
        for (n2 = 0; n2 < o2.length; n2++)
          if (o2[n2] !== i2.defaultBuffer[n2])
            return false;
        return true;
      };
    }, function(e, t, r2) {
      var n = t;
      n.der = r2(222), n.pem = r2(480);
    }, function(e, t, r2) {
      var n = r2(3), i = r2(4), o = r2(69).DecoderBuffer, a = r2(116), s2 = r2(118);
      function f2(e2) {
        this.enc = "der", this.name = e2.name, this.entity = e2, this.tree = new c(), this.tree._init(e2.body);
      }
      function c(e2) {
        a.call(this, "der", e2);
      }
      function u(e2, t2) {
        var r3 = e2.readUInt8(t2);
        if (e2.isError(r3))
          return r3;
        var n2 = s2.tagClass[r3 >> 6], i2 = 0 == (32 & r3);
        if (31 == (31 & r3)) {
          var o2 = r3;
          for (r3 = 0; 128 == (128 & o2); ) {
            if (o2 = e2.readUInt8(t2), e2.isError(o2))
              return o2;
            r3 <<= 7, r3 |= 127 & o2;
          }
        } else
          r3 &= 31;
        return { cls: n2, primitive: i2, tag: r3, tagStr: s2.tag[r3] };
      }
      function d(e2, t2, r3) {
        var n2 = e2.readUInt8(r3);
        if (e2.isError(n2))
          return n2;
        if (!t2 && 128 === n2)
          return null;
        if (0 == (128 & n2))
          return n2;
        var i2 = 127 & n2;
        if (i2 > 4)
          return e2.error("length octect is too long");
        n2 = 0;
        for (var o2 = 0; o2 < i2; o2++) {
          n2 <<= 8;
          var a2 = e2.readUInt8(r3);
          if (e2.isError(a2))
            return a2;
          n2 |= a2;
        }
        return n2;
      }
      e.exports = f2, f2.prototype.decode = function(e2, t2) {
        return o.isDecoderBuffer(e2) || (e2 = new o(e2, t2)), this.tree._decode(e2, t2);
      }, n(c, a), c.prototype._peekTag = function(e2, t2, r3) {
        if (e2.isEmpty())
          return false;
        var n2 = e2.save(), i2 = u(e2, 'Failed to peek tag: "' + t2 + '"');
        return e2.isError(i2) ? i2 : (e2.restore(n2), i2.tag === t2 || i2.tagStr === t2 || i2.tagStr + "of" === t2 || r3);
      }, c.prototype._decodeTag = function(e2, t2, r3) {
        var n2 = u(e2, 'Failed to decode tag of "' + t2 + '"');
        if (e2.isError(n2))
          return n2;
        var i2 = d(e2, n2.primitive, 'Failed to get length of "' + t2 + '"');
        if (e2.isError(i2))
          return i2;
        if (!r3 && n2.tag !== t2 && n2.tagStr !== t2 && n2.tagStr + "of" !== t2)
          return e2.error('Failed to match tag: "' + t2 + '"');
        if (n2.primitive || null !== i2)
          return e2.skip(i2, 'Failed to match body of: "' + t2 + '"');
        var o2 = e2.save(), a2 = this._skipUntilEnd(e2, 'Failed to skip indefinite length body: "' + this.tag + '"');
        return e2.isError(a2) ? a2 : (i2 = e2.offset - o2.offset, e2.restore(o2), e2.skip(i2, 'Failed to match body of: "' + t2 + '"'));
      }, c.prototype._skipUntilEnd = function(e2, t2) {
        for (; ; ) {
          var r3 = u(e2, t2);
          if (e2.isError(r3))
            return r3;
          var n2 = d(e2, r3.primitive, t2);
          if (e2.isError(n2))
            return n2;
          var i2 = void 0;
          if (i2 = r3.primitive || null !== n2 ? e2.skip(n2) : this._skipUntilEnd(e2, t2), e2.isError(i2))
            return i2;
          if ("end" === r3.tagStr)
            break;
        }
      }, c.prototype._decodeList = function(e2, t2, r3, n2) {
        for (var i2 = []; !e2.isEmpty(); ) {
          var o2 = this._peekTag(e2, "end");
          if (e2.isError(o2))
            return o2;
          var a2 = r3.decode(e2, "der", n2);
          if (e2.isError(a2) && o2)
            break;
          i2.push(a2);
        }
        return i2;
      }, c.prototype._decodeStr = function(e2, t2) {
        if ("bitstr" === t2) {
          var r3 = e2.readUInt8();
          return e2.isError(r3) ? r3 : { unused: r3, data: e2.raw() };
        }
        if ("bmpstr" === t2) {
          var n2 = e2.raw();
          if (n2.length % 2 == 1)
            return e2.error("Decoding of string type: bmpstr length mismatch");
          for (var i2 = "", o2 = 0; o2 < n2.length / 2; o2++)
            i2 += String.fromCharCode(n2.readUInt16BE(2 * o2));
          return i2;
        }
        if ("numstr" === t2) {
          var a2 = e2.raw().toString("ascii");
          return this._isNumstr(a2) ? a2 : e2.error("Decoding of string type: numstr unsupported characters");
        }
        if ("octstr" === t2)
          return e2.raw();
        if ("objDesc" === t2)
          return e2.raw();
        if ("printstr" === t2) {
          var s3 = e2.raw().toString("ascii");
          return this._isPrintstr(s3) ? s3 : e2.error("Decoding of string type: printstr unsupported characters");
        }
        return /str$/.test(t2) ? e2.raw().toString() : e2.error("Decoding of string type: " + t2 + " unsupported");
      }, c.prototype._decodeObjid = function(e2, t2, r3) {
        for (var n2, i2 = [], o2 = 0, a2 = 0; !e2.isEmpty(); )
          o2 <<= 7, o2 |= 127 & (a2 = e2.readUInt8()), 0 == (128 & a2) && (i2.push(o2), o2 = 0);
        128 & a2 && i2.push(o2);
        var s3 = i2[0] / 40 | 0, f3 = i2[0] % 40;
        if (n2 = r3 ? i2 : [s3, f3].concat(i2.slice(1)), t2) {
          var c2 = t2[n2.join(" ")];
          void 0 === c2 && (c2 = t2[n2.join(".")]), void 0 !== c2 && (n2 = c2);
        }
        return n2;
      }, c.prototype._decodeTime = function(e2, t2) {
        var r3, n2, i2, o2, a2, s3, f3 = e2.raw().toString();
        if ("gentime" === t2)
          r3 = 0 | f3.slice(0, 4), n2 = 0 | f3.slice(4, 6), i2 = 0 | f3.slice(6, 8), o2 = 0 | f3.slice(8, 10), a2 = 0 | f3.slice(10, 12), s3 = 0 | f3.slice(12, 14);
        else {
          if ("utctime" !== t2)
            return e2.error("Decoding " + t2 + " time is not supported yet");
          r3 = 0 | f3.slice(0, 2), n2 = 0 | f3.slice(2, 4), i2 = 0 | f3.slice(4, 6), o2 = 0 | f3.slice(6, 8), a2 = 0 | f3.slice(8, 10), s3 = 0 | f3.slice(10, 12), r3 = r3 < 70 ? 2e3 + r3 : 1900 + r3;
        }
        return Date.UTC(r3, n2 - 1, i2, o2, a2, s3, 0);
      }, c.prototype._decodeNull = function() {
        return null;
      }, c.prototype._decodeBool = function(e2) {
        var t2 = e2.readUInt8();
        return e2.isError(t2) ? t2 : 0 !== t2;
      }, c.prototype._decodeInt = function(e2, t2) {
        var r3 = e2.raw(), n2 = new i(r3);
        return t2 && (n2 = t2[n2.toString(10)] || n2), n2;
      }, c.prototype._use = function(e2, t2) {
        return "function" == typeof e2 && (e2 = e2(t2)), e2._getDecoder("der").tree;
      };
    }, function(e) {
      e.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');
    }, function(e, t, r2) {
      var n = r2(47), i = r2(5).Buffer;
      function o(e2) {
        var t2 = i.allocUnsafe(4);
        return t2.writeUInt32BE(e2, 0), t2;
      }
      e.exports = function(e2, t2) {
        for (var r3, a = i.alloc(0), s2 = 0; a.length < t2; )
          r3 = o(s2++), a = i.concat([a, n("sha1").update(e2).update(r3).digest()]);
        return a.slice(0, t2);
      };
    }, function(e, t, r2) {
      e.exports = function(e2, t2) {
        for (var r3 = e2.length, n = -1; ++n < r3; )
          e2[n] ^= t2[n];
        return e2;
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(5).Buffer;
      e.exports = function(e2, t2) {
        return i.from(e2.toRed(n.mont(t2.modulus)).redPow(new n(t2.publicExponent)).fromRed().toArray());
      };
    }, function(e, t, r2) {
      var n;
      Object.defineProperty(t, "__esModule", { value: true }), t.default = function() {
        if (!n && !(n = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)))
          throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        return n(i);
      };
      var i = new Uint8Array(16);
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.URL = t.DNS = void 0, t.default = function(e2, t2, r3) {
        function n2(e3, n3, a2, s3) {
          var f2;
          if ("string" == typeof e3 && (e3 = function(e4) {
            e4 = unescape(encodeURIComponent(e4));
            for (var t3 = [], r4 = 0; r4 < e4.length; ++r4)
              t3.push(e4.charCodeAt(r4));
            return t3;
          }(e3)), "string" == typeof n3 && (n3 = (0, o.default)(n3)), 16 !== (null === (f2 = n3) || void 0 === f2 ? void 0 : f2.length))
            throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
          var c = new Uint8Array(16 + e3.length);
          if (c.set(n3), c.set(e3, n3.length), (c = r3(c))[6] = 15 & c[6] | t2, c[8] = 63 & c[8] | 128, a2) {
            s3 = s3 || 0;
            for (var u = 0; u < 16; ++u)
              a2[s3 + u] = c[u];
            return a2;
          }
          return (0, i.unsafeStringify)(c);
        }
        try {
          n2.name = e2;
        } catch (e3) {
        }
        return n2.DNS = a, n2.URL = s2, n2;
      };
      var i = r2(87), o = n(r2(229));
      var a = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
      t.DNS = a;
      var s2 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
      t.URL = s2;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var i = n(r2(88));
      var o = function(e2) {
        if (!(0, i.default)(e2))
          throw TypeError("Invalid UUID");
        var t2, r3 = new Uint8Array(16);
        return r3[0] = (t2 = parseInt(e2.slice(0, 8), 16)) >>> 24, r3[1] = t2 >>> 16 & 255, r3[2] = t2 >>> 8 & 255, r3[3] = 255 & t2, r3[4] = (t2 = parseInt(e2.slice(9, 13), 16)) >>> 8, r3[5] = 255 & t2, r3[6] = (t2 = parseInt(e2.slice(14, 18), 16)) >>> 8, r3[7] = 255 & t2, r3[8] = (t2 = parseInt(e2.slice(19, 23), 16)) >>> 8, r3[9] = 255 & t2, r3[10] = (t2 = parseInt(e2.slice(24, 36), 16)) / 1099511627776 & 255, r3[11] = t2 / 4294967296 & 255, r3[12] = t2 >>> 24 & 255, r3[13] = t2 >>> 16 & 255, r3[14] = t2 >>> 8 & 255, r3[15] = 255 & t2, r3;
      };
      t.default = o;
    }, function(e, t, r2) {
      var n = Object.create ? function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), Object.defineProperty(e2, n2, { enumerable: true, get: function() {
          return t2[r3];
        } });
      } : function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), e2[n2] = t2[r3];
      }, i = function(e2, t2) {
        for (var r3 in e2)
          "default" === r3 || Object.prototype.hasOwnProperty.call(t2, r3) || n(t2, e2, r3);
      }, o = function(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      };
      Object.defineProperty(t, "__esModule", { value: true }), t.FeeMarketEIP1559Transaction = t.TransactionFactory = t.AccessListEIP2930Transaction = t.Transaction = void 0;
      var a = r2(507);
      Object.defineProperty(t, "Transaction", { enumerable: true, get: function() {
        return o(a).default;
      } });
      var s2 = r2(543);
      Object.defineProperty(t, "AccessListEIP2930Transaction", { enumerable: true, get: function() {
        return o(s2).default;
      } });
      var f2 = r2(544);
      Object.defineProperty(t, "TransactionFactory", { enumerable: true, get: function() {
        return o(f2).default;
      } });
      var c = r2(545);
      Object.defineProperty(t, "FeeMarketEIP1559Transaction", { enumerable: true, get: function() {
        return o(c).default;
      } }), i(r2(53), t);
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.AccessLists = void 0;
      var n = r2(27), i = r2(53), o = function() {
        function e2() {
        }
        return e2.getAccessListData = function(e3) {
          var t2, r3;
          if (e3 && (0, i.isAccessList)(e3)) {
            t2 = e3;
            for (var o2 = [], a = 0; a < e3.length; a++) {
              for (var s2 = e3[a], f2 = (0, n.toBuffer)(s2.address), c = [], u = 0; u < s2.storageKeys.length; u++)
                c.push((0, n.toBuffer)(s2.storageKeys[u]));
              o2.push([f2, c]);
            }
            r3 = o2;
          } else {
            r3 = null != e3 ? e3 : [];
            var d = [];
            for (a = 0; a < r3.length; a++) {
              var h = r3[a], l = (0, n.bufferToHex)(h[0]), p = [];
              for (s2 = 0; s2 < h[1].length; s2++)
                p.push((0, n.bufferToHex)(h[1][s2]));
              var b = { address: l, storageKeys: p };
              d.push(b);
            }
            t2 = d;
          }
          return { AccessListJSON: t2, accessList: r3 };
        }, e2.verifyAccessList = function(e3) {
          for (var t2 = 0; t2 < e3.length; t2++) {
            var r3 = e3[t2], n2 = r3[0], i2 = r3[1];
            if (void 0 !== r3[2])
              throw new Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");
            if (20 != n2.length)
              throw new Error("Invalid EIP-2930 transaction: address length should be 20 bytes");
            for (var o2 = 0; o2 < i2.length; o2++)
              if (32 != i2[o2].length)
                throw new Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes");
          }
        }, e2.getAccessListJSON = function(e3) {
          for (var t2 = [], r3 = 0; r3 < e3.length; r3++) {
            for (var i2 = e3[r3], o2 = { address: "0x" + (0, n.setLengthLeft)(i2[0], 20).toString("hex"), storageKeys: [] }, a = i2[1], s2 = 0; s2 < a.length; s2++) {
              var f2 = a[s2];
              o2.storageKeys.push("0x" + (0, n.setLengthLeft)(f2, 32).toString("hex"));
            }
            t2.push(o2);
          }
          return t2;
        }, e2.getDataFeeEIP2930 = function(e3, t2) {
          for (var r3 = t2.param("gasPrices", "accessListStorageKeyCost"), n2 = t2.param("gasPrices", "accessListAddressCost"), i2 = 0, o2 = 0; o2 < e3.length; o2++) {
            i2 += e3[o2][1].length;
          }
          return e3.length * n2 + i2 * r3;
        }, e2;
      }();
      t.AccessLists = o;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.KECCAK256_RLP = t.KECCAK256_RLP_S = t.KECCAK256_RLP_ARRAY = t.KECCAK256_RLP_ARRAY_S = t.KECCAK256_NULL = t.KECCAK256_NULL_S = t.TWO_POW256 = t.MAX_INTEGER = t.MAX_UINT64 = void 0;
      var n = r2(1), i = r2(29);
      t.MAX_UINT64 = new i.BN("ffffffffffffffff", 16), t.MAX_INTEGER = new i.BN("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16), t.TWO_POW256 = new i.BN("10000000000000000000000000000000000000000000000000000000000000000", 16), t.KECCAK256_NULL_S = "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", t.KECCAK256_NULL = n.Buffer.from(t.KECCAK256_NULL_S, "hex"), t.KECCAK256_RLP_ARRAY_S = "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347", t.KECCAK256_RLP_ARRAY = n.Buffer.from(t.KECCAK256_RLP_ARRAY_S, "hex"), t.KECCAK256_RLP_S = "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421", t.KECCAK256_RLP = n.Buffer.from(t.KECCAK256_RLP_S, "hex");
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3, t2) {
          var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
          if (!r3)
            return e3;
          var n2, i2, o2 = r3.call(e3), a2 = [];
          try {
            for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
              a2.push(n2.value);
          } catch (e4) {
            i2 = { error: e4 };
          } finally {
            try {
              n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (i2)
                throw i2.error;
            }
          }
          return a2;
        }, i = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.isZeroAddress = t.zeroAddress = t.importPublic = t.privateToAddress = t.privateToPublic = t.publicToAddress = t.pubToAddress = t.isValidPublic = t.isValidPrivate = t.generateAddress2 = t.generateAddress = t.isValidChecksumAddress = t.toChecksumAddress = t.isValidAddress = t.Account = void 0;
        var o = i(r2(43)), a = r2(29), s2 = r2(234), f2 = r2(54), c = r2(232), u = r2(42), d = r2(123), h = r2(90), l = r2(126), p = function() {
          function e3(e4, t2, r3, n2) {
            void 0 === e4 && (e4 = new a.BN(0)), void 0 === t2 && (t2 = new a.BN(0)), void 0 === r3 && (r3 = c.KECCAK256_RLP), void 0 === n2 && (n2 = c.KECCAK256_NULL), this.nonce = e4, this.balance = t2, this.stateRoot = r3, this.codeHash = n2, this._validate();
          }
          return e3.fromAccountData = function(t2) {
            var r3 = t2.nonce, n2 = t2.balance, i2 = t2.stateRoot, o2 = t2.codeHash;
            return new e3(r3 ? new a.BN((0, u.toBuffer)(r3)) : void 0, n2 ? new a.BN((0, u.toBuffer)(n2)) : void 0, i2 ? (0, u.toBuffer)(i2) : void 0, o2 ? (0, u.toBuffer)(o2) : void 0);
          }, e3.fromRlpSerializedAccount = function(e4) {
            var t2 = a.rlp.decode(e4);
            if (!Array.isArray(t2))
              throw new Error("Invalid serialized account input. Must be array");
            return this.fromValuesArray(t2);
          }, e3.fromValuesArray = function(t2) {
            var r3 = n(t2, 4), i2 = r3[0], o2 = r3[1], s3 = r3[2], f3 = r3[3];
            return new e3(new a.BN(i2), new a.BN(o2), s3, f3);
          }, e3.prototype._validate = function() {
            if (this.nonce.lt(new a.BN(0)))
              throw new Error("nonce must be greater than zero");
            if (this.balance.lt(new a.BN(0)))
              throw new Error("balance must be greater than zero");
            if (32 !== this.stateRoot.length)
              throw new Error("stateRoot must have a length of 32");
            if (32 !== this.codeHash.length)
              throw new Error("codeHash must have a length of 32");
          }, e3.prototype.raw = function() {
            return [(0, l.bnToUnpaddedBuffer)(this.nonce), (0, l.bnToUnpaddedBuffer)(this.balance), this.stateRoot, this.codeHash];
          }, e3.prototype.serialize = function() {
            return a.rlp.encode(this.raw());
          }, e3.prototype.isContract = function() {
            return !this.codeHash.equals(c.KECCAK256_NULL);
          }, e3.prototype.isEmpty = function() {
            return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(c.KECCAK256_NULL);
          }, e3;
        }();
        t.Account = p;
        t.isValidAddress = function(e3) {
          try {
            (0, h.assertIsString)(e3);
          } catch (e4) {
            return false;
          }
          return /^0x[0-9a-fA-F]{40}$/.test(e3);
        };
        t.toChecksumAddress = function(e3, t2) {
          (0, h.assertIsHexString)(e3);
          var r3 = (0, f2.stripHexPrefix)(e3).toLowerCase(), n2 = "";
          t2 && (n2 = (0, l.toType)(t2, l.TypeOutput.BN).toString() + "0x");
          for (var i2 = (0, d.keccakFromString)(n2 + r3).toString("hex"), o2 = "0x", a2 = 0; a2 < r3.length; a2++)
            parseInt(i2[a2], 16) >= 8 ? o2 += r3[a2].toUpperCase() : o2 += r3[a2];
          return o2;
        };
        t.isValidChecksumAddress = function(e3, r3) {
          return (0, t.isValidAddress)(e3) && (0, t.toChecksumAddress)(e3, r3) === e3;
        };
        t.generateAddress = function(t2, r3) {
          (0, h.assertIsBuffer)(t2), (0, h.assertIsBuffer)(r3);
          var n2 = new a.BN(r3);
          return n2.isZero() ? (0, d.rlphash)([t2, null]).slice(-20) : (0, d.rlphash)([t2, e2.from(n2.toArray())]).slice(-20);
        };
        t.generateAddress2 = function(t2, r3, n2) {
          return (0, h.assertIsBuffer)(t2), (0, h.assertIsBuffer)(r3), (0, h.assertIsBuffer)(n2), (0, o.default)(20 === t2.length), (0, o.default)(32 === r3.length), (0, d.keccak256)(e2.concat([e2.from("ff", "hex"), t2, r3, (0, d.keccak256)(n2)])).slice(-20);
        };
        t.isValidPrivate = function(e3) {
          return (0, s2.privateKeyVerify)(e3);
        };
        t.isValidPublic = function(t2, r3) {
          return void 0 === r3 && (r3 = false), (0, h.assertIsBuffer)(t2), 64 === t2.length ? (0, s2.publicKeyVerify)(e2.concat([e2.from([4]), t2])) : !!r3 && (0, s2.publicKeyVerify)(t2);
        };
        t.pubToAddress = function(t2, r3) {
          return void 0 === r3 && (r3 = false), (0, h.assertIsBuffer)(t2), r3 && 64 !== t2.length && (t2 = e2.from((0, s2.publicKeyConvert)(t2, false).slice(1))), (0, o.default)(64 === t2.length), (0, d.keccak)(t2).slice(-20);
        }, t.publicToAddress = t.pubToAddress;
        t.privateToPublic = function(t2) {
          return (0, h.assertIsBuffer)(t2), e2.from((0, s2.publicKeyCreate)(t2, false)).slice(1);
        };
        t.privateToAddress = function(e3) {
          return (0, t.publicToAddress)((0, t.privateToPublic)(e3));
        };
        t.importPublic = function(t2) {
          return (0, h.assertIsBuffer)(t2), 64 !== t2.length && (t2 = e2.from((0, s2.publicKeyConvert)(t2, false).slice(1))), t2;
        };
        t.zeroAddress = function() {
          var e3 = (0, u.zeros)(20);
          return (0, u.bufferToHex)(e3);
        };
        t.isZeroAddress = function(e3) {
          try {
            (0, h.assertIsString)(e3);
          } catch (e4) {
            return false;
          }
          return (0, t.zeroAddress)() === e3;
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = function(e2, t2, r3, n2) {
        return new (r3 || (r3 = Promise))(function(i2, o2) {
          function a2(e3) {
            try {
              f2(n2.next(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function s2(e3) {
            try {
              f2(n2.throw(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function f2(e3) {
            var t3;
            e3.done ? i2(e3.value) : (t3 = e3.value, t3 instanceof r3 ? t3 : new r3(function(e4) {
              e4(t3);
            })).then(a2, s2);
          }
          f2((n2 = n2.apply(e2, t2 || [])).next());
        });
      }, i = function(e2, t2) {
        var r3, n2, i2, o2, a2 = { label: 0, sent: function() {
          if (1 & i2[0])
            throw i2[1];
          return i2[1];
        }, trys: [], ops: [] };
        return o2 = { next: s2(0), throw: s2(1), return: s2(2) }, "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
          return this;
        }), o2;
        function s2(o3) {
          return function(s3) {
            return function(o4) {
              if (r3)
                throw new TypeError("Generator is already executing.");
              for (; a2; )
                try {
                  if (r3 = 1, n2 && (i2 = 2 & o4[0] ? n2.return : o4[0] ? n2.throw || ((i2 = n2.return) && i2.call(n2), 0) : n2.next) && !(i2 = i2.call(n2, o4[1])).done)
                    return i2;
                  switch (n2 = 0, i2 && (o4 = [2 & o4[0], i2.value]), o4[0]) {
                    case 0:
                    case 1:
                      i2 = o4;
                      break;
                    case 4:
                      return a2.label++, { value: o4[1], done: false };
                    case 5:
                      a2.label++, n2 = o4[1], o4 = [0];
                      continue;
                    case 7:
                      o4 = a2.ops.pop(), a2.trys.pop();
                      continue;
                    default:
                      if (!(i2 = a2.trys, (i2 = i2.length > 0 && i2[i2.length - 1]) || 6 !== o4[0] && 2 !== o4[0])) {
                        a2 = 0;
                        continue;
                      }
                      if (3 === o4[0] && (!i2 || o4[1] > i2[0] && o4[1] < i2[3])) {
                        a2.label = o4[1];
                        break;
                      }
                      if (6 === o4[0] && a2.label < i2[1]) {
                        a2.label = i2[1], i2 = o4;
                        break;
                      }
                      if (i2 && a2.label < i2[2]) {
                        a2.label = i2[2], a2.ops.push(o4);
                        break;
                      }
                      i2[2] && a2.ops.pop(), a2.trys.pop();
                      continue;
                  }
                  o4 = t2.call(e2, a2);
                } catch (e3) {
                  o4 = [6, e3], n2 = 0;
                } finally {
                  r3 = i2 = 0;
                }
              if (5 & o4[0])
                throw o4[1];
              return { value: o4[0] ? o4[1] : void 0, done: true };
            }([o3, s3]);
          };
        }
      };
      Object.defineProperty(t, "__esModule", { value: true });
      var o = r2(235), a = r2(570);
      t.createPrivateKey = function() {
        return n(this, void 0, void 0, function() {
          var e2;
          return i(this, function(t2) {
            switch (t2.label) {
              case 0:
                return [4, a.getRandomBytes(32)];
              case 1:
                return e2 = t2.sent(), o.privateKeyVerify(e2) ? [2, e2] : [3, 0];
              case 2:
                return [2];
            }
          });
        });
      }, t.createPrivateKeySync = function() {
        for (; ; ) {
          var e2 = a.getRandomBytesSync(32);
          if (o.privateKeyVerify(e2))
            return e2;
        }
      }, function(e2) {
        for (var r3 in e2)
          t.hasOwnProperty(r3) || (t[r3] = e2[r3]);
      }(r2(235));
    }, function(e, t, r2) {
      e.exports = r2(548)(r2(549));
    }, function(e, t, r2) {
      var n = t;
      function i(e2) {
        return 1 === e2.length ? "0" + e2 : e2;
      }
      function o(e2) {
        for (var t2 = "", r3 = 0; r3 < e2.length; r3++)
          t2 += i(e2[r3].toString(16));
        return t2;
      }
      n.toArray = function(e2, t2) {
        if (Array.isArray(e2))
          return e2.slice();
        if (!e2)
          return [];
        var r3 = [];
        if ("string" != typeof e2) {
          for (var n2 = 0; n2 < e2.length; n2++)
            r3[n2] = 0 | e2[n2];
          return r3;
        }
        if ("hex" === t2) {
          (e2 = e2.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e2 = "0" + e2);
          for (n2 = 0; n2 < e2.length; n2 += 2)
            r3.push(parseInt(e2[n2] + e2[n2 + 1], 16));
        } else
          for (n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2.charCodeAt(n2), o2 = i2 >> 8, a = 255 & i2;
            o2 ? r3.push(o2, a) : r3.push(a);
          }
        return r3;
      }, n.zero2 = i, n.toHex = o, n.encode = function(e2, t2) {
        return "hex" === t2 ? o(e2) : e2;
      };
    }, function(e, t, r2) {
      var n, i = r2(0)(r2(2));
      function o(e2) {
        this.rand = e2;
      }
      if (e.exports = function(e2) {
        return n || (n = new o(null)), n.generate(e2);
      }, e.exports.Rand = o, o.prototype.generate = function(e2) {
        return this._rand(e2);
      }, o.prototype._rand = function(e2) {
        if (this.rand.getBytes)
          return this.rand.getBytes(e2);
        for (var t2 = new Uint8Array(e2), r3 = 0; r3 < t2.length; r3++)
          t2[r3] = this.rand.getByte();
        return t2;
      }, "object" === ("undefined" == typeof self ? "undefined" : (0, i.default)(self)))
        self.crypto && self.crypto.getRandomValues ? o.prototype._rand = function(e2) {
          var t2 = new Uint8Array(e2);
          return self.crypto.getRandomValues(t2), t2;
        } : self.msCrypto && self.msCrypto.getRandomValues ? o.prototype._rand = function(e2) {
          var t2 = new Uint8Array(e2);
          return self.msCrypto.getRandomValues(t2), t2;
        } : "object" === ("undefined" == typeof window ? "undefined" : (0, i.default)(window)) && (o.prototype._rand = function() {
          throw new Error("Not implemented yet");
        });
      else
        try {
          var a = r2(552);
          if ("function" != typeof a.randomBytes)
            throw new Error("Not supported");
          o.prototype._rand = function(e2) {
            return a.randomBytes(e2);
          };
        } catch (e2) {
        }
    }, function(e, t, r2) {
      var n = t;
      n.base = r2(89), n.short = r2(553), n.mont = r2(554), n.edwards = r2(555);
    }, function(e, t, r2) {
      var n = r2(26).rotr32;
      function i(e2, t2, r3) {
        return e2 & t2 ^ ~e2 & r3;
      }
      function o(e2, t2, r3) {
        return e2 & t2 ^ e2 & r3 ^ t2 & r3;
      }
      function a(e2, t2, r3) {
        return e2 ^ t2 ^ r3;
      }
      t.ft_1 = function(e2, t2, r3, n2) {
        return 0 === e2 ? i(t2, r3, n2) : 1 === e2 || 3 === e2 ? a(t2, r3, n2) : 2 === e2 ? o(t2, r3, n2) : void 0;
      }, t.ch32 = i, t.maj32 = o, t.p32 = a, t.s0_256 = function(e2) {
        return n(e2, 2) ^ n(e2, 13) ^ n(e2, 22);
      }, t.s1_256 = function(e2) {
        return n(e2, 6) ^ n(e2, 11) ^ n(e2, 25);
      }, t.g0_256 = function(e2) {
        return n(e2, 7) ^ n(e2, 18) ^ e2 >>> 3;
      }, t.g1_256 = function(e2) {
        return n(e2, 17) ^ n(e2, 19) ^ e2 >>> 10;
      };
    }, function(e, t, r2) {
      var n = r2(26), i = r2(70), o = r2(239), a = r2(41), s2 = n.sum32, f2 = n.sum32_4, c = n.sum32_5, u = o.ch32, d = o.maj32, h = o.s0_256, l = o.s1_256, p = o.g0_256, b = o.g1_256, y = i.BlockHash, v = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
      function m() {
        if (!(this instanceof m))
          return new m();
        y.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = v, this.W = new Array(64);
      }
      n.inherits(m, y), e.exports = m, m.blockSize = 512, m.outSize = 256, m.hmacStrength = 192, m.padLength = 64, m.prototype._update = function(e2, t2) {
        for (var r3 = this.W, n2 = 0; n2 < 16; n2++)
          r3[n2] = e2[t2 + n2];
        for (; n2 < r3.length; n2++)
          r3[n2] = f2(b(r3[n2 - 2]), r3[n2 - 7], p(r3[n2 - 15]), r3[n2 - 16]);
        var i2 = this.h[0], o2 = this.h[1], y2 = this.h[2], v2 = this.h[3], m2 = this.h[4], g = this.h[5], w = this.h[6], _ = this.h[7];
        for (a(this.k.length === r3.length), n2 = 0; n2 < r3.length; n2++) {
          var k = c(_, l(m2), u(m2, g, w), this.k[n2], r3[n2]), A = s2(h(i2), d(i2, o2, y2));
          _ = w, w = g, g = m2, m2 = s2(v2, k), v2 = y2, y2 = o2, o2 = i2, i2 = s2(k, A);
        }
        this.h[0] = s2(this.h[0], i2), this.h[1] = s2(this.h[1], o2), this.h[2] = s2(this.h[2], y2), this.h[3] = s2(this.h[3], v2), this.h[4] = s2(this.h[4], m2), this.h[5] = s2(this.h[5], g), this.h[6] = s2(this.h[6], w), this.h[7] = s2(this.h[7], _);
      }, m.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r2) {
      var n = r2(26), i = r2(70), o = r2(41), a = n.rotr64_hi, s2 = n.rotr64_lo, f2 = n.shr64_hi, c = n.shr64_lo, u = n.sum64, d = n.sum64_hi, h = n.sum64_lo, l = n.sum64_4_hi, p = n.sum64_4_lo, b = n.sum64_5_hi, y = n.sum64_5_lo, v = i.BlockHash, m = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
      function g() {
        if (!(this instanceof g))
          return new g();
        v.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = m, this.W = new Array(160);
      }
      function w(e2, t2, r3, n2, i2) {
        var o2 = e2 & r3 ^ ~e2 & i2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function _(e2, t2, r3, n2, i2, o2) {
        var a2 = t2 & n2 ^ ~t2 & o2;
        return a2 < 0 && (a2 += 4294967296), a2;
      }
      function k(e2, t2, r3, n2, i2) {
        var o2 = e2 & r3 ^ e2 & i2 ^ r3 & i2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function A(e2, t2, r3, n2, i2, o2) {
        var a2 = t2 & n2 ^ t2 & o2 ^ n2 & o2;
        return a2 < 0 && (a2 += 4294967296), a2;
      }
      function S(e2, t2) {
        var r3 = a(e2, t2, 28) ^ a(t2, e2, 2) ^ a(t2, e2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function E(e2, t2) {
        var r3 = s2(e2, t2, 28) ^ s2(t2, e2, 2) ^ s2(t2, e2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function x(e2, t2) {
        var r3 = a(e2, t2, 14) ^ a(e2, t2, 18) ^ a(t2, e2, 9);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function P(e2, t2) {
        var r3 = s2(e2, t2, 14) ^ s2(e2, t2, 18) ^ s2(t2, e2, 9);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function O(e2, t2) {
        var r3 = a(e2, t2, 1) ^ a(e2, t2, 8) ^ f2(e2, t2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function T(e2, t2) {
        var r3 = s2(e2, t2, 1) ^ s2(e2, t2, 8) ^ c(e2, t2, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function B(e2, t2) {
        var r3 = a(e2, t2, 19) ^ a(t2, e2, 29) ^ f2(e2, t2, 6);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function M(e2, t2) {
        var r3 = s2(e2, t2, 19) ^ s2(t2, e2, 29) ^ c(e2, t2, 6);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      n.inherits(g, v), e.exports = g, g.blockSize = 1024, g.outSize = 512, g.hmacStrength = 192, g.padLength = 128, g.prototype._prepareBlock = function(e2, t2) {
        for (var r3 = this.W, n2 = 0; n2 < 32; n2++)
          r3[n2] = e2[t2 + n2];
        for (; n2 < r3.length; n2 += 2) {
          var i2 = B(r3[n2 - 4], r3[n2 - 3]), o2 = M(r3[n2 - 4], r3[n2 - 3]), a2 = r3[n2 - 14], s3 = r3[n2 - 13], f3 = O(r3[n2 - 30], r3[n2 - 29]), c2 = T(r3[n2 - 30], r3[n2 - 29]), u2 = r3[n2 - 32], d2 = r3[n2 - 31];
          r3[n2] = l(i2, o2, a2, s3, f3, c2, u2, d2), r3[n2 + 1] = p(i2, o2, a2, s3, f3, c2, u2, d2);
        }
      }, g.prototype._update = function(e2, t2) {
        this._prepareBlock(e2, t2);
        var r3 = this.W, n2 = this.h[0], i2 = this.h[1], a2 = this.h[2], s3 = this.h[3], f3 = this.h[4], c2 = this.h[5], l2 = this.h[6], p2 = this.h[7], v2 = this.h[8], m2 = this.h[9], g2 = this.h[10], O2 = this.h[11], T2 = this.h[12], B2 = this.h[13], M2 = this.h[14], R = this.h[15];
        o(this.k.length === r3.length);
        for (var I = 0; I < r3.length; I += 2) {
          var C = M2, U = R, j = x(v2, m2), N = P(v2, m2), L = w(v2, m2, g2, O2, T2), D = _(v2, m2, g2, O2, T2, B2), F = this.k[I], q = this.k[I + 1], z = r3[I], H = r3[I + 1], K2 = b(C, U, j, N, L, D, F, q, z, H), G = y(C, U, j, N, L, D, F, q, z, H);
          C = S(n2, i2), U = E(n2, i2), j = k(n2, i2, a2, s3, f3), N = A(n2, i2, a2, s3, f3, c2);
          var W = d(C, U, j, N), V = h(C, U, j, N);
          M2 = T2, R = B2, T2 = g2, B2 = O2, g2 = v2, O2 = m2, v2 = d(l2, p2, K2, G), m2 = h(p2, p2, K2, G), l2 = f3, p2 = c2, f3 = a2, c2 = s3, a2 = n2, s3 = i2, n2 = d(K2, G, W, V), i2 = h(K2, G, W, V);
        }
        u(this.h, 0, n2, i2), u(this.h, 2, a2, s3), u(this.h, 4, f3, c2), u(this.h, 6, l2, p2), u(this.h, 8, v2, m2), u(this.h, 10, g2, O2), u(this.h, 12, T2, B2), u(this.h, 14, M2, R);
      }, g.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r2) {
      (function(t2, n) {
        var i;
        e.exports = E, E.ReadableState = S;
        r2(20).EventEmitter;
        var o = function(e2, t3) {
          return e2.listeners(t3).length;
        }, a = r2(243), s2 = r2(1).Buffer, f2 = t2.Uint8Array || function() {
        };
        var c, u = r2(577);
        c = u && u.debuglog ? u.debuglog("stream") : function() {
        };
        var d, h, l, p = r2(578), b = r2(244), y = r2(245).getHighWaterMark, v = r2(55).codes, m = v.ERR_INVALID_ARG_TYPE, g = v.ERR_STREAM_PUSH_AFTER_EOF, w = v.ERR_METHOD_NOT_IMPLEMENTED, _ = v.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r2(10)(E, a);
        var k = b.errorOrDestroy, A = ["error", "close", "destroy", "pause", "resume"];
        function S(e2, t3, n2) {
          i = i || r2(56), e2 = e2 || {}, "boolean" != typeof n2 && (n2 = t3 instanceof i), this.objectMode = !!e2.objectMode, n2 && (this.objectMode = this.objectMode || !!e2.readableObjectMode), this.highWaterMark = y(this, e2, "readableHighWaterMark", n2), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.destroyed = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (d || (d = r2(21).StringDecoder), this.decoder = new d(e2.encoding), this.encoding = e2.encoding);
        }
        function E(e2) {
          if (i = i || r2(56), !(this instanceof E))
            return new E(e2);
          var t3 = this instanceof i;
          this._readableState = new S(e2, this, t3), this.readable = true, e2 && ("function" == typeof e2.read && (this._read = e2.read), "function" == typeof e2.destroy && (this._destroy = e2.destroy)), a.call(this);
        }
        function x(e2, t3, r3, n2, i2) {
          c("readableAddChunk", t3);
          var o2, a2 = e2._readableState;
          if (null === t3)
            a2.reading = false, function(e3, t4) {
              if (c("onEofChunk"), t4.ended)
                return;
              if (t4.decoder) {
                var r4 = t4.decoder.end();
                r4 && r4.length && (t4.buffer.push(r4), t4.length += t4.objectMode ? 1 : r4.length);
              }
              t4.ended = true, t4.sync ? T(e3) : (t4.needReadable = false, t4.emittedReadable || (t4.emittedReadable = true, B(e3)));
            }(e2, a2);
          else if (i2 || (o2 = function(e3, t4) {
            var r4;
            n3 = t4, s2.isBuffer(n3) || n3 instanceof f2 || "string" == typeof t4 || void 0 === t4 || e3.objectMode || (r4 = new m("chunk", ["string", "Buffer", "Uint8Array"], t4));
            var n3;
            return r4;
          }(a2, t3)), o2)
            k(e2, o2);
          else if (a2.objectMode || t3 && t3.length > 0)
            if ("string" == typeof t3 || a2.objectMode || Object.getPrototypeOf(t3) === s2.prototype || (t3 = function(e3) {
              return s2.from(e3);
            }(t3)), n2)
              a2.endEmitted ? k(e2, new _()) : P(e2, a2, t3, true);
            else if (a2.ended)
              k(e2, new g());
            else {
              if (a2.destroyed)
                return false;
              a2.reading = false, a2.decoder && !r3 ? (t3 = a2.decoder.write(t3), a2.objectMode || 0 !== t3.length ? P(e2, a2, t3, false) : M(e2, a2)) : P(e2, a2, t3, false);
            }
          else
            n2 || (a2.reading = false, M(e2, a2));
          return !a2.ended && (a2.length < a2.highWaterMark || 0 === a2.length);
        }
        function P(e2, t3, r3, n2) {
          t3.flowing && 0 === t3.length && !t3.sync ? (t3.awaitDrain = 0, e2.emit("data", r3)) : (t3.length += t3.objectMode ? 1 : r3.length, n2 ? t3.buffer.unshift(r3) : t3.buffer.push(r3), t3.needReadable && T(e2)), M(e2, t3);
        }
        Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function(e2) {
          this._readableState && (this._readableState.destroyed = e2);
        } }), E.prototype.destroy = b.destroy, E.prototype._undestroy = b.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        }, E.prototype.push = function(e2, t3) {
          var r3, n2 = this._readableState;
          return n2.objectMode ? r3 = true : "string" == typeof e2 && ((t3 = t3 || n2.defaultEncoding) !== n2.encoding && (e2 = s2.from(e2, t3), t3 = ""), r3 = true), x(this, e2, t3, false, r3);
        }, E.prototype.unshift = function(e2) {
          return x(this, e2, null, true, false);
        }, E.prototype.isPaused = function() {
          return false === this._readableState.flowing;
        }, E.prototype.setEncoding = function(e2) {
          d || (d = r2(21).StringDecoder);
          var t3 = new d(e2);
          this._readableState.decoder = t3, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var n2 = this._readableState.buffer.head, i2 = ""; null !== n2; )
            i2 += t3.write(n2.data), n2 = n2.next;
          return this._readableState.buffer.clear(), "" !== i2 && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
        };
        function O(e2, t3) {
          return e2 <= 0 || 0 === t3.length && t3.ended ? 0 : t3.objectMode ? 1 : e2 != e2 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e2 > t3.highWaterMark && (t3.highWaterMark = function(e3) {
            return e3 >= 1073741824 ? e3 = 1073741824 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
          }(e2)), e2 <= t3.length ? e2 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function T(e2) {
          var t3 = e2._readableState;
          c("emitReadable", t3.needReadable, t3.emittedReadable), t3.needReadable = false, t3.emittedReadable || (c("emitReadable", t3.flowing), t3.emittedReadable = true, n.nextTick(B, e2));
        }
        function B(e2) {
          var t3 = e2._readableState;
          c("emitReadable_", t3.destroyed, t3.length, t3.ended), t3.destroyed || !t3.length && !t3.ended || (e2.emit("readable"), t3.emittedReadable = false), t3.needReadable = !t3.flowing && !t3.ended && t3.length <= t3.highWaterMark, j(e2);
        }
        function M(e2, t3) {
          t3.readingMore || (t3.readingMore = true, n.nextTick(R, e2, t3));
        }
        function R(e2, t3) {
          for (; !t3.reading && !t3.ended && (t3.length < t3.highWaterMark || t3.flowing && 0 === t3.length); ) {
            var r3 = t3.length;
            if (c("maybeReadMore read 0"), e2.read(0), r3 === t3.length)
              break;
          }
          t3.readingMore = false;
        }
        function I(e2) {
          var t3 = e2._readableState;
          t3.readableListening = e2.listenerCount("readable") > 0, t3.resumeScheduled && !t3.paused ? t3.flowing = true : e2.listenerCount("data") > 0 && e2.resume();
        }
        function C(e2) {
          c("readable nexttick read 0"), e2.read(0);
        }
        function U(e2, t3) {
          c("resume", t3.reading), t3.reading || e2.read(0), t3.resumeScheduled = false, e2.emit("resume"), j(e2), t3.flowing && !t3.reading && e2.read(0);
        }
        function j(e2) {
          var t3 = e2._readableState;
          for (c("flow", t3.flowing); t3.flowing && null !== e2.read(); )
            ;
        }
        function N(e2, t3) {
          return 0 === t3.length ? null : (t3.objectMode ? r3 = t3.buffer.shift() : !e2 || e2 >= t3.length ? (r3 = t3.decoder ? t3.buffer.join("") : 1 === t3.buffer.length ? t3.buffer.first() : t3.buffer.concat(t3.length), t3.buffer.clear()) : r3 = t3.buffer.consume(e2, t3.decoder), r3);
          var r3;
        }
        function L(e2) {
          var t3 = e2._readableState;
          c("endReadable", t3.endEmitted), t3.endEmitted || (t3.ended = true, n.nextTick(D, t3, e2));
        }
        function D(e2, t3) {
          if (c("endReadableNT", e2.endEmitted, e2.length), !e2.endEmitted && 0 === e2.length && (e2.endEmitted = true, t3.readable = false, t3.emit("end"), e2.autoDestroy)) {
            var r3 = t3._writableState;
            (!r3 || r3.autoDestroy && r3.finished) && t3.destroy();
          }
        }
        function F(e2, t3) {
          for (var r3 = 0, n2 = e2.length; r3 < n2; r3++)
            if (e2[r3] === t3)
              return r3;
          return -1;
        }
        E.prototype.read = function(e2) {
          c("read", e2), e2 = parseInt(e2, 10);
          var t3 = this._readableState, r3 = e2;
          if (0 !== e2 && (t3.emittedReadable = false), 0 === e2 && t3.needReadable && ((0 !== t3.highWaterMark ? t3.length >= t3.highWaterMark : t3.length > 0) || t3.ended))
            return c("read: emitReadable", t3.length, t3.ended), 0 === t3.length && t3.ended ? L(this) : T(this), null;
          if (0 === (e2 = O(e2, t3)) && t3.ended)
            return 0 === t3.length && L(this), null;
          var n2, i2 = t3.needReadable;
          return c("need readable", i2), (0 === t3.length || t3.length - e2 < t3.highWaterMark) && c("length less than watermark", i2 = true), t3.ended || t3.reading ? c("reading or ended", i2 = false) : i2 && (c("do read"), t3.reading = true, t3.sync = true, 0 === t3.length && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e2 = O(r3, t3))), null === (n2 = e2 > 0 ? N(e2, t3) : null) ? (t3.needReadable = t3.length <= t3.highWaterMark, e2 = 0) : (t3.length -= e2, t3.awaitDrain = 0), 0 === t3.length && (t3.ended || (t3.needReadable = true), r3 !== e2 && t3.ended && L(this)), null !== n2 && this.emit("data", n2), n2;
        }, E.prototype._read = function(e2) {
          k(this, new w("_read()"));
        }, E.prototype.pipe = function(e2, t3) {
          var r3 = this, i2 = this._readableState;
          switch (i2.pipesCount) {
            case 0:
              i2.pipes = e2;
              break;
            case 1:
              i2.pipes = [i2.pipes, e2];
              break;
            default:
              i2.pipes.push(e2);
          }
          i2.pipesCount += 1, c("pipe count=%d opts=%j", i2.pipesCount, t3);
          var a2 = (!t3 || false !== t3.end) && e2 !== n.stdout && e2 !== n.stderr ? f3 : y2;
          function s3(t4, n2) {
            c("onunpipe"), t4 === r3 && n2 && false === n2.hasUnpiped && (n2.hasUnpiped = true, c("cleanup"), e2.removeListener("close", p2), e2.removeListener("finish", b2), e2.removeListener("drain", u2), e2.removeListener("error", l2), e2.removeListener("unpipe", s3), r3.removeListener("end", f3), r3.removeListener("end", y2), r3.removeListener("data", h2), d2 = true, !i2.awaitDrain || e2._writableState && !e2._writableState.needDrain || u2());
          }
          function f3() {
            c("onend"), e2.end();
          }
          i2.endEmitted ? n.nextTick(a2) : r3.once("end", a2), e2.on("unpipe", s3);
          var u2 = function(e3) {
            return function() {
              var t4 = e3._readableState;
              c("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, 0 === t4.awaitDrain && o(e3, "data") && (t4.flowing = true, j(e3));
            };
          }(r3);
          e2.on("drain", u2);
          var d2 = false;
          function h2(t4) {
            c("ondata");
            var n2 = e2.write(t4);
            c("dest.write", n2), false === n2 && ((1 === i2.pipesCount && i2.pipes === e2 || i2.pipesCount > 1 && -1 !== F(i2.pipes, e2)) && !d2 && (c("false write response, pause", i2.awaitDrain), i2.awaitDrain++), r3.pause());
          }
          function l2(t4) {
            c("onerror", t4), y2(), e2.removeListener("error", l2), 0 === o(e2, "error") && k(e2, t4);
          }
          function p2() {
            e2.removeListener("finish", b2), y2();
          }
          function b2() {
            c("onfinish"), e2.removeListener("close", p2), y2();
          }
          function y2() {
            c("unpipe"), r3.unpipe(e2);
          }
          return r3.on("data", h2), function(e3, t4, r4) {
            if ("function" == typeof e3.prependListener)
              return e3.prependListener(t4, r4);
            e3._events && e3._events[t4] ? Array.isArray(e3._events[t4]) ? e3._events[t4].unshift(r4) : e3._events[t4] = [r4, e3._events[t4]] : e3.on(t4, r4);
          }(e2, "error", l2), e2.once("close", p2), e2.once("finish", b2), e2.emit("pipe", r3), i2.flowing || (c("pipe resume"), r3.resume()), e2;
        }, E.prototype.unpipe = function(e2) {
          var t3 = this._readableState, r3 = { hasUnpiped: false };
          if (0 === t3.pipesCount)
            return this;
          if (1 === t3.pipesCount)
            return e2 && e2 !== t3.pipes || (e2 || (e2 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e2 && e2.emit("unpipe", this, r3)), this;
          if (!e2) {
            var n2 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var o2 = 0; o2 < i2; o2++)
              n2[o2].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var a2 = F(t3.pipes, e2);
          return -1 === a2 || (t3.pipes.splice(a2, 1), t3.pipesCount -= 1, 1 === t3.pipesCount && (t3.pipes = t3.pipes[0]), e2.emit("unpipe", this, r3)), this;
        }, E.prototype.on = function(e2, t3) {
          var r3 = a.prototype.on.call(this, e2, t3), i2 = this._readableState;
          return "data" === e2 ? (i2.readableListening = this.listenerCount("readable") > 0, false !== i2.flowing && this.resume()) : "readable" === e2 && (i2.endEmitted || i2.readableListening || (i2.readableListening = i2.needReadable = true, i2.flowing = false, i2.emittedReadable = false, c("on readable", i2.length, i2.reading), i2.length ? T(this) : i2.reading || n.nextTick(C, this))), r3;
        }, E.prototype.addListener = E.prototype.on, E.prototype.removeListener = function(e2, t3) {
          var r3 = a.prototype.removeListener.call(this, e2, t3);
          return "readable" === e2 && n.nextTick(I, this), r3;
        }, E.prototype.removeAllListeners = function(e2) {
          var t3 = a.prototype.removeAllListeners.apply(this, arguments);
          return "readable" !== e2 && void 0 !== e2 || n.nextTick(I, this), t3;
        }, E.prototype.resume = function() {
          var e2 = this._readableState;
          return e2.flowing || (c("resume"), e2.flowing = !e2.readableListening, function(e3, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, n.nextTick(U, e3, t3));
          }(this, e2)), e2.paused = false, this;
        }, E.prototype.pause = function() {
          return c("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (c("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, E.prototype.wrap = function(e2) {
          var t3 = this, r3 = this._readableState, n2 = false;
          for (var i2 in e2.on("end", function() {
            if (c("wrapped end"), r3.decoder && !r3.ended) {
              var e3 = r3.decoder.end();
              e3 && e3.length && t3.push(e3);
            }
            t3.push(null);
          }), e2.on("data", function(i3) {
            (c("wrapped data"), r3.decoder && (i3 = r3.decoder.write(i3)), r3.objectMode && null == i3) || (r3.objectMode || i3 && i3.length) && (t3.push(i3) || (n2 = true, e2.pause()));
          }), e2)
            void 0 === this[i2] && "function" == typeof e2[i2] && (this[i2] = function(t4) {
              return function() {
                return e2[t4].apply(e2, arguments);
              };
            }(i2));
          for (var o2 = 0; o2 < A.length; o2++)
            e2.on(A[o2], this.emit.bind(this, A[o2]));
          return this._read = function(t4) {
            c("wrapped _read", t4), n2 && (n2 = false, e2.resume());
          }, this;
        }, "function" == typeof Symbol && (E.prototype[Symbol.asyncIterator] = function() {
          return void 0 === h && (h = r2(581)), h(this);
        }), Object.defineProperty(E.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(E.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(E.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(e2) {
          this._readableState && (this._readableState.flowing = e2);
        } }), E._fromList = N, Object.defineProperty(E.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), "function" == typeof Symbol && (E.from = function(e2, t3) {
          return void 0 === l && (l = r2(582)), l(E, e2, t3);
        });
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = r2(20).EventEmitter;
    }, function(e, t, r2) {
      (function(t2) {
        function r3(e2, t3) {
          i(e2, t3), n(e2);
        }
        function n(e2) {
          e2._writableState && !e2._writableState.emitClose || e2._readableState && !e2._readableState.emitClose || e2.emit("close");
        }
        function i(e2, t3) {
          e2.emit("error", t3);
        }
        e.exports = { destroy: function(e2, o) {
          var a = this, s2 = this._readableState && this._readableState.destroyed, f2 = this._writableState && this._writableState.destroyed;
          return s2 || f2 ? (o ? o(e2) : e2 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, t2.nextTick(i, this, e2)) : t2.nextTick(i, this, e2)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e2 || null, function(e3) {
            !o && e3 ? a._writableState ? a._writableState.errorEmitted ? t2.nextTick(n, a) : (a._writableState.errorEmitted = true, t2.nextTick(r3, a, e3)) : t2.nextTick(r3, a, e3) : o ? (t2.nextTick(n, a), o(e3)) : t2.nextTick(n, a);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(e2, t3) {
          var r4 = e2._readableState, n2 = e2._writableState;
          r4 && r4.autoDestroy || n2 && n2.autoDestroy ? e2.destroy(t3) : e2.emit("error", t3);
        } };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      var n = r2(55).codes.ERR_INVALID_OPT_VALUE;
      e.exports = { getHighWaterMark: function(e2, t2, r3, i) {
        var o = function(e3, t3, r4) {
          return null != e3.highWaterMark ? e3.highWaterMark : t3 ? e3[r4] : null;
        }(t2, i, r3);
        if (null != o) {
          if (!isFinite(o) || Math.floor(o) !== o || o < 0)
            throw new n(i ? r3 : "highWaterMark", o);
          return Math.floor(o);
        }
        return e2.objectMode ? 16 : 16384;
      } };
    }, function(e, t, r2) {
      (function(t2, n) {
        function i(e2) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e3, t4, r3) {
              var n2 = e3.entry;
              e3.entry = null;
              for (; n2; ) {
                var i2 = n2.callback;
                t4.pendingcb--, i2(r3), n2 = n2.next;
              }
              t4.corkedRequestsFree.next = e3;
            }(t3, e2);
          };
        }
        var o;
        e.exports = E, E.WritableState = S;
        var a = { deprecate: r2(580) }, s2 = r2(243), f2 = r2(1).Buffer, c = t2.Uint8Array || function() {
        };
        var u, d = r2(244), h = r2(245).getHighWaterMark, l = r2(55).codes, p = l.ERR_INVALID_ARG_TYPE, b = l.ERR_METHOD_NOT_IMPLEMENTED, y = l.ERR_MULTIPLE_CALLBACK, v = l.ERR_STREAM_CANNOT_PIPE, m = l.ERR_STREAM_DESTROYED, g = l.ERR_STREAM_NULL_VALUES, w = l.ERR_STREAM_WRITE_AFTER_END, _ = l.ERR_UNKNOWN_ENCODING, k = d.errorOrDestroy;
        function A() {
        }
        function S(e2, t3, a2) {
          o = o || r2(56), e2 = e2 || {}, "boolean" != typeof a2 && (a2 = t3 instanceof o), this.objectMode = !!e2.objectMode, a2 && (this.objectMode = this.objectMode || !!e2.writableObjectMode), this.highWaterMark = h(this, e2, "writableHighWaterMark", a2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var s3 = false === e2.decodeStrings;
          this.decodeStrings = !s3, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
            !function(e4, t4) {
              var r3 = e4._writableState, i2 = r3.sync, o2 = r3.writecb;
              if ("function" != typeof o2)
                throw new y();
              if (function(e5) {
                e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
              }(r3), t4)
                !function(e5, t5, r4, i3, o3) {
                  --t5.pendingcb, r4 ? (n.nextTick(o3, i3), n.nextTick(M, e5, t5), e5._writableState.errorEmitted = true, k(e5, i3)) : (o3(i3), e5._writableState.errorEmitted = true, k(e5, i3), M(e5, t5));
                }(e4, r3, i2, t4, o2);
              else {
                var a3 = T(r3) || e4.destroyed;
                a3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || O(e4, r3), i2 ? n.nextTick(P, e4, r3, a3, o2) : P(e4, r3, a3, o2);
              }
            }(t3, e3);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e2.emitClose, this.autoDestroy = !!e2.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
        }
        function E(e2) {
          var t3 = this instanceof (o = o || r2(56));
          if (!t3 && !u.call(E, this))
            return new E(e2);
          this._writableState = new S(e2, this, t3), this.writable = true, e2 && ("function" == typeof e2.write && (this._write = e2.write), "function" == typeof e2.writev && (this._writev = e2.writev), "function" == typeof e2.destroy && (this._destroy = e2.destroy), "function" == typeof e2.final && (this._final = e2.final)), s2.call(this);
        }
        function x(e2, t3, r3, n2, i2, o2, a2) {
          t3.writelen = n2, t3.writecb = a2, t3.writing = true, t3.sync = true, t3.destroyed ? t3.onwrite(new m("write")) : r3 ? e2._writev(i2, t3.onwrite) : e2._write(i2, o2, t3.onwrite), t3.sync = false;
        }
        function P(e2, t3, r3, n2) {
          r3 || function(e3, t4) {
            0 === t4.length && t4.needDrain && (t4.needDrain = false, e3.emit("drain"));
          }(e2, t3), t3.pendingcb--, n2(), M(e2, t3);
        }
        function O(e2, t3) {
          t3.bufferProcessing = true;
          var r3 = t3.bufferedRequest;
          if (e2._writev && r3 && r3.next) {
            var n2 = t3.bufferedRequestCount, o2 = new Array(n2), a2 = t3.corkedRequestsFree;
            a2.entry = r3;
            for (var s3 = 0, f3 = true; r3; )
              o2[s3] = r3, r3.isBuf || (f3 = false), r3 = r3.next, s3 += 1;
            o2.allBuffers = f3, x(e2, t3, true, t3.length, o2, "", a2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, a2.next ? (t3.corkedRequestsFree = a2.next, a2.next = null) : t3.corkedRequestsFree = new i(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r3; ) {
              var c2 = r3.chunk, u2 = r3.encoding, d2 = r3.callback;
              if (x(e2, t3, false, t3.objectMode ? 1 : c2.length, c2, u2, d2), r3 = r3.next, t3.bufferedRequestCount--, t3.writing)
                break;
            }
            null === r3 && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r3, t3.bufferProcessing = false;
        }
        function T(e2) {
          return e2.ending && 0 === e2.length && null === e2.bufferedRequest && !e2.finished && !e2.writing;
        }
        function B(e2, t3) {
          e2._final(function(r3) {
            t3.pendingcb--, r3 && k(e2, r3), t3.prefinished = true, e2.emit("prefinish"), M(e2, t3);
          });
        }
        function M(e2, t3) {
          var r3 = T(t3);
          if (r3 && (function(e3, t4) {
            t4.prefinished || t4.finalCalled || ("function" != typeof e3._final || t4.destroyed ? (t4.prefinished = true, e3.emit("prefinish")) : (t4.pendingcb++, t4.finalCalled = true, n.nextTick(B, e3, t4)));
          }(e2, t3), 0 === t3.pendingcb && (t3.finished = true, e2.emit("finish"), t3.autoDestroy))) {
            var i2 = e2._readableState;
            (!i2 || i2.autoDestroy && i2.endEmitted) && e2.destroy();
          }
          return r3;
        }
        r2(10)(E, s2), S.prototype.getBuffer = function() {
          for (var e2 = this.bufferedRequest, t3 = []; e2; )
            t3.push(e2), e2 = e2.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(S.prototype, "buffer", { get: a.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch (e2) {
          }
        }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (u = Function.prototype[Symbol.hasInstance], Object.defineProperty(E, Symbol.hasInstance, { value: function(e2) {
          return !!u.call(this, e2) || this === E && (e2 && e2._writableState instanceof S);
        } })) : u = function(e2) {
          return e2 instanceof this;
        }, E.prototype.pipe = function() {
          k(this, new v());
        }, E.prototype.write = function(e2, t3, r3) {
          var i2, o2 = this._writableState, a2 = false, s3 = !o2.objectMode && (i2 = e2, f2.isBuffer(i2) || i2 instanceof c);
          return s3 && !f2.isBuffer(e2) && (e2 = function(e3) {
            return f2.from(e3);
          }(e2)), "function" == typeof t3 && (r3 = t3, t3 = null), s3 ? t3 = "buffer" : t3 || (t3 = o2.defaultEncoding), "function" != typeof r3 && (r3 = A), o2.ending ? function(e3, t4) {
            var r4 = new w();
            k(e3, r4), n.nextTick(t4, r4);
          }(this, r3) : (s3 || function(e3, t4, r4, i3) {
            var o3;
            return null === r4 ? o3 = new g() : "string" == typeof r4 || t4.objectMode || (o3 = new p("chunk", ["string", "Buffer"], r4)), !o3 || (k(e3, o3), n.nextTick(i3, o3), false);
          }(this, o2, e2, r3)) && (o2.pendingcb++, a2 = function(e3, t4, r4, n2, i3, o3) {
            if (!r4) {
              var a3 = function(e4, t5, r5) {
                e4.objectMode || false === e4.decodeStrings || "string" != typeof t5 || (t5 = f2.from(t5, r5));
                return t5;
              }(t4, n2, i3);
              n2 !== a3 && (r4 = true, i3 = "buffer", n2 = a3);
            }
            var s4 = t4.objectMode ? 1 : n2.length;
            t4.length += s4;
            var c2 = t4.length < t4.highWaterMark;
            c2 || (t4.needDrain = true);
            if (t4.writing || t4.corked) {
              var u2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = { chunk: n2, encoding: i3, isBuf: r4, callback: o3, next: null }, u2 ? u2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else
              x(e3, t4, false, s4, n2, i3, o3);
            return c2;
          }(this, o2, s3, e2, t3, r3)), a2;
        }, E.prototype.cork = function() {
          this._writableState.corked++;
        }, E.prototype.uncork = function() {
          var e2 = this._writableState;
          e2.corked && (e2.corked--, e2.writing || e2.corked || e2.bufferProcessing || !e2.bufferedRequest || O(this, e2));
        }, E.prototype.setDefaultEncoding = function(e2) {
          if ("string" == typeof e2 && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
            throw new _(e2);
          return this._writableState.defaultEncoding = e2, this;
        }, Object.defineProperty(E.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(E.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), E.prototype._write = function(e2, t3, r3) {
          r3(new b("_write()"));
        }, E.prototype._writev = null, E.prototype.end = function(e2, t3, r3) {
          var i2 = this._writableState;
          return "function" == typeof e2 ? (r3 = e2, e2 = null, t3 = null) : "function" == typeof t3 && (r3 = t3, t3 = null), null != e2 && this.write(e2, t3), i2.corked && (i2.corked = 1, this.uncork()), i2.ending || function(e3, t4, r4) {
            t4.ending = true, M(e3, t4), r4 && (t4.finished ? n.nextTick(r4) : e3.once("finish", r4));
            t4.ended = true, e3.writable = false;
          }(this, i2, r3), this;
        }, Object.defineProperty(E.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(E.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function(e2) {
          this._writableState && (this._writableState.destroyed = e2);
        } }), E.prototype.destroy = d.destroy, E.prototype._undestroy = d.undestroy, E.prototype._destroy = function(e2, t3) {
          t3(e2);
        };
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = u;
      var n = r2(55).codes, i = n.ERR_METHOD_NOT_IMPLEMENTED, o = n.ERR_MULTIPLE_CALLBACK, a = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, s2 = n.ERR_TRANSFORM_WITH_LENGTH_0, f2 = r2(56);
      function c(e2, t2) {
        var r3 = this._transformState;
        r3.transforming = false;
        var n2 = r3.writecb;
        if (null === n2)
          return this.emit("error", new o());
        r3.writechunk = null, r3.writecb = null, null != t2 && this.push(t2), n2(e2);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function u(e2) {
        if (!(this instanceof u))
          return new u(e2);
        f2.call(this, e2), this._transformState = { afterTransform: c.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e2 && ("function" == typeof e2.transform && (this._transform = e2.transform), "function" == typeof e2.flush && (this._flush = e2.flush)), this.on("prefinish", d);
      }
      function d() {
        var e2 = this;
        "function" != typeof this._flush || this._readableState.destroyed ? h(this, null, null) : this._flush(function(t2, r3) {
          h(e2, t2, r3);
        });
      }
      function h(e2, t2, r3) {
        if (t2)
          return e2.emit("error", t2);
        if (null != r3 && e2.push(r3), e2._writableState.length)
          throw new s2();
        if (e2._transformState.transforming)
          throw new a();
        return e2.push(null);
      }
      r2(10)(u, f2), u.prototype.push = function(e2, t2) {
        return this._transformState.needTransform = false, f2.prototype.push.call(this, e2, t2);
      }, u.prototype._transform = function(e2, t2, r3) {
        r3(new i("_transform()"));
      }, u.prototype._write = function(e2, t2, r3) {
        var n2 = this._transformState;
        if (n2.writecb = r3, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, u.prototype._read = function(e2) {
        var t2 = this._transformState;
        null === t2.writechunk || t2.transforming ? t2.needTransform = true : (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform));
      }, u.prototype._destroy = function(e2, t2) {
        f2.prototype._destroy.call(this, e2, function(e3) {
          t2(e3);
        });
      };
    }, function(e, t, r2) {
      var n = r2(24).Buffer, i = r2(124).Transform;
      function o(e2) {
        i.call(this), this._block = n.allocUnsafe(e2), this._blockSize = e2, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = false;
      }
      r2(10)(o, i), o.prototype._transform = function(e2, t2, r3) {
        var n2 = null;
        try {
          this.update(e2, t2);
        } catch (e3) {
          n2 = e3;
        }
        r3(n2);
      }, o.prototype._flush = function(e2) {
        var t2 = null;
        try {
          this.push(this.digest());
        } catch (e3) {
          t2 = e3;
        }
        e2(t2);
      }, o.prototype.update = function(e2, t2) {
        if (function(e3, t3) {
          if (!n.isBuffer(e3) && "string" != typeof e3)
            throw new TypeError(t3 + " must be a string or a buffer");
        }(e2, "Data"), this._finalized)
          throw new Error("Digest already called");
        n.isBuffer(e2) || (e2 = n.from(e2, t2));
        for (var r3 = this._block, i2 = 0; this._blockOffset + e2.length - i2 >= this._blockSize; ) {
          for (var o2 = this._blockOffset; o2 < this._blockSize; )
            r3[o2++] = e2[i2++];
          this._update(), this._blockOffset = 0;
        }
        for (; i2 < e2.length; )
          r3[this._blockOffset++] = e2[i2++];
        for (var a = 0, s2 = 8 * e2.length; s2 > 0; ++a)
          this._length[a] += s2, (s2 = this._length[a] / 4294967296 | 0) > 0 && (this._length[a] -= 4294967296 * s2);
        return this;
      }, o.prototype._update = function() {
        throw new Error("_update is not implemented");
      }, o.prototype.digest = function(e2) {
        if (this._finalized)
          throw new Error("Digest already called");
        this._finalized = true;
        var t2 = this._digest();
        void 0 !== e2 && (t2 = t2.toString(e2)), this._block.fill(0), this._blockOffset = 0;
        for (var r3 = 0; r3 < 4; ++r3)
          this._length[r3] = 0;
        return t2;
      }, o.prototype._digest = function() {
        throw new Error("_digest is not implemented");
      }, e.exports = o;
    }, function(e, t, r2) {
      var n = r2(10), i = r2(57), o = r2(24).Buffer, a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], s2 = new Array(64);
      function f2() {
        this.init(), this._w = s2, i.call(this, 64, 56);
      }
      function c(e2, t2, r3) {
        return r3 ^ e2 & (t2 ^ r3);
      }
      function u(e2, t2, r3) {
        return e2 & t2 | r3 & (e2 | t2);
      }
      function d(e2) {
        return (e2 >>> 2 | e2 << 30) ^ (e2 >>> 13 | e2 << 19) ^ (e2 >>> 22 | e2 << 10);
      }
      function h(e2) {
        return (e2 >>> 6 | e2 << 26) ^ (e2 >>> 11 | e2 << 21) ^ (e2 >>> 25 | e2 << 7);
      }
      function l(e2) {
        return (e2 >>> 7 | e2 << 25) ^ (e2 >>> 18 | e2 << 14) ^ e2 >>> 3;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
      }, f2.prototype._update = function(e2) {
        for (var t2, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s3 = 0 | this._d, f3 = 0 | this._e, p = 0 | this._f, b = 0 | this._g, y = 0 | this._h, v = 0; v < 16; ++v)
          r3[v] = e2.readInt32BE(4 * v);
        for (; v < 64; ++v)
          r3[v] = 0 | (((t2 = r3[v - 2]) >>> 17 | t2 << 15) ^ (t2 >>> 19 | t2 << 13) ^ t2 >>> 10) + r3[v - 7] + l(r3[v - 15]) + r3[v - 16];
        for (var m = 0; m < 64; ++m) {
          var g = y + h(f3) + c(f3, p, b) + a[m] + r3[m] | 0, w = d(n2) + u(n2, i2, o2) | 0;
          y = b, b = p, p = f3, f3 = s3 + g | 0, s3 = o2, o2 = i2, i2 = n2, n2 = g + w | 0;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s3 + this._d | 0, this._e = f3 + this._e | 0, this._f = p + this._f | 0, this._g = b + this._g | 0, this._h = y + this._h | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(32);
        return e2.writeInt32BE(this._a, 0), e2.writeInt32BE(this._b, 4), e2.writeInt32BE(this._c, 8), e2.writeInt32BE(this._d, 12), e2.writeInt32BE(this._e, 16), e2.writeInt32BE(this._f, 20), e2.writeInt32BE(this._g, 24), e2.writeInt32BE(this._h, 28), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(10), i = r2(57), o = r2(24).Buffer, a = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], s2 = new Array(160);
      function f2() {
        this.init(), this._w = s2, i.call(this, 128, 112);
      }
      function c(e2, t2, r3) {
        return r3 ^ e2 & (t2 ^ r3);
      }
      function u(e2, t2, r3) {
        return e2 & t2 | r3 & (e2 | t2);
      }
      function d(e2, t2) {
        return (e2 >>> 28 | t2 << 4) ^ (t2 >>> 2 | e2 << 30) ^ (t2 >>> 7 | e2 << 25);
      }
      function h(e2, t2) {
        return (e2 >>> 14 | t2 << 18) ^ (e2 >>> 18 | t2 << 14) ^ (t2 >>> 9 | e2 << 23);
      }
      function l(e2, t2) {
        return (e2 >>> 1 | t2 << 31) ^ (e2 >>> 8 | t2 << 24) ^ e2 >>> 7;
      }
      function p(e2, t2) {
        return (e2 >>> 1 | t2 << 31) ^ (e2 >>> 8 | t2 << 24) ^ (e2 >>> 7 | t2 << 25);
      }
      function b(e2, t2) {
        return (e2 >>> 19 | t2 << 13) ^ (t2 >>> 29 | e2 << 3) ^ e2 >>> 6;
      }
      function y(e2, t2) {
        return (e2 >>> 19 | t2 << 13) ^ (t2 >>> 29 | e2 << 3) ^ (e2 >>> 6 | t2 << 26);
      }
      function v(e2, t2) {
        return e2 >>> 0 < t2 >>> 0 ? 1 : 0;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
      }, f2.prototype._update = function(e2) {
        for (var t2 = this._w, r3 = 0 | this._ah, n2 = 0 | this._bh, i2 = 0 | this._ch, o2 = 0 | this._dh, s3 = 0 | this._eh, f3 = 0 | this._fh, m = 0 | this._gh, g = 0 | this._hh, w = 0 | this._al, _ = 0 | this._bl, k = 0 | this._cl, A = 0 | this._dl, S = 0 | this._el, E = 0 | this._fl, x = 0 | this._gl, P = 0 | this._hl, O = 0; O < 32; O += 2)
          t2[O] = e2.readInt32BE(4 * O), t2[O + 1] = e2.readInt32BE(4 * O + 4);
        for (; O < 160; O += 2) {
          var T = t2[O - 30], B = t2[O - 30 + 1], M = l(T, B), R = p(B, T), I = b(T = t2[O - 4], B = t2[O - 4 + 1]), C = y(B, T), U = t2[O - 14], j = t2[O - 14 + 1], N = t2[O - 32], L = t2[O - 32 + 1], D = R + j | 0, F = M + U + v(D, R) | 0;
          F = (F = F + I + v(D = D + C | 0, C) | 0) + N + v(D = D + L | 0, L) | 0, t2[O] = F, t2[O + 1] = D;
        }
        for (var q = 0; q < 160; q += 2) {
          F = t2[q], D = t2[q + 1];
          var z = u(r3, n2, i2), H = u(w, _, k), K2 = d(r3, w), G = d(w, r3), W = h(s3, S), V = h(S, s3), J = a[q], Y = a[q + 1], X = c(s3, f3, m), Q = c(S, E, x), Z = P + V | 0, $ = g + W + v(Z, P) | 0;
          $ = ($ = ($ = $ + X + v(Z = Z + Q | 0, Q) | 0) + J + v(Z = Z + Y | 0, Y) | 0) + F + v(Z = Z + D | 0, D) | 0;
          var ee = G + H | 0, te = K2 + z + v(ee, G) | 0;
          g = m, P = x, m = f3, x = E, f3 = s3, E = S, s3 = o2 + $ + v(S = A + Z | 0, A) | 0, o2 = i2, A = k, i2 = n2, k = _, n2 = r3, _ = w, r3 = $ + te + v(w = Z + ee | 0, Z) | 0;
        }
        this._al = this._al + w | 0, this._bl = this._bl + _ | 0, this._cl = this._cl + k | 0, this._dl = this._dl + A | 0, this._el = this._el + S | 0, this._fl = this._fl + E | 0, this._gl = this._gl + x | 0, this._hl = this._hl + P | 0, this._ah = this._ah + r3 + v(this._al, w) | 0, this._bh = this._bh + n2 + v(this._bl, _) | 0, this._ch = this._ch + i2 + v(this._cl, k) | 0, this._dh = this._dh + o2 + v(this._dl, A) | 0, this._eh = this._eh + s3 + v(this._el, S) | 0, this._fh = this._fh + f3 + v(this._fl, E) | 0, this._gh = this._gh + m + v(this._gl, x) | 0, this._hh = this._hh + g + v(this._hl, P) | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(64);
        function t2(t3, r3, n2) {
          e2.writeInt32BE(t3, n2), e2.writeInt32BE(r3, n2 + 4);
        }
        return t2(this._ah, this._al, 0), t2(this._bh, this._bl, 8), t2(this._ch, this._cl, 16), t2(this._dh, this._dl, 24), t2(this._eh, this._el, 32), t2(this._fh, this._fl, 40), t2(this._gh, this._gl, 48), t2(this._hh, this._hl, 56), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      r2(616);
      var n = function(e2, t2) {
        return parseInt(e2.slice(2 * t2 + 2, 2 * t2 + 4), 16);
      }, i = function(e2) {
        return (e2.length - 2) / 2;
      }, o = function(e2) {
        for (var t2 = [], r3 = 2, n2 = e2.length; r3 < n2; r3 += 2)
          t2.push(parseInt(e2.slice(r3, r3 + 2), 16));
        return t2;
      }, a = function(e2) {
        for (var t2 = "0x", r3 = 0, n2 = e2.length; r3 < n2; ++r3) {
          var i2 = e2[r3];
          t2 += (i2 < 16 ? "0" : "") + i2.toString(16);
        }
        return t2;
      };
      e.exports = { random: function(e2) {
        var t2 = void 0;
        t2 = "undefined" != typeof window && window.crypto && window.crypto.getRandomValues ? window.crypto.getRandomValues(new Uint8Array(e2)) : r2(83).randomBytes(e2);
        for (var n2 = "0x", i2 = 0; i2 < e2; ++i2)
          n2 += ("00" + t2[i2].toString(16)).slice(-2);
        return n2;
      }, length: i, concat: function(e2, t2) {
        return e2.concat(t2.slice(2));
      }, flatten: function(e2) {
        return "0x" + e2.reduce(function(e3, t2) {
          return e3 + t2.slice(2);
        }, "");
      }, slice: function(e2, t2, r3) {
        return "0x" + r3.slice(2 * e2 + 2, 2 * t2 + 2);
      }, reverse: function(e2) {
        for (var t2 = "0x", r3 = 0, n2 = i(e2); r3 < n2; ++r3)
          t2 += e2.slice(2 * (n2 - r3), 2 * (n2 - r3 + 1));
        return t2;
      }, pad: function e2(t2, r3) {
        return r3.length === 2 * t2 + 2 ? r3 : e2(t2, "0x0" + r3.slice(2));
      }, padRight: function e2(t2, r3) {
        return r3.length === 2 * t2 + 2 ? r3 : e2(t2, r3 + "0");
      }, fromAscii: function(e2) {
        for (var t2 = "0x", r3 = 0; r3 < e2.length; ++r3)
          t2 += ("00" + e2.charCodeAt(r3).toString(16)).slice(-2);
        return t2;
      }, toAscii: function(e2) {
        for (var t2 = "", r3 = 2; r3 < e2.length; r3 += 2)
          t2 += String.fromCharCode(parseInt(e2.slice(r3, r3 + 2), 16));
        return t2;
      }, fromString: function(e2) {
        for (var t2 = function(e3) {
          var t3 = e3.toString(16);
          return t3.length < 2 ? "0" + t3 : t3;
        }, r3 = "0x", n2 = 0; n2 != e2.length; n2++) {
          var i2 = e2.charCodeAt(n2);
          if (i2 < 128)
            r3 += t2(i2);
          else {
            if (i2 < 2048)
              r3 += t2(i2 >> 6 | 192);
            else {
              if (i2 > 55295 && i2 < 56320) {
                if (++n2 == e2.length)
                  return null;
                var o2 = e2.charCodeAt(n2);
                if (o2 < 56320 || o2 > 57343)
                  return null;
                r3 += t2((i2 = 65536 + ((1023 & i2) << 10) + (1023 & o2)) >> 18 | 240), r3 += t2(i2 >> 12 & 63 | 128);
              } else
                r3 += t2(i2 >> 12 | 224);
              r3 += t2(i2 >> 6 & 63 | 128);
            }
            r3 += t2(63 & i2 | 128);
          }
        }
        return r3;
      }, toString: function(e2) {
        for (var t2 = "", r3 = 0, o2 = i(e2); r3 < o2; ) {
          var a2 = n(e2, r3++);
          if (a2 > 127) {
            if (a2 > 191 && a2 < 224) {
              if (r3 >= o2)
                return null;
              a2 = (31 & a2) << 6 | 63 & n(e2, r3);
            } else if (a2 > 223 && a2 < 240) {
              if (r3 + 1 >= o2)
                return null;
              a2 = (15 & a2) << 12 | (63 & n(e2, r3)) << 6 | 63 & n(e2, ++r3);
            } else {
              if (!(a2 > 239 && a2 < 248))
                return null;
              if (r3 + 2 >= o2)
                return null;
              a2 = (7 & a2) << 18 | (63 & n(e2, r3)) << 12 | (63 & n(e2, ++r3)) << 6 | 63 & n(e2, ++r3);
            }
            ++r3;
          }
          if (a2 <= 65535)
            t2 += String.fromCharCode(a2);
          else {
            if (!(a2 <= 1114111))
              return null;
            a2 -= 65536, t2 += String.fromCharCode(a2 >> 10 | 55296), t2 += String.fromCharCode(1023 & a2 | 56320);
          }
        }
        return t2;
      }, fromNumber: function(e2) {
        var t2 = e2.toString(16);
        return t2.length % 2 == 0 ? "0x" + t2 : "0x0" + t2;
      }, toNumber: function(e2) {
        return parseInt(e2.slice(2), 16);
      }, fromNat: function(e2) {
        return "0x0" === e2 ? "0x" : e2.length % 2 == 0 ? e2 : "0x0" + e2.slice(2);
      }, toNat: function(e2) {
        return "0" === e2[2] ? "0x" + e2.slice(3) : e2;
      }, fromArray: a, toArray: o, fromUint8Array: function(e2) {
        return a([].slice.call(e2, 0));
      }, toUint8Array: function(e2) {
        return new Uint8Array(o(e2));
      } };
    }, function(e, t, r2) {
      var n = r2(253).version, i = r2(34), o = r2(375), a = r2(81), s2 = r2(193), f2 = r2(601), c = r2(602), u = r2(17), d = function() {
        var e2 = this;
        i.packageInit(this, arguments), this.version = n, this.utils = u, this.eth = new o(this), this.shh = new f2(this), this.bzz = new c(this);
        var t2 = this.setProvider;
        this.setProvider = function(r3, n2) {
          return t2.apply(e2, arguments), e2.eth.setRequestManager(e2._requestManager), e2.shh.setRequestManager(e2._requestManager), e2.bzz.setProvider(r3), true;
        };
      };
      d.version = n, d.utils = u, d.modules = { Eth: o, Net: a, Personal: s2, Shh: f2, Bzz: c }, i.addProviders(d), e.exports = d;
    }, function(e) {
      e.exports = JSON.parse('{"name":"web3","version":"1.8.1","description":"Ethereum JavaScript API","repository":"https://github.com/ethereum/web3.js","license":"LGPL-3.0","engines":{"node":">=8.0.0"},"main":"lib/index.js","browser":"dist/web3.min.js","bugs":{"url":"https://github.com/ethereum/web3.js/issues"},"keywords":["Ethereum","JavaScript","API"],"author":"ethereum.org","types":"types/index.d.ts","scripts":{"compile":"tsc -b tsconfig.json","dtslint":"dtslint --localTs ../../node_modules/typescript/lib types","postinstall":"echo \\"Web3.js 4.x alpha has been released for early testing and feedback. Checkout doc at https://docs.web3js.org/ \\""},"authors":[{"name":"Fabian Vogelsteller","email":"fabian@ethereum.org","homepage":"http://frozeman.de"},{"name":"Marek Kotewicz","email":"marek@parity.io","url":"https://github.com/debris"},{"name":"Marian Oancea","url":"https://github.com/cubedro"},{"name":"Gav Wood","email":"g@parity.io","homepage":"http://gavwood.com"},{"name":"Jeffery Wilcke","email":"jeffrey.wilcke@ethereum.org","url":"https://github.com/obscuren"}],"dependencies":{"web3-bzz":"1.8.1","web3-core":"1.8.1","web3-eth":"1.8.1","web3-eth-personal":"1.8.1","web3-net":"1.8.1","web3-shh":"1.8.1","web3-utils":"1.8.1"},"devDependencies":{"@types/node":"^12.12.6","dtslint":"^3.4.1","typescript":"^3.9.5","web3-core-helpers":"1.8.1"}}');
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(127).callbackify, o = r2(12).errors, a = r2(167), s2 = r2(334), f2 = r2(335), c = function e2(t2, r3) {
        this.provider = null, this.providers = e2.providers, this.setProvider(t2, r3), this.subscriptions = /* @__PURE__ */ new Map();
      };
      c.givenProvider = f2, c.providers = { WebsocketProvider: r2(336), HttpProvider: r2(346), IpcProvider: r2(354) }, c.prototype.setProvider = function(e2, t2) {
        var r3 = this;
        if (e2 && "string" == typeof e2 && this.providers) {
          if (/^http(s)?:\/\//i.test(e2))
            e2 = new this.providers.HttpProvider(e2);
          else if (/^ws(s)?:\/\//i.test(e2))
            e2 = new this.providers.WebsocketProvider(e2);
          else if (e2 && "object" === (0, n.default)(t2) && "function" == typeof t2.connect)
            e2 = new this.providers.IpcProvider(e2, t2);
          else if (e2)
            throw new Error(`Can't autodetect provider for "` + e2 + '"');
        }
        if (this.provider && this.provider.connected && this.clearSubscriptions(), this.provider = e2 || null, this.provider && this.provider.on) {
          "function" == typeof e2.request ? this.provider.on("message", function(e3) {
            if (e3 && "eth_subscription" === e3.type && e3.data) {
              var t3 = e3.data;
              t3.subscription && r3.subscriptions.has(t3.subscription) && r3.subscriptions.get(t3.subscription).callback(null, t3.result);
            }
          }) : this.provider.on("data", function(e3, t3) {
            (e3 = e3 || t3).method && e3.params && e3.params.subscription && r3.subscriptions.has(e3.params.subscription) && r3.subscriptions.get(e3.params.subscription).callback(null, e3.params.result);
          }), this.provider.on("connect", function() {
            r3.subscriptions.forEach(function(e3) {
              e3.subscription.resubscribe();
            });
          }), this.provider.on("error", function(e3) {
            r3.subscriptions.forEach(function(t3) {
              t3.callback(e3);
            });
          });
          this.provider.on("disconnect", function(e3) {
            r3._isCleanCloseEvent(e3) && !r3._isIpcCloseError(e3) || (r3.subscriptions.forEach(function(t3) {
              t3.callback(o.ConnectionCloseError(e3)), r3.subscriptions.delete(t3.subscription.id);
            }), r3.provider && r3.provider.emit && r3.provider.emit("error", o.ConnectionCloseError(e3))), r3.provider && r3.provider.emit && r3.provider.emit("end", e3);
          });
        }
      }, c.prototype.send = function(e2, t2) {
        if (t2 = t2 || function() {
        }, !this.provider)
          return t2(o.InvalidProvider());
        var r3 = e2.method, n2 = e2.params, s3 = a.toPayload(r3, n2), f3 = this._jsonrpcResultCallback(t2, s3);
        if (this.provider.request)
          i(this.provider.request.bind(this.provider))({ method: r3, params: n2 }, t2);
        else if (this.provider.sendAsync)
          this.provider.sendAsync(s3, f3);
        else {
          if (!this.provider.send)
            throw new Error("Provider does not have a request or send method to use.");
          this.provider.send(s3, f3);
        }
      }, c.prototype.sendBatch = function(e2, t2) {
        if (!this.provider)
          return t2(o.InvalidProvider());
        var r3 = a.toBatchPayload(e2);
        this.provider[this.provider.sendAsync ? "sendAsync" : "send"](r3, function(e3, r4) {
          return e3 ? t2(e3) : Array.isArray(r4) ? void t2(null, r4) : t2(o.InvalidResponse(r4));
        });
      }, c.prototype.addSubscription = function(e2, t2) {
        if (!this.provider.on)
          throw new Error("The provider doesn't support subscriptions: " + this.provider.constructor.name);
        this.subscriptions.set(e2.id, { callback: t2, subscription: e2 });
      }, c.prototype.removeSubscription = function(e2, t2) {
        if (this.subscriptions.has(e2)) {
          var r3 = this.subscriptions.get(e2).subscription.options.type;
          return this.subscriptions.delete(e2), void this.send({ method: r3 + "_unsubscribe", params: [e2] }, t2);
        }
        "function" == typeof t2 && t2(null);
      }, c.prototype.clearSubscriptions = function(e2) {
        try {
          var t2 = this;
          return this.subscriptions.size > 0 && this.subscriptions.forEach(function(r3, n2) {
            e2 && "syncing" === r3.name || t2.removeSubscription(n2);
          }), this.provider.reset && this.provider.reset(), true;
        } catch (e3) {
          throw new Error("Error while clearing subscriptions: ".concat(e3));
        }
      }, c.prototype._isCleanCloseEvent = function(e2) {
        return "object" === (0, n.default)(e2) && ([1e3].includes(e2.code) || true === e2.wasClean);
      }, c.prototype._isIpcCloseError = function(e2) {
        return "boolean" == typeof e2 && e2;
      }, c.prototype._jsonrpcResultCallback = function(e2, t2) {
        return function(r3, n2) {
          return n2 && n2.id && t2.id !== n2.id ? e2(new Error("Wrong response id ".concat(n2.id, " (expected: ").concat(t2.id, ") in ").concat(JSON.stringify(t2)))) : r3 ? e2(r3) : n2 && n2.error ? e2(o.ErrorResponse(n2)) : a.isValidResponse(n2) ? void e2(null, n2.result) : e2(o.InvalidResponse(n2));
        };
      }, e.exports = { Manager: c, BatchManager: s2 };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      e.exports = function(e2) {
        return e2 && "object" === (0, n.default)(e2) && "function" == typeof e2.copy && "function" == typeof e2.fill && "function" == typeof e2.readUInt8;
      };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      e.exports = { ErrorResponse: function(e2) {
        var t2 = e2 && e2.error && e2.error.message ? e2.error.message : JSON.stringify(e2), r3 = e2.error && e2.error.data ? e2.error.data : null, n2 = new Error("Returned error: " + t2);
        return n2.data = r3, n2;
      }, InvalidNumberOfParams: function(e2, t2, r3) {
        return new Error('Invalid number of parameters for "' + r3 + '". Got ' + e2 + " expected " + t2 + "!");
      }, InvalidConnection: function(e2, t2) {
        return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node " + e2 + ".", t2);
      }, InvalidProvider: function() {
        return new Error("Provider not set or invalid");
      }, InvalidResponse: function(e2) {
        var t2 = e2 && e2.error && e2.error.message ? e2.error.message : "Invalid JSON RPC response: " + JSON.stringify(e2);
        return new Error(t2);
      }, ConnectionTimeout: function(e2) {
        return new Error("CONNECTION TIMEOUT: timeout of " + e2 + " ms achived");
      }, ConnectionNotOpenError: function(e2) {
        return this.ConnectionError("connection not open on send()", e2);
      }, ConnectionCloseError: function(e2) {
        return "object" === (0, n.default)(e2) && e2.code && e2.reason ? this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `" + e2.code + "` and the following reason string `" + e2.reason + "`", e2) : new Error("CONNECTION ERROR: The connection closed unexpectedly");
      }, MaxAttemptsReachedOnReconnectingError: function() {
        return new Error("Maximum number of reconnect attempts reached!");
      }, PendingRequestsOnReconnectingError: function() {
        return new Error("CONNECTION ERROR: Provider started to reconnect before the response got received!");
      }, ConnectionError: function(e2, t2) {
        var r3 = new Error(e2);
        return t2 && (r3.code = t2.code, r3.reason = t2.reason), r3;
      }, RevertInstructionError: function(e2, t2) {
        var r3 = new Error("Your request got reverted with the following reason string: " + e2);
        return r3.reason = e2, r3.signature = t2, r3;
      }, TransactionRevertInstructionError: function(e2, t2, r3) {
        var n2 = new Error("Transaction has been reverted by the EVM:\n" + JSON.stringify(r3, null, 2));
        return n2.reason = e2, n2.signature = t2, n2.receipt = r3, n2;
      }, TransactionError: function(e2, t2) {
        var r3 = new Error(e2);
        return r3.receipt = t2, r3;
      }, NoContractAddressFoundError: function(e2) {
        return this.TransactionError("The transaction receipt didn't contain a contract address.", e2);
      }, ContractCodeNotStoredError: function(e2) {
        return this.TransactionError("The contract code couldn't be stored, please check your gas limit.", e2);
      }, TransactionRevertedWithoutReasonError: function(e2) {
        return this.TransactionError("Transaction has been reverted by the EVM:\n" + JSON.stringify(e2, null, 2), e2);
      }, TransactionOutOfGasError: function(e2) {
        return this.TransactionError("Transaction ran out of gas. Please provide more gas:\n" + JSON.stringify(e2, null, 2), e2);
      }, ResolverMethodMissingError: function(e2, t2) {
        return new Error("The resolver at " + e2 + 'does not implement requested method: "' + t2 + '".');
      }, ContractMissingABIError: function() {
        return new Error("You must provide the json interface of the contract when instantiating a contract object.");
      }, ContractOnceRequiresCallbackError: function() {
        return new Error("Once requires a callback as the second parameter.");
      }, ContractEventDoesNotExistError: function(e2) {
        return new Error('Event "' + e2 + `" doesn't exist in this contract.`);
      }, ContractReservedEventError: function(e2) {
        return new Error('The event "' + e2 + `" is a reserved event name, you can't use it.`);
      }, ContractMissingDeployDataError: function() {
        return new Error('No "data" specified in neither the given options, nor the default options.');
      }, ContractNoAddressDefinedError: function() {
        return new Error("This contract object doesn't have address set yet, please set an address first.");
      }, ContractNoFromAddressDefinedError: function() {
        return new Error('No "from" address specified in neither the given options, nor the default options.');
      } };
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(58)), o = n(r2(2));
      function a(e2, t2) {
        var r3 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function s2(e2) {
        for (var t2 = 1; t2 < arguments.length; t2++) {
          var r3 = null != arguments[t2] ? arguments[t2] : {};
          t2 % 2 ? a(Object(r3), true).forEach(function(t3) {
            (0, i.default)(e2, t3, r3[t3]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(r3)) : a(Object(r3)).forEach(function(t3) {
            Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(r3, t3));
          });
        }
        return e2;
      }
      var f2 = r2(17), c = r2(166), u = function(e2) {
        return f2.toBN(e2).toString(10);
      }, d = function(e2) {
        if (void 0 !== e2)
          return function(e3) {
            return ["latest", "pending", "earliest", "finalized", "safe"].includes(e3);
          }(e2) ? e2 : "genesis" === e2 ? "0x0" : f2.isHexStrict(e2) ? "string" == typeof e2 ? e2.toLowerCase() : e2 : f2.numberToHex(e2);
      }, h = function(e2) {
        if (e2.to && (e2.to = b(e2.to)), e2.data && e2.input)
          throw new Error(`You can't have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.`);
        if (!e2.data && e2.input && (e2.data = e2.input, delete e2.input), e2.data && !e2.data.startsWith("0x") && (e2.data = "0x" + e2.data), e2.data && !f2.isHex(e2.data))
          throw new Error("The data field must be HEX encoded data.");
        return (e2.gas || e2.gasLimit) && (e2.gas = e2.gas || e2.gasLimit), (e2.maxPriorityFeePerGas || e2.maxFeePerGas) && delete e2.gasPrice, ["gasPrice", "gas", "value", "maxPriorityFeePerGas", "maxFeePerGas", "nonce"].filter(function(t2) {
          return void 0 !== e2[t2];
        }).forEach(function(t2) {
          e2[t2] = f2.numberToHex(e2[t2]);
        }), e2;
      }, l = function(e2) {
        return null !== e2.blockNumber && (e2.blockNumber = f2.hexToNumber(e2.blockNumber)), null !== e2.transactionIndex && (e2.transactionIndex = f2.hexToNumber(e2.transactionIndex)), e2.nonce = f2.hexToNumber(e2.nonce), e2.gas = f2.hexToNumber(e2.gas), e2.gasPrice && (e2.gasPrice = u(e2.gasPrice)), e2.maxFeePerGas && (e2.maxFeePerGas = u(e2.maxFeePerGas)), e2.maxPriorityFeePerGas && (e2.maxPriorityFeePerGas = u(e2.maxPriorityFeePerGas)), e2.type && (e2.type = f2.hexToNumber(e2.type)), e2.value = u(e2.value), e2.to && f2.isAddress(e2.to) ? e2.to = f2.toChecksumAddress(e2.to) : e2.to = null, e2.from && (e2.from = f2.toChecksumAddress(e2.from)), e2;
      }, p = function(e2) {
        if ("string" == typeof e2.blockHash && "string" == typeof e2.transactionHash && "string" == typeof e2.logIndex) {
          var t2 = f2.sha3(e2.blockHash.replace("0x", "") + e2.transactionHash.replace("0x", "") + e2.logIndex.replace("0x", ""));
          e2.id = "log_" + t2.replace("0x", "").slice(0, 8);
        } else
          e2.id || (e2.id = null);
        return null !== e2.blockNumber && (e2.blockNumber = f2.hexToNumber(e2.blockNumber)), null !== e2.transactionIndex && (e2.transactionIndex = f2.hexToNumber(e2.transactionIndex)), null !== e2.logIndex && (e2.logIndex = f2.hexToNumber(e2.logIndex)), e2.address && (e2.address = f2.toChecksumAddress(e2.address)), e2;
      }, b = function(e2) {
        var t2 = new c(e2);
        if (t2.isValid() && t2.isDirect())
          return t2.toAddress().toLowerCase();
        if (f2.isAddress(e2))
          return "0x" + e2.toLowerCase().replace("0x", "");
        throw new Error("Provided address ".concat(e2, " is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted."));
      };
      e.exports = { inputDefaultBlockNumberFormatter: function(e2) {
        return d(this && null == e2 ? this.defaultBlock : e2);
      }, inputBlockNumberFormatter: d, inputCallFormatter: function(e2) {
        var t2 = (e2 = h(e2)).from || (this ? this.defaultAccount : null);
        return t2 && (e2.from = b(t2)), e2;
      }, inputTransactionFormatter: function(e2) {
        if ("number" != typeof (e2 = h(e2)).from && (!e2.from || "object" !== (0, o.default)(e2.from))) {
          if (e2.from = e2.from || (this ? this.defaultAccount : null), !e2.from && "number" != typeof e2.from)
            throw new Error('The send transactions "from" field must be defined!');
          e2.from = b(e2.from);
        }
        return e2;
      }, inputAddressFormatter: b, inputPostFormatter: function(e2) {
        return e2.ttl && (e2.ttl = f2.numberToHex(e2.ttl)), e2.workToProve && (e2.workToProve = f2.numberToHex(e2.workToProve)), e2.priority && (e2.priority = f2.numberToHex(e2.priority)), Array.isArray(e2.topics) || (e2.topics = e2.topics ? [e2.topics] : []), e2.topics = e2.topics.map(function(e3) {
          return 0 === e3.indexOf("0x") ? e3 : f2.fromUtf8(e3);
        }), e2;
      }, inputLogFormatter: function(e2) {
        var t2 = function(e3) {
          return null == e3 ? null : 0 === (e3 = String(e3)).indexOf("0x") ? e3 : f2.fromUtf8(e3);
        };
        return void 0 === e2 && (e2 = {}), void 0 === e2.fromBlock && (e2 = s2(s2({}, e2), {}, { fromBlock: "latest" })), (e2.fromBlock || 0 === e2.fromBlock) && (e2.fromBlock = d(e2.fromBlock)), (e2.toBlock || 0 === e2.toBlock) && (e2.toBlock = d(e2.toBlock)), e2.topics = e2.topics || [], e2.topics = e2.topics.map(function(e3) {
          return Array.isArray(e3) ? e3.map(t2) : t2(e3);
        }), t2 = null, e2.address && (e2.address = Array.isArray(e2.address) ? e2.address.map(function(e3) {
          return b(e3);
        }) : b(e2.address)), e2;
      }, inputSignFormatter: function(e2) {
        return f2.isHexStrict(e2) ? e2 : f2.utf8ToHex(e2);
      }, inputStorageKeysFormatter: function(e2) {
        return e2.map(f2.numberToHex);
      }, outputProofFormatter: function(e2) {
        return e2.address = f2.toChecksumAddress(e2.address), e2.nonce = f2.hexToNumberString(e2.nonce), e2.balance = f2.hexToNumberString(e2.balance), e2;
      }, outputBigNumberFormatter: u, outputTransactionFormatter: l, outputTransactionReceiptFormatter: function(e2) {
        if ("object" !== (0, o.default)(e2))
          throw new Error("Received receipt is invalid: " + e2);
        return this.hexFormat || (null !== e2.blockNumber && (e2.blockNumber = f2.hexToNumber(e2.blockNumber)), null !== e2.transactionIndex && (e2.transactionIndex = f2.hexToNumber(e2.transactionIndex)), e2.cumulativeGasUsed = f2.hexToNumber(e2.cumulativeGasUsed), e2.gasUsed = f2.hexToNumber(e2.gasUsed), e2.effectiveGasPrice && (e2.effectiveGasPrice = f2.hexToNumber(e2.effectiveGasPrice))), Array.isArray(e2.logs) && (e2.logs = e2.logs.map(p)), e2.contractAddress && (e2.contractAddress = f2.toChecksumAddress(e2.contractAddress)), void 0 !== e2.status && null !== e2.status && (e2.status = Boolean(parseInt(e2.status))), e2;
      }, outputBlockFormatter: function(e2) {
        return e2.gasLimit = f2.hexToNumber(e2.gasLimit), e2.gasUsed = f2.hexToNumber(e2.gasUsed), e2.size = f2.hexToNumber(e2.size), e2.timestamp = f2.hexToNumber(e2.timestamp), null !== e2.number && (e2.number = f2.hexToNumber(e2.number)), e2.difficulty && (e2.difficulty = u(e2.difficulty)), e2.totalDifficulty && (e2.totalDifficulty = u(e2.totalDifficulty)), Array.isArray(e2.transactions) && e2.transactions.forEach(function(e3) {
          if ("string" != typeof e3)
            return l(e3);
        }), e2.miner && (e2.miner = f2.toChecksumAddress(e2.miner)), e2.baseFeePerGas && (e2.baseFeePerGas = f2.hexToNumber(e2.baseFeePerGas)), e2;
      }, outputLogFormatter: p, outputPostFormatter: function(e2) {
        return e2.expiry = f2.hexToNumber(e2.expiry), e2.sent = f2.hexToNumber(e2.sent), e2.ttl = f2.hexToNumber(e2.ttl), e2.workProved = f2.hexToNumber(e2.workProved), e2.topics || (e2.topics = []), e2.topics = e2.topics.map(function(e3) {
          return f2.toUtf8(e3);
        }), e2;
      }, outputSyncingFormatter: function(e2) {
        return e2.startingBlock = f2.hexToNumber(e2.startingBlock), e2.currentBlock = f2.hexToNumber(e2.currentBlock), e2.highestBlock = f2.hexToNumber(e2.highestBlock), e2.knownStates && (e2.knownStates = f2.hexToNumber(e2.knownStates), e2.pulledStates = f2.hexToNumber(e2.pulledStates)), e2;
      } };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(4), o = r2(128), a = new i(0), s2 = new i(-1), f2 = { noether: "0", wei: "1", kwei: "1000", Kwei: "1000", babbage: "1000", femtoether: "1000", mwei: "1000000", Mwei: "1000000", lovelace: "1000000", picoether: "1000000", gwei: "1000000000", Gwei: "1000000000", shannon: "1000000000", nanoether: "1000000000", nano: "1000000000", szabo: "1000000000000", microether: "1000000000000", micro: "1000000000000", finney: "1000000000000000", milliether: "1000000000000000", milli: "1000000000000000", ether: "1000000000000000000", kether: "1000000000000000000000", grand: "1000000000000000000000", mether: "1000000000000000000000000", gether: "1000000000000000000000000000", tether: "1000000000000000000000000000000" };
      function c(e2) {
        var t2 = e2 ? e2.toLowerCase() : "ether", r3 = f2[t2];
        if ("string" != typeof r3)
          throw new Error("[ethjs-unit] the unit provided " + e2 + " doesn't exists, please use the one of the following units " + JSON.stringify(f2, null, 2));
        return new i(r3, 10);
      }
      function u(e2) {
        if ("string" == typeof e2) {
          if (!e2.match(/^-?[0-9.]+$/))
            throw new Error("while converting number to string, invalid number value '" + e2 + "', should be a number matching (^-?[0-9.]+).");
          return e2;
        }
        if ("number" == typeof e2)
          return String(e2);
        if ("object" === (0, n.default)(e2) && e2.toString && (e2.toTwos || e2.dividedToIntegerBy))
          return e2.toPrecision ? String(e2.toPrecision()) : e2.toString(10);
        throw new Error("while converting number to string, invalid number value '" + e2 + "' type " + (0, n.default)(e2) + ".");
      }
      e.exports = { unitMap: f2, numberToString: u, getValueOfUnit: c, fromWei: function(e2, t2, r3) {
        var n2 = o(e2), i2 = n2.lt(a), u2 = c(t2), d = f2[t2].length - 1 || 1, h = r3 || {};
        i2 && (n2 = n2.mul(s2));
        for (var l = n2.mod(u2).toString(10); l.length < d; )
          l = "0" + l;
        h.pad || (l = l.match(/^([0-9]*[1-9]|0)(0*)/)[1]);
        var p = n2.div(u2).toString(10);
        h.commify && (p = p.replace(/\B(?=(\d{3})+(?!\d))/g, ","));
        var b = p + ("0" == l ? "" : "." + l);
        return i2 && (b = "-" + b), b;
      }, toWei: function(e2, t2) {
        var r3 = u(e2), n2 = c(t2), o2 = f2[t2].length - 1 || 1, a2 = "-" === r3.substring(0, 1);
        if (a2 && (r3 = r3.substring(1)), "." === r3)
          throw new Error("[ethjs-unit] while converting number " + e2 + " to wei, invalid value");
        var d = r3.split(".");
        if (d.length > 2)
          throw new Error("[ethjs-unit] while converting number " + e2 + " to wei,  too many decimal points");
        var h = d[0], l = d[1];
        if (h || (h = "0"), l || (l = "0"), l.length > o2)
          throw new Error("[ethjs-unit] while converting number " + e2 + " to wei, too many decimal places");
        for (; l.length < o2; )
          l += "0";
        h = new i(h), l = new i(l);
        var p = h.mul(n2).add(l);
        return a2 && (p = p.mul(s2)), new i(p.toString(10), 10);
      } };
    }, function(e, t) {
    }, function(e, t, r2) {
      var n = r2(261);
      e.exports = function(e2) {
        return "string" != typeof e2 ? e2 : n(e2) ? e2.slice(2) : e2;
      };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      e.exports = function(e2) {
        if ("string" != typeof e2)
          throw new Error("[is-hex-prefixed] value must be type 'string', is currently type " + (0, n.default)(e2) + ", while checking isHexPrefixed.");
        return "0x" === e2.slice(0, 2);
      };
    }, function(e, t, r2) {
      t.byteLength = function(e2) {
        var t2 = c(e2), r3 = t2[0], n2 = t2[1];
        return 3 * (r3 + n2) / 4 - n2;
      }, t.toByteArray = function(e2) {
        var t2, r3, n2 = c(e2), a2 = n2[0], s3 = n2[1], f3 = new o(function(e3, t3, r4) {
          return 3 * (t3 + r4) / 4 - r4;
        }(0, a2, s3)), u2 = 0, d = s3 > 0 ? a2 - 4 : a2;
        for (r3 = 0; r3 < d; r3 += 4)
          t2 = i[e2.charCodeAt(r3)] << 18 | i[e2.charCodeAt(r3 + 1)] << 12 | i[e2.charCodeAt(r3 + 2)] << 6 | i[e2.charCodeAt(r3 + 3)], f3[u2++] = t2 >> 16 & 255, f3[u2++] = t2 >> 8 & 255, f3[u2++] = 255 & t2;
        2 === s3 && (t2 = i[e2.charCodeAt(r3)] << 2 | i[e2.charCodeAt(r3 + 1)] >> 4, f3[u2++] = 255 & t2);
        1 === s3 && (t2 = i[e2.charCodeAt(r3)] << 10 | i[e2.charCodeAt(r3 + 1)] << 4 | i[e2.charCodeAt(r3 + 2)] >> 2, f3[u2++] = t2 >> 8 & 255, f3[u2++] = 255 & t2);
        return f3;
      }, t.fromByteArray = function(e2) {
        for (var t2, r3 = e2.length, i2 = r3 % 3, o2 = [], a2 = 0, s3 = r3 - i2; a2 < s3; a2 += 16383)
          o2.push(u(e2, a2, a2 + 16383 > s3 ? s3 : a2 + 16383));
        1 === i2 ? (t2 = e2[r3 - 1], o2.push(n[t2 >> 2] + n[t2 << 4 & 63] + "==")) : 2 === i2 && (t2 = (e2[r3 - 2] << 8) + e2[r3 - 1], o2.push(n[t2 >> 10] + n[t2 >> 4 & 63] + n[t2 << 2 & 63] + "="));
        return o2.join("");
      };
      for (var n = [], i = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s2 = 0, f2 = a.length; s2 < f2; ++s2)
        n[s2] = a[s2], i[a.charCodeAt(s2)] = s2;
      function c(e2) {
        var t2 = e2.length;
        if (t2 % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var r3 = e2.indexOf("=");
        return -1 === r3 && (r3 = t2), [r3, r3 === t2 ? 0 : 4 - r3 % 4];
      }
      function u(e2, t2, r3) {
        for (var i2, o2, a2 = [], s3 = t2; s3 < r3; s3 += 3)
          i2 = (e2[s3] << 16 & 16711680) + (e2[s3 + 1] << 8 & 65280) + (255 & e2[s3 + 2]), a2.push(n[(o2 = i2) >> 18 & 63] + n[o2 >> 12 & 63] + n[o2 >> 6 & 63] + n[63 & o2]);
        return a2.join("");
      }
      i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
    }, function(e, t, r2) {
      /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
      t.read = function(e2, t2, r3, n, i) {
        var o, a, s2 = 8 * i - n - 1, f2 = (1 << s2) - 1, c = f2 >> 1, u = -7, d = r3 ? i - 1 : 0, h = r3 ? -1 : 1, l = e2[t2 + d];
        for (d += h, o = l & (1 << -u) - 1, l >>= -u, u += s2; u > 0; o = 256 * o + e2[t2 + d], d += h, u -= 8)
          ;
        for (a = o & (1 << -u) - 1, o >>= -u, u += n; u > 0; a = 256 * a + e2[t2 + d], d += h, u -= 8)
          ;
        if (0 === o)
          o = 1 - c;
        else {
          if (o === f2)
            return a ? NaN : 1 / 0 * (l ? -1 : 1);
          a += Math.pow(2, n), o -= c;
        }
        return (l ? -1 : 1) * a * Math.pow(2, o - n);
      }, t.write = function(e2, t2, r3, n, i, o) {
        var a, s2, f2, c = 8 * o - i - 1, u = (1 << c) - 1, d = u >> 1, h = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, l = n ? 0 : o - 1, p = n ? 1 : -1, b = t2 < 0 || 0 === t2 && 1 / t2 < 0 ? 1 : 0;
        for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (s2 = isNaN(t2) ? 1 : 0, a = u) : (a = Math.floor(Math.log(t2) / Math.LN2), t2 * (f2 = Math.pow(2, -a)) < 1 && (a--, f2 *= 2), (t2 += a + d >= 1 ? h / f2 : h * Math.pow(2, 1 - d)) * f2 >= 2 && (a++, f2 /= 2), a + d >= u ? (s2 = 0, a = u) : a + d >= 1 ? (s2 = (t2 * f2 - 1) * Math.pow(2, i), a += d) : (s2 = t2 * Math.pow(2, d - 1) * Math.pow(2, i), a = 0)); i >= 8; e2[r3 + l] = 255 & s2, l += p, s2 /= 256, i -= 8)
          ;
        for (a = a << i | s2, c += i; c > 0; e2[r3 + l] = 255 & a, l += p, a /= 256, c -= 8)
          ;
        e2[r3 + l - p] |= 128 * b;
      };
    }, function(e, t, r2) {
      e.exports = function(e2) {
        if (Array.isArray(e2))
          return e2;
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      e.exports = function(e2, t2) {
        var r3 = null == e2 ? null : "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (null != r3) {
          var n, i, o = [], a = true, s2 = false;
          try {
            for (r3 = r3.call(e2); !(a = (n = r3.next()).done) && (o.push(n.value), !t2 || o.length !== t2); a = true)
              ;
          } catch (e3) {
            s2 = true, i = e3;
          } finally {
            try {
              a || null == r3.return || r3.return();
            } finally {
              if (s2)
                throw i;
            }
          }
          return o;
        }
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      e.exports = function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      /*! https://mths.be/utf8js v3.0.0 by @mathias */
      !function(e2) {
        var t2, r3, n, i = String.fromCharCode;
        function o(e3) {
          for (var t3, r4, n2 = [], i2 = 0, o2 = e3.length; i2 < o2; )
            (t3 = e3.charCodeAt(i2++)) >= 55296 && t3 <= 56319 && i2 < o2 ? 56320 == (64512 & (r4 = e3.charCodeAt(i2++))) ? n2.push(((1023 & t3) << 10) + (1023 & r4) + 65536) : (n2.push(t3), i2--) : n2.push(t3);
          return n2;
        }
        function a(e3) {
          if (e3 >= 55296 && e3 <= 57343)
            throw Error("Lone surrogate U+" + e3.toString(16).toUpperCase() + " is not a scalar value");
        }
        function s2(e3, t3) {
          return i(e3 >> t3 & 63 | 128);
        }
        function f2(e3) {
          if (0 == (4294967168 & e3))
            return i(e3);
          var t3 = "";
          return 0 == (4294965248 & e3) ? t3 = i(e3 >> 6 & 31 | 192) : 0 == (4294901760 & e3) ? (a(e3), t3 = i(e3 >> 12 & 15 | 224), t3 += s2(e3, 6)) : 0 == (4292870144 & e3) && (t3 = i(e3 >> 18 & 7 | 240), t3 += s2(e3, 12), t3 += s2(e3, 6)), t3 += i(63 & e3 | 128);
        }
        function c() {
          if (n >= r3)
            throw Error("Invalid byte index");
          var e3 = 255 & t2[n];
          if (n++, 128 == (192 & e3))
            return 63 & e3;
          throw Error("Invalid continuation byte");
        }
        function u() {
          var e3, i2;
          if (n > r3)
            throw Error("Invalid byte index");
          if (n == r3)
            return false;
          if (e3 = 255 & t2[n], n++, 0 == (128 & e3))
            return e3;
          if (192 == (224 & e3)) {
            if ((i2 = (31 & e3) << 6 | c()) >= 128)
              return i2;
            throw Error("Invalid continuation byte");
          }
          if (224 == (240 & e3)) {
            if ((i2 = (15 & e3) << 12 | c() << 6 | c()) >= 2048)
              return a(i2), i2;
            throw Error("Invalid continuation byte");
          }
          if (240 == (248 & e3) && (i2 = (7 & e3) << 18 | c() << 12 | c() << 6 | c()) >= 65536 && i2 <= 1114111)
            return i2;
          throw Error("Invalid UTF-8 detected");
        }
        e2.version = "3.0.0", e2.encode = function(e3) {
          for (var t3 = o(e3), r4 = t3.length, n2 = -1, i2 = ""; ++n2 < r4; )
            i2 += f2(t3[n2]);
          return i2;
        }, e2.decode = function(e3) {
          t2 = o(e3), r3 = t2.length, n = 0;
          for (var a2, s3 = []; false !== (a2 = u()); )
            s3.push(a2);
          return function(e4) {
            for (var t3, r4 = e4.length, n2 = -1, o2 = ""; ++n2 < r4; )
              (t3 = e4[n2]) > 65535 && (o2 += i((t3 -= 65536) >>> 10 & 1023 | 55296), t3 = 56320 | 1023 & t3), o2 += i(t3);
            return o2;
          }(s3);
        };
      }(t);
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.getLength = t.decode = t.encode = void 0;
        var i = n(r2(4));
        function o(e3, t2) {
          if ("0" === e3[0] && "0" === e3[1])
            throw new Error("invalid RLP: extra zeros");
          return parseInt(e3, t2);
        }
        function a(t2, r3) {
          if (t2 < 56)
            return e2.from([t2 + r3]);
          var n2 = f2(t2), i2 = f2(r3 + 55 + n2.length / 2);
          return e2.from(i2 + n2, "hex");
        }
        function s2(e3) {
          return "0x" === e3.slice(0, 2);
        }
        function f2(e3) {
          if (e3 < 0)
            throw new Error("Invalid integer as argument, must be unsigned!");
          var t2 = e3.toString(16);
          return t2.length % 2 ? "0" + t2 : t2;
        }
        function c(t2) {
          if (!e2.isBuffer(t2)) {
            if ("string" == typeof t2)
              return s2(t2) ? e2.from((n2 = "string" != typeof (o2 = t2) ? o2 : s2(o2) ? o2.slice(2) : o2).length % 2 ? "0" + n2 : n2, "hex") : e2.from(t2);
            if ("number" == typeof t2 || "bigint" == typeof t2)
              return t2 ? (r3 = f2(t2), e2.from(r3, "hex")) : e2.from([]);
            if (null == t2)
              return e2.from([]);
            if (t2 instanceof Uint8Array)
              return e2.from(t2);
            if (i.default.isBN(t2))
              return e2.from(t2.toArray());
            throw new Error("invalid type");
          }
          var r3, n2, o2;
          return t2;
        }
        t.encode = function t2(r3) {
          if (Array.isArray(r3)) {
            for (var n2 = [], i2 = 0; i2 < r3.length; i2++)
              n2.push(t2(r3[i2]));
            var o2 = e2.concat(n2);
            return e2.concat([a(o2.length, 192), o2]);
          }
          var s3 = c(r3);
          return 1 === s3.length && s3[0] < 128 ? s3 : e2.concat([a(s3.length, 128), s3]);
        }, t.decode = function(t2, r3) {
          if (void 0 === r3 && (r3 = false), !t2 || 0 === t2.length)
            return e2.from([]);
          var n2 = function t3(r4) {
            var n3, i2, a2, s3, f3, c2 = [], u = r4[0];
            if (u <= 127)
              return { data: r4.slice(0, 1), remainder: r4.slice(1) };
            if (u <= 183) {
              if (n3 = u - 127, a2 = 128 === u ? e2.from([]) : r4.slice(1, n3), 2 === n3 && a2[0] < 128)
                throw new Error("invalid rlp encoding: byte must be less 0x80");
              return { data: a2, remainder: r4.slice(n3) };
            }
            if (u <= 191) {
              if (i2 = u - 182, r4.length - 1 < i2)
                throw new Error("invalid RLP: not enough bytes for string length");
              if ((n3 = o(r4.slice(1, i2).toString("hex"), 16)) <= 55)
                throw new Error("invalid RLP: expected string length to be greater than 55");
              if ((a2 = r4.slice(i2, n3 + i2)).length < n3)
                throw new Error("invalid RLP: not enough bytes for string");
              return { data: a2, remainder: r4.slice(n3 + i2) };
            }
            if (u <= 247) {
              for (n3 = u - 191, s3 = r4.slice(1, n3); s3.length; )
                f3 = t3(s3), c2.push(f3.data), s3 = f3.remainder;
              return { data: c2, remainder: r4.slice(n3) };
            }
            i2 = u - 246, n3 = o(r4.slice(1, i2).toString("hex"), 16);
            var d = i2 + n3;
            if (d > r4.length)
              throw new Error("invalid rlp: total length is larger than the data");
            if (0 === (s3 = r4.slice(i2, d)).length)
              throw new Error("invalid rlp, List has a invalid length");
            for (; s3.length; )
              f3 = t3(s3), c2.push(f3.data), s3 = f3.remainder;
            return { data: c2, remainder: r4.slice(d) };
          }(c(t2));
          if (r3)
            return n2;
          if (0 !== n2.remainder.length)
            throw new Error("invalid remainder");
          return n2.data;
        }, t.getLength = function(t2) {
          if (!t2 || 0 === t2.length)
            return e2.from([]);
          var r3 = c(t2), n2 = r3[0];
          if (n2 <= 127)
            return r3.length;
          if (n2 <= 183)
            return n2 - 127;
          if (n2 <= 191)
            return n2 - 182;
          if (n2 <= 247)
            return n2 - 191;
          var i2 = n2 - 246;
          return i2 + o(r3.slice(1, i2).toString("hex"), 16);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s3 = true, f3 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s3 = e3.done, e3;
        }, e: function(e3) {
          f3 = true, a2 = e3;
        }, f: function() {
          try {
            s3 || null == r3.return || r3.return();
          } finally {
            if (f3)
              throw a2;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      var o = "Impossible case. Please create issue.", a = "The tweak was out of range or the resulted private key is invalid", s2 = "The tweak was out of range or equal to zero", f2 = "Unknow error on context randomization", c = "Private Key is invalid", u = "Public Key could not be parsed", d = "Public Key serialization error", h = "The sum of the public keys is not valid", l = "Signature could not be parsed", p = "The nonce generation function failed, or the private key was invalid", b = "Public key could not be recover", y = "Scalar was invalid (zero or overflow)";
      function v(e2, t2) {
        if (!e2)
          throw new Error(t2);
      }
      function m(e2, t2, r3) {
        if (v(t2 instanceof Uint8Array, "Expected ".concat(e2, " to be an Uint8Array")), void 0 !== r3)
          if (Array.isArray(r3)) {
            var n2 = r3.join(", "), i2 = "Expected ".concat(e2, " to be an Uint8Array with length [").concat(n2, "]");
            v(r3.includes(t2.length), i2);
          } else {
            var o2 = "Expected ".concat(e2, " to be an Uint8Array with length ").concat(r3);
            v(t2.length === r3, o2);
          }
      }
      function g(e2) {
        v("Boolean" === _(e2), "Expected compressed to be a Boolean");
      }
      function w() {
        var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : function(e3) {
          return new Uint8Array(e3);
        }, t2 = arguments.length > 1 ? arguments[1] : void 0;
        return "function" == typeof e2 && (e2 = e2(t2)), m("output", e2, t2), e2;
      }
      function _(e2) {
        return Object.prototype.toString.call(e2).slice(8, -1);
      }
      e.exports = function(e2) {
        return { contextRandomize: function(t2) {
          switch (v(null === t2 || t2 instanceof Uint8Array, "Expected seed to be an Uint8Array or null"), null !== t2 && m("seed", t2, 32), e2.contextRandomize(t2)) {
            case 1:
              throw new Error(f2);
          }
        }, privateKeyVerify: function(t2) {
          return m("private key", t2, 32), 0 === e2.privateKeyVerify(t2);
        }, privateKeyNegate: function(t2) {
          switch (m("private key", t2, 32), e2.privateKeyNegate(t2)) {
            case 0:
              return t2;
            case 1:
              throw new Error(o);
          }
        }, privateKeyTweakAdd: function(t2, r3) {
          switch (m("private key", t2, 32), m("tweak", r3, 32), e2.privateKeyTweakAdd(t2, r3)) {
            case 0:
              return t2;
            case 1:
              throw new Error(a);
          }
        }, privateKeyTweakMul: function(t2, r3) {
          switch (m("private key", t2, 32), m("tweak", r3, 32), e2.privateKeyTweakMul(t2, r3)) {
            case 0:
              return t2;
            case 1:
              throw new Error(s2);
          }
        }, publicKeyVerify: function(t2) {
          return m("public key", t2, [33, 65]), 0 === e2.publicKeyVerify(t2);
        }, publicKeyCreate: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = arguments.length > 2 ? arguments[2] : void 0;
          switch (m("private key", t2, 32), g(r3), n2 = w(n2, r3 ? 33 : 65), e2.publicKeyCreate(n2, t2)) {
            case 0:
              return n2;
            case 1:
              throw new Error(c);
            case 2:
              throw new Error(d);
          }
        }, publicKeyConvert: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = arguments.length > 2 ? arguments[2] : void 0;
          switch (m("public key", t2, [33, 65]), g(r3), n2 = w(n2, r3 ? 33 : 65), e2.publicKeyConvert(n2, t2)) {
            case 0:
              return n2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(d);
          }
        }, publicKeyNegate: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = arguments.length > 2 ? arguments[2] : void 0;
          switch (m("public key", t2, [33, 65]), g(r3), n2 = w(n2, r3 ? 33 : 65), e2.publicKeyNegate(n2, t2)) {
            case 0:
              return n2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(o);
            case 3:
              throw new Error(d);
          }
        }, publicKeyCombine: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i2 = arguments.length > 2 ? arguments[2] : void 0;
          v(Array.isArray(t2), "Expected public keys to be an Array"), v(t2.length > 0, "Expected public keys array will have more than zero items");
          var o2, a2 = n(t2);
          try {
            for (a2.s(); !(o2 = a2.n()).done; ) {
              var s3 = o2.value;
              m("public key", s3, [33, 65]);
            }
          } catch (e3) {
            a2.e(e3);
          } finally {
            a2.f();
          }
          switch (g(r3), i2 = w(i2, r3 ? 33 : 65), e2.publicKeyCombine(i2, t2)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(h);
            case 3:
              throw new Error(d);
          }
        }, publicKeyTweakAdd: function(t2, r3) {
          var n2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], i2 = arguments.length > 3 ? arguments[3] : void 0;
          switch (m("public key", t2, [33, 65]), m("tweak", r3, 32), g(n2), i2 = w(i2, n2 ? 33 : 65), e2.publicKeyTweakAdd(i2, t2, r3)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(a);
          }
        }, publicKeyTweakMul: function(t2, r3) {
          var n2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], i2 = arguments.length > 3 ? arguments[3] : void 0;
          switch (m("public key", t2, [33, 65]), m("tweak", r3, 32), g(n2), i2 = w(i2, n2 ? 33 : 65), e2.publicKeyTweakMul(i2, t2, r3)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(s2);
          }
        }, signatureNormalize: function(t2) {
          switch (m("signature", t2, 64), e2.signatureNormalize(t2)) {
            case 0:
              return t2;
            case 1:
              throw new Error(l);
          }
        }, signatureExport: function(t2, r3) {
          m("signature", t2, 64);
          var n2 = { output: r3 = w(r3, 72), outputlen: 72 };
          switch (e2.signatureExport(n2, t2)) {
            case 0:
              return r3.slice(0, n2.outputlen);
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(o);
          }
        }, signatureImport: function(t2, r3) {
          switch (m("signature", t2), r3 = w(r3, 64), e2.signatureImport(r3, t2)) {
            case 0:
              return r3;
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(o);
          }
        }, ecdsaSign: function(t2, r3) {
          var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = arguments.length > 3 ? arguments[3] : void 0;
          m("message", t2, 32), m("private key", r3, 32), v("Object" === _(n2), "Expected options to be an Object"), void 0 !== n2.data && m("options.data", n2.data), void 0 !== n2.noncefn && v("Function" === _(n2.noncefn), "Expected options.noncefn to be a Function");
          var a2 = { signature: i2 = w(i2, 64), recid: null };
          switch (e2.ecdsaSign(a2, t2, r3, n2.data, n2.noncefn)) {
            case 0:
              return a2;
            case 1:
              throw new Error(p);
            case 2:
              throw new Error(o);
          }
        }, ecdsaVerify: function(t2, r3, n2) {
          switch (m("signature", t2, 64), m("message", r3, 32), m("public key", n2, [33, 65]), e2.ecdsaVerify(t2, r3, n2)) {
            case 0:
              return true;
            case 3:
              return false;
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(u);
          }
        }, ecdsaRecover: function(t2, r3, n2) {
          var i2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], a2 = arguments.length > 4 ? arguments[4] : void 0;
          switch (m("signature", t2, 64), v("Number" === _(r3) && r3 >= 0 && r3 <= 3, "Expected recovery id to be a Number within interval [0, 3]"), m("message", n2, 32), g(i2), a2 = w(a2, i2 ? 33 : 65), e2.ecdsaRecover(a2, t2, r3, n2)) {
            case 0:
              return a2;
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(b);
            case 3:
              throw new Error(o);
          }
        }, ecdh: function(t2, r3) {
          var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = arguments.length > 3 ? arguments[3] : void 0;
          switch (m("public key", t2, [33, 65]), m("private key", r3, 32), v("Object" === _(n2), "Expected options to be an Object"), void 0 !== n2.data && m("options.data", n2.data), void 0 !== n2.hashfn ? (v("Function" === _(n2.hashfn), "Expected options.hashfn to be a Function"), void 0 !== n2.xbuf && m("options.xbuf", n2.xbuf, 32), void 0 !== n2.ybuf && m("options.ybuf", n2.ybuf, 32), m("output", i2)) : i2 = w(i2, 32), e2.ecdh(i2, t2, r3, n2.data, n2.hashfn, n2.xbuf, n2.ybuf)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(y);
          }
        } };
      };
    }, function(e, t, r2) {
      var n = new (r2(59)).ec("secp256k1"), i = n.curve, o = i.n.constructor;
      function a(e2) {
        var t2 = e2[0];
        switch (t2) {
          case 2:
          case 3:
            return 33 !== e2.length ? null : function(e3, t3) {
              var r3 = new o(t3);
              if (r3.cmp(i.p) >= 0)
                return null;
              var a2 = (r3 = r3.toRed(i.red)).redSqr().redIMul(r3).redIAdd(i.b).redSqrt();
              return 3 === e3 !== a2.isOdd() && (a2 = a2.redNeg()), n.keyPair({ pub: { x: r3, y: a2 } });
            }(t2, e2.subarray(1, 33));
          case 4:
          case 6:
          case 7:
            return 65 !== e2.length ? null : function(e3, t3, r3) {
              var a2 = new o(t3), s3 = new o(r3);
              if (a2.cmp(i.p) >= 0 || s3.cmp(i.p) >= 0)
                return null;
              if (a2 = a2.toRed(i.red), s3 = s3.toRed(i.red), (6 === e3 || 7 === e3) && s3.isOdd() !== (7 === e3))
                return null;
              var f2 = a2.redSqr().redIMul(a2);
              return s3.redSqr().redISub(f2.redIAdd(i.b)).isZero() ? n.keyPair({ pub: { x: a2, y: s3 } }) : null;
            }(t2, e2.subarray(1, 33), e2.subarray(33, 65));
          default:
            return null;
        }
      }
      function s2(e2, t2) {
        for (var r3 = t2.encode(null, 33 === e2.length), n2 = 0; n2 < e2.length; ++n2)
          e2[n2] = r3[n2];
      }
      e.exports = { contextRandomize: function() {
        return 0;
      }, privateKeyVerify: function(e2) {
        var t2 = new o(e2);
        return t2.cmp(i.n) < 0 && !t2.isZero() ? 0 : 1;
      }, privateKeyNegate: function(e2) {
        var t2 = new o(e2), r3 = i.n.sub(t2).umod(i.n).toArrayLike(Uint8Array, "be", 32);
        return e2.set(r3), 0;
      }, privateKeyTweakAdd: function(e2, t2) {
        var r3 = new o(t2);
        if (r3.cmp(i.n) >= 0)
          return 1;
        if (r3.iadd(new o(e2)), r3.cmp(i.n) >= 0 && r3.isub(i.n), r3.isZero())
          return 1;
        var n2 = r3.toArrayLike(Uint8Array, "be", 32);
        return e2.set(n2), 0;
      }, privateKeyTweakMul: function(e2, t2) {
        var r3 = new o(t2);
        if (r3.cmp(i.n) >= 0 || r3.isZero())
          return 1;
        r3.imul(new o(e2)), r3.cmp(i.n) >= 0 && (r3 = r3.umod(i.n));
        var n2 = r3.toArrayLike(Uint8Array, "be", 32);
        return e2.set(n2), 0;
      }, publicKeyVerify: function(e2) {
        return null === a(e2) ? 1 : 0;
      }, publicKeyCreate: function(e2, t2) {
        var r3 = new o(t2);
        return r3.cmp(i.n) >= 0 || r3.isZero() ? 1 : (s2(e2, n.keyFromPrivate(t2).getPublic()), 0);
      }, publicKeyConvert: function(e2, t2) {
        var r3 = a(t2);
        return null === r3 ? 1 : (s2(e2, r3.getPublic()), 0);
      }, publicKeyNegate: function(e2, t2) {
        var r3 = a(t2);
        if (null === r3)
          return 1;
        var n2 = r3.getPublic();
        return n2.y = n2.y.redNeg(), s2(e2, n2), 0;
      }, publicKeyCombine: function(e2, t2) {
        for (var r3 = new Array(t2.length), n2 = 0; n2 < t2.length; ++n2)
          if (r3[n2] = a(t2[n2]), null === r3[n2])
            return 1;
        for (var i2 = r3[0].getPublic(), o2 = 1; o2 < r3.length; ++o2)
          i2 = i2.add(r3[o2].pub);
        return i2.isInfinity() ? 2 : (s2(e2, i2), 0);
      }, publicKeyTweakAdd: function(e2, t2, r3) {
        var n2 = a(t2);
        if (null === n2)
          return 1;
        if ((r3 = new o(r3)).cmp(i.n) >= 0)
          return 2;
        var f2 = n2.getPublic().add(i.g.mul(r3));
        return f2.isInfinity() ? 2 : (s2(e2, f2), 0);
      }, publicKeyTweakMul: function(e2, t2, r3) {
        var n2 = a(t2);
        return null === n2 ? 1 : (r3 = new o(r3)).cmp(i.n) >= 0 || r3.isZero() ? 2 : (s2(e2, n2.getPublic().mul(r3)), 0);
      }, signatureNormalize: function(e2) {
        var t2 = new o(e2.subarray(0, 32)), r3 = new o(e2.subarray(32, 64));
        return t2.cmp(i.n) >= 0 || r3.cmp(i.n) >= 0 ? 1 : (1 === r3.cmp(n.nh) && e2.set(i.n.sub(r3).toArrayLike(Uint8Array, "be", 32), 32), 0);
      }, signatureExport: function(e2, t2) {
        var r3 = t2.subarray(0, 32), n2 = t2.subarray(32, 64);
        if (new o(r3).cmp(i.n) >= 0)
          return 1;
        if (new o(n2).cmp(i.n) >= 0)
          return 1;
        var a2 = e2.output, s3 = a2.subarray(4, 37);
        s3[0] = 0, s3.set(r3, 1);
        for (var f2 = 33, c = 0; f2 > 1 && 0 === s3[c] && !(128 & s3[c + 1]); --f2, ++c)
          ;
        if (128 & (s3 = s3.subarray(c))[0])
          return 1;
        if (f2 > 1 && 0 === s3[0] && !(128 & s3[1]))
          return 1;
        var u = a2.subarray(39, 72);
        u[0] = 0, u.set(n2, 1);
        for (var d = 33, h = 0; d > 1 && 0 === u[h] && !(128 & u[h + 1]); --d, ++h)
          ;
        return 128 & (u = u.subarray(h))[0] || d > 1 && 0 === u[0] && !(128 & u[1]) ? 1 : (e2.outputlen = 6 + f2 + d, a2[0] = 48, a2[1] = e2.outputlen - 2, a2[2] = 2, a2[3] = s3.length, a2.set(s3, 4), a2[4 + f2] = 2, a2[5 + f2] = u.length, a2.set(u, 6 + f2), 0);
      }, signatureImport: function(e2, t2) {
        if (t2.length < 8)
          return 1;
        if (t2.length > 72)
          return 1;
        if (48 !== t2[0])
          return 1;
        if (t2[1] !== t2.length - 2)
          return 1;
        if (2 !== t2[2])
          return 1;
        var r3 = t2[3];
        if (0 === r3)
          return 1;
        if (5 + r3 >= t2.length)
          return 1;
        if (2 !== t2[4 + r3])
          return 1;
        var n2 = t2[5 + r3];
        if (0 === n2)
          return 1;
        if (6 + r3 + n2 !== t2.length)
          return 1;
        if (128 & t2[4])
          return 1;
        if (r3 > 1 && 0 === t2[4] && !(128 & t2[5]))
          return 1;
        if (128 & t2[r3 + 6])
          return 1;
        if (n2 > 1 && 0 === t2[r3 + 6] && !(128 & t2[r3 + 7]))
          return 1;
        var a2 = t2.subarray(4, 4 + r3);
        if (33 === a2.length && 0 === a2[0] && (a2 = a2.subarray(1)), a2.length > 32)
          return 1;
        var s3 = t2.subarray(6 + r3);
        if (33 === s3.length && 0 === s3[0] && (s3 = s3.slice(1)), s3.length > 32)
          throw new Error("S length is too long");
        var f2 = new o(a2);
        f2.cmp(i.n) >= 0 && (f2 = new o(0));
        var c = new o(t2.subarray(6 + r3));
        return c.cmp(i.n) >= 0 && (c = new o(0)), e2.set(f2.toArrayLike(Uint8Array, "be", 32), 0), e2.set(c.toArrayLike(Uint8Array, "be", 32), 32), 0;
      }, ecdsaSign: function(e2, t2, r3, a2, s3) {
        if (s3) {
          var f2 = s3;
          s3 = function(e3) {
            var n2 = f2(t2, r3, null, a2, e3);
            if (!(n2 instanceof Uint8Array && 32 === n2.length))
              throw new Error("This is the way");
            return new o(n2);
          };
        }
        var c, u = new o(r3);
        if (u.cmp(i.n) >= 0 || u.isZero())
          return 1;
        try {
          c = n.sign(t2, r3, { canonical: true, k: s3, pers: a2 });
        } catch (e3) {
          return 1;
        }
        return e2.signature.set(c.r.toArrayLike(Uint8Array, "be", 32), 0), e2.signature.set(c.s.toArrayLike(Uint8Array, "be", 32), 32), e2.recid = c.recoveryParam, 0;
      }, ecdsaVerify: function(e2, t2, r3) {
        var s3 = { r: e2.subarray(0, 32), s: e2.subarray(32, 64) }, f2 = new o(s3.r), c = new o(s3.s);
        if (f2.cmp(i.n) >= 0 || c.cmp(i.n) >= 0)
          return 1;
        if (1 === c.cmp(n.nh) || f2.isZero() || c.isZero())
          return 3;
        var u = a(r3);
        if (null === u)
          return 2;
        var d = u.getPublic();
        return n.verify(t2, s3, d) ? 0 : 3;
      }, ecdsaRecover: function(e2, t2, r3, a2) {
        var f2, c = { r: t2.slice(0, 32), s: t2.slice(32, 64) }, u = new o(c.r), d = new o(c.s);
        if (u.cmp(i.n) >= 0 || d.cmp(i.n) >= 0)
          return 1;
        if (u.isZero() || d.isZero())
          return 2;
        try {
          f2 = n.recoverPubKey(a2, c, r3);
        } catch (e3) {
          return 2;
        }
        return s2(e2, f2), 0;
      }, ecdh: function(e2, t2, r3, s3, f2, c, u) {
        var d = a(t2);
        if (null === d)
          return 1;
        var h = new o(r3);
        if (h.cmp(i.n) >= 0 || h.isZero())
          return 2;
        var l = d.getPublic().mul(h);
        if (void 0 === f2)
          for (var p = l.encode(null, true), b = n.hash().update(p).digest(), y = 0; y < 32; ++y)
            e2[y] = b[y];
        else {
          c || (c = new Uint8Array(32));
          for (var v = l.getX().toArray("be", 32), m = 0; m < 32; ++m)
            c[m] = v[m];
          u || (u = new Uint8Array(32));
          for (var g = l.getY().toArray("be", 32), w = 0; w < 32; ++w)
            u[w] = g[w];
          var _ = f2(c, u, s3);
          if (!(_ instanceof Uint8Array && _.length === e2.length))
            return 2;
          e2.set(_);
        }
        return 0;
      } };
    }, function(e) {
      e.exports = JSON.parse('{"_args":[["elliptic@6.5.4","/Users/user1/Desktop/office/web3/deployments/1.8.1/web3.js"]],"_from":"elliptic@6.5.4","_id":"elliptic@6.5.4","_inBundle":false,"_integrity":"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"elliptic@6.5.4","name":"elliptic","escapedName":"elliptic","rawSpec":"6.5.4","saveSpec":null,"fetchSpec":"6.5.4"},"_requiredBy":["/@ethersproject/signing-key","/browserify-sign","/create-ecdh","/eth-lib","/secp256k1","/swarm-js/eth-lib"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz","_spec":"6.5.4","_where":"/Users/user1/Desktop/office/web3/deployments/1.8.1/web3.js","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"},"description":"EC cryptography","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.5.4"}');
    }, function(e, t) {
    }, function(e, t, r2) {
      var n = r2(18), i = r2(4), o = r2(3), a = r2(71), s2 = n.assert;
      function f2(e2) {
        a.call(this, "short", e2), this.a = new i(e2.a, 16).toRed(this.red), this.b = new i(e2.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e2), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
      }
      function c(e2, t2, r3, n2) {
        a.BasePoint.call(this, e2, "affine"), null === t2 && null === r3 ? (this.x = null, this.y = null, this.inf = true) : (this.x = new i(t2, 16), this.y = new i(r3, 16), n2 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
      }
      function u(e2, t2, r3, n2) {
        a.BasePoint.call(this, e2, "jacobian"), null === t2 && null === r3 && null === n2 ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(t2, 16), this.y = new i(r3, 16), this.z = new i(n2, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
      }
      o(f2, a), e.exports = f2, f2.prototype._getEndomorphism = function(e2) {
        if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
          var t2, r3;
          if (e2.beta)
            t2 = new i(e2.beta, 16).toRed(this.red);
          else {
            var n2 = this._getEndoRoots(this.p);
            t2 = (t2 = n2[0].cmp(n2[1]) < 0 ? n2[0] : n2[1]).toRed(this.red);
          }
          if (e2.lambda)
            r3 = new i(e2.lambda, 16);
          else {
            var o2 = this._getEndoRoots(this.n);
            0 === this.g.mul(o2[0]).x.cmp(this.g.x.redMul(t2)) ? r3 = o2[0] : (r3 = o2[1], s2(0 === this.g.mul(r3).x.cmp(this.g.x.redMul(t2))));
          }
          return { beta: t2, lambda: r3, basis: e2.basis ? e2.basis.map(function(e3) {
            return { a: new i(e3.a, 16), b: new i(e3.b, 16) };
          }) : this._getEndoBasis(r3) };
        }
      }, f2.prototype._getEndoRoots = function(e2) {
        var t2 = e2 === this.p ? this.red : i.mont(e2), r3 = new i(2).toRed(t2).redInvm(), n2 = r3.redNeg(), o2 = new i(3).toRed(t2).redNeg().redSqrt().redMul(r3);
        return [n2.redAdd(o2).fromRed(), n2.redSub(o2).fromRed()];
      }, f2.prototype._getEndoBasis = function(e2) {
        for (var t2, r3, n2, o2, a2, s3, f3, c2, u2, d = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h = e2, l = this.n.clone(), p = new i(1), b = new i(0), y = new i(0), v = new i(1), m = 0; 0 !== h.cmpn(0); ) {
          var g = l.div(h);
          c2 = l.sub(g.mul(h)), u2 = y.sub(g.mul(p));
          var w = v.sub(g.mul(b));
          if (!n2 && c2.cmp(d) < 0)
            t2 = f3.neg(), r3 = p, n2 = c2.neg(), o2 = u2;
          else if (n2 && 2 == ++m)
            break;
          f3 = c2, l = h, h = c2, y = p, p = u2, v = b, b = w;
        }
        a2 = c2.neg(), s3 = u2;
        var _ = n2.sqr().add(o2.sqr());
        return a2.sqr().add(s3.sqr()).cmp(_) >= 0 && (a2 = t2, s3 = r3), n2.negative && (n2 = n2.neg(), o2 = o2.neg()), a2.negative && (a2 = a2.neg(), s3 = s3.neg()), [{ a: n2, b: o2 }, { a: a2, b: s3 }];
      }, f2.prototype._endoSplit = function(e2) {
        var t2 = this.endo.basis, r3 = t2[0], n2 = t2[1], i2 = n2.b.mul(e2).divRound(this.n), o2 = r3.b.neg().mul(e2).divRound(this.n), a2 = i2.mul(r3.a), s3 = o2.mul(n2.a), f3 = i2.mul(r3.b), c2 = o2.mul(n2.b);
        return { k1: e2.sub(a2).sub(s3), k2: f3.add(c2).neg() };
      }, f2.prototype.pointFromX = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r3 = e2.redSqr().redMul(e2).redIAdd(e2.redMul(this.a)).redIAdd(this.b), n2 = r3.redSqrt();
        if (0 !== n2.redSqr().redSub(r3).cmp(this.zero))
          throw new Error("invalid point");
        var o2 = n2.fromRed().isOdd();
        return (t2 && !o2 || !t2 && o2) && (n2 = n2.redNeg()), this.point(e2, n2);
      }, f2.prototype.validate = function(e2) {
        if (e2.inf)
          return true;
        var t2 = e2.x, r3 = e2.y, n2 = this.a.redMul(t2), i2 = t2.redSqr().redMul(t2).redIAdd(n2).redIAdd(this.b);
        return 0 === r3.redSqr().redISub(i2).cmpn(0);
      }, f2.prototype._endoWnafMulAdd = function(e2, t2, r3) {
        for (var n2 = this._endoWnafT1, i2 = this._endoWnafT2, o2 = 0; o2 < e2.length; o2++) {
          var a2 = this._endoSplit(t2[o2]), s3 = e2[o2], f3 = s3._getBeta();
          a2.k1.negative && (a2.k1.ineg(), s3 = s3.neg(true)), a2.k2.negative && (a2.k2.ineg(), f3 = f3.neg(true)), n2[2 * o2] = s3, n2[2 * o2 + 1] = f3, i2[2 * o2] = a2.k1, i2[2 * o2 + 1] = a2.k2;
        }
        for (var c2 = this._wnafMulAdd(1, n2, i2, 2 * o2, r3), u2 = 0; u2 < 2 * o2; u2++)
          n2[u2] = null, i2[u2] = null;
        return c2;
      }, o(c, a.BasePoint), f2.prototype.point = function(e2, t2, r3) {
        return new c(this, e2, t2, r3);
      }, f2.prototype.pointFromJSON = function(e2, t2) {
        return c.fromJSON(this, e2, t2);
      }, c.prototype._getBeta = function() {
        if (this.curve.endo) {
          var e2 = this.precomputed;
          if (e2 && e2.beta)
            return e2.beta;
          var t2 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
          if (e2) {
            var r3 = this.curve, n2 = function(e3) {
              return r3.point(e3.x.redMul(r3.endo.beta), e3.y);
            };
            e2.beta = t2, t2.precomputed = { beta: null, naf: e2.naf && { wnd: e2.naf.wnd, points: e2.naf.points.map(n2) }, doubles: e2.doubles && { step: e2.doubles.step, points: e2.doubles.points.map(n2) } };
          }
          return t2;
        }
      }, c.prototype.toJSON = function() {
        return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
      }, c.fromJSON = function(e2, t2, r3) {
        "string" == typeof t2 && (t2 = JSON.parse(t2));
        var n2 = e2.point(t2[0], t2[1], r3);
        if (!t2[2])
          return n2;
        function i2(t3) {
          return e2.point(t3[0], t3[1], r3);
        }
        var o2 = t2[2];
        return n2.precomputed = { beta: null, doubles: o2.doubles && { step: o2.doubles.step, points: [n2].concat(o2.doubles.points.map(i2)) }, naf: o2.naf && { wnd: o2.naf.wnd, points: [n2].concat(o2.naf.points.map(i2)) } }, n2;
      }, c.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
      }, c.prototype.isInfinity = function() {
        return this.inf;
      }, c.prototype.add = function(e2) {
        if (this.inf)
          return e2;
        if (e2.inf)
          return this;
        if (this.eq(e2))
          return this.dbl();
        if (this.neg().eq(e2))
          return this.curve.point(null, null);
        if (0 === this.x.cmp(e2.x))
          return this.curve.point(null, null);
        var t2 = this.y.redSub(e2.y);
        0 !== t2.cmpn(0) && (t2 = t2.redMul(this.x.redSub(e2.x).redInvm()));
        var r3 = t2.redSqr().redISub(this.x).redISub(e2.x), n2 = t2.redMul(this.x.redSub(r3)).redISub(this.y);
        return this.curve.point(r3, n2);
      }, c.prototype.dbl = function() {
        if (this.inf)
          return this;
        var e2 = this.y.redAdd(this.y);
        if (0 === e2.cmpn(0))
          return this.curve.point(null, null);
        var t2 = this.curve.a, r3 = this.x.redSqr(), n2 = e2.redInvm(), i2 = r3.redAdd(r3).redIAdd(r3).redIAdd(t2).redMul(n2), o2 = i2.redSqr().redISub(this.x.redAdd(this.x)), a2 = i2.redMul(this.x.redSub(o2)).redISub(this.y);
        return this.curve.point(o2, a2);
      }, c.prototype.getX = function() {
        return this.x.fromRed();
      }, c.prototype.getY = function() {
        return this.y.fromRed();
      }, c.prototype.mul = function(e2) {
        return e2 = new i(e2, 16), this.isInfinity() ? this : this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e2]) : this.curve._wnafMul(this, e2);
      }, c.prototype.mulAdd = function(e2, t2, r3) {
        var n2 = [this, t2], i2 = [e2, r3];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2) : this.curve._wnafMulAdd(1, n2, i2, 2);
      }, c.prototype.jmulAdd = function(e2, t2, r3) {
        var n2 = [this, t2], i2 = [e2, r3];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2, true) : this.curve._wnafMulAdd(1, n2, i2, 2, true);
      }, c.prototype.eq = function(e2) {
        return this === e2 || this.inf === e2.inf && (this.inf || 0 === this.x.cmp(e2.x) && 0 === this.y.cmp(e2.y));
      }, c.prototype.neg = function(e2) {
        if (this.inf)
          return this;
        var t2 = this.curve.point(this.x, this.y.redNeg());
        if (e2 && this.precomputed) {
          var r3 = this.precomputed, n2 = function(e3) {
            return e3.neg();
          };
          t2.precomputed = { naf: r3.naf && { wnd: r3.naf.wnd, points: r3.naf.points.map(n2) }, doubles: r3.doubles && { step: r3.doubles.step, points: r3.doubles.points.map(n2) } };
        }
        return t2;
      }, c.prototype.toJ = function() {
        return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
      }, o(u, a.BasePoint), f2.prototype.jpoint = function(e2, t2, r3) {
        return new u(this, e2, t2, r3);
      }, u.prototype.toP = function() {
        if (this.isInfinity())
          return this.curve.point(null, null);
        var e2 = this.z.redInvm(), t2 = e2.redSqr(), r3 = this.x.redMul(t2), n2 = this.y.redMul(t2).redMul(e2);
        return this.curve.point(r3, n2);
      }, u.prototype.neg = function() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      }, u.prototype.add = function(e2) {
        if (this.isInfinity())
          return e2;
        if (e2.isInfinity())
          return this;
        var t2 = e2.z.redSqr(), r3 = this.z.redSqr(), n2 = this.x.redMul(t2), i2 = e2.x.redMul(r3), o2 = this.y.redMul(t2.redMul(e2.z)), a2 = e2.y.redMul(r3.redMul(this.z)), s3 = n2.redSub(i2), f3 = o2.redSub(a2);
        if (0 === s3.cmpn(0))
          return 0 !== f3.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
        var c2 = s3.redSqr(), u2 = c2.redMul(s3), d = n2.redMul(c2), h = f3.redSqr().redIAdd(u2).redISub(d).redISub(d), l = f3.redMul(d.redISub(h)).redISub(o2.redMul(u2)), p = this.z.redMul(e2.z).redMul(s3);
        return this.curve.jpoint(h, l, p);
      }, u.prototype.mixedAdd = function(e2) {
        if (this.isInfinity())
          return e2.toJ();
        if (e2.isInfinity())
          return this;
        var t2 = this.z.redSqr(), r3 = this.x, n2 = e2.x.redMul(t2), i2 = this.y, o2 = e2.y.redMul(t2).redMul(this.z), a2 = r3.redSub(n2), s3 = i2.redSub(o2);
        if (0 === a2.cmpn(0))
          return 0 !== s3.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
        var f3 = a2.redSqr(), c2 = f3.redMul(a2), u2 = r3.redMul(f3), d = s3.redSqr().redIAdd(c2).redISub(u2).redISub(u2), h = s3.redMul(u2.redISub(d)).redISub(i2.redMul(c2)), l = this.z.redMul(a2);
        return this.curve.jpoint(d, h, l);
      }, u.prototype.dblp = function(e2) {
        if (0 === e2)
          return this;
        if (this.isInfinity())
          return this;
        if (!e2)
          return this.dbl();
        var t2;
        if (this.curve.zeroA || this.curve.threeA) {
          var r3 = this;
          for (t2 = 0; t2 < e2; t2++)
            r3 = r3.dbl();
          return r3;
        }
        var n2 = this.curve.a, i2 = this.curve.tinv, o2 = this.x, a2 = this.y, s3 = this.z, f3 = s3.redSqr().redSqr(), c2 = a2.redAdd(a2);
        for (t2 = 0; t2 < e2; t2++) {
          var u2 = o2.redSqr(), d = c2.redSqr(), h = d.redSqr(), l = u2.redAdd(u2).redIAdd(u2).redIAdd(n2.redMul(f3)), p = o2.redMul(d), b = l.redSqr().redISub(p.redAdd(p)), y = p.redISub(b), v = l.redMul(y);
          v = v.redIAdd(v).redISub(h);
          var m = c2.redMul(s3);
          t2 + 1 < e2 && (f3 = f3.redMul(h)), o2 = b, s3 = m, c2 = v;
        }
        return this.curve.jpoint(o2, c2.redMul(i2), s3);
      }, u.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
      }, u.prototype._zeroDbl = function() {
        var e2, t2, r3;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
          a2 = a2.redIAdd(a2);
          var s3 = n2.redAdd(n2).redIAdd(n2), f3 = s3.redSqr().redISub(a2).redISub(a2), c2 = o2.redIAdd(o2);
          c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), e2 = f3, t2 = s3.redMul(a2.redISub(f3)).redISub(c2), r3 = this.y.redAdd(this.y);
        } else {
          var u2 = this.x.redSqr(), d = this.y.redSqr(), h = d.redSqr(), l = this.x.redAdd(d).redSqr().redISub(u2).redISub(h);
          l = l.redIAdd(l);
          var p = u2.redAdd(u2).redIAdd(u2), b = p.redSqr(), y = h.redIAdd(h);
          y = (y = y.redIAdd(y)).redIAdd(y), e2 = b.redISub(l).redISub(l), t2 = p.redMul(l.redISub(e2)).redISub(y), r3 = (r3 = this.y.redMul(this.z)).redIAdd(r3);
        }
        return this.curve.jpoint(e2, t2, r3);
      }, u.prototype._threeDbl = function() {
        var e2, t2, r3;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
          a2 = a2.redIAdd(a2);
          var s3 = n2.redAdd(n2).redIAdd(n2).redIAdd(this.curve.a), f3 = s3.redSqr().redISub(a2).redISub(a2);
          e2 = f3;
          var c2 = o2.redIAdd(o2);
          c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), t2 = s3.redMul(a2.redISub(f3)).redISub(c2), r3 = this.y.redAdd(this.y);
        } else {
          var u2 = this.z.redSqr(), d = this.y.redSqr(), h = this.x.redMul(d), l = this.x.redSub(u2).redMul(this.x.redAdd(u2));
          l = l.redAdd(l).redIAdd(l);
          var p = h.redIAdd(h), b = (p = p.redIAdd(p)).redAdd(p);
          e2 = l.redSqr().redISub(b), r3 = this.y.redAdd(this.z).redSqr().redISub(d).redISub(u2);
          var y = d.redSqr();
          y = (y = (y = y.redIAdd(y)).redIAdd(y)).redIAdd(y), t2 = l.redMul(p.redISub(e2)).redISub(y);
        }
        return this.curve.jpoint(e2, t2, r3);
      }, u.prototype._dbl = function() {
        var e2 = this.curve.a, t2 = this.x, r3 = this.y, n2 = this.z, i2 = n2.redSqr().redSqr(), o2 = t2.redSqr(), a2 = r3.redSqr(), s3 = o2.redAdd(o2).redIAdd(o2).redIAdd(e2.redMul(i2)), f3 = t2.redAdd(t2), c2 = (f3 = f3.redIAdd(f3)).redMul(a2), u2 = s3.redSqr().redISub(c2.redAdd(c2)), d = c2.redISub(u2), h = a2.redSqr();
        h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
        var l = s3.redMul(d).redISub(h), p = r3.redAdd(r3).redMul(n2);
        return this.curve.jpoint(u2, l, p);
      }, u.prototype.trpl = function() {
        if (!this.curve.zeroA)
          return this.dbl().add(this);
        var e2 = this.x.redSqr(), t2 = this.y.redSqr(), r3 = this.z.redSqr(), n2 = t2.redSqr(), i2 = e2.redAdd(e2).redIAdd(e2), o2 = i2.redSqr(), a2 = this.x.redAdd(t2).redSqr().redISub(e2).redISub(n2), s3 = (a2 = (a2 = (a2 = a2.redIAdd(a2)).redAdd(a2).redIAdd(a2)).redISub(o2)).redSqr(), f3 = n2.redIAdd(n2);
        f3 = (f3 = (f3 = f3.redIAdd(f3)).redIAdd(f3)).redIAdd(f3);
        var c2 = i2.redIAdd(a2).redSqr().redISub(o2).redISub(s3).redISub(f3), u2 = t2.redMul(c2);
        u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2);
        var d = this.x.redMul(s3).redISub(u2);
        d = (d = d.redIAdd(d)).redIAdd(d);
        var h = this.y.redMul(c2.redMul(f3.redISub(c2)).redISub(a2.redMul(s3)));
        h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
        var l = this.z.redAdd(a2).redSqr().redISub(r3).redISub(s3);
        return this.curve.jpoint(d, h, l);
      }, u.prototype.mul = function(e2, t2) {
        return e2 = new i(e2, t2), this.curve._wnafMul(this, e2);
      }, u.prototype.eq = function(e2) {
        if ("affine" === e2.type)
          return this.eq(e2.toJ());
        if (this === e2)
          return true;
        var t2 = this.z.redSqr(), r3 = e2.z.redSqr();
        if (0 !== this.x.redMul(r3).redISub(e2.x.redMul(t2)).cmpn(0))
          return false;
        var n2 = t2.redMul(this.z), i2 = r3.redMul(e2.z);
        return 0 === this.y.redMul(i2).redISub(e2.y.redMul(n2)).cmpn(0);
      }, u.prototype.eqXToP = function(e2) {
        var t2 = this.z.redSqr(), r3 = e2.toRed(this.curve.red).redMul(t2);
        if (0 === this.x.cmp(r3))
          return true;
        for (var n2 = e2.clone(), i2 = this.curve.redN.redMul(t2); ; ) {
          if (n2.iadd(this.curve.n), n2.cmp(this.curve.p) >= 0)
            return false;
          if (r3.redIAdd(i2), 0 === this.x.cmp(r3))
            return true;
        }
      }, u.prototype.inspect = function() {
        return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
      }, u.prototype.isInfinity = function() {
        return 0 === this.z.cmpn(0);
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(3), o = r2(71), a = r2(18);
      function s2(e2) {
        o.call(this, "mont", e2), this.a = new n(e2.a, 16).toRed(this.red), this.b = new n(e2.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
      }
      function f2(e2, t2, r3) {
        o.BasePoint.call(this, e2, "projective"), null === t2 && null === r3 ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(t2, 16), this.z = new n(r3, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      i(s2, o), e.exports = s2, s2.prototype.validate = function(e2) {
        var t2 = e2.normalize().x, r3 = t2.redSqr(), n2 = r3.redMul(t2).redAdd(r3.redMul(this.a)).redAdd(t2);
        return 0 === n2.redSqrt().redSqr().cmp(n2);
      }, i(f2, o.BasePoint), s2.prototype.decodePoint = function(e2, t2) {
        return this.point(a.toArray(e2, t2), 1);
      }, s2.prototype.point = function(e2, t2) {
        return new f2(this, e2, t2);
      }, s2.prototype.pointFromJSON = function(e2) {
        return f2.fromJSON(this, e2);
      }, f2.prototype.precompute = function() {
      }, f2.prototype._encode = function() {
        return this.getX().toArray("be", this.curve.p.byteLength());
      }, f2.fromJSON = function(e2, t2) {
        return new f2(e2, t2[0], t2[1] || e2.one);
      }, f2.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, f2.prototype.isInfinity = function() {
        return 0 === this.z.cmpn(0);
      }, f2.prototype.dbl = function() {
        var e2 = this.x.redAdd(this.z).redSqr(), t2 = this.x.redSub(this.z).redSqr(), r3 = e2.redSub(t2), n2 = e2.redMul(t2), i2 = r3.redMul(t2.redAdd(this.curve.a24.redMul(r3)));
        return this.curve.point(n2, i2);
      }, f2.prototype.add = function() {
        throw new Error("Not supported on Montgomery curve");
      }, f2.prototype.diffAdd = function(e2, t2) {
        var r3 = this.x.redAdd(this.z), n2 = this.x.redSub(this.z), i2 = e2.x.redAdd(e2.z), o2 = e2.x.redSub(e2.z).redMul(r3), a2 = i2.redMul(n2), s3 = t2.z.redMul(o2.redAdd(a2).redSqr()), f3 = t2.x.redMul(o2.redISub(a2).redSqr());
        return this.curve.point(s3, f3);
      }, f2.prototype.mul = function(e2) {
        for (var t2 = e2.clone(), r3 = this, n2 = this.curve.point(null, null), i2 = []; 0 !== t2.cmpn(0); t2.iushrn(1))
          i2.push(t2.andln(1));
        for (var o2 = i2.length - 1; o2 >= 0; o2--)
          0 === i2[o2] ? (r3 = r3.diffAdd(n2, this), n2 = n2.dbl()) : (n2 = r3.diffAdd(n2, this), r3 = r3.dbl());
        return n2;
      }, f2.prototype.mulAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, f2.prototype.jumlAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, f2.prototype.eq = function(e2) {
        return 0 === this.getX().cmp(e2.getX());
      }, f2.prototype.normalize = function() {
        return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
      }, f2.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      };
    }, function(e, t, r2) {
      var n = r2(18), i = r2(4), o = r2(3), a = r2(71), s2 = n.assert;
      function f2(e2) {
        this.twisted = 1 != (0 | e2.a), this.mOneA = this.twisted && -1 == (0 | e2.a), this.extended = this.mOneA, a.call(this, "edwards", e2), this.a = new i(e2.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(e2.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(e2.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), s2(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | e2.c);
      }
      function c(e2, t2, r3, n2, o2) {
        a.BasePoint.call(this, e2, "projective"), null === t2 && null === r3 && null === n2 ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new i(t2, 16), this.y = new i(r3, 16), this.z = n2 ? new i(n2, 16) : this.curve.one, this.t = o2 && new i(o2, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      o(f2, a), e.exports = f2, f2.prototype._mulA = function(e2) {
        return this.mOneA ? e2.redNeg() : this.a.redMul(e2);
      }, f2.prototype._mulC = function(e2) {
        return this.oneC ? e2 : this.c.redMul(e2);
      }, f2.prototype.jpoint = function(e2, t2, r3, n2) {
        return this.point(e2, t2, r3, n2);
      }, f2.prototype.pointFromX = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r3 = e2.redSqr(), n2 = this.c2.redSub(this.a.redMul(r3)), o2 = this.one.redSub(this.c2.redMul(this.d).redMul(r3)), a2 = n2.redMul(o2.redInvm()), s3 = a2.redSqrt();
        if (0 !== s3.redSqr().redSub(a2).cmp(this.zero))
          throw new Error("invalid point");
        var f3 = s3.fromRed().isOdd();
        return (t2 && !f3 || !t2 && f3) && (s3 = s3.redNeg()), this.point(e2, s3);
      }, f2.prototype.pointFromY = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r3 = e2.redSqr(), n2 = r3.redSub(this.c2), o2 = r3.redMul(this.d).redMul(this.c2).redSub(this.a), a2 = n2.redMul(o2.redInvm());
        if (0 === a2.cmp(this.zero)) {
          if (t2)
            throw new Error("invalid point");
          return this.point(this.zero, e2);
        }
        var s3 = a2.redSqrt();
        if (0 !== s3.redSqr().redSub(a2).cmp(this.zero))
          throw new Error("invalid point");
        return s3.fromRed().isOdd() !== t2 && (s3 = s3.redNeg()), this.point(s3, e2);
      }, f2.prototype.validate = function(e2) {
        if (e2.isInfinity())
          return true;
        e2.normalize();
        var t2 = e2.x.redSqr(), r3 = e2.y.redSqr(), n2 = t2.redMul(this.a).redAdd(r3), i2 = this.c2.redMul(this.one.redAdd(this.d.redMul(t2).redMul(r3)));
        return 0 === n2.cmp(i2);
      }, o(c, a.BasePoint), f2.prototype.pointFromJSON = function(e2) {
        return c.fromJSON(this, e2);
      }, f2.prototype.point = function(e2, t2, r3, n2) {
        return new c(this, e2, t2, r3, n2);
      }, c.fromJSON = function(e2, t2) {
        return new c(e2, t2[0], t2[1], t2[2]);
      }, c.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, c.prototype.isInfinity = function() {
        return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
      }, c.prototype._extDbl = function() {
        var e2 = this.x.redSqr(), t2 = this.y.redSqr(), r3 = this.z.redSqr();
        r3 = r3.redIAdd(r3);
        var n2 = this.curve._mulA(e2), i2 = this.x.redAdd(this.y).redSqr().redISub(e2).redISub(t2), o2 = n2.redAdd(t2), a2 = o2.redSub(r3), s3 = n2.redSub(t2), f3 = i2.redMul(a2), c2 = o2.redMul(s3), u = i2.redMul(s3), d = a2.redMul(o2);
        return this.curve.point(f3, c2, d, u);
      }, c.prototype._projDbl = function() {
        var e2, t2, r3, n2, i2, o2, a2 = this.x.redAdd(this.y).redSqr(), s3 = this.x.redSqr(), f3 = this.y.redSqr();
        if (this.curve.twisted) {
          var c2 = (n2 = this.curve._mulA(s3)).redAdd(f3);
          this.zOne ? (e2 = a2.redSub(s3).redSub(f3).redMul(c2.redSub(this.curve.two)), t2 = c2.redMul(n2.redSub(f3)), r3 = c2.redSqr().redSub(c2).redSub(c2)) : (i2 = this.z.redSqr(), o2 = c2.redSub(i2).redISub(i2), e2 = a2.redSub(s3).redISub(f3).redMul(o2), t2 = c2.redMul(n2.redSub(f3)), r3 = c2.redMul(o2));
        } else
          n2 = s3.redAdd(f3), i2 = this.curve._mulC(this.z).redSqr(), o2 = n2.redSub(i2).redSub(i2), e2 = this.curve._mulC(a2.redISub(n2)).redMul(o2), t2 = this.curve._mulC(n2).redMul(s3.redISub(f3)), r3 = n2.redMul(o2);
        return this.curve.point(e2, t2, r3);
      }, c.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
      }, c.prototype._extAdd = function(e2) {
        var t2 = this.y.redSub(this.x).redMul(e2.y.redSub(e2.x)), r3 = this.y.redAdd(this.x).redMul(e2.y.redAdd(e2.x)), n2 = this.t.redMul(this.curve.dd).redMul(e2.t), i2 = this.z.redMul(e2.z.redAdd(e2.z)), o2 = r3.redSub(t2), a2 = i2.redSub(n2), s3 = i2.redAdd(n2), f3 = r3.redAdd(t2), c2 = o2.redMul(a2), u = s3.redMul(f3), d = o2.redMul(f3), h = a2.redMul(s3);
        return this.curve.point(c2, u, h, d);
      }, c.prototype._projAdd = function(e2) {
        var t2, r3, n2 = this.z.redMul(e2.z), i2 = n2.redSqr(), o2 = this.x.redMul(e2.x), a2 = this.y.redMul(e2.y), s3 = this.curve.d.redMul(o2).redMul(a2), f3 = i2.redSub(s3), c2 = i2.redAdd(s3), u = this.x.redAdd(this.y).redMul(e2.x.redAdd(e2.y)).redISub(o2).redISub(a2), d = n2.redMul(f3).redMul(u);
        return this.curve.twisted ? (t2 = n2.redMul(c2).redMul(a2.redSub(this.curve._mulA(o2))), r3 = f3.redMul(c2)) : (t2 = n2.redMul(c2).redMul(a2.redSub(o2)), r3 = this.curve._mulC(f3).redMul(c2)), this.curve.point(d, t2, r3);
      }, c.prototype.add = function(e2) {
        return this.isInfinity() ? e2 : e2.isInfinity() ? this : this.curve.extended ? this._extAdd(e2) : this._projAdd(e2);
      }, c.prototype.mul = function(e2) {
        return this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve._wnafMul(this, e2);
      }, c.prototype.mulAdd = function(e2, t2, r3) {
        return this.curve._wnafMulAdd(1, [this, t2], [e2, r3], 2, false);
      }, c.prototype.jmulAdd = function(e2, t2, r3) {
        return this.curve._wnafMulAdd(1, [this, t2], [e2, r3], 2, true);
      }, c.prototype.normalize = function() {
        if (this.zOne)
          return this;
        var e2 = this.z.redInvm();
        return this.x = this.x.redMul(e2), this.y = this.y.redMul(e2), this.t && (this.t = this.t.redMul(e2)), this.z = this.curve.one, this.zOne = true, this;
      }, c.prototype.neg = function() {
        return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
      }, c.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      }, c.prototype.getY = function() {
        return this.normalize(), this.y.fromRed();
      }, c.prototype.eq = function(e2) {
        return this === e2 || 0 === this.getX().cmp(e2.getX()) && 0 === this.getY().cmp(e2.getY());
      }, c.prototype.eqXToP = function(e2) {
        var t2 = e2.toRed(this.curve.red).redMul(this.z);
        if (0 === this.x.cmp(t2))
          return true;
        for (var r3 = e2.clone(), n2 = this.curve.redN.redMul(this.z); ; ) {
          if (r3.iadd(this.curve.n), r3.cmp(this.curve.p) >= 0)
            return false;
          if (t2.redIAdd(n2), 0 === this.x.cmp(t2))
            return true;
        }
      }, c.prototype.toP = c.prototype.normalize, c.prototype.mixedAdd = c.prototype.add;
    }, function(e, t, r2) {
      t.sha1 = r2(277), t.sha224 = r2(278), t.sha256 = r2(140), t.sha384 = r2(279), t.sha512 = r2(141);
    }, function(e, t, r2) {
      var n = r2(25), i = r2(60), o = r2(139), a = n.rotl32, s2 = n.sum32, f2 = n.sum32_5, c = o.ft_1, u = i.BlockHash, d = [1518500249, 1859775393, 2400959708, 3395469782];
      function h() {
        if (!(this instanceof h))
          return new h();
        u.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
      }
      n.inherits(h, u), e.exports = h, h.blockSize = 512, h.outSize = 160, h.hmacStrength = 80, h.padLength = 64, h.prototype._update = function(e2, t2) {
        for (var r3 = this.W, n2 = 0; n2 < 16; n2++)
          r3[n2] = e2[t2 + n2];
        for (; n2 < r3.length; n2++)
          r3[n2] = a(r3[n2 - 3] ^ r3[n2 - 8] ^ r3[n2 - 14] ^ r3[n2 - 16], 1);
        var i2 = this.h[0], o2 = this.h[1], u2 = this.h[2], h2 = this.h[3], l = this.h[4];
        for (n2 = 0; n2 < r3.length; n2++) {
          var p = ~~(n2 / 20), b = f2(a(i2, 5), c(p, o2, u2, h2), l, r3[n2], d[p]);
          l = h2, h2 = u2, u2 = a(o2, 30), o2 = i2, i2 = b;
        }
        this.h[0] = s2(this.h[0], i2), this.h[1] = s2(this.h[1], o2), this.h[2] = s2(this.h[2], u2), this.h[3] = s2(this.h[3], h2), this.h[4] = s2(this.h[4], l);
      }, h.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r2) {
      var n = r2(25), i = r2(140);
      function o() {
        if (!(this instanceof o))
          return new o();
        i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
      }
      n.inherits(o, i), e.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
      };
    }, function(e, t, r2) {
      var n = r2(25), i = r2(141);
      function o() {
        if (!(this instanceof o))
          return new o();
        i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
      }
      n.inherits(o, i), e.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
      };
    }, function(e, t, r2) {
      var n = r2(25), i = r2(60), o = n.rotl32, a = n.sum32, s2 = n.sum32_3, f2 = n.sum32_4, c = i.BlockHash;
      function u() {
        if (!(this instanceof u))
          return new u();
        c.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
      }
      function d(e2, t2, r3, n2) {
        return e2 <= 15 ? t2 ^ r3 ^ n2 : e2 <= 31 ? t2 & r3 | ~t2 & n2 : e2 <= 47 ? (t2 | ~r3) ^ n2 : e2 <= 63 ? t2 & n2 | r3 & ~n2 : t2 ^ (r3 | ~n2);
      }
      function h(e2) {
        return e2 <= 15 ? 0 : e2 <= 31 ? 1518500249 : e2 <= 47 ? 1859775393 : e2 <= 63 ? 2400959708 : 2840853838;
      }
      function l(e2) {
        return e2 <= 15 ? 1352829926 : e2 <= 31 ? 1548603684 : e2 <= 47 ? 1836072691 : e2 <= 63 ? 2053994217 : 0;
      }
      n.inherits(u, c), t.ripemd160 = u, u.blockSize = 512, u.outSize = 160, u.hmacStrength = 192, u.padLength = 64, u.prototype._update = function(e2, t2) {
        for (var r3 = this.h[0], n2 = this.h[1], i2 = this.h[2], c2 = this.h[3], u2 = this.h[4], m = r3, g = n2, w = i2, _ = c2, k = u2, A = 0; A < 80; A++) {
          var S = a(o(f2(r3, d(A, n2, i2, c2), e2[p[A] + t2], h(A)), y[A]), u2);
          r3 = u2, u2 = c2, c2 = o(i2, 10), i2 = n2, n2 = S, S = a(o(f2(m, d(79 - A, g, w, _), e2[b[A] + t2], l(A)), v[A]), k), m = k, k = _, _ = o(w, 10), w = g, g = S;
        }
        S = s2(this.h[1], i2, _), this.h[1] = s2(this.h[2], c2, k), this.h[2] = s2(this.h[3], u2, m), this.h[3] = s2(this.h[4], r3, g), this.h[4] = s2(this.h[0], n2, w), this.h[0] = S;
      }, u.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
      };
      var p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], b = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], y = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], v = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
    }, function(e, t, r2) {
      var n = r2(25), i = r2(19);
      function o(e2, t2, r3) {
        if (!(this instanceof o))
          return new o(e2, t2, r3);
        this.Hash = e2, this.blockSize = e2.blockSize / 8, this.outSize = e2.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(t2, r3));
      }
      e.exports = o, o.prototype._init = function(e2) {
        e2.length > this.blockSize && (e2 = new this.Hash().update(e2).digest()), i(e2.length <= this.blockSize);
        for (var t2 = e2.length; t2 < this.blockSize; t2++)
          e2.push(0);
        for (t2 = 0; t2 < e2.length; t2++)
          e2[t2] ^= 54;
        for (this.inner = new this.Hash().update(e2), t2 = 0; t2 < e2.length; t2++)
          e2[t2] ^= 106;
        this.outer = new this.Hash().update(e2);
      }, o.prototype.update = function(e2, t2) {
        return this.inner.update(e2, t2), this;
      }, o.prototype.digest = function(e2) {
        return this.outer.update(this.inner.digest()), this.outer.digest(e2);
      };
    }, function(e, t, r2) {
      e.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(4), o = r2(284), a = r2(18), s2 = r2(94), f2 = r2(93), c = a.assert, u = r2(285), d = r2(286);
      function h(e2) {
        if (!(this instanceof h))
          return new h(e2);
        "string" == typeof e2 && (c(Object.prototype.hasOwnProperty.call(s2, e2), "Unknown curve " + e2), e2 = s2[e2]), e2 instanceof s2.PresetCurve && (e2 = { curve: e2 }), this.curve = e2.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e2.curve.g, this.g.precompute(e2.curve.n.bitLength() + 1), this.hash = e2.hash || e2.curve.hash;
      }
      e.exports = h, h.prototype.keyPair = function(e2) {
        return new u(this, e2);
      }, h.prototype.keyFromPrivate = function(e2, t2) {
        return u.fromPrivate(this, e2, t2);
      }, h.prototype.keyFromPublic = function(e2, t2) {
        return u.fromPublic(this, e2, t2);
      }, h.prototype.genKeyPair = function(e2) {
        e2 || (e2 = {});
        for (var t2 = new o({ hash: this.hash, pers: e2.pers, persEnc: e2.persEnc || "utf8", entropy: e2.entropy || f2(this.hash.hmacStrength), entropyEnc: e2.entropy && e2.entropyEnc || "utf8", nonce: this.n.toArray() }), r3 = this.n.byteLength(), n2 = this.n.sub(new i(2)); ; ) {
          var a2 = new i(t2.generate(r3));
          if (!(a2.cmp(n2) > 0))
            return a2.iaddn(1), this.keyFromPrivate(a2);
        }
      }, h.prototype._truncateToN = function(e2, t2) {
        var r3 = 8 * e2.byteLength() - this.n.bitLength();
        return r3 > 0 && (e2 = e2.ushrn(r3)), !t2 && e2.cmp(this.n) >= 0 ? e2.sub(this.n) : e2;
      }, h.prototype.sign = function(e2, t2, r3, a2) {
        "object" === (0, n.default)(r3) && (a2 = r3, r3 = null), a2 || (a2 = {}), t2 = this.keyFromPrivate(t2, r3), e2 = this._truncateToN(new i(e2, 16));
        for (var s3 = this.n.byteLength(), f3 = t2.getPrivate().toArray("be", s3), c2 = e2.toArray("be", s3), u2 = new o({ hash: this.hash, entropy: f3, nonce: c2, pers: a2.pers, persEnc: a2.persEnc || "utf8" }), h2 = this.n.sub(new i(1)), l = 0; ; l++) {
          var p = a2.k ? a2.k(l) : new i(u2.generate(this.n.byteLength()));
          if (!((p = this._truncateToN(p, true)).cmpn(1) <= 0 || p.cmp(h2) >= 0)) {
            var b = this.g.mul(p);
            if (!b.isInfinity()) {
              var y = b.getX(), v = y.umod(this.n);
              if (0 !== v.cmpn(0)) {
                var m = p.invm(this.n).mul(v.mul(t2.getPrivate()).iadd(e2));
                if (0 !== (m = m.umod(this.n)).cmpn(0)) {
                  var g = (b.getY().isOdd() ? 1 : 0) | (0 !== y.cmp(v) ? 2 : 0);
                  return a2.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m), g ^= 1), new d({ r: v, s: m, recoveryParam: g });
                }
              }
            }
          }
        }
      }, h.prototype.verify = function(e2, t2, r3, n2) {
        e2 = this._truncateToN(new i(e2, 16)), r3 = this.keyFromPublic(r3, n2);
        var o2 = (t2 = new d(t2, "hex")).r, a2 = t2.s;
        if (o2.cmpn(1) < 0 || o2.cmp(this.n) >= 0)
          return false;
        if (a2.cmpn(1) < 0 || a2.cmp(this.n) >= 0)
          return false;
        var s3, f3 = a2.invm(this.n), c2 = f3.mul(e2).umod(this.n), u2 = f3.mul(o2).umod(this.n);
        return this.curve._maxwellTrick ? !(s3 = this.g.jmulAdd(c2, r3.getPublic(), u2)).isInfinity() && s3.eqXToP(o2) : !(s3 = this.g.mulAdd(c2, r3.getPublic(), u2)).isInfinity() && 0 === s3.getX().umod(this.n).cmp(o2);
      }, h.prototype.recoverPubKey = function(e2, t2, r3, n2) {
        c((3 & r3) === r3, "The recovery param is more than two bits"), t2 = new d(t2, n2);
        var o2 = this.n, a2 = new i(e2), s3 = t2.r, f3 = t2.s, u2 = 1 & r3, h2 = r3 >> 1;
        if (s3.cmp(this.curve.p.umod(this.curve.n)) >= 0 && h2)
          throw new Error("Unable to find sencond key candinate");
        s3 = h2 ? this.curve.pointFromX(s3.add(this.curve.n), u2) : this.curve.pointFromX(s3, u2);
        var l = t2.r.invm(o2), p = o2.sub(a2).mul(l).umod(o2), b = f3.mul(l).umod(o2);
        return this.g.mulAdd(p, s3, b);
      }, h.prototype.getKeyRecoveryParam = function(e2, t2, r3, n2) {
        if (null !== (t2 = new d(t2, n2)).recoveryParam)
          return t2.recoveryParam;
        for (var i2 = 0; i2 < 4; i2++) {
          var o2;
          try {
            o2 = this.recoverPubKey(e2, t2, i2);
          } catch (e3) {
            continue;
          }
          if (o2.eq(r3))
            return i2;
        }
        throw new Error("Unable to find valid recovery factor");
      };
    }, function(e, t, r2) {
      var n = r2(72), i = r2(137), o = r2(19);
      function a(e2) {
        if (!(this instanceof a))
          return new a(e2);
        this.hash = e2.hash, this.predResist = !!e2.predResist, this.outLen = this.hash.outSize, this.minEntropy = e2.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
        var t2 = i.toArray(e2.entropy, e2.entropyEnc || "hex"), r3 = i.toArray(e2.nonce, e2.nonceEnc || "hex"), n2 = i.toArray(e2.pers, e2.persEnc || "hex");
        o(t2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t2, r3, n2);
      }
      e.exports = a, a.prototype._init = function(e2, t2, r3) {
        var n2 = e2.concat(t2).concat(r3);
        this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
        for (var i2 = 0; i2 < this.V.length; i2++)
          this.K[i2] = 0, this.V[i2] = 1;
        this._update(n2), this._reseed = 1, this.reseedInterval = 281474976710656;
      }, a.prototype._hmac = function() {
        return new n.hmac(this.hash, this.K);
      }, a.prototype._update = function(e2) {
        var t2 = this._hmac().update(this.V).update([0]);
        e2 && (t2 = t2.update(e2)), this.K = t2.digest(), this.V = this._hmac().update(this.V).digest(), e2 && (this.K = this._hmac().update(this.V).update([1]).update(e2).digest(), this.V = this._hmac().update(this.V).digest());
      }, a.prototype.reseed = function(e2, t2, r3, n2) {
        "string" != typeof t2 && (n2 = r3, r3 = t2, t2 = null), e2 = i.toArray(e2, t2), r3 = i.toArray(r3, n2), o(e2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e2.concat(r3 || [])), this._reseed = 1;
      }, a.prototype.generate = function(e2, t2, r3, n2) {
        if (this._reseed > this.reseedInterval)
          throw new Error("Reseed is required");
        "string" != typeof t2 && (n2 = r3, r3 = t2, t2 = null), r3 && (r3 = i.toArray(r3, n2 || "hex"), this._update(r3));
        for (var o2 = []; o2.length < e2; )
          this.V = this._hmac().update(this.V).digest(), o2 = o2.concat(this.V);
        var a2 = o2.slice(0, e2);
        return this._update(r3), this._reseed++, i.encode(a2, t2);
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(18).assert;
      function o(e2, t2) {
        this.ec = e2, this.priv = null, this.pub = null, t2.priv && this._importPrivate(t2.priv, t2.privEnc), t2.pub && this._importPublic(t2.pub, t2.pubEnc);
      }
      e.exports = o, o.fromPublic = function(e2, t2, r3) {
        return t2 instanceof o ? t2 : new o(e2, { pub: t2, pubEnc: r3 });
      }, o.fromPrivate = function(e2, t2, r3) {
        return t2 instanceof o ? t2 : new o(e2, { priv: t2, privEnc: r3 });
      }, o.prototype.validate = function() {
        var e2 = this.getPublic();
        return e2.isInfinity() ? { result: false, reason: "Invalid public key" } : e2.validate() ? e2.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
      }, o.prototype.getPublic = function(e2, t2) {
        return "string" == typeof e2 && (t2 = e2, e2 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t2 ? this.pub.encode(t2, e2) : this.pub;
      }, o.prototype.getPrivate = function(e2) {
        return "hex" === e2 ? this.priv.toString(16, 2) : this.priv;
      }, o.prototype._importPrivate = function(e2, t2) {
        this.priv = new n(e2, t2 || 16), this.priv = this.priv.umod(this.ec.curve.n);
      }, o.prototype._importPublic = function(e2, t2) {
        if (e2.x || e2.y)
          return "mont" === this.ec.curve.type ? i(e2.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(e2.x && e2.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(e2.x, e2.y));
        this.pub = this.ec.curve.decodePoint(e2, t2);
      }, o.prototype.derive = function(e2) {
        return e2.validate() || i(e2.validate(), "public point not validated"), e2.mul(this.priv).getX();
      }, o.prototype.sign = function(e2, t2, r3) {
        return this.ec.sign(e2, this, t2, r3);
      }, o.prototype.verify = function(e2, t2) {
        return this.ec.verify(e2, t2, this);
      }, o.prototype.inspect = function() {
        return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(18), o = i.assert;
      function a(e2, t2) {
        if (e2 instanceof a)
          return e2;
        this._importDER(e2, t2) || (o(e2.r && e2.s, "Signature without r or s"), this.r = new n(e2.r, 16), this.s = new n(e2.s, 16), void 0 === e2.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e2.recoveryParam);
      }
      function s2() {
        this.place = 0;
      }
      function f2(e2, t2) {
        var r3 = e2[t2.place++];
        if (!(128 & r3))
          return r3;
        var n2 = 15 & r3;
        if (0 === n2 || n2 > 4)
          return false;
        for (var i2 = 0, o2 = 0, a2 = t2.place; o2 < n2; o2++, a2++)
          i2 <<= 8, i2 |= e2[a2], i2 >>>= 0;
        return !(i2 <= 127) && (t2.place = a2, i2);
      }
      function c(e2) {
        for (var t2 = 0, r3 = e2.length - 1; !e2[t2] && !(128 & e2[t2 + 1]) && t2 < r3; )
          t2++;
        return 0 === t2 ? e2 : e2.slice(t2);
      }
      function u(e2, t2) {
        if (t2 < 128)
          e2.push(t2);
        else {
          var r3 = 1 + (Math.log(t2) / Math.LN2 >>> 3);
          for (e2.push(128 | r3); --r3; )
            e2.push(t2 >>> (r3 << 3) & 255);
          e2.push(t2);
        }
      }
      e.exports = a, a.prototype._importDER = function(e2, t2) {
        e2 = i.toArray(e2, t2);
        var r3 = new s2();
        if (48 !== e2[r3.place++])
          return false;
        var o2 = f2(e2, r3);
        if (false === o2)
          return false;
        if (o2 + r3.place !== e2.length)
          return false;
        if (2 !== e2[r3.place++])
          return false;
        var a2 = f2(e2, r3);
        if (false === a2)
          return false;
        var c2 = e2.slice(r3.place, a2 + r3.place);
        if (r3.place += a2, 2 !== e2[r3.place++])
          return false;
        var u2 = f2(e2, r3);
        if (false === u2)
          return false;
        if (e2.length !== u2 + r3.place)
          return false;
        var d = e2.slice(r3.place, u2 + r3.place);
        if (0 === c2[0]) {
          if (!(128 & c2[1]))
            return false;
          c2 = c2.slice(1);
        }
        if (0 === d[0]) {
          if (!(128 & d[1]))
            return false;
          d = d.slice(1);
        }
        return this.r = new n(c2), this.s = new n(d), this.recoveryParam = null, true;
      }, a.prototype.toDER = function(e2) {
        var t2 = this.r.toArray(), r3 = this.s.toArray();
        for (128 & t2[0] && (t2 = [0].concat(t2)), 128 & r3[0] && (r3 = [0].concat(r3)), t2 = c(t2), r3 = c(r3); !(r3[0] || 128 & r3[1]); )
          r3 = r3.slice(1);
        var n2 = [2];
        u(n2, t2.length), (n2 = n2.concat(t2)).push(2), u(n2, r3.length);
        var o2 = n2.concat(r3), a2 = [48];
        return u(a2, o2.length), a2 = a2.concat(o2), i.encode(a2, e2);
      };
    }, function(e, t, r2) {
      var n = r2(72), i = r2(94), o = r2(18), a = o.assert, s2 = o.parseBytes, f2 = r2(288), c = r2(289);
      function u(e2) {
        if (a("ed25519" === e2, "only tested with ed25519 so far"), !(this instanceof u))
          return new u(e2);
        e2 = i[e2].curve, this.curve = e2, this.g = e2.g, this.g.precompute(e2.n.bitLength() + 1), this.pointClass = e2.point().constructor, this.encodingLength = Math.ceil(e2.n.bitLength() / 8), this.hash = n.sha512;
      }
      e.exports = u, u.prototype.sign = function(e2, t2) {
        e2 = s2(e2);
        var r3 = this.keyFromSecret(t2), n2 = this.hashInt(r3.messagePrefix(), e2), i2 = this.g.mul(n2), o2 = this.encodePoint(i2), a2 = this.hashInt(o2, r3.pubBytes(), e2).mul(r3.priv()), f3 = n2.add(a2).umod(this.curve.n);
        return this.makeSignature({ R: i2, S: f3, Rencoded: o2 });
      }, u.prototype.verify = function(e2, t2, r3) {
        e2 = s2(e2), t2 = this.makeSignature(t2);
        var n2 = this.keyFromPublic(r3), i2 = this.hashInt(t2.Rencoded(), n2.pubBytes(), e2), o2 = this.g.mul(t2.S());
        return t2.R().add(n2.pub().mul(i2)).eq(o2);
      }, u.prototype.hashInt = function() {
        for (var e2 = this.hash(), t2 = 0; t2 < arguments.length; t2++)
          e2.update(arguments[t2]);
        return o.intFromLE(e2.digest()).umod(this.curve.n);
      }, u.prototype.keyFromPublic = function(e2) {
        return f2.fromPublic(this, e2);
      }, u.prototype.keyFromSecret = function(e2) {
        return f2.fromSecret(this, e2);
      }, u.prototype.makeSignature = function(e2) {
        return e2 instanceof c ? e2 : new c(this, e2);
      }, u.prototype.encodePoint = function(e2) {
        var t2 = e2.getY().toArray("le", this.encodingLength);
        return t2[this.encodingLength - 1] |= e2.getX().isOdd() ? 128 : 0, t2;
      }, u.prototype.decodePoint = function(e2) {
        var t2 = (e2 = o.parseBytes(e2)).length - 1, r3 = e2.slice(0, t2).concat(-129 & e2[t2]), n2 = 0 != (128 & e2[t2]), i2 = o.intFromLE(r3);
        return this.curve.pointFromY(i2, n2);
      }, u.prototype.encodeInt = function(e2) {
        return e2.toArray("le", this.encodingLength);
      }, u.prototype.decodeInt = function(e2) {
        return o.intFromLE(e2);
      }, u.prototype.isPoint = function(e2) {
        return e2 instanceof this.pointClass;
      };
    }, function(e, t, r2) {
      var n = r2(18), i = n.assert, o = n.parseBytes, a = n.cachedProperty;
      function s2(e2, t2) {
        this.eddsa = e2, this._secret = o(t2.secret), e2.isPoint(t2.pub) ? this._pub = t2.pub : this._pubBytes = o(t2.pub);
      }
      s2.fromPublic = function(e2, t2) {
        return t2 instanceof s2 ? t2 : new s2(e2, { pub: t2 });
      }, s2.fromSecret = function(e2, t2) {
        return t2 instanceof s2 ? t2 : new s2(e2, { secret: t2 });
      }, s2.prototype.secret = function() {
        return this._secret;
      }, a(s2, "pubBytes", function() {
        return this.eddsa.encodePoint(this.pub());
      }), a(s2, "pub", function() {
        return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
      }), a(s2, "privBytes", function() {
        var e2 = this.eddsa, t2 = this.hash(), r3 = e2.encodingLength - 1, n2 = t2.slice(0, e2.encodingLength);
        return n2[0] &= 248, n2[r3] &= 127, n2[r3] |= 64, n2;
      }), a(s2, "priv", function() {
        return this.eddsa.decodeInt(this.privBytes());
      }), a(s2, "hash", function() {
        return this.eddsa.hash().update(this.secret()).digest();
      }), a(s2, "messagePrefix", function() {
        return this.hash().slice(this.eddsa.encodingLength);
      }), s2.prototype.sign = function(e2) {
        return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(e2, this);
      }, s2.prototype.verify = function(e2, t2) {
        return this.eddsa.verify(e2, t2, this);
      }, s2.prototype.getSecret = function(e2) {
        return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), e2);
      }, s2.prototype.getPublic = function(e2) {
        return n.encode(this.pubBytes(), e2);
      }, e.exports = s2;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(4), o = r2(18), a = o.assert, s2 = o.cachedProperty, f2 = o.parseBytes;
      function c(e2, t2) {
        this.eddsa = e2, "object" !== (0, n.default)(t2) && (t2 = f2(t2)), Array.isArray(t2) && (t2 = { R: t2.slice(0, e2.encodingLength), S: t2.slice(e2.encodingLength) }), a(t2.R && t2.S, "Signature without R or S"), e2.isPoint(t2.R) && (this._R = t2.R), t2.S instanceof i && (this._S = t2.S), this._Rencoded = Array.isArray(t2.R) ? t2.R : t2.Rencoded, this._Sencoded = Array.isArray(t2.S) ? t2.S : t2.Sencoded;
      }
      s2(c, "S", function() {
        return this.eddsa.decodeInt(this.Sencoded());
      }), s2(c, "R", function() {
        return this.eddsa.decodePoint(this.Rencoded());
      }), s2(c, "Rencoded", function() {
        return this.eddsa.encodePoint(this.R());
      }), s2(c, "Sencoded", function() {
        return this.eddsa.encodeInt(this.S());
      }), c.prototype.toBytes = function() {
        return this.Rencoded().concat(this.Sencoded());
      }, c.prototype.toHex = function() {
        return o.encode(this.toBytes(), "hex").toUpperCase();
      }, e.exports = c;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true });
      var n = r2(31);
      t.getRandomBytes = function(e2) {
        return new Promise(function(t2, r3) {
          n(e2, function(e3, n2) {
            e3 ? r3(e3) : t2(n2);
          });
        });
      }, t.getRandomBytesSync = function(e2) {
        return n(e2);
      };
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true });
      var n = r2(292), i = r2(293);
      t.keccak224 = n.createHashFunction(function() {
        return i("keccak224");
      }), t.keccak256 = n.createHashFunction(function() {
        return i("keccak256");
      }), t.keccak384 = n.createHashFunction(function() {
        return i("keccak384");
      }), t.keccak512 = n.createHashFunction(function() {
        return i("keccak512");
      });
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.createHashFunction = function(t2) {
          return function(r3) {
            var n = t2();
            return n.update(r3), e2.from(n.digest());
          };
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      e.exports = r2(294)(r2(304));
    }, function(e, t, r2) {
      var n = r2(295), i = r2(303);
      e.exports = function(e2) {
        var t2 = n(e2), r3 = i(e2);
        return function(e3, n2) {
          switch ("string" == typeof e3 ? e3.toLowerCase() : e3) {
            case "keccak224":
              return new t2(1152, 448, null, 224, n2);
            case "keccak256":
              return new t2(1088, 512, null, 256, n2);
            case "keccak384":
              return new t2(832, 768, null, 384, n2);
            case "keccak512":
              return new t2(576, 1024, null, 512, n2);
            case "sha3-224":
              return new t2(1152, 448, 6, 224, n2);
            case "sha3-256":
              return new t2(1088, 512, 6, 256, n2);
            case "sha3-384":
              return new t2(832, 768, 6, 384, n2);
            case "sha3-512":
              return new t2(576, 1024, 6, 512, n2);
            case "shake128":
              return new r3(1344, 256, 31, n2);
            case "shake256":
              return new r3(1088, 512, 31, n2);
            default:
              throw new Error("Invald algorithm: " + e3);
          }
        };
      };
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13));
        function c(e2) {
          var t3 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (e3) {
              return false;
            }
          }();
          return function() {
            var r3, n2 = (0, f2.default)(e2);
            if (t3) {
              var i2 = (0, f2.default)(this).constructor;
              r3 = Reflect.construct(n2, arguments, i2);
            } else
              r3 = n2.apply(this, arguments);
            return (0, s2.default)(this, r3);
          };
        }
        var u = r2(144).Transform;
        e.exports = function(e2) {
          return function(r3) {
            (0, a.default)(s3, r3);
            var n2 = c(s3);
            function s3(t3, r4, o2, a2, f3) {
              var c2;
              return (0, i.default)(this, s3), (c2 = n2.call(this, f3))._rate = t3, c2._capacity = r4, c2._delimitedSuffix = o2, c2._hashBitLength = a2, c2._options = f3, c2._state = new e2(), c2._state.initialize(t3, r4), c2._finalized = false, c2;
            }
            return (0, o.default)(s3, [{ key: "_transform", value: function(e3, t3, r4) {
              var n3 = null;
              try {
                this.update(e3, t3);
              } catch (e4) {
                n3 = e4;
              }
              r4(n3);
            } }, { key: "_flush", value: function(e3) {
              var t3 = null;
              try {
                this.push(this.digest());
              } catch (e4) {
                t3 = e4;
              }
              e3(t3);
            } }, { key: "update", value: function(e3, r4) {
              if (!t2.isBuffer(e3) && "string" != typeof e3)
                throw new TypeError("Data must be a string or a buffer");
              if (this._finalized)
                throw new Error("Digest already called");
              return t2.isBuffer(e3) || (e3 = t2.from(e3, r4)), this._state.absorb(e3), this;
            } }, { key: "digest", value: function(e3) {
              if (this._finalized)
                throw new Error("Digest already called");
              this._finalized = true, this._delimitedSuffix && this._state.absorbLastFewBits(this._delimitedSuffix);
              var t3 = this._state.squeeze(this._hashBitLength / 8);
              return void 0 !== e3 && (t3 = t3.toString(e3)), this._resetState(), t3;
            } }, { key: "_resetState", value: function() {
              return this._state.initialize(this._rate, this._capacity), this;
            } }, { key: "_clone", value: function() {
              var e3 = new s3(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);
              return this._state.copy(e3._state), e3._finalized = this._finalized, e3;
            } }]), s3;
          }(u);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t) {
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(e2, t2, r3) {
        return t2 in e2 ? Object.defineProperty(e2, t2, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t2] = r3, e2;
      }
      function o(e2, t2) {
        for (var r3 = 0; r3 < t2.length; r3++) {
          var n2 = t2[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
        }
      }
      var a = r2(1).Buffer, s2 = r2(298).inspect, f2 = s2 && s2.custom || "inspect";
      e.exports = function() {
        function e2() {
          !function(e3, t3) {
            if (!(e3 instanceof t3))
              throw new TypeError("Cannot call a class as a function");
          }(this, e2), this.head = null, this.tail = null, this.length = 0;
        }
        var t2, r3;
        return t2 = e2, (r3 = [{ key: "push", value: function(e3) {
          var t3 = { data: e3, next: null };
          this.length > 0 ? this.tail.next = t3 : this.head = t3, this.tail = t3, ++this.length;
        } }, { key: "unshift", value: function(e3) {
          var t3 = { data: e3, next: this.head };
          0 === this.length && (this.tail = t3), this.head = t3, ++this.length;
        } }, { key: "shift", value: function() {
          if (0 !== this.length) {
            var e3 = this.head.data;
            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e3;
          }
        } }, { key: "clear", value: function() {
          this.head = this.tail = null, this.length = 0;
        } }, { key: "join", value: function(e3) {
          if (0 === this.length)
            return "";
          for (var t3 = this.head, r4 = "" + t3.data; t3 = t3.next; )
            r4 += e3 + t3.data;
          return r4;
        } }, { key: "concat", value: function(e3) {
          if (0 === this.length)
            return a.alloc(0);
          for (var t3, r4, n2, i2 = a.allocUnsafe(e3 >>> 0), o2 = this.head, s3 = 0; o2; )
            t3 = o2.data, r4 = i2, n2 = s3, a.prototype.copy.call(t3, r4, n2), s3 += o2.data.length, o2 = o2.next;
          return i2;
        } }, { key: "consume", value: function(e3, t3) {
          var r4;
          return e3 < this.head.data.length ? (r4 = this.head.data.slice(0, e3), this.head.data = this.head.data.slice(e3)) : r4 = e3 === this.head.data.length ? this.shift() : t3 ? this._getString(e3) : this._getBuffer(e3), r4;
        } }, { key: "first", value: function() {
          return this.head.data;
        } }, { key: "_getString", value: function(e3) {
          var t3 = this.head, r4 = 1, n2 = t3.data;
          for (e3 -= n2.length; t3 = t3.next; ) {
            var i2 = t3.data, o2 = e3 > i2.length ? i2.length : e3;
            if (o2 === i2.length ? n2 += i2 : n2 += i2.slice(0, e3), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++r4, t3.next ? this.head = t3.next : this.head = this.tail = null) : (this.head = t3, t3.data = i2.slice(o2));
              break;
            }
            ++r4;
          }
          return this.length -= r4, n2;
        } }, { key: "_getBuffer", value: function(e3) {
          var t3 = a.allocUnsafe(e3), r4 = this.head, n2 = 1;
          for (r4.data.copy(t3), e3 -= r4.data.length; r4 = r4.next; ) {
            var i2 = r4.data, o2 = e3 > i2.length ? i2.length : e3;
            if (i2.copy(t3, t3.length - e3, 0, o2), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++n2, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = i2.slice(o2));
              break;
            }
            ++n2;
          }
          return this.length -= n2, t3;
        } }, { key: f2, value: function(e3, t3) {
          return s2(this, function(e4) {
            for (var t4 = 1; t4 < arguments.length; t4++) {
              var r4 = null != arguments[t4] ? arguments[t4] : {};
              t4 % 2 ? n(Object(r4), true).forEach(function(t5) {
                i(e4, t5, r4[t5]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r4)) : n(Object(r4)).forEach(function(t5) {
                Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r4, t5));
              });
            }
            return e4;
          }({}, t3, { depth: 0, customInspect: false }));
        } }]) && o(t2.prototype, r3), e2;
      }();
    }, function(e, t) {
    }, function(e, t, r2) {
      (function(t2) {
        var n;
        function i(e2, t3, r3) {
          return t3 in e2 ? Object.defineProperty(e2, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t3] = r3, e2;
        }
        var o = r2(96), a = Symbol("lastResolve"), s2 = Symbol("lastReject"), f2 = Symbol("error"), c = Symbol("ended"), u = Symbol("lastPromise"), d = Symbol("handlePromise"), h = Symbol("stream");
        function l(e2, t3) {
          return { value: e2, done: t3 };
        }
        function p(e2) {
          var t3 = e2[a];
          if (null !== t3) {
            var r3 = e2[h].read();
            null !== r3 && (e2[u] = null, e2[a] = null, e2[s2] = null, t3(l(r3, false)));
          }
        }
        function b(e2) {
          t2.nextTick(p, e2);
        }
        var y = Object.getPrototypeOf(function() {
        }), v = Object.setPrototypeOf((i(n = { get stream() {
          return this[h];
        }, next: function() {
          var e2 = this, r3 = this[f2];
          if (null !== r3)
            return Promise.reject(r3);
          if (this[c])
            return Promise.resolve(l(void 0, true));
          if (this[h].destroyed)
            return new Promise(function(r4, n3) {
              t2.nextTick(function() {
                e2[f2] ? n3(e2[f2]) : r4(l(void 0, true));
              });
            });
          var n2, i2 = this[u];
          if (i2)
            n2 = new Promise(function(e3, t3) {
              return function(r4, n3) {
                e3.then(function() {
                  t3[c] ? r4(l(void 0, true)) : t3[d](r4, n3);
                }, n3);
              };
            }(i2, this));
          else {
            var o2 = this[h].read();
            if (null !== o2)
              return Promise.resolve(l(o2, false));
            n2 = new Promise(this[d]);
          }
          return this[u] = n2, n2;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), i(n, "return", function() {
          var e2 = this;
          return new Promise(function(t3, r3) {
            e2[h].destroy(null, function(e3) {
              e3 ? r3(e3) : t3(l(void 0, true));
            });
          });
        }), n), y);
        e.exports = function(e2) {
          var t3, r3 = Object.create(v, (i(t3 = {}, h, { value: e2, writable: true }), i(t3, a, { value: null, writable: true }), i(t3, s2, { value: null, writable: true }), i(t3, f2, { value: null, writable: true }), i(t3, c, { value: e2._readableState.endEmitted, writable: true }), i(t3, d, { value: function(e3, t4) {
            var n2 = r3[h].read();
            n2 ? (r3[u] = null, r3[a] = null, r3[s2] = null, e3(l(n2, false))) : (r3[a] = e3, r3[s2] = t4);
          }, writable: true }), t3));
          return r3[u] = null, o(e2, function(e3) {
            if (e3 && "ERR_STREAM_PREMATURE_CLOSE" !== e3.code) {
              var t4 = r3[s2];
              return null !== t4 && (r3[u] = null, r3[a] = null, r3[s2] = null, t4(e3)), void (r3[f2] = e3);
            }
            var n2 = r3[a];
            null !== n2 && (r3[u] = null, r3[a] = null, r3[s2] = null, n2(l(void 0, true))), r3[c] = true;
          }), e2.on("readable", b.bind(null, r3)), r3;
        };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      e.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }, function(e, t, r2) {
      e.exports = i;
      var n = r2(150);
      function i(e2) {
        if (!(this instanceof i))
          return new i(e2);
        n.call(this, e2);
      }
      r2(3)(i, n), i.prototype._transform = function(e2, t2, r3) {
        r3(null, e2);
      };
    }, function(e, t, r2) {
      var n;
      var i = r2(45).codes, o = i.ERR_MISSING_ARGS, a = i.ERR_STREAM_DESTROYED;
      function s2(e2) {
        if (e2)
          throw e2;
      }
      function f2(e2, t2, i2, o2) {
        o2 = function(e3) {
          var t3 = false;
          return function() {
            t3 || (t3 = true, e3.apply(void 0, arguments));
          };
        }(o2);
        var s3 = false;
        e2.on("close", function() {
          s3 = true;
        }), void 0 === n && (n = r2(96)), n(e2, { readable: t2, writable: i2 }, function(e3) {
          if (e3)
            return o2(e3);
          s3 = true, o2();
        });
        var f3 = false;
        return function(t3) {
          if (!s3 && !f3)
            return f3 = true, function(e3) {
              return e3.setHeader && "function" == typeof e3.abort;
            }(e2) ? e2.abort() : "function" == typeof e2.destroy ? e2.destroy() : void o2(t3 || new a("pipe"));
        };
      }
      function c(e2) {
        e2();
      }
      function u(e2, t2) {
        return e2.pipe(t2);
      }
      function d(e2) {
        return e2.length ? "function" != typeof e2[e2.length - 1] ? s2 : e2.pop() : s2;
      }
      e.exports = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r3 = 0; r3 < e2; r3++)
          t2[r3] = arguments[r3];
        var n2, i2 = d(t2);
        if (Array.isArray(t2[0]) && (t2 = t2[0]), t2.length < 2)
          throw new o("streams");
        var a2 = t2.map(function(e3, r4) {
          var o2 = r4 < t2.length - 1;
          return f2(e3, o2, r4 > 0, function(e4) {
            n2 || (n2 = e4), e4 && a2.forEach(c), o2 || (a2.forEach(c), i2(n2));
          });
        });
        return t2.reduce(u);
      };
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13));
        function c(e2) {
          var t3 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (e3) {
              return false;
            }
          }();
          return function() {
            var r3, n2 = (0, f2.default)(e2);
            if (t3) {
              var i2 = (0, f2.default)(this).constructor;
              r3 = Reflect.construct(n2, arguments, i2);
            } else
              r3 = n2.apply(this, arguments);
            return (0, s2.default)(this, r3);
          };
        }
        var u = r2(144).Transform;
        e.exports = function(e2) {
          return function(r3) {
            (0, a.default)(s3, r3);
            var n2 = c(s3);
            function s3(t3, r4, o2, a2) {
              var f3;
              return (0, i.default)(this, s3), (f3 = n2.call(this, a2))._rate = t3, f3._capacity = r4, f3._delimitedSuffix = o2, f3._options = a2, f3._state = new e2(), f3._state.initialize(t3, r4), f3._finalized = false, f3;
            }
            return (0, o.default)(s3, [{ key: "_transform", value: function(e3, t3, r4) {
              var n3 = null;
              try {
                this.update(e3, t3);
              } catch (e4) {
                n3 = e4;
              }
              r4(n3);
            } }, { key: "_flush", value: function() {
            } }, { key: "_read", value: function(e3) {
              this.push(this.squeeze(e3));
            } }, { key: "update", value: function(e3, r4) {
              if (!t2.isBuffer(e3) && "string" != typeof e3)
                throw new TypeError("Data must be a string or a buffer");
              if (this._finalized)
                throw new Error("Squeeze already called");
              return t2.isBuffer(e3) || (e3 = t2.from(e3, r4)), this._state.absorb(e3), this;
            } }, { key: "squeeze", value: function(e3, t3) {
              this._finalized || (this._finalized = true, this._state.absorbLastFewBits(this._delimitedSuffix));
              var r4 = this._state.squeeze(e3);
              return void 0 !== t3 && (r4 = r4.toString(t3)), r4;
            } }, { key: "_resetState", value: function() {
              return this._state.initialize(this._rate, this._capacity), this;
            } }, { key: "_clone", value: function() {
              var e3 = new s3(this._rate, this._capacity, this._delimitedSuffix, this._options);
              return this._state.copy(e3._state), e3._finalized = this._finalized, e3;
            } }]), s3;
          }(u);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(305);
        function i() {
          this.state = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this.blockSize = null, this.count = 0, this.squeezing = false;
        }
        i.prototype.initialize = function(e2, t3) {
          for (var r3 = 0; r3 < 50; ++r3)
            this.state[r3] = 0;
          this.blockSize = e2 / 8, this.count = 0, this.squeezing = false;
        }, i.prototype.absorb = function(e2) {
          for (var t3 = 0; t3 < e2.length; ++t3)
            this.state[~~(this.count / 4)] ^= e2[t3] << this.count % 4 * 8, this.count += 1, this.count === this.blockSize && (n.p1600(this.state), this.count = 0);
        }, i.prototype.absorbLastFewBits = function(e2) {
          this.state[~~(this.count / 4)] ^= e2 << this.count % 4 * 8, 0 != (128 & e2) && this.count === this.blockSize - 1 && n.p1600(this.state), this.state[~~((this.blockSize - 1) / 4)] ^= 128 << (this.blockSize - 1) % 4 * 8, n.p1600(this.state), this.count = 0, this.squeezing = true;
        }, i.prototype.squeeze = function(e2) {
          this.squeezing || this.absorbLastFewBits(1);
          for (var r3 = t2.alloc(e2), i2 = 0; i2 < e2; ++i2)
            r3[i2] = this.state[~~(this.count / 4)] >>> this.count % 4 * 8 & 255, this.count += 1, this.count === this.blockSize && (n.p1600(this.state), this.count = 0);
          return r3;
        }, i.prototype.copy = function(e2) {
          for (var t3 = 0; t3 < 50; ++t3)
            e2.state[t3] = this.state[t3];
          e2.blockSize = this.blockSize, e2.count = this.count, e2.squeezing = this.squeezing;
        }, e.exports = i;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
      t.p1600 = function(e2) {
        for (var t2 = 0; t2 < 24; ++t2) {
          var r3 = e2[0] ^ e2[10] ^ e2[20] ^ e2[30] ^ e2[40], i = e2[1] ^ e2[11] ^ e2[21] ^ e2[31] ^ e2[41], o = e2[2] ^ e2[12] ^ e2[22] ^ e2[32] ^ e2[42], a = e2[3] ^ e2[13] ^ e2[23] ^ e2[33] ^ e2[43], s2 = e2[4] ^ e2[14] ^ e2[24] ^ e2[34] ^ e2[44], f2 = e2[5] ^ e2[15] ^ e2[25] ^ e2[35] ^ e2[45], c = e2[6] ^ e2[16] ^ e2[26] ^ e2[36] ^ e2[46], u = e2[7] ^ e2[17] ^ e2[27] ^ e2[37] ^ e2[47], d = e2[8] ^ e2[18] ^ e2[28] ^ e2[38] ^ e2[48], h = e2[9] ^ e2[19] ^ e2[29] ^ e2[39] ^ e2[49], l = d ^ (o << 1 | a >>> 31), p = h ^ (a << 1 | o >>> 31), b = e2[0] ^ l, y = e2[1] ^ p, v = e2[10] ^ l, m = e2[11] ^ p, g = e2[20] ^ l, w = e2[21] ^ p, _ = e2[30] ^ l, k = e2[31] ^ p, A = e2[40] ^ l, S = e2[41] ^ p;
          l = r3 ^ (s2 << 1 | f2 >>> 31), p = i ^ (f2 << 1 | s2 >>> 31);
          var E = e2[2] ^ l, x = e2[3] ^ p, P = e2[12] ^ l, O = e2[13] ^ p, T = e2[22] ^ l, B = e2[23] ^ p, M = e2[32] ^ l, R = e2[33] ^ p, I = e2[42] ^ l, C = e2[43] ^ p;
          l = o ^ (c << 1 | u >>> 31), p = a ^ (u << 1 | c >>> 31);
          var U = e2[4] ^ l, j = e2[5] ^ p, N = e2[14] ^ l, L = e2[15] ^ p, D = e2[24] ^ l, F = e2[25] ^ p, q = e2[34] ^ l, z = e2[35] ^ p, H = e2[44] ^ l, K2 = e2[45] ^ p;
          l = s2 ^ (d << 1 | h >>> 31), p = f2 ^ (h << 1 | d >>> 31);
          var G = e2[6] ^ l, W = e2[7] ^ p, V = e2[16] ^ l, J = e2[17] ^ p, Y = e2[26] ^ l, X = e2[27] ^ p, Q = e2[36] ^ l, Z = e2[37] ^ p, $ = e2[46] ^ l, ee = e2[47] ^ p;
          l = c ^ (r3 << 1 | i >>> 31), p = u ^ (i << 1 | r3 >>> 31);
          var te = e2[8] ^ l, re = e2[9] ^ p, ne = e2[18] ^ l, ie = e2[19] ^ p, oe = e2[28] ^ l, ae = e2[29] ^ p, se = e2[38] ^ l, fe = e2[39] ^ p, ce = e2[48] ^ l, ue = e2[49] ^ p, de = b, he = y, le = m << 4 | v >>> 28, pe = v << 4 | m >>> 28, be = g << 3 | w >>> 29, ye = w << 3 | g >>> 29, ve = k << 9 | _ >>> 23, me = _ << 9 | k >>> 23, ge = A << 18 | S >>> 14, we = S << 18 | A >>> 14, _e = E << 1 | x >>> 31, ke = x << 1 | E >>> 31, Ae = O << 12 | P >>> 20, Se = P << 12 | O >>> 20, Ee = T << 10 | B >>> 22, xe = B << 10 | T >>> 22, Pe = R << 13 | M >>> 19, Oe = M << 13 | R >>> 19, Te = I << 2 | C >>> 30, Be = C << 2 | I >>> 30, Me = j << 30 | U >>> 2, Re = U << 30 | j >>> 2, Ie = N << 6 | L >>> 26, Ce = L << 6 | N >>> 26, Ue = F << 11 | D >>> 21, je = D << 11 | F >>> 21, Ne = q << 15 | z >>> 17, Le = z << 15 | q >>> 17, De = K2 << 29 | H >>> 3, Fe = H << 29 | K2 >>> 3, qe = G << 28 | W >>> 4, ze = W << 28 | G >>> 4, He = J << 23 | V >>> 9, Ke = V << 23 | J >>> 9, Ge = Y << 25 | X >>> 7, We = X << 25 | Y >>> 7, Ve = Q << 21 | Z >>> 11, Je = Z << 21 | Q >>> 11, Ye = ee << 24 | $ >>> 8, Xe = $ << 24 | ee >>> 8, Qe = te << 27 | re >>> 5, Ze = re << 27 | te >>> 5, $e = ne << 20 | ie >>> 12, et = ie << 20 | ne >>> 12, tt = ae << 7 | oe >>> 25, rt = oe << 7 | ae >>> 25, nt = se << 8 | fe >>> 24, it = fe << 8 | se >>> 24, ot = ce << 14 | ue >>> 18, at = ue << 14 | ce >>> 18;
          e2[0] = de ^ ~Ae & Ue, e2[1] = he ^ ~Se & je, e2[10] = qe ^ ~$e & be, e2[11] = ze ^ ~et & ye, e2[20] = _e ^ ~Ie & Ge, e2[21] = ke ^ ~Ce & We, e2[30] = Qe ^ ~le & Ee, e2[31] = Ze ^ ~pe & xe, e2[40] = Me ^ ~He & tt, e2[41] = Re ^ ~Ke & rt, e2[2] = Ae ^ ~Ue & Ve, e2[3] = Se ^ ~je & Je, e2[12] = $e ^ ~be & Pe, e2[13] = et ^ ~ye & Oe, e2[22] = Ie ^ ~Ge & nt, e2[23] = Ce ^ ~We & it, e2[32] = le ^ ~Ee & Ne, e2[33] = pe ^ ~xe & Le, e2[42] = He ^ ~tt & ve, e2[43] = Ke ^ ~rt & me, e2[4] = Ue ^ ~Ve & ot, e2[5] = je ^ ~Je & at, e2[14] = be ^ ~Pe & De, e2[15] = ye ^ ~Oe & Fe, e2[24] = Ge ^ ~nt & ge, e2[25] = We ^ ~it & we, e2[34] = Ee ^ ~Ne & Ye, e2[35] = xe ^ ~Le & Xe, e2[44] = tt ^ ~ve & Te, e2[45] = rt ^ ~me & Be, e2[6] = Ve ^ ~ot & de, e2[7] = Je ^ ~at & he, e2[16] = Pe ^ ~De & qe, e2[17] = Oe ^ ~Fe & ze, e2[26] = nt ^ ~ge & _e, e2[27] = it ^ ~we & ke, e2[36] = Ne ^ ~Ye & Qe, e2[37] = Le ^ ~Xe & Ze, e2[46] = ve ^ ~Te & Me, e2[47] = me ^ ~Be & Re, e2[8] = ot ^ ~de & Ae, e2[9] = at ^ ~he & Se, e2[18] = De ^ ~qe & $e, e2[19] = Fe ^ ~ze & et, e2[28] = ge ^ ~_e & Ie, e2[29] = we ^ ~ke & Ce, e2[38] = Ye ^ ~Qe & le, e2[39] = Xe ^ ~Ze & pe, e2[48] = Te ^ ~Me & He, e2[49] = Be ^ ~Re & Ke, e2[0] ^= n[2 * t2], e2[1] ^= n[2 * t2 + 1];
        }
      };
    }, function(e, t, r2) {
      (t = e.exports = r2(152)).Stream = t, t.Readable = t, t.Writable = r2(156), t.Duplex = r2(49), t.Transform = r2(157), t.PassThrough = r2(312), t.finished = r2(98), t.pipeline = r2(313);
    }, function(e, t) {
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(e2, t2, r3) {
        return t2 in e2 ? Object.defineProperty(e2, t2, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t2] = r3, e2;
      }
      function o(e2, t2) {
        for (var r3 = 0; r3 < t2.length; r3++) {
          var n2 = t2[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
        }
      }
      var a = r2(1).Buffer, s2 = r2(309).inspect, f2 = s2 && s2.custom || "inspect";
      e.exports = function() {
        function e2() {
          !function(e3, t3) {
            if (!(e3 instanceof t3))
              throw new TypeError("Cannot call a class as a function");
          }(this, e2), this.head = null, this.tail = null, this.length = 0;
        }
        var t2, r3;
        return t2 = e2, (r3 = [{ key: "push", value: function(e3) {
          var t3 = { data: e3, next: null };
          this.length > 0 ? this.tail.next = t3 : this.head = t3, this.tail = t3, ++this.length;
        } }, { key: "unshift", value: function(e3) {
          var t3 = { data: e3, next: this.head };
          0 === this.length && (this.tail = t3), this.head = t3, ++this.length;
        } }, { key: "shift", value: function() {
          if (0 !== this.length) {
            var e3 = this.head.data;
            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e3;
          }
        } }, { key: "clear", value: function() {
          this.head = this.tail = null, this.length = 0;
        } }, { key: "join", value: function(e3) {
          if (0 === this.length)
            return "";
          for (var t3 = this.head, r4 = "" + t3.data; t3 = t3.next; )
            r4 += e3 + t3.data;
          return r4;
        } }, { key: "concat", value: function(e3) {
          if (0 === this.length)
            return a.alloc(0);
          for (var t3, r4, n2, i2 = a.allocUnsafe(e3 >>> 0), o2 = this.head, s3 = 0; o2; )
            t3 = o2.data, r4 = i2, n2 = s3, a.prototype.copy.call(t3, r4, n2), s3 += o2.data.length, o2 = o2.next;
          return i2;
        } }, { key: "consume", value: function(e3, t3) {
          var r4;
          return e3 < this.head.data.length ? (r4 = this.head.data.slice(0, e3), this.head.data = this.head.data.slice(e3)) : r4 = e3 === this.head.data.length ? this.shift() : t3 ? this._getString(e3) : this._getBuffer(e3), r4;
        } }, { key: "first", value: function() {
          return this.head.data;
        } }, { key: "_getString", value: function(e3) {
          var t3 = this.head, r4 = 1, n2 = t3.data;
          for (e3 -= n2.length; t3 = t3.next; ) {
            var i2 = t3.data, o2 = e3 > i2.length ? i2.length : e3;
            if (o2 === i2.length ? n2 += i2 : n2 += i2.slice(0, e3), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++r4, t3.next ? this.head = t3.next : this.head = this.tail = null) : (this.head = t3, t3.data = i2.slice(o2));
              break;
            }
            ++r4;
          }
          return this.length -= r4, n2;
        } }, { key: "_getBuffer", value: function(e3) {
          var t3 = a.allocUnsafe(e3), r4 = this.head, n2 = 1;
          for (r4.data.copy(t3), e3 -= r4.data.length; r4 = r4.next; ) {
            var i2 = r4.data, o2 = e3 > i2.length ? i2.length : e3;
            if (i2.copy(t3, t3.length - e3, 0, o2), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++n2, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = i2.slice(o2));
              break;
            }
            ++n2;
          }
          return this.length -= n2, t3;
        } }, { key: f2, value: function(e3, t3) {
          return s2(this, function(e4) {
            for (var t4 = 1; t4 < arguments.length; t4++) {
              var r4 = null != arguments[t4] ? arguments[t4] : {};
              t4 % 2 ? n(Object(r4), true).forEach(function(t5) {
                i(e4, t5, r4[t5]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r4)) : n(Object(r4)).forEach(function(t5) {
                Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r4, t5));
              });
            }
            return e4;
          }({}, t3, { depth: 0, customInspect: false }));
        } }]) && o(t2.prototype, r3), e2;
      }();
    }, function(e, t) {
    }, function(e, t, r2) {
      (function(t2) {
        var n;
        function i(e2, t3, r3) {
          return t3 in e2 ? Object.defineProperty(e2, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t3] = r3, e2;
        }
        var o = r2(98), a = Symbol("lastResolve"), s2 = Symbol("lastReject"), f2 = Symbol("error"), c = Symbol("ended"), u = Symbol("lastPromise"), d = Symbol("handlePromise"), h = Symbol("stream");
        function l(e2, t3) {
          return { value: e2, done: t3 };
        }
        function p(e2) {
          var t3 = e2[a];
          if (null !== t3) {
            var r3 = e2[h].read();
            null !== r3 && (e2[u] = null, e2[a] = null, e2[s2] = null, t3(l(r3, false)));
          }
        }
        function b(e2) {
          t2.nextTick(p, e2);
        }
        var y = Object.getPrototypeOf(function() {
        }), v = Object.setPrototypeOf((i(n = { get stream() {
          return this[h];
        }, next: function() {
          var e2 = this, r3 = this[f2];
          if (null !== r3)
            return Promise.reject(r3);
          if (this[c])
            return Promise.resolve(l(void 0, true));
          if (this[h].destroyed)
            return new Promise(function(r4, n3) {
              t2.nextTick(function() {
                e2[f2] ? n3(e2[f2]) : r4(l(void 0, true));
              });
            });
          var n2, i2 = this[u];
          if (i2)
            n2 = new Promise(function(e3, t3) {
              return function(r4, n3) {
                e3.then(function() {
                  t3[c] ? r4(l(void 0, true)) : t3[d](r4, n3);
                }, n3);
              };
            }(i2, this));
          else {
            var o2 = this[h].read();
            if (null !== o2)
              return Promise.resolve(l(o2, false));
            n2 = new Promise(this[d]);
          }
          return this[u] = n2, n2;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), i(n, "return", function() {
          var e2 = this;
          return new Promise(function(t3, r3) {
            e2[h].destroy(null, function(e3) {
              e3 ? r3(e3) : t3(l(void 0, true));
            });
          });
        }), n), y);
        e.exports = function(e2) {
          var t3, r3 = Object.create(v, (i(t3 = {}, h, { value: e2, writable: true }), i(t3, a, { value: null, writable: true }), i(t3, s2, { value: null, writable: true }), i(t3, f2, { value: null, writable: true }), i(t3, c, { value: e2._readableState.endEmitted, writable: true }), i(t3, d, { value: function(e3, t4) {
            var n2 = r3[h].read();
            n2 ? (r3[u] = null, r3[a] = null, r3[s2] = null, e3(l(n2, false))) : (r3[a] = e3, r3[s2] = t4);
          }, writable: true }), t3));
          return r3[u] = null, o(e2, function(e3) {
            if (e3 && "ERR_STREAM_PREMATURE_CLOSE" !== e3.code) {
              var t4 = r3[s2];
              return null !== t4 && (r3[u] = null, r3[a] = null, r3[s2] = null, t4(e3)), void (r3[f2] = e3);
            }
            var n2 = r3[a];
            null !== n2 && (r3[u] = null, r3[a] = null, r3[s2] = null, n2(l(void 0, true))), r3[c] = true;
          }), e2.on("readable", b.bind(null, r3)), r3;
        };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      e.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }, function(e, t, r2) {
      e.exports = i;
      var n = r2(157);
      function i(e2) {
        if (!(this instanceof i))
          return new i(e2);
        n.call(this, e2);
      }
      r2(3)(i, n), i.prototype._transform = function(e2, t2, r3) {
        r3(null, e2);
      };
    }, function(e, t, r2) {
      var n;
      var i = r2(48).codes, o = i.ERR_MISSING_ARGS, a = i.ERR_STREAM_DESTROYED;
      function s2(e2) {
        if (e2)
          throw e2;
      }
      function f2(e2, t2, i2, o2) {
        o2 = function(e3) {
          var t3 = false;
          return function() {
            t3 || (t3 = true, e3.apply(void 0, arguments));
          };
        }(o2);
        var s3 = false;
        e2.on("close", function() {
          s3 = true;
        }), void 0 === n && (n = r2(98)), n(e2, { readable: t2, writable: i2 }, function(e3) {
          if (e3)
            return o2(e3);
          s3 = true, o2();
        });
        var f3 = false;
        return function(t3) {
          if (!s3 && !f3)
            return f3 = true, function(e3) {
              return e3.setHeader && "function" == typeof e3.abort;
            }(e2) ? e2.abort() : "function" == typeof e2.destroy ? e2.destroy() : void o2(t3 || new a("pipe"));
        };
      }
      function c(e2) {
        e2();
      }
      function u(e2, t2) {
        return e2.pipe(t2);
      }
      function d(e2) {
        return e2.length ? "function" != typeof e2[e2.length - 1] ? s2 : e2.pop() : s2;
      }
      e.exports = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r3 = 0; r3 < e2; r3++)
          t2[r3] = arguments[r3];
        var n2, i2 = d(t2);
        if (Array.isArray(t2[0]) && (t2 = t2[0]), t2.length < 2)
          throw new o("streams");
        var a2 = t2.map(function(e3, r4) {
          var o2 = r4 < t2.length - 1;
          return f2(e3, o2, r4 > 0, function(e4) {
            n2 || (n2 = e4), e4 && a2.forEach(c), o2 || (a2.forEach(c), i2(n2));
          });
        });
        return t2.reduce(u);
      };
    }, function(e, t, r2) {
      var n = r2(3), i = r2(50), o = r2(5).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s2 = new Array(80);
      function f2() {
        this.init(), this._w = s2, i.call(this, 64, 56);
      }
      function c(e2) {
        return e2 << 30 | e2 >>> 2;
      }
      function u(e2, t2, r3, n2) {
        return 0 === e2 ? t2 & r3 | ~t2 & n2 : 2 === e2 ? t2 & r3 | t2 & n2 | r3 & n2 : t2 ^ r3 ^ n2;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      }, f2.prototype._update = function(e2) {
        for (var t2, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s3 = 0 | this._d, f3 = 0 | this._e, d = 0; d < 16; ++d)
          r3[d] = e2.readInt32BE(4 * d);
        for (; d < 80; ++d)
          r3[d] = r3[d - 3] ^ r3[d - 8] ^ r3[d - 14] ^ r3[d - 16];
        for (var h = 0; h < 80; ++h) {
          var l = ~~(h / 20), p = 0 | ((t2 = n2) << 5 | t2 >>> 27) + u(l, i2, o2, s3) + f3 + r3[h] + a[l];
          f3 = s3, s3 = o2, o2 = c(i2), i2 = n2, n2 = p;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s3 + this._d | 0, this._e = f3 + this._e | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(20);
        return e2.writeInt32BE(0 | this._a, 0), e2.writeInt32BE(0 | this._b, 4), e2.writeInt32BE(0 | this._c, 8), e2.writeInt32BE(0 | this._d, 12), e2.writeInt32BE(0 | this._e, 16), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(3), i = r2(50), o = r2(5).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s2 = new Array(80);
      function f2() {
        this.init(), this._w = s2, i.call(this, 64, 56);
      }
      function c(e2) {
        return e2 << 5 | e2 >>> 27;
      }
      function u(e2) {
        return e2 << 30 | e2 >>> 2;
      }
      function d(e2, t2, r3, n2) {
        return 0 === e2 ? t2 & r3 | ~t2 & n2 : 2 === e2 ? t2 & r3 | t2 & n2 | r3 & n2 : t2 ^ r3 ^ n2;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      }, f2.prototype._update = function(e2) {
        for (var t2, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s3 = 0 | this._d, f3 = 0 | this._e, h = 0; h < 16; ++h)
          r3[h] = e2.readInt32BE(4 * h);
        for (; h < 80; ++h)
          r3[h] = (t2 = r3[h - 3] ^ r3[h - 8] ^ r3[h - 14] ^ r3[h - 16]) << 1 | t2 >>> 31;
        for (var l = 0; l < 80; ++l) {
          var p = ~~(l / 20), b = c(n2) + d(p, i2, o2, s3) + f3 + r3[l] + a[p] | 0;
          f3 = s3, s3 = o2, o2 = u(i2), i2 = n2, n2 = b;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s3 + this._d | 0, this._e = f3 + this._e | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(20);
        return e2.writeInt32BE(0 | this._a, 0), e2.writeInt32BE(0 | this._b, 4), e2.writeInt32BE(0 | this._c, 8), e2.writeInt32BE(0 | this._d, 12), e2.writeInt32BE(0 | this._e, 16), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(3), i = r2(158), o = r2(50), a = r2(5).Buffer, s2 = new Array(64);
      function f2() {
        this.init(), this._w = s2, o.call(this, 64, 56);
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
      }, f2.prototype._hash = function() {
        var e2 = a.allocUnsafe(28);
        return e2.writeInt32BE(this._a, 0), e2.writeInt32BE(this._b, 4), e2.writeInt32BE(this._c, 8), e2.writeInt32BE(this._d, 12), e2.writeInt32BE(this._e, 16), e2.writeInt32BE(this._f, 20), e2.writeInt32BE(this._g, 24), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(3), i = r2(159), o = r2(50), a = r2(5).Buffer, s2 = new Array(160);
      function f2() {
        this.init(), this._w = s2, o.call(this, 128, 112);
      }
      n(f2, i), f2.prototype.init = function() {
        return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
      }, f2.prototype._hash = function() {
        var e2 = a.allocUnsafe(48);
        function t2(t3, r3, n2) {
          e2.writeInt32BE(t3, n2), e2.writeInt32BE(r3, n2 + 4);
        }
        return t2(this._ah, this._al, 0), t2(this._bh, this._bl, 8), t2(this._ch, this._cl, 16), t2(this._dh, this._dl, 24), t2(this._eh, this._el, 32), t2(this._fh, this._fl, 40), e2;
      }, e.exports = f2;
    }, function(e, t) {
    }, function(e, t, r2) {
      var n = r2(101).Buffer, i = r2(320);
      e.exports = function() {
        function e2() {
          !function(e3, t2) {
            if (!(e3 instanceof t2))
              throw new TypeError("Cannot call a class as a function");
          }(this, e2), this.head = null, this.tail = null, this.length = 0;
        }
        return e2.prototype.push = function(e3) {
          var t2 = { data: e3, next: null };
          this.length > 0 ? this.tail.next = t2 : this.head = t2, this.tail = t2, ++this.length;
        }, e2.prototype.unshift = function(e3) {
          var t2 = { data: e3, next: this.head };
          0 === this.length && (this.tail = t2), this.head = t2, ++this.length;
        }, e2.prototype.shift = function() {
          if (0 !== this.length) {
            var e3 = this.head.data;
            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e3;
          }
        }, e2.prototype.clear = function() {
          this.head = this.tail = null, this.length = 0;
        }, e2.prototype.join = function(e3) {
          if (0 === this.length)
            return "";
          for (var t2 = this.head, r3 = "" + t2.data; t2 = t2.next; )
            r3 += e3 + t2.data;
          return r3;
        }, e2.prototype.concat = function(e3) {
          if (0 === this.length)
            return n.alloc(0);
          if (1 === this.length)
            return this.head.data;
          for (var t2, r3, i2, o = n.allocUnsafe(e3 >>> 0), a = this.head, s2 = 0; a; )
            t2 = a.data, r3 = o, i2 = s2, t2.copy(r3, i2), s2 += a.data.length, a = a.next;
          return o;
        }, e2;
      }(), i && i.inspect && i.inspect.custom && (e.exports.prototype[i.inspect.custom] = function() {
        var e2 = i.inspect({ length: this.length });
        return this.constructor.name + " " + e2;
      });
    }, function(e, t) {
    }, function(e, t, r2) {
      (function(e2, t2) {
        !function(e3, r3) {
          if (!e3.setImmediate) {
            var n, i, o, a, s2, f2 = 1, c = {}, u = false, d = e3.document, h = Object.getPrototypeOf && Object.getPrototypeOf(e3);
            h = h && h.setTimeout ? h : e3, "[object process]" === {}.toString.call(e3.process) ? n = function(e4) {
              t2.nextTick(function() {
                p(e4);
              });
            } : !function() {
              if (e3.postMessage && !e3.importScripts) {
                var t3 = true, r4 = e3.onmessage;
                return e3.onmessage = function() {
                  t3 = false;
                }, e3.postMessage("", "*"), e3.onmessage = r4, t3;
              }
            }() ? e3.MessageChannel ? ((o = new MessageChannel()).port1.onmessage = function(e4) {
              p(e4.data);
            }, n = function(e4) {
              o.port2.postMessage(e4);
            }) : d && "onreadystatechange" in d.createElement("script") ? (i = d.documentElement, n = function(e4) {
              var t3 = d.createElement("script");
              t3.onreadystatechange = function() {
                p(e4), t3.onreadystatechange = null, i.removeChild(t3), t3 = null;
              }, i.appendChild(t3);
            }) : n = function(e4) {
              setTimeout(p, 0, e4);
            } : (a = "setImmediate$" + Math.random() + "$", s2 = function(t3) {
              t3.source === e3 && "string" == typeof t3.data && 0 === t3.data.indexOf(a) && p(+t3.data.slice(a.length));
            }, e3.addEventListener ? e3.addEventListener("message", s2, false) : e3.attachEvent("onmessage", s2), n = function(t3) {
              e3.postMessage(a + t3, "*");
            }), h.setImmediate = function(e4) {
              "function" != typeof e4 && (e4 = new Function("" + e4));
              for (var t3 = new Array(arguments.length - 1), r4 = 0; r4 < t3.length; r4++)
                t3[r4] = arguments[r4 + 1];
              var i2 = { callback: e4, args: t3 };
              return c[f2] = i2, n(f2), f2++;
            }, h.clearImmediate = l;
          }
          function l(e4) {
            delete c[e4];
          }
          function p(e4) {
            if (u)
              setTimeout(p, 0, e4);
            else {
              var t3 = c[e4];
              if (t3) {
                u = true;
                try {
                  !function(e5) {
                    var t4 = e5.callback, r4 = e5.args;
                    switch (r4.length) {
                      case 0:
                        t4();
                        break;
                      case 1:
                        t4(r4[0]);
                        break;
                      case 2:
                        t4(r4[0], r4[1]);
                        break;
                      case 3:
                        t4(r4[0], r4[1], r4[2]);
                        break;
                      default:
                        t4.apply(void 0, r4);
                    }
                  }(t3);
                } finally {
                  l(e4), u = false;
                }
              }
            }
          }
        }("undefined" == typeof self ? void 0 === e2 ? void 0 : e2 : self);
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      e.exports = o;
      var n = r2(165), i = Object.create(r2(62));
      function o(e2) {
        if (!(this instanceof o))
          return new o(e2);
        n.call(this, e2);
      }
      i.inherits = r2(3), i.inherits(o, n), o.prototype._transform = function(e2, t2, r3) {
        r3(null, e2);
      };
    }, function(e, t, r2) {
      e.exports = r2(102);
    }, function(e, t, r2) {
      e.exports = r2(37);
    }, function(e, t, r2) {
      e.exports = r2(61).Transform;
    }, function(e, t, r2) {
      e.exports = r2(61).PassThrough;
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.Address = void 0;
        var i = n(r2(43)), o = r2(28), a = r2(36), s2 = r2(134), f2 = function() {
          function t2(e3) {
            (0, i.default)(20 === e3.length, "Invalid address length"), this.buf = e3;
          }
          return t2.zero = function() {
            return new t2((0, a.zeros)(20));
          }, t2.fromString = function(e3) {
            return (0, i.default)((0, s2.isValidAddress)(e3), "Invalid address"), new t2((0, a.toBuffer)(e3));
          }, t2.fromPublicKey = function(r3) {
            return (0, i.default)(e2.isBuffer(r3), "Public key should be Buffer"), new t2((0, s2.pubToAddress)(r3));
          }, t2.fromPrivateKey = function(r3) {
            return (0, i.default)(e2.isBuffer(r3), "Private key should be Buffer"), new t2((0, s2.privateToAddress)(r3));
          }, t2.generate = function(r3, n2) {
            return (0, i.default)(o.BN.isBN(n2)), new t2((0, s2.generateAddress)(r3.buf, n2.toArrayLike(e2)));
          }, t2.generate2 = function(r3, n2, o2) {
            return (0, i.default)(e2.isBuffer(n2)), (0, i.default)(e2.isBuffer(o2)), new t2((0, s2.generateAddress2)(r3.buf, n2, o2));
          }, t2.prototype.equals = function(e3) {
            return this.buf.equals(e3.buf);
          }, t2.prototype.isZero = function() {
            return this.equals(t2.zero());
          }, t2.prototype.isPrecompileOrSystemAddress = function() {
            var e3 = new o.BN(this.buf), t3 = new o.BN(0), r3 = new o.BN("ffff", "hex");
            return e3.gte(t3) && e3.lte(r3);
          }, t2.prototype.toString = function() {
            return "0x" + this.buf.toString("hex");
          }, t2.prototype.toBuffer = function() {
            return e2.from(this.buf);
          }, t2;
        }();
        t.Address = f2;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.hashPersonalMessage = t.isValidSignature = t.fromRpcSig = t.toCompactSig = t.toRpcSig = t.ecrecover = t.ecsign = void 0;
        var n = r2(135), i = r2(28), o = r2(36), a = r2(95), s2 = r2(73), f2 = r2(103);
        function c(e3, t2) {
          var r3 = (0, f2.toType)(e3, f2.TypeOutput.BN);
          if (r3.eqn(0) || r3.eqn(1))
            return (0, f2.toType)(e3, f2.TypeOutput.BN);
          if (!t2)
            return r3.subn(27);
          var n2 = (0, f2.toType)(t2, f2.TypeOutput.BN);
          return r3.sub(n2.muln(2).addn(35));
        }
        function u(e3) {
          var t2 = new i.BN(e3);
          return t2.eqn(0) || t2.eqn(1);
        }
        t.ecsign = function(t2, r3, i2) {
          var o2 = (0, n.ecdsaSign)(t2, r3), a2 = o2.signature, s3 = o2.recid, c2 = e2.from(a2.slice(0, 32)), u2 = e2.from(a2.slice(32, 64));
          if (!i2 || "number" == typeof i2) {
            if (i2 && !Number.isSafeInteger(i2))
              throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
            return { r: c2, s: u2, v: i2 ? s3 + (2 * i2 + 35) : s3 + 27 };
          }
          return { r: c2, s: u2, v: (0, f2.toType)(i2, f2.TypeOutput.BN).muln(2).addn(35).addn(s3).toArrayLike(e2) };
        };
        t.ecrecover = function(t2, r3, i2, a2, s3) {
          var f3 = e2.concat([(0, o.setLengthLeft)(i2, 32), (0, o.setLengthLeft)(a2, 32)], 64), d = c(r3, s3);
          if (!u(d))
            throw new Error("Invalid signature v value");
          var h = (0, n.ecdsaRecover)(f3, d.toNumber(), t2);
          return e2.from((0, n.publicKeyConvert)(h, false).slice(1));
        };
        t.toRpcSig = function(t2, r3, n2, i2) {
          if (!u(c(t2, i2)))
            throw new Error("Invalid signature v value");
          return (0, o.bufferToHex)(e2.concat([(0, o.setLengthLeft)(r3, 32), (0, o.setLengthLeft)(n2, 32), (0, o.toBuffer)(t2)]));
        };
        t.toCompactSig = function(t2, r3, n2, i2) {
          if (!u(c(t2, i2)))
            throw new Error("Invalid signature v value");
          var a2 = (0, f2.toType)(t2, f2.TypeOutput.Number), s3 = n2;
          return (a2 > 28 && a2 % 2 == 1 || 1 === a2 || 28 === a2) && ((s3 = e2.from(n2))[0] |= 128), (0, o.bufferToHex)(e2.concat([(0, o.setLengthLeft)(r3, 32), (0, o.setLengthLeft)(s3, 32)]));
        };
        t.fromRpcSig = function(e3) {
          var t2, r3, n2, i2 = (0, o.toBuffer)(e3);
          if (i2.length >= 65)
            t2 = i2.slice(0, 32), r3 = i2.slice(32, 64), n2 = (0, o.bufferToInt)(i2.slice(64));
          else {
            if (64 !== i2.length)
              throw new Error("Invalid signature length");
            t2 = i2.slice(0, 32), r3 = i2.slice(32, 64), n2 = (0, o.bufferToInt)(i2.slice(32, 33)) >> 7, r3[0] &= 127;
          }
          return n2 < 27 && (n2 += 27), { v: n2, r: t2, s: r3 };
        };
        t.isValidSignature = function(e3, t2, r3, n2, o2) {
          void 0 === n2 && (n2 = true);
          var a2 = new i.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16), s3 = new i.BN("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", 16);
          if (32 !== t2.length || 32 !== r3.length)
            return false;
          if (!u(c(e3, o2)))
            return false;
          var f3 = new i.BN(t2), d = new i.BN(r3);
          return !(f3.isZero() || f3.gt(s3) || d.isZero() || d.gt(s3)) && (!n2 || 1 !== d.cmp(a2));
        };
        t.hashPersonalMessage = function(t2) {
          (0, s2.assertIsBuffer)(t2);
          var r3 = e2.from("Ethereum Signed Message:\n".concat(t2.length), "utf-8");
          return (0, a.keccak)(e2.concat([r3, t2]));
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(0)(r2(2)), i = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.defineProperties = void 0;
        var o = i(r2(43)), a = r2(44), s2 = r2(28), f2 = r2(36);
        t.defineProperties = function(t2, r3, i2) {
          if (t2.raw = [], t2._fields = [], t2.toJSON = function(e3) {
            if (void 0 === e3 && (e3 = false), e3) {
              var r4 = {};
              return t2._fields.forEach(function(e4) {
                r4[e4] = "0x".concat(t2[e4].toString("hex"));
              }), r4;
            }
            return (0, f2.baToJSON)(t2.raw);
          }, t2.serialize = function() {
            return s2.rlp.encode(t2.raw);
          }, r3.forEach(function(r4, n2) {
            function i3() {
              return t2.raw[n2];
            }
            function a2(i4) {
              "00" !== (i4 = (0, f2.toBuffer)(i4)).toString("hex") || r4.allowZero || (i4 = e2.allocUnsafe(0)), r4.allowLess && r4.length ? (i4 = (0, f2.unpadBuffer)(i4), (0, o.default)(r4.length >= i4.length, "The field ".concat(r4.name, " must not have more ").concat(r4.length, " bytes"))) : r4.allowZero && 0 === i4.length || !r4.length || (0, o.default)(r4.length === i4.length, "The field ".concat(r4.name, " must have byte length of ").concat(r4.length)), t2.raw[n2] = i4;
            }
            t2._fields.push(r4.name), Object.defineProperty(t2, r4.name, { enumerable: true, configurable: true, get: i3, set: a2 }), r4.default && (t2[r4.name] = r4.default), r4.alias && Object.defineProperty(t2, r4.alias, { enumerable: false, configurable: true, set: a2, get: i3 });
          }), i2)
            if ("string" == typeof i2 && (i2 = e2.from((0, a.stripHexPrefix)(i2), "hex")), e2.isBuffer(i2) && (i2 = s2.rlp.decode(i2)), Array.isArray(i2)) {
              if (i2.length > t2._fields.length)
                throw new Error("wrong number of fields in data");
              i2.forEach(function(e3, r4) {
                t2[t2._fields[r4]] = (0, f2.toBuffer)(e3);
              });
            } else {
              if ("object" !== (0, n.default)(i2))
                throw new Error("invalid data");
              var c = Object.keys(i2);
              r3.forEach(function(e3) {
                -1 !== c.indexOf(e3.name) && (t2[e3.name] = i2[e3.name]), -1 !== c.indexOf(e3.alias) && (t2[e3.alias] = i2[e3.alias]);
              });
            }
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      Object.defineProperty(t, "__esModule", { value: true });
      var i = r2(331);
      function o(e2) {
        return "string" == typeof e2 && (!!/^(0x)?[0-9a-f]{512}$/i.test(e2) && !(!/^(0x)?[0-9a-f]{512}$/.test(e2) && !/^(0x)?[0-9A-F]{512}$/.test(e2)));
      }
      function a(e2, t2) {
        "object" === (0, n.default)(t2) && t2.constructor === Uint8Array && (t2 = i.bytesToHex(t2));
        for (var r3 = i.keccak256(t2).replace("0x", ""), o2 = 0; o2 < 12; o2 += 4) {
          var a2 = (parseInt(r3.substr(o2, 2), 16) << 8) + parseInt(r3.substr(o2 + 2, 2), 16) & 2047, f3 = 1 << a2 % 4;
          if ((s2(e2.charCodeAt(e2.length - 1 - Math.floor(a2 / 4))) & f3) !== f3)
            return false;
        }
        return true;
      }
      function s2(e2) {
        if (e2 >= 48 && e2 <= 57)
          return e2 - 48;
        if (e2 >= 65 && e2 <= 70)
          return e2 - 55;
        if (e2 >= 97 && e2 <= 102)
          return e2 - 87;
        throw new Error("invalid bloom");
      }
      function f2(e2) {
        return "string" == typeof e2 && (!!/^(0x)?[0-9a-f]{64}$/i.test(e2) && !(!/^(0x)?[0-9a-f]{64}$/.test(e2) && !/^(0x)?[0-9A-F]{64}$/.test(e2)));
      }
      function c(e2) {
        return "string" == typeof e2 && (!!e2.match(/^(0x)?[0-9a-fA-F]{40}$/) || !!e2.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/));
      }
      t.isBloom = o, t.isInBloom = a, t.isUserEthereumAddressInBloom = function(e2, t2) {
        if (!o(e2))
          throw new Error("Invalid bloom given");
        if (!c(t2))
          throw new Error('Invalid ethereum address given: "'.concat(t2, '"'));
        return a(e2, i.padLeft(t2, 64));
      }, t.isContractAddressInBloom = function(e2, t2) {
        if (!o(e2))
          throw new Error("Invalid bloom given");
        if (!c(t2))
          throw new Error('Invalid contract address given: "'.concat(t2, '"'));
        return a(e2, t2);
      }, t.isTopicInBloom = function(e2, t2) {
        if (!o(e2))
          throw new Error("Invalid bloom given");
        if (!f2(t2))
          throw new Error("Invalid topic");
        return a(e2, t2);
      }, t.isTopic = f2, t.isAddress = c;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true });
      var n = r2(332);
      function i(e2) {
        if (null == e2)
          throw new Error("cannot convert null value to array");
        if ("string" == typeof e2) {
          var t2 = e2.match(/^(0x)?[0-9a-fA-F]*$/);
          if (!t2)
            throw new Error("invalid hexidecimal string");
          if ("0x" !== t2[1])
            throw new Error("hex string must have 0x prefix");
          (e2 = e2.substring(2)).length % 2 && (e2 = "0" + e2);
          for (var r3 = [], n2 = 0; n2 < e2.length; n2 += 2)
            r3.push(parseInt(e2.substr(n2, 2), 16));
          return o(new Uint8Array(r3));
        }
        if (function(e3) {
          if (!e3 || parseInt(String(e3.length)) != e3.length || "string" == typeof e3)
            return false;
          for (var t3 = 0; t3 < e3.length; t3++) {
            var r4 = e3[t3];
            if (r4 < 0 || r4 >= 256 || parseInt(String(r4)) != r4)
              return false;
          }
          return true;
        }(e2))
          return o(new Uint8Array(e2));
        throw new Error("invalid arrayify value");
      }
      function o(e2) {
        var t2 = arguments;
        return void 0 !== e2.slice || (e2.slice = function() {
          var r3 = Array.prototype.slice.call(t2);
          return o(new Uint8Array(Array.prototype.slice.apply(e2, r3)));
        }), e2;
      }
      t.keccak256 = function(e2) {
        return "0x" + n.keccak_256(i(e2));
      }, t.padLeft = function(e2, t2) {
        var r3 = /^0x/i.test(e2) || "number" == typeof e2, n2 = t2 - (e2 = e2.toString().replace(/^0x/i, "")).length + 1 >= 0 ? t2 - e2.length + 1 : 0;
        return (r3 ? "0x" : "") + new Array(n2).join("0") + e2;
      }, t.bytesToHex = function(e2) {
        for (var t2 = [], r3 = 0; r3 < e2.length; r3++)
          t2.push((e2[r3] >>> 4).toString(16)), t2.push((15 & e2[r3]).toString(16));
        return "0x".concat(t2.join("").replace(/^0+/, ""));
      }, t.toByteArray = i;
    }, function(e, t, r2) {
      (function(e2, n, i) {
        var o, a = r2(0)(r2(2));
        /**
         * [js-sha3]{@link https://github.com/emn178/js-sha3}
         *
         * @version 0.8.0
         * @author Chen, Yi-Cyuan [emn178@gmail.com]
         * @copyright Chen, Yi-Cyuan 2015-2018
         * @license MIT
         */
        !function() {
          var s2 = "input is invalid type", f2 = "object" === ("undefined" == typeof window ? "undefined" : (0, a.default)(window)), c = f2 ? window : {};
          c.JS_SHA3_NO_WINDOW && (f2 = false);
          var u = !f2 && "object" === ("undefined" == typeof self ? "undefined" : (0, a.default)(self));
          !c.JS_SHA3_NO_NODE_JS && "object" === (void 0 === e2 ? "undefined" : (0, a.default)(e2)) && e2.versions && e2.versions.node ? c = n : u && (c = self);
          var d = !c.JS_SHA3_NO_COMMON_JS && "object" === (0, a.default)(i) && i.exports, h = r2(76), l = !c.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer, p = "0123456789abcdef".split(""), b = [4, 1024, 262144, 67108864], y = [0, 8, 16, 24], v = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], m = [224, 256, 384, 512], g = [128, 256], w = ["hex", "buffer", "arrayBuffer", "array", "digest"], _ = { 128: 168, 256: 136 };
          !c.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function(e3) {
            return "[object Array]" === Object.prototype.toString.call(e3);
          }), !l || !c.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(e3) {
            return "object" === (0, a.default)(e3) && e3.buffer && e3.buffer.constructor === ArrayBuffer;
          });
          for (var k = function(e3, t2, r3) {
            return function(n2) {
              return new N(e3, t2, e3).update(n2)[r3]();
            };
          }, A = function(e3, t2, r3) {
            return function(n2, i2) {
              return new N(e3, t2, i2).update(n2)[r3]();
            };
          }, S = function(e3, t2, r3) {
            return function(t3, n2, i2, o2) {
              return T["cshake" + e3].update(t3, n2, i2, o2)[r3]();
            };
          }, E = function(e3, t2, r3) {
            return function(t3, n2, i2, o2) {
              return T["kmac" + e3].update(t3, n2, i2, o2)[r3]();
            };
          }, x = function(e3, t2, r3, n2) {
            for (var i2 = 0; i2 < w.length; ++i2) {
              var o2 = w[i2];
              e3[o2] = t2(r3, n2, o2);
            }
            return e3;
          }, P = function(e3, t2) {
            var r3 = k(e3, t2, "hex");
            return r3.create = function() {
              return new N(e3, t2, e3);
            }, r3.update = function(e4) {
              return r3.create().update(e4);
            }, x(r3, k, e3, t2);
          }, O = [{ name: "keccak", padding: [1, 256, 65536, 16777216], bits: m, createMethod: P }, { name: "sha3", padding: [6, 1536, 393216, 100663296], bits: m, createMethod: P }, { name: "shake", padding: [31, 7936, 2031616, 520093696], bits: g, createMethod: function(e3, t2) {
            var r3 = A(e3, t2, "hex");
            return r3.create = function(r4) {
              return new N(e3, t2, r4);
            }, r3.update = function(e4, t3) {
              return r3.create(t3).update(e4);
            }, x(r3, A, e3, t2);
          } }, { name: "cshake", padding: b, bits: g, createMethod: function(e3, t2) {
            var r3 = _[e3], n2 = S(e3, 0, "hex");
            return n2.create = function(n3, i2, o2) {
              return i2 || o2 ? new N(e3, t2, n3).bytepad([i2, o2], r3) : T["shake" + e3].create(n3);
            }, n2.update = function(e4, t3, r4, i2) {
              return n2.create(t3, r4, i2).update(e4);
            }, x(n2, S, e3, t2);
          } }, { name: "kmac", padding: b, bits: g, createMethod: function(e3, t2) {
            var r3 = _[e3], n2 = E(e3, 0, "hex");
            return n2.create = function(n3, i2, o2) {
              return new L(e3, t2, i2).bytepad(["KMAC", o2], r3).bytepad([n3], r3);
            }, n2.update = function(e4, t3, r4, i2) {
              return n2.create(e4, r4, i2).update(t3);
            }, x(n2, E, e3, t2);
          } }], T = {}, B = [], M = 0; M < O.length; ++M)
            for (var R = O[M], I = R.bits, C = 0; C < I.length; ++C) {
              var U = R.name + "_" + I[C];
              if (B.push(U), T[U] = R.createMethod(I[C], R.padding), "sha3" !== R.name) {
                var j = R.name + I[C];
                B.push(j), T[j] = T[U];
              }
            }
          function N(e3, t2, r3) {
            this.blocks = [], this.s = [], this.padding = t2, this.outputBits = r3, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (e3 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r3 >> 5, this.extraBytes = (31 & r3) >> 3;
            for (var n2 = 0; n2 < 50; ++n2)
              this.s[n2] = 0;
          }
          function L(e3, t2, r3) {
            N.call(this, e3, t2, r3);
          }
          N.prototype.update = function(e3) {
            if (this.finalized)
              throw new Error("finalize already called");
            var t2, r3 = (0, a.default)(e3);
            if ("string" !== r3) {
              if ("object" !== r3)
                throw new Error(s2);
              if (null === e3)
                throw new Error(s2);
              if (l && e3.constructor === ArrayBuffer)
                e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || l && ArrayBuffer.isView(e3)))
                throw new Error(s2);
              t2 = true;
            }
            for (var n2, i2, o2 = this.blocks, f3 = this.byteCount, c2 = e3.length, u2 = this.blockCount, d2 = 0, h2 = this.s; d2 < c2; ) {
              if (this.reset)
                for (this.reset = false, o2[0] = this.block, n2 = 1; n2 < u2 + 1; ++n2)
                  o2[n2] = 0;
              if (t2)
                for (n2 = this.start; d2 < c2 && n2 < f3; ++d2)
                  o2[n2 >> 2] |= e3[d2] << y[3 & n2++];
              else
                for (n2 = this.start; d2 < c2 && n2 < f3; ++d2)
                  (i2 = e3.charCodeAt(d2)) < 128 ? o2[n2 >> 2] |= i2 << y[3 & n2++] : i2 < 2048 ? (o2[n2 >> 2] |= (192 | i2 >> 6) << y[3 & n2++], o2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]) : i2 < 55296 || i2 >= 57344 ? (o2[n2 >> 2] |= (224 | i2 >> 12) << y[3 & n2++], o2[n2 >> 2] |= (128 | i2 >> 6 & 63) << y[3 & n2++], o2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]) : (i2 = 65536 + ((1023 & i2) << 10 | 1023 & e3.charCodeAt(++d2)), o2[n2 >> 2] |= (240 | i2 >> 18) << y[3 & n2++], o2[n2 >> 2] |= (128 | i2 >> 12 & 63) << y[3 & n2++], o2[n2 >> 2] |= (128 | i2 >> 6 & 63) << y[3 & n2++], o2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]);
              if (this.lastByteIndex = n2, n2 >= f3) {
                for (this.start = n2 - f3, this.block = o2[u2], n2 = 0; n2 < u2; ++n2)
                  h2[n2] ^= o2[n2];
                D(h2), this.reset = true;
              } else
                this.start = n2;
            }
            return this;
          }, N.prototype.encode = function(e3, t2) {
            var r3 = 255 & e3, n2 = 1, i2 = [r3];
            for (r3 = 255 & (e3 >>= 8); r3 > 0; )
              i2.unshift(r3), r3 = 255 & (e3 >>= 8), ++n2;
            return t2 ? i2.push(n2) : i2.unshift(n2), this.update(i2), i2.length;
          }, N.prototype.encodeString = function(e3) {
            var t2, r3 = (0, a.default)(e3);
            if ("string" !== r3) {
              if ("object" !== r3)
                throw new Error(s2);
              if (null === e3)
                throw new Error(s2);
              if (l && e3.constructor === ArrayBuffer)
                e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || l && ArrayBuffer.isView(e3)))
                throw new Error(s2);
              t2 = true;
            }
            var n2 = 0, i2 = e3.length;
            if (t2)
              n2 = i2;
            else
              for (var o2 = 0; o2 < e3.length; ++o2) {
                var f3 = e3.charCodeAt(o2);
                f3 < 128 ? n2 += 1 : f3 < 2048 ? n2 += 2 : f3 < 55296 || f3 >= 57344 ? n2 += 3 : (f3 = 65536 + ((1023 & f3) << 10 | 1023 & e3.charCodeAt(++o2)), n2 += 4);
              }
            return n2 += this.encode(8 * n2), this.update(e3), n2;
          }, N.prototype.bytepad = function(e3, t2) {
            for (var r3 = this.encode(t2), n2 = 0; n2 < e3.length; ++n2)
              r3 += this.encodeString(e3[n2]);
            var i2 = t2 - r3 % t2, o2 = [];
            return o2.length = i2, this.update(o2), this;
          }, N.prototype.finalize = function() {
            if (!this.finalized) {
              this.finalized = true;
              var e3 = this.blocks, t2 = this.lastByteIndex, r3 = this.blockCount, n2 = this.s;
              if (e3[t2 >> 2] |= this.padding[3 & t2], this.lastByteIndex === this.byteCount)
                for (e3[0] = e3[r3], t2 = 1; t2 < r3 + 1; ++t2)
                  e3[t2] = 0;
              for (e3[r3 - 1] |= 2147483648, t2 = 0; t2 < r3; ++t2)
                n2[t2] ^= e3[t2];
              D(n2);
            }
          }, N.prototype.toString = N.prototype.hex = function() {
            this.finalize();
            for (var e3, t2 = this.blockCount, r3 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, o2 = 0, a2 = 0, s3 = ""; a2 < n2; ) {
              for (o2 = 0; o2 < t2 && a2 < n2; ++o2, ++a2)
                e3 = r3[o2], s3 += p[e3 >> 4 & 15] + p[15 & e3] + p[e3 >> 12 & 15] + p[e3 >> 8 & 15] + p[e3 >> 20 & 15] + p[e3 >> 16 & 15] + p[e3 >> 28 & 15] + p[e3 >> 24 & 15];
              a2 % t2 == 0 && (D(r3), o2 = 0);
            }
            return i2 && (e3 = r3[o2], s3 += p[e3 >> 4 & 15] + p[15 & e3], i2 > 1 && (s3 += p[e3 >> 12 & 15] + p[e3 >> 8 & 15]), i2 > 2 && (s3 += p[e3 >> 20 & 15] + p[e3 >> 16 & 15])), s3;
          }, N.prototype.arrayBuffer = function() {
            this.finalize();
            var e3, t2 = this.blockCount, r3 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, o2 = 0, a2 = 0, s3 = this.outputBits >> 3;
            e3 = i2 ? new ArrayBuffer(n2 + 1 << 2) : new ArrayBuffer(s3);
            for (var f3 = new Uint32Array(e3); a2 < n2; ) {
              for (o2 = 0; o2 < t2 && a2 < n2; ++o2, ++a2)
                f3[a2] = r3[o2];
              a2 % t2 == 0 && D(r3);
            }
            return i2 && (f3[o2] = r3[o2], e3 = e3.slice(0, s3)), e3;
          }, N.prototype.buffer = N.prototype.arrayBuffer, N.prototype.digest = N.prototype.array = function() {
            this.finalize();
            for (var e3, t2, r3 = this.blockCount, n2 = this.s, i2 = this.outputBlocks, o2 = this.extraBytes, a2 = 0, s3 = 0, f3 = []; s3 < i2; ) {
              for (a2 = 0; a2 < r3 && s3 < i2; ++a2, ++s3)
                e3 = s3 << 2, t2 = n2[a2], f3[e3] = 255 & t2, f3[e3 + 1] = t2 >> 8 & 255, f3[e3 + 2] = t2 >> 16 & 255, f3[e3 + 3] = t2 >> 24 & 255;
              s3 % r3 == 0 && D(n2);
            }
            return o2 && (e3 = s3 << 2, t2 = n2[a2], f3[e3] = 255 & t2, o2 > 1 && (f3[e3 + 1] = t2 >> 8 & 255), o2 > 2 && (f3[e3 + 2] = t2 >> 16 & 255)), f3;
          }, L.prototype = new N(), L.prototype.finalize = function() {
            return this.encode(this.outputBits, true), N.prototype.finalize.call(this);
          };
          var D = function(e3) {
            var t2, r3, n2, i2, o2, a2, s3, f3, c2, u2, d2, h2, l2, p2, b2, y2, m2, g2, w2, _2, k2, A2, S2, E2, x2, P2, O2, T2, B2, M2, R2, I2, C2, U2, j2, N2, L2, D2, F, q, z, H, K2, G, W, V, J, Y, X, Q, Z, $, ee, te, re, ne, ie, oe, ae, se, fe, ce, ue;
            for (n2 = 0; n2 < 48; n2 += 2)
              i2 = e3[0] ^ e3[10] ^ e3[20] ^ e3[30] ^ e3[40], o2 = e3[1] ^ e3[11] ^ e3[21] ^ e3[31] ^ e3[41], a2 = e3[2] ^ e3[12] ^ e3[22] ^ e3[32] ^ e3[42], s3 = e3[3] ^ e3[13] ^ e3[23] ^ e3[33] ^ e3[43], f3 = e3[4] ^ e3[14] ^ e3[24] ^ e3[34] ^ e3[44], c2 = e3[5] ^ e3[15] ^ e3[25] ^ e3[35] ^ e3[45], u2 = e3[6] ^ e3[16] ^ e3[26] ^ e3[36] ^ e3[46], d2 = e3[7] ^ e3[17] ^ e3[27] ^ e3[37] ^ e3[47], t2 = (h2 = e3[8] ^ e3[18] ^ e3[28] ^ e3[38] ^ e3[48]) ^ (a2 << 1 | s3 >>> 31), r3 = (l2 = e3[9] ^ e3[19] ^ e3[29] ^ e3[39] ^ e3[49]) ^ (s3 << 1 | a2 >>> 31), e3[0] ^= t2, e3[1] ^= r3, e3[10] ^= t2, e3[11] ^= r3, e3[20] ^= t2, e3[21] ^= r3, e3[30] ^= t2, e3[31] ^= r3, e3[40] ^= t2, e3[41] ^= r3, t2 = i2 ^ (f3 << 1 | c2 >>> 31), r3 = o2 ^ (c2 << 1 | f3 >>> 31), e3[2] ^= t2, e3[3] ^= r3, e3[12] ^= t2, e3[13] ^= r3, e3[22] ^= t2, e3[23] ^= r3, e3[32] ^= t2, e3[33] ^= r3, e3[42] ^= t2, e3[43] ^= r3, t2 = a2 ^ (u2 << 1 | d2 >>> 31), r3 = s3 ^ (d2 << 1 | u2 >>> 31), e3[4] ^= t2, e3[5] ^= r3, e3[14] ^= t2, e3[15] ^= r3, e3[24] ^= t2, e3[25] ^= r3, e3[34] ^= t2, e3[35] ^= r3, e3[44] ^= t2, e3[45] ^= r3, t2 = f3 ^ (h2 << 1 | l2 >>> 31), r3 = c2 ^ (l2 << 1 | h2 >>> 31), e3[6] ^= t2, e3[7] ^= r3, e3[16] ^= t2, e3[17] ^= r3, e3[26] ^= t2, e3[27] ^= r3, e3[36] ^= t2, e3[37] ^= r3, e3[46] ^= t2, e3[47] ^= r3, t2 = u2 ^ (i2 << 1 | o2 >>> 31), r3 = d2 ^ (o2 << 1 | i2 >>> 31), e3[8] ^= t2, e3[9] ^= r3, e3[18] ^= t2, e3[19] ^= r3, e3[28] ^= t2, e3[29] ^= r3, e3[38] ^= t2, e3[39] ^= r3, e3[48] ^= t2, e3[49] ^= r3, p2 = e3[0], b2 = e3[1], V = e3[11] << 4 | e3[10] >>> 28, J = e3[10] << 4 | e3[11] >>> 28, T2 = e3[20] << 3 | e3[21] >>> 29, B2 = e3[21] << 3 | e3[20] >>> 29, se = e3[31] << 9 | e3[30] >>> 23, fe = e3[30] << 9 | e3[31] >>> 23, H = e3[40] << 18 | e3[41] >>> 14, K2 = e3[41] << 18 | e3[40] >>> 14, U2 = e3[2] << 1 | e3[3] >>> 31, j2 = e3[3] << 1 | e3[2] >>> 31, y2 = e3[13] << 12 | e3[12] >>> 20, m2 = e3[12] << 12 | e3[13] >>> 20, Y = e3[22] << 10 | e3[23] >>> 22, X = e3[23] << 10 | e3[22] >>> 22, M2 = e3[33] << 13 | e3[32] >>> 19, R2 = e3[32] << 13 | e3[33] >>> 19, ce = e3[42] << 2 | e3[43] >>> 30, ue = e3[43] << 2 | e3[42] >>> 30, te = e3[5] << 30 | e3[4] >>> 2, re = e3[4] << 30 | e3[5] >>> 2, N2 = e3[14] << 6 | e3[15] >>> 26, L2 = e3[15] << 6 | e3[14] >>> 26, g2 = e3[25] << 11 | e3[24] >>> 21, w2 = e3[24] << 11 | e3[25] >>> 21, Q = e3[34] << 15 | e3[35] >>> 17, Z = e3[35] << 15 | e3[34] >>> 17, I2 = e3[45] << 29 | e3[44] >>> 3, C2 = e3[44] << 29 | e3[45] >>> 3, E2 = e3[6] << 28 | e3[7] >>> 4, x2 = e3[7] << 28 | e3[6] >>> 4, ne = e3[17] << 23 | e3[16] >>> 9, ie = e3[16] << 23 | e3[17] >>> 9, D2 = e3[26] << 25 | e3[27] >>> 7, F = e3[27] << 25 | e3[26] >>> 7, _2 = e3[36] << 21 | e3[37] >>> 11, k2 = e3[37] << 21 | e3[36] >>> 11, $ = e3[47] << 24 | e3[46] >>> 8, ee = e3[46] << 24 | e3[47] >>> 8, G = e3[8] << 27 | e3[9] >>> 5, W = e3[9] << 27 | e3[8] >>> 5, P2 = e3[18] << 20 | e3[19] >>> 12, O2 = e3[19] << 20 | e3[18] >>> 12, oe = e3[29] << 7 | e3[28] >>> 25, ae = e3[28] << 7 | e3[29] >>> 25, q = e3[38] << 8 | e3[39] >>> 24, z = e3[39] << 8 | e3[38] >>> 24, A2 = e3[48] << 14 | e3[49] >>> 18, S2 = e3[49] << 14 | e3[48] >>> 18, e3[0] = p2 ^ ~y2 & g2, e3[1] = b2 ^ ~m2 & w2, e3[10] = E2 ^ ~P2 & T2, e3[11] = x2 ^ ~O2 & B2, e3[20] = U2 ^ ~N2 & D2, e3[21] = j2 ^ ~L2 & F, e3[30] = G ^ ~V & Y, e3[31] = W ^ ~J & X, e3[40] = te ^ ~ne & oe, e3[41] = re ^ ~ie & ae, e3[2] = y2 ^ ~g2 & _2, e3[3] = m2 ^ ~w2 & k2, e3[12] = P2 ^ ~T2 & M2, e3[13] = O2 ^ ~B2 & R2, e3[22] = N2 ^ ~D2 & q, e3[23] = L2 ^ ~F & z, e3[32] = V ^ ~Y & Q, e3[33] = J ^ ~X & Z, e3[42] = ne ^ ~oe & se, e3[43] = ie ^ ~ae & fe, e3[4] = g2 ^ ~_2 & A2, e3[5] = w2 ^ ~k2 & S2, e3[14] = T2 ^ ~M2 & I2, e3[15] = B2 ^ ~R2 & C2, e3[24] = D2 ^ ~q & H, e3[25] = F ^ ~z & K2, e3[34] = Y ^ ~Q & $, e3[35] = X ^ ~Z & ee, e3[44] = oe ^ ~se & ce, e3[45] = ae ^ ~fe & ue, e3[6] = _2 ^ ~A2 & p2, e3[7] = k2 ^ ~S2 & b2, e3[16] = M2 ^ ~I2 & E2, e3[17] = R2 ^ ~C2 & x2, e3[26] = q ^ ~H & U2, e3[27] = z ^ ~K2 & j2, e3[36] = Q ^ ~$ & G, e3[37] = Z ^ ~ee & W, e3[46] = se ^ ~ce & te, e3[47] = fe ^ ~ue & re, e3[8] = A2 ^ ~p2 & y2, e3[9] = S2 ^ ~b2 & m2, e3[18] = I2 ^ ~E2 & P2, e3[19] = C2 ^ ~x2 & O2, e3[28] = H ^ ~U2 & N2, e3[29] = K2 ^ ~j2 & L2, e3[38] = $ ^ ~G & V, e3[39] = ee ^ ~W & J, e3[48] = ce ^ ~te & ne, e3[49] = ue ^ ~re & ie, e3[0] ^= v[n2], e3[1] ^= v[n2 + 1];
          };
          if (d)
            i.exports = T;
          else {
            for (M = 0; M < B.length; ++M)
              c[B[M]] = T[B[M]];
            h && (void 0 === (o = function() {
              return T;
            }.call(t, r2, t, i)) || (i.exports = o));
          }
        }();
      }).call(this, r2(6), r2(7), r2(35)(e));
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(4), o = r2(129), a = function(e2) {
        var t2 = (0, n.default)(e2);
        if ("string" === t2)
          return o.isHexStrict(e2) ? new i(e2.replace(/0x/i, ""), 16) : new i(e2, 10);
        if ("number" === t2)
          return new i(e2);
        if (o.isBigNumber(e2))
          return new i(e2.toString(10));
        if (o.isBN(e2))
          return e2;
        throw new Error(e2 + " is not a number");
      }, s2 = function(e2, t2, r3) {
        var n2, s3;
        if ("bytes" === (e2 = function(e3) {
          return e3.startsWith("int[") ? "int256" + e3.slice(3) : "int" === e3 ? "int256" : e3.startsWith("uint[") ? "uint256" + e3.slice(4) : "uint" === e3 ? "uint256" : e3.startsWith("fixed[") ? "fixed128x128" + e3.slice(5) : "fixed" === e3 ? "fixed128x128" : e3.startsWith("ufixed[") ? "ufixed128x128" + e3.slice(6) : "ufixed" === e3 ? "ufixed128x128" : e3;
        }(e2))) {
          if (t2.replace(/^0x/i, "").length % 2 != 0)
            throw new Error("Invalid bytes characters " + t2.length);
          return t2;
        }
        if ("string" === e2)
          return o.utf8ToHex(t2);
        if ("bool" === e2)
          return t2 ? "01" : "00";
        if (e2.startsWith("address")) {
          if (n2 = r3 ? 64 : 40, !o.isAddress(t2))
            throw new Error(t2 + " is not a valid address, or the checksum is invalid.");
          return o.leftPad(t2.toLowerCase(), n2);
        }
        if (n2 = function(e3) {
          var t3 = /^\D+(\d+).*$/.exec(e3);
          return t3 ? parseInt(t3[1], 10) : null;
        }(e2), e2.startsWith("bytes")) {
          if (!n2)
            throw new Error("bytes[] not yet supported in solidity");
          if (r3 && (n2 = 32), n2 < 1 || n2 > 32 || n2 < t2.replace(/^0x/i, "").length / 2)
            throw new Error("Invalid bytes" + n2 + " for " + t2);
          return o.rightPad(t2, 2 * n2);
        }
        if (e2.startsWith("uint")) {
          if (n2 % 8 || n2 < 8 || n2 > 256)
            throw new Error("Invalid uint" + n2 + " size");
          if ((s3 = a(t2)).bitLength() > n2)
            throw new Error("Supplied uint exceeds width: " + n2 + " vs " + s3.bitLength());
          if (s3.lt(new i(0)))
            throw new Error("Supplied uint " + s3.toString() + " is negative");
          return n2 ? o.leftPad(s3.toString("hex"), n2 / 8 * 2) : s3;
        }
        if (e2.startsWith("int")) {
          if (n2 % 8 || n2 < 8 || n2 > 256)
            throw new Error("Invalid int" + n2 + " size");
          if ((s3 = a(t2)).bitLength() > n2)
            throw new Error("Supplied int exceeds width: " + n2 + " vs " + s3.bitLength());
          return s3.lt(new i(0)) ? s3.toTwos(n2).toString("hex") : n2 ? o.leftPad(s3.toString("hex"), n2 / 8 * 2) : s3;
        }
        throw new Error("Unsupported or invalid type: " + e2);
      }, f2 = function(e2) {
        if (Array.isArray(e2))
          throw new Error("Autodetection of array types is not supported.");
        var t2, r3, a2 = "";
        if (e2 && "object" === (0, n.default)(e2) && (e2.hasOwnProperty("v") || e2.hasOwnProperty("t") || e2.hasOwnProperty("value") || e2.hasOwnProperty("type")) ? (t2 = e2.hasOwnProperty("t") ? e2.t : e2.type, a2 = e2.hasOwnProperty("v") ? e2.v : e2.value) : (t2 = o.toHex(e2, true), a2 = o.toHex(e2), t2.startsWith("int") || t2.startsWith("uint") || (t2 = "bytes")), !t2.startsWith("int") && !t2.startsWith("uint") || "string" != typeof a2 || /^(-)?0x/i.test(a2) || (a2 = new i(a2)), Array.isArray(a2)) {
          if ((r3 = function(e3) {
            var t3 = /^\D+\d*\[(\d+)\]$/.exec(e3);
            return t3 ? parseInt(t3[1], 10) : null;
          }(t2)) && a2.length !== r3)
            throw new Error(t2 + " is not matching the given array " + JSON.stringify(a2));
          r3 = a2.length;
        }
        return Array.isArray(a2) ? a2.map(function(e3) {
          return s2(t2, e3, r3).toString("hex").replace("0x", "");
        }).join("") : s2(t2, a2, r3).toString("hex").replace("0x", "");
      };
      e.exports = { soliditySha3: function() {
        var e2 = Array.prototype.slice.call(arguments), t2 = e2.map(f2);
        return o.sha3("0x" + t2.join(""));
      }, soliditySha3Raw: function() {
        return o.sha3Raw("0x" + Array.prototype.slice.call(arguments).map(f2).join(""));
      }, encodePacked: function() {
        var e2 = Array.prototype.slice.call(arguments), t2 = e2.map(f2);
        return "0x" + t2.join("").toLowerCase();
      } };
    }, function(e, t, r2) {
      var n = r2(167), i = r2(12).errors, o = function(e2) {
        this.requestManager = e2, this.requests = [];
      };
      o.prototype.add = function(e2) {
        this.requests.push(e2);
      }, o.prototype.execute = function() {
        var e2 = this.requests, t2 = this._sortResponses.bind(this);
        this.requestManager.sendBatch(e2, function(r3, o2) {
          o2 = t2(o2), e2.map(function(e3, t3) {
            return o2[t3] || {};
          }).forEach(function(t3, r4) {
            if (e2[r4].callback) {
              if (t3 && t3.error)
                return e2[r4].callback(i.ErrorResponse(t3));
              if (!n.isValidResponse(t3))
                return e2[r4].callback(i.InvalidResponse(t3));
              try {
                e2[r4].callback(null, e2[r4].format ? e2[r4].format(t3.result) : t3.result);
              } catch (t4) {
                e2[r4].callback(t4);
              }
            }
          });
        });
      }, o.prototype._sortResponses = function(e2) {
        return (e2 || []).sort(function(e3, t2) {
          return e3.id - t2.id;
        });
      }, e.exports = o;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = null, o = "object" === ("undefined" == typeof globalThis ? "undefined" : (0, n.default)(globalThis)) ? globalThis : void 0;
      if (!o)
        try {
          o = Function("return this")();
        } catch (e2) {
          o = self;
        }
      void 0 !== o.ethereum ? i = o.ethereum : void 0 !== o.web3 && o.web3.currentProvider && (o.web3.currentProvider.sendAsync && (o.web3.currentProvider.send = o.web3.currentProvider.sendAsync, delete o.web3.currentProvider.sendAsync), !o.web3.currentProvider.on && o.web3.currentProvider.connection && "ipcProviderWrapper" === o.web3.currentProvider.connection.constructor.name && (o.web3.currentProvider.on = function(e2, t2) {
        if ("function" != typeof t2)
          throw new Error("The second parameter callback must be a function.");
        switch (e2) {
          case "data":
            this.connection.on("data", function(e3) {
              var r3 = "";
              e3 = e3.toString();
              try {
                r3 = JSON.parse(e3);
              } catch (r4) {
                return t2(new Error("Couldn't parse response data" + e3));
              }
              r3.id || -1 === r3.method.indexOf("_subscription") || t2(null, r3);
            });
            break;
          default:
            this.connection.on(e2, t2);
        }
      }), i = o.web3.currentProvider), e.exports = i;
    }, function(e, t, r2) {
      var n = r2(104), i = r2(337), o = r2(12).errors, a = r2(342).w3cwebsocket, s2 = function(e2, t2) {
        n.call(this), t2 = t2 || {}, this.url = e2, this._customTimeout = t2.timeout || 15e3, this.headers = t2.headers || {}, this.protocol = t2.protocol || void 0, this.reconnectOptions = Object.assign({ auto: false, delay: 5e3, maxAttempts: false, onTimeout: false }, t2.reconnect), this.clientConfig = t2.clientConfig || void 0, this.requestOptions = t2.requestOptions || void 0, this.DATA = "data", this.CLOSE = "close", this.ERROR = "error", this.CONNECT = "connect", this.RECONNECT = "reconnect", this.connection = null, this.requestQueue = /* @__PURE__ */ new Map(), this.responseQueue = /* @__PURE__ */ new Map(), this.reconnectAttempts = 0, this.reconnecting = false;
        var r3 = i.parseURL(e2);
        r3.username && r3.password && (this.headers.authorization = "Basic " + i.btoa(r3.username + ":" + r3.password)), r3.auth && (this.headers.authorization = "Basic " + i.btoa(r3.auth)), Object.defineProperty(this, "connected", { get: function() {
          return this.connection && this.connection.readyState === this.connection.OPEN;
        }, enumerable: true }), this.connect();
      };
      (s2.prototype = Object.create(n.prototype)).constructor = s2, s2.prototype.connect = function() {
        this.connection = new a(this.url, this.protocol, void 0, this.headers, this.requestOptions, this.clientConfig), this._addSocketListeners();
      }, s2.prototype._onMessage = function(e2) {
        var t2 = this;
        this._parseResponse("string" == typeof e2.data ? e2.data : "").forEach(function(e3) {
          if (e3.method && -1 !== e3.method.indexOf("_subscription"))
            t2.emit(t2.DATA, e3);
          else {
            var r3 = e3.id;
            Array.isArray(e3) && (r3 = e3[0].id), t2.responseQueue.has(r3) && (void 0 !== t2.responseQueue.get(r3).callback && t2.responseQueue.get(r3).callback(false, e3), t2.responseQueue.delete(r3));
          }
        });
      }, s2.prototype._onConnect = function() {
        if (this.emit(this.CONNECT), this.reconnectAttempts = 0, this.reconnecting = false, this.requestQueue.size > 0) {
          var e2 = this;
          this.requestQueue.forEach(function(t2, r3) {
            e2.send(t2.payload, t2.callback), e2.requestQueue.delete(r3);
          });
        }
      }, s2.prototype._onClose = function(e2) {
        var t2 = this;
        !this.reconnectOptions.auto || [1e3, 1001].includes(e2.code) && false !== e2.wasClean ? (this.emit(this.CLOSE, e2), this.requestQueue.size > 0 && this.requestQueue.forEach(function(r3, n2) {
          r3.callback(o.ConnectionNotOpenError(e2)), t2.requestQueue.delete(n2);
        }), this.responseQueue.size > 0 && this.responseQueue.forEach(function(r3, n2) {
          r3.callback(o.InvalidConnection("on WS", e2)), t2.responseQueue.delete(n2);
        }), this._removeSocketListeners(), this.removeAllListeners()) : this.reconnect();
      }, s2.prototype._addSocketListeners = function() {
        this.connection.addEventListener("message", this._onMessage.bind(this)), this.connection.addEventListener("open", this._onConnect.bind(this)), this.connection.addEventListener("close", this._onClose.bind(this));
      }, s2.prototype._removeSocketListeners = function() {
        this.connection.removeEventListener("message", this._onMessage), this.connection.removeEventListener("open", this._onConnect), this.connection.removeEventListener("close", this._onClose);
      }, s2.prototype._parseResponse = function(e2) {
        var t2 = this, r3 = [];
        return e2.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach(function(e3) {
          t2.lastChunk && (e3 = t2.lastChunk + e3);
          var n2 = null;
          try {
            n2 = JSON.parse(e3);
          } catch (r4) {
            return t2.lastChunk = e3, clearTimeout(t2.lastChunkTimeout), void (t2.lastChunkTimeout = setTimeout(function() {
              t2.reconnectOptions.auto && t2.reconnectOptions.onTimeout ? t2.reconnect() : (t2.emit(t2.ERROR, o.ConnectionTimeout(t2._customTimeout)), t2.requestQueue.size > 0 && t2.requestQueue.forEach(function(e4, r5) {
                e4.callback(o.ConnectionTimeout(t2._customTimeout)), t2.requestQueue.delete(r5);
              }));
            }, t2._customTimeout));
          }
          clearTimeout(t2.lastChunkTimeout), t2.lastChunk = null, n2 && r3.push(n2);
        }), r3;
      }, s2.prototype.send = function(e2, t2) {
        var r3 = e2.id, n2 = { payload: e2, callback: t2 };
        if (Array.isArray(e2) && (r3 = e2[0].id), this.connection.readyState === this.connection.CONNECTING || this.reconnecting)
          this.requestQueue.set(r3, n2);
        else {
          if (this.connection.readyState !== this.connection.OPEN)
            return this.requestQueue.delete(r3), this.emit(this.ERROR, o.ConnectionNotOpenError()), void n2.callback(o.ConnectionNotOpenError());
          this.responseQueue.set(r3, n2), this.requestQueue.delete(r3);
          try {
            this.connection.send(JSON.stringify(n2.payload));
          } catch (e3) {
            n2.callback(e3), this.responseQueue.delete(r3);
          }
        }
      }, s2.prototype.reset = function() {
        this.responseQueue.clear(), this.requestQueue.clear(), this.removeAllListeners(), this._removeSocketListeners(), this._addSocketListeners();
      }, s2.prototype.disconnect = function(e2, t2) {
        this._removeSocketListeners(), this.connection.close(e2 || 1e3, t2);
      }, s2.prototype.supportsSubscriptions = function() {
        return true;
      }, s2.prototype.reconnect = function() {
        var e2 = this;
        this.reconnecting = true, this.responseQueue.size > 0 && this.responseQueue.forEach(function(t2, r3) {
          t2.callback(o.PendingRequestsOnReconnectingError()), e2.responseQueue.delete(r3);
        }), !this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts ? setTimeout(function() {
          e2.reconnectAttempts++, e2._removeSocketListeners(), e2.emit(e2.RECONNECT, e2.reconnectAttempts), e2.connect();
        }, this.reconnectOptions.delay) : (this.emit(this.ERROR, o.MaxAttemptsReachedOnReconnectingError()), this.reconnecting = false, this.requestQueue.size > 0 && this.requestQueue.forEach(function(t2, r3) {
          t2.callback(o.MaxAttemptsReachedOnReconnectingError()), e2.requestQueue.delete(r3);
        }));
      }, e.exports = s2;
    }, function(e, t, r2) {
      (function(t2, n) {
        var i = r2(0)(r2(2)), o = "[object process]" === Object.prototype.toString.call(void 0 !== t2 ? t2 : 0), a = "undefined" != typeof navigator && "ReactNative" === navigator.product, s2 = null, f2 = null;
        if (o || a) {
          s2 = function(e2) {
            return n.from(e2).toString("base64");
          };
          var c = r2(77);
          if (c.URL) {
            var u = c.URL;
            f2 = function(e2) {
              return new u(e2);
            };
          } else
            f2 = r2(77).parse;
        } else
          s2 = btoa.bind("object" === ("undefined" == typeof globalThis ? "undefined" : (0, i.default)(globalThis)) ? globalThis : self), f2 = function(e2) {
            return new URL(e2);
          };
        e.exports = { parseURL: f2, btoa: s2 };
      }).call(this, r2(6), r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(0)(r2(2));
      e.exports = { isString: function(e2) {
        return "string" == typeof e2;
      }, isObject: function(e2) {
        return "object" === (0, n.default)(e2) && null !== e2;
      }, isNull: function(e2) {
        return null === e2;
      }, isNullOrUndefined: function(e2) {
        return null == e2;
      } };
    }, function(e, t, r2) {
      t.decode = t.parse = r2(340), t.encode = t.stringify = r2(341);
    }, function(e, t, r2) {
      function n(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }
      e.exports = function(e2, t2, r3, o) {
        t2 = t2 || "&", r3 = r3 || "=";
        var a = {};
        if ("string" != typeof e2 || 0 === e2.length)
          return a;
        var s2 = /\+/g;
        e2 = e2.split(t2);
        var f2 = 1e3;
        o && "number" == typeof o.maxKeys && (f2 = o.maxKeys);
        var c = e2.length;
        f2 > 0 && c > f2 && (c = f2);
        for (var u = 0; u < c; ++u) {
          var d, h, l, p, b = e2[u].replace(s2, "%20"), y = b.indexOf(r3);
          y >= 0 ? (d = b.substr(0, y), h = b.substr(y + 1)) : (d = b, h = ""), l = decodeURIComponent(d), p = decodeURIComponent(h), n(a, l) ? i(a[l]) ? a[l].push(p) : a[l] = [a[l], p] : a[l] = p;
        }
        return a;
      };
      var i = Array.isArray || function(e2) {
        return "[object Array]" === Object.prototype.toString.call(e2);
      };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = function(e2) {
        switch ((0, n.default)(e2)) {
          case "string":
            return e2;
          case "boolean":
            return e2 ? "true" : "false";
          case "number":
            return isFinite(e2) ? e2 : "";
          default:
            return "";
        }
      };
      e.exports = function(e2, t2, r3, f2) {
        return t2 = t2 || "&", r3 = r3 || "=", null === e2 && (e2 = void 0), "object" === (0, n.default)(e2) ? a(s2(e2), function(n2) {
          var s3 = encodeURIComponent(i(n2)) + r3;
          return o(e2[n2]) ? a(e2[n2], function(e3) {
            return s3 + encodeURIComponent(i(e3));
          }).join(t2) : s3 + encodeURIComponent(i(e2[n2]));
        }).join(t2) : f2 ? encodeURIComponent(i(f2)) + r3 + encodeURIComponent(i(e2)) : "";
      };
      var o = Array.isArray || function(e2) {
        return "[object Array]" === Object.prototype.toString.call(e2);
      };
      function a(e2, t2) {
        if (e2.map)
          return e2.map(t2);
        for (var r3 = [], n2 = 0; n2 < e2.length; n2++)
          r3.push(t2(e2[n2], n2));
        return r3;
      }
      var s2 = Object.keys || function(e2) {
        var t2 = [];
        for (var r3 in e2)
          Object.prototype.hasOwnProperty.call(e2, r3) && t2.push(r3);
        return t2;
      };
    }, function(e, t, r2) {
      var n, i = r2(0)(r2(2));
      if ("object" === ("undefined" == typeof globalThis ? "undefined" : (0, i.default)(globalThis)))
        n = globalThis;
      else
        try {
          n = r2(343);
        } catch (e2) {
        } finally {
          if (n || "undefined" == typeof window || (n = window), !n)
            throw new Error("Could not determine global this");
        }
      var o = n.WebSocket || n.MozWebSocket, a = r2(344);
      function s2(e2, t2) {
        return t2 ? new o(e2, t2) : new o(e2);
      }
      o && ["CONNECTING", "OPEN", "CLOSING", "CLOSED"].forEach(function(e2) {
        Object.defineProperty(s2, e2, { get: function() {
          return o[e2];
        } });
      }), e.exports = { w3cwebsocket: o ? s2 : null, version: a };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = function() {
        if ("object" === ("undefined" == typeof self ? "undefined" : (0, n.default)(self)) && self)
          return self;
        if ("object" === ("undefined" == typeof window ? "undefined" : (0, n.default)(window)) && window)
          return window;
        throw new Error("Unable to resolve global `this`");
      };
      e.exports = function() {
        if (this)
          return this;
        if ("object" === ("undefined" == typeof globalThis ? "undefined" : (0, n.default)(globalThis)) && globalThis)
          return globalThis;
        try {
          Object.defineProperty(Object.prototype, "__global__", { get: function() {
            return this;
          }, configurable: true });
        } catch (e2) {
          return i();
        }
        try {
          return __global__ || i();
        } finally {
          delete Object.prototype.__global__;
        }
      }();
    }, function(e, t, r2) {
      e.exports = r2(345).version;
    }, function(e) {
      e.exports = JSON.parse('{"_args":[["websocket@1.0.34","/Users/user1/Desktop/office/web3/deployments/1.8.1/web3.js"]],"_from":"websocket@1.0.34","_id":"websocket@1.0.34","_inBundle":false,"_integrity":"sha512-PRDso2sGwF6kM75QykIesBijKSVceR6jL2G8NGYyq2XrItNC2P5/qL5XeR056GhA+Ly7JMFvJb9I312mJfmqnQ==","_location":"/websocket","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"websocket@1.0.34","name":"websocket","escapedName":"websocket","rawSpec":"1.0.34","saveSpec":null,"fetchSpec":"1.0.34"},"_requiredBy":["/web3-providers-ws"],"_resolved":"https://registry.npmjs.org/websocket/-/websocket-1.0.34.tgz","_spec":"1.0.34","_where":"/Users/user1/Desktop/office/web3/deployments/1.8.1/web3.js","author":{"name":"Brian McKelvey","email":"theturtle32@gmail.com","url":"https://github.com/theturtle32"},"browser":"lib/browser.js","bugs":{"url":"https://github.com/theturtle32/WebSocket-Node/issues"},"config":{"verbose":false},"contributors":[{"name":"I\xF1aki Baz Castillo","email":"ibc@aliax.net","url":"http://dev.sipdoc.net"}],"dependencies":{"bufferutil":"^4.0.1","debug":"^2.2.0","es5-ext":"^0.10.50","typedarray-to-buffer":"^3.1.5","utf-8-validate":"^5.0.2","yaeti":"^0.0.6"},"description":"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.","devDependencies":{"buffer-equal":"^1.0.0","gulp":"^4.0.2","gulp-jshint":"^2.0.4","jshint":"^2.0.0","jshint-stylish":"^2.2.1","tape":"^4.9.1"},"directories":{"lib":"./lib"},"engines":{"node":">=4.0.0"},"homepage":"https://github.com/theturtle32/WebSocket-Node","keywords":["websocket","websockets","socket","networking","comet","push","RFC-6455","realtime","server","client"],"license":"Apache-2.0","main":"index","name":"websocket","repository":{"type":"git","url":"git+https://github.com/theturtle32/WebSocket-Node.git"},"scripts":{"gulp":"gulp","test":"tape test/unit/*.js"},"version":"1.0.34"}');
    }, function(e, t, r2) {
      var n = r2(12).errors, i = r2(169), o = r2(350);
      r2(351), r2(352).polyfill(), r2(353);
      var a = function(e2, t2) {
        t2 = t2 || {}, this.withCredentials = t2.withCredentials, this.timeout = t2.timeout || 0, this.headers = t2.headers, this.agent = t2.agent, this.connected = false;
        var r3 = false !== t2.keepAlive;
        this.host = e2 || "http://localhost:8545", this.agent || ("https" === this.host.substring(0, 5) ? this.httpsAgent = new o.Agent({ keepAlive: r3 }) : this.httpAgent = new i.Agent({ keepAlive: r3 }));
      };
      a.prototype.send = function(e2, t2) {
        var r3, i2 = { method: "POST", body: JSON.stringify(e2) }, o2 = {};
        if ("undefined" != typeof AbortController ? r3 = new AbortController() : "undefined" != typeof window && void 0 !== window.AbortController && (r3 = new window.AbortController()), void 0 !== r3 && (i2.signal = r3.signal), "undefined" == typeof XMLHttpRequest) {
          var a2 = { httpsAgent: this.httpsAgent, httpAgent: this.httpAgent };
          this.agent && (a2.httpsAgent = this.agent.https, a2.httpAgent = this.agent.http), "https" === this.host.substring(0, 5) ? i2.agent = a2.httpsAgent : i2.agent = a2.httpAgent;
        }
        this.headers && this.headers.forEach(function(e3) {
          o2[e3.name] = e3.value;
        }), o2["Content-Type"] || (o2["Content-Type"] = "application/json"), this.withCredentials ? i2.credentials = "include" : i2.credentials = "omit", i2.headers = o2, this.timeout > 0 && void 0 !== r3 && (this.timeoutId = setTimeout(function() {
          r3.abort();
        }, this.timeout));
        fetch(this.host, i2).then(function(e3) {
          void 0 !== this.timeoutId && clearTimeout(this.timeoutId), e3.json().then(function(e4) {
            t2(null, e4);
          }).catch(function(r4) {
            t2(n.InvalidResponse(e3));
          });
        }.bind(this)).catch(function(e3) {
          void 0 !== this.timeoutId && clearTimeout(this.timeoutId), "AbortError" === e3.name && t2(n.ConnectionTimeout(this.timeout)), t2(n.InvalidConnection(this.host));
        }.bind(this));
      }, a.prototype.disconnect = function() {
      }, a.prototype.supportsSubscriptions = function() {
        return false;
      }, e.exports = a;
    }, function(e, t, r2) {
      (function(t2, n, i) {
        var o = r2(170), a = r2(91), s2 = r2(171), f2 = r2(61), c = r2(348), u = s2.IncomingMessage, d = s2.readyStates;
        var h = e.exports = function(e2) {
          var r3, n2 = this;
          f2.Writable.call(n2), n2._opts = e2, n2._body = [], n2._headers = {}, e2.auth && n2.setHeader("Authorization", "Basic " + new t2(e2.auth).toString("base64")), Object.keys(e2.headers).forEach(function(t3) {
            n2.setHeader(t3, e2.headers[t3]);
          });
          var i2 = true;
          if ("disable-fetch" === e2.mode || "requestTimeout" in e2 && !o.abortController)
            i2 = false, r3 = true;
          else if ("prefer-streaming" === e2.mode)
            r3 = false;
          else if ("allow-wrong-content-type" === e2.mode)
            r3 = !o.overrideMimeType;
          else {
            if (e2.mode && "default" !== e2.mode && "prefer-fast" !== e2.mode)
              throw new Error("Invalid value for opts.mode");
            r3 = true;
          }
          n2._mode = function(e3, t3) {
            return o.fetch && t3 ? "fetch" : o.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : o.msstream ? "ms-stream" : o.arraybuffer && e3 ? "arraybuffer" : o.vbArray && e3 ? "text:vbarray" : "text";
          }(r3, i2), n2._fetchTimer = null, n2.on("finish", function() {
            n2._onFinish();
          });
        };
        a(h, f2.Writable), h.prototype.setHeader = function(e2, t3) {
          var r3 = e2.toLowerCase();
          -1 === l.indexOf(r3) && (this._headers[r3] = { name: e2, value: t3 });
        }, h.prototype.getHeader = function(e2) {
          var t3 = this._headers[e2.toLowerCase()];
          return t3 ? t3.value : null;
        }, h.prototype.removeHeader = function(e2) {
          delete this._headers[e2.toLowerCase()];
        }, h.prototype._onFinish = function() {
          var e2 = this;
          if (!e2._destroyed) {
            var r3 = e2._opts, a2 = e2._headers, s3 = null;
            "GET" !== r3.method && "HEAD" !== r3.method && (s3 = o.arraybuffer ? c(t2.concat(e2._body)) : o.blobConstructor ? new n.Blob(e2._body.map(function(e3) {
              return c(e3);
            }), { type: (a2["content-type"] || {}).value || "" }) : t2.concat(e2._body).toString());
            var f3 = [];
            if (Object.keys(a2).forEach(function(e3) {
              var t3 = a2[e3].name, r4 = a2[e3].value;
              Array.isArray(r4) ? r4.forEach(function(e4) {
                f3.push([t3, e4]);
              }) : f3.push([t3, r4]);
            }), "fetch" === e2._mode) {
              var u2 = null;
              if (o.abortController) {
                var h2 = new AbortController();
                u2 = h2.signal, e2._fetchAbortController = h2, "requestTimeout" in r3 && 0 !== r3.requestTimeout && (e2._fetchTimer = n.setTimeout(function() {
                  e2.emit("requestTimeout"), e2._fetchAbortController && e2._fetchAbortController.abort();
                }, r3.requestTimeout));
              }
              n.fetch(e2._opts.url, { method: e2._opts.method, headers: f3, body: s3 || void 0, mode: "cors", credentials: r3.withCredentials ? "include" : "same-origin", signal: u2 }).then(function(t3) {
                e2._fetchResponse = t3, e2._connect();
              }, function(t3) {
                n.clearTimeout(e2._fetchTimer), e2._destroyed || e2.emit("error", t3);
              });
            } else {
              var l2 = e2._xhr = new n.XMLHttpRequest();
              try {
                l2.open(e2._opts.method, e2._opts.url, true);
              } catch (t3) {
                return void i.nextTick(function() {
                  e2.emit("error", t3);
                });
              }
              "responseType" in l2 && (l2.responseType = e2._mode.split(":")[0]), "withCredentials" in l2 && (l2.withCredentials = !!r3.withCredentials), "text" === e2._mode && "overrideMimeType" in l2 && l2.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in r3 && (l2.timeout = r3.requestTimeout, l2.ontimeout = function() {
                e2.emit("requestTimeout");
              }), f3.forEach(function(e3) {
                l2.setRequestHeader(e3[0], e3[1]);
              }), e2._response = null, l2.onreadystatechange = function() {
                switch (l2.readyState) {
                  case d.LOADING:
                  case d.DONE:
                    e2._onXHRProgress();
                }
              }, "moz-chunked-arraybuffer" === e2._mode && (l2.onprogress = function() {
                e2._onXHRProgress();
              }), l2.onerror = function() {
                e2._destroyed || e2.emit("error", new Error("XHR error"));
              };
              try {
                l2.send(s3);
              } catch (t3) {
                return void i.nextTick(function() {
                  e2.emit("error", t3);
                });
              }
            }
          }
        }, h.prototype._onXHRProgress = function() {
          (function(e2) {
            try {
              var t3 = e2.status;
              return null !== t3 && 0 !== t3;
            } catch (e3) {
              return false;
            }
          })(this._xhr) && !this._destroyed && (this._response || this._connect(), this._response._onXHRProgress());
        }, h.prototype._connect = function() {
          var e2 = this;
          e2._destroyed || (e2._response = new u(e2._xhr, e2._fetchResponse, e2._mode, e2._fetchTimer), e2._response.on("error", function(t3) {
            e2.emit("error", t3);
          }), e2.emit("response", e2._response));
        }, h.prototype._write = function(e2, t3, r3) {
          this._body.push(e2), r3();
        }, h.prototype.abort = h.prototype.destroy = function() {
          this._destroyed = true, n.clearTimeout(this._fetchTimer), this._response && (this._response._destroyed = true), this._xhr ? this._xhr.abort() : this._fetchAbortController && this._fetchAbortController.abort();
        }, h.prototype.end = function(e2, t3, r3) {
          "function" == typeof e2 && (r3 = e2, e2 = void 0), f2.Writable.prototype.end.call(this, e2, t3, r3);
        }, h.prototype.flushHeaders = function() {
        }, h.prototype.setTimeout = function() {
        }, h.prototype.setNoDelay = function() {
        }, h.prototype.setSocketKeepAlive = function() {
        };
        var l = ["accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "via"];
      }).call(this, r2(1).Buffer, r2(7), r2(6));
    }, function(e, t, r2) {
      var n = r2(1).Buffer;
      e.exports = function(e2) {
        if (e2 instanceof Uint8Array) {
          if (0 === e2.byteOffset && e2.byteLength === e2.buffer.byteLength)
            return e2.buffer;
          if ("function" == typeof e2.buffer.slice)
            return e2.buffer.slice(e2.byteOffset, e2.byteOffset + e2.byteLength);
        }
        if (n.isBuffer(e2)) {
          for (var t2 = new Uint8Array(e2.length), r3 = e2.length, i = 0; i < r3; i++)
            t2[i] = e2[i];
          return t2.buffer;
        }
        throw new Error("Argument must be a Buffer");
      };
    }, function(e, t, r2) {
      e.exports = { 100: "Continue", 101: "Switching Protocols", 102: "Processing", 200: "OK", 201: "Created", 202: "Accepted", 203: "Non-Authoritative Information", 204: "No Content", 205: "Reset Content", 206: "Partial Content", 207: "Multi-Status", 208: "Already Reported", 226: "IM Used", 300: "Multiple Choices", 301: "Moved Permanently", 302: "Found", 303: "See Other", 304: "Not Modified", 305: "Use Proxy", 307: "Temporary Redirect", 308: "Permanent Redirect", 400: "Bad Request", 401: "Unauthorized", 402: "Payment Required", 403: "Forbidden", 404: "Not Found", 405: "Method Not Allowed", 406: "Not Acceptable", 407: "Proxy Authentication Required", 408: "Request Timeout", 409: "Conflict", 410: "Gone", 411: "Length Required", 412: "Precondition Failed", 413: "Payload Too Large", 414: "URI Too Long", 415: "Unsupported Media Type", 416: "Range Not Satisfiable", 417: "Expectation Failed", 418: "I'm a teapot", 421: "Misdirected Request", 422: "Unprocessable Entity", 423: "Locked", 424: "Failed Dependency", 425: "Unordered Collection", 426: "Upgrade Required", 428: "Precondition Required", 429: "Too Many Requests", 431: "Request Header Fields Too Large", 451: "Unavailable For Legal Reasons", 500: "Internal Server Error", 501: "Not Implemented", 502: "Bad Gateway", 503: "Service Unavailable", 504: "Gateway Timeout", 505: "HTTP Version Not Supported", 506: "Variant Also Negotiates", 507: "Insufficient Storage", 508: "Loop Detected", 509: "Bandwidth Limit Exceeded", 510: "Not Extended", 511: "Network Authentication Required" };
    }, function(e, t, r2) {
      var n = r2(169), i = r2(77), o = e.exports;
      for (var a in n)
        n.hasOwnProperty(a) && (o[a] = n[a]);
      function s2(e2) {
        if ("string" == typeof e2 && (e2 = i.parse(e2)), e2.protocol || (e2.protocol = "https:"), "https:" !== e2.protocol)
          throw new Error('Protocol "' + e2.protocol + '" not supported. Expected "https:"');
        return e2;
      }
      o.request = function(e2, t2) {
        return e2 = s2(e2), n.request.call(this, e2, t2);
      }, o.get = function(e2, t2) {
        return e2 = s2(e2), n.get.call(this, e2, t2);
      };
    }, function(e, t, r2) {
      !function(e2) {
        !function(t2) {
          var r3 = "URLSearchParams" in e2, n = "Symbol" in e2 && "iterator" in Symbol, i = "FileReader" in e2 && "Blob" in e2 && function() {
            try {
              return new Blob(), true;
            } catch (e3) {
              return false;
            }
          }(), o = "FormData" in e2, a = "ArrayBuffer" in e2;
          if (a)
            var s2 = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], f2 = ArrayBuffer.isView || function(e3) {
              return e3 && s2.indexOf(Object.prototype.toString.call(e3)) > -1;
            };
          function c(e3) {
            if ("string" != typeof e3 && (e3 = String(e3)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e3))
              throw new TypeError("Invalid character in header field name");
            return e3.toLowerCase();
          }
          function u(e3) {
            return "string" != typeof e3 && (e3 = String(e3)), e3;
          }
          function d(e3) {
            var t3 = { next: function() {
              var t4 = e3.shift();
              return { done: void 0 === t4, value: t4 };
            } };
            return n && (t3[Symbol.iterator] = function() {
              return t3;
            }), t3;
          }
          function h(e3) {
            this.map = {}, e3 instanceof h ? e3.forEach(function(e4, t3) {
              this.append(t3, e4);
            }, this) : Array.isArray(e3) ? e3.forEach(function(e4) {
              this.append(e4[0], e4[1]);
            }, this) : e3 && Object.getOwnPropertyNames(e3).forEach(function(t3) {
              this.append(t3, e3[t3]);
            }, this);
          }
          function l(e3) {
            if (e3.bodyUsed)
              return Promise.reject(new TypeError("Already read"));
            e3.bodyUsed = true;
          }
          function p(e3) {
            return new Promise(function(t3, r4) {
              e3.onload = function() {
                t3(e3.result);
              }, e3.onerror = function() {
                r4(e3.error);
              };
            });
          }
          function b(e3) {
            var t3 = new FileReader(), r4 = p(t3);
            return t3.readAsArrayBuffer(e3), r4;
          }
          function y(e3) {
            if (e3.slice)
              return e3.slice(0);
            var t3 = new Uint8Array(e3.byteLength);
            return t3.set(new Uint8Array(e3)), t3.buffer;
          }
          function v() {
            return this.bodyUsed = false, this._initBody = function(e3) {
              var t3;
              this._bodyInit = e3, e3 ? "string" == typeof e3 ? this._bodyText = e3 : i && Blob.prototype.isPrototypeOf(e3) ? this._bodyBlob = e3 : o && FormData.prototype.isPrototypeOf(e3) ? this._bodyFormData = e3 : r3 && URLSearchParams.prototype.isPrototypeOf(e3) ? this._bodyText = e3.toString() : a && i && ((t3 = e3) && DataView.prototype.isPrototypeOf(t3)) ? (this._bodyArrayBuffer = y(e3.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : a && (ArrayBuffer.prototype.isPrototypeOf(e3) || f2(e3)) ? this._bodyArrayBuffer = y(e3) : this._bodyText = e3 = Object.prototype.toString.call(e3) : this._bodyText = "", this.headers.get("content-type") || ("string" == typeof e3 ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : r3 && URLSearchParams.prototype.isPrototypeOf(e3) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
            }, i && (this.blob = function() {
              var e3 = l(this);
              if (e3)
                return e3;
              if (this._bodyBlob)
                return Promise.resolve(this._bodyBlob);
              if (this._bodyArrayBuffer)
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              if (this._bodyFormData)
                throw new Error("could not read FormData body as blob");
              return Promise.resolve(new Blob([this._bodyText]));
            }, this.arrayBuffer = function() {
              return this._bodyArrayBuffer ? l(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(b);
            }), this.text = function() {
              var e3, t3, r4, n2 = l(this);
              if (n2)
                return n2;
              if (this._bodyBlob)
                return e3 = this._bodyBlob, t3 = new FileReader(), r4 = p(t3), t3.readAsText(e3), r4;
              if (this._bodyArrayBuffer)
                return Promise.resolve(function(e4) {
                  for (var t4 = new Uint8Array(e4), r5 = new Array(t4.length), n3 = 0; n3 < t4.length; n3++)
                    r5[n3] = String.fromCharCode(t4[n3]);
                  return r5.join("");
                }(this._bodyArrayBuffer));
              if (this._bodyFormData)
                throw new Error("could not read FormData body as text");
              return Promise.resolve(this._bodyText);
            }, o && (this.formData = function() {
              return this.text().then(w);
            }), this.json = function() {
              return this.text().then(JSON.parse);
            }, this;
          }
          h.prototype.append = function(e3, t3) {
            e3 = c(e3), t3 = u(t3);
            var r4 = this.map[e3];
            this.map[e3] = r4 ? r4 + ", " + t3 : t3;
          }, h.prototype.delete = function(e3) {
            delete this.map[c(e3)];
          }, h.prototype.get = function(e3) {
            return e3 = c(e3), this.has(e3) ? this.map[e3] : null;
          }, h.prototype.has = function(e3) {
            return this.map.hasOwnProperty(c(e3));
          }, h.prototype.set = function(e3, t3) {
            this.map[c(e3)] = u(t3);
          }, h.prototype.forEach = function(e3, t3) {
            for (var r4 in this.map)
              this.map.hasOwnProperty(r4) && e3.call(t3, this.map[r4], r4, this);
          }, h.prototype.keys = function() {
            var e3 = [];
            return this.forEach(function(t3, r4) {
              e3.push(r4);
            }), d(e3);
          }, h.prototype.values = function() {
            var e3 = [];
            return this.forEach(function(t3) {
              e3.push(t3);
            }), d(e3);
          }, h.prototype.entries = function() {
            var e3 = [];
            return this.forEach(function(t3, r4) {
              e3.push([r4, t3]);
            }), d(e3);
          }, n && (h.prototype[Symbol.iterator] = h.prototype.entries);
          var m = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
          function g(e3, t3) {
            var r4, n2, i2 = (t3 = t3 || {}).body;
            if (e3 instanceof g) {
              if (e3.bodyUsed)
                throw new TypeError("Already read");
              this.url = e3.url, this.credentials = e3.credentials, t3.headers || (this.headers = new h(e3.headers)), this.method = e3.method, this.mode = e3.mode, this.signal = e3.signal, i2 || null == e3._bodyInit || (i2 = e3._bodyInit, e3.bodyUsed = true);
            } else
              this.url = String(e3);
            if (this.credentials = t3.credentials || this.credentials || "same-origin", !t3.headers && this.headers || (this.headers = new h(t3.headers)), this.method = (r4 = t3.method || this.method || "GET", n2 = r4.toUpperCase(), m.indexOf(n2) > -1 ? n2 : r4), this.mode = t3.mode || this.mode || null, this.signal = t3.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && i2)
              throw new TypeError("Body not allowed for GET or HEAD requests");
            this._initBody(i2);
          }
          function w(e3) {
            var t3 = new FormData();
            return e3.trim().split("&").forEach(function(e4) {
              if (e4) {
                var r4 = e4.split("="), n2 = r4.shift().replace(/\+/g, " "), i2 = r4.join("=").replace(/\+/g, " ");
                t3.append(decodeURIComponent(n2), decodeURIComponent(i2));
              }
            }), t3;
          }
          function _(e3, t3) {
            t3 || (t3 = {}), this.type = "default", this.status = void 0 === t3.status ? 200 : t3.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in t3 ? t3.statusText : "OK", this.headers = new h(t3.headers), this.url = t3.url || "", this._initBody(e3);
          }
          g.prototype.clone = function() {
            return new g(this, { body: this._bodyInit });
          }, v.call(g.prototype), v.call(_.prototype), _.prototype.clone = function() {
            return new _(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new h(this.headers), url: this.url });
          }, _.error = function() {
            var e3 = new _(null, { status: 0, statusText: "" });
            return e3.type = "error", e3;
          };
          var k = [301, 302, 303, 307, 308];
          _.redirect = function(e3, t3) {
            if (-1 === k.indexOf(t3))
              throw new RangeError("Invalid status code");
            return new _(null, { status: t3, headers: { location: e3 } });
          }, t2.DOMException = e2.DOMException;
          try {
            new t2.DOMException();
          } catch (e3) {
            t2.DOMException = function(e4, t3) {
              this.message = e4, this.name = t3;
              var r4 = Error(e4);
              this.stack = r4.stack;
            }, t2.DOMException.prototype = Object.create(Error.prototype), t2.DOMException.prototype.constructor = t2.DOMException;
          }
          function A(e3, r4) {
            return new Promise(function(n2, o2) {
              var a2 = new g(e3, r4);
              if (a2.signal && a2.signal.aborted)
                return o2(new t2.DOMException("Aborted", "AbortError"));
              var s3 = new XMLHttpRequest();
              function f3() {
                s3.abort();
              }
              s3.onload = function() {
                var e4, t3, r5 = { status: s3.status, statusText: s3.statusText, headers: (e4 = s3.getAllResponseHeaders() || "", t3 = new h(), e4.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e5) {
                  var r6 = e5.split(":"), n3 = r6.shift().trim();
                  if (n3) {
                    var i3 = r6.join(":").trim();
                    t3.append(n3, i3);
                  }
                }), t3) };
                r5.url = "responseURL" in s3 ? s3.responseURL : r5.headers.get("X-Request-URL");
                var i2 = "response" in s3 ? s3.response : s3.responseText;
                n2(new _(i2, r5));
              }, s3.onerror = function() {
                o2(new TypeError("Network request failed"));
              }, s3.ontimeout = function() {
                o2(new TypeError("Network request failed"));
              }, s3.onabort = function() {
                o2(new t2.DOMException("Aborted", "AbortError"));
              }, s3.open(a2.method, a2.url, true), "include" === a2.credentials ? s3.withCredentials = true : "omit" === a2.credentials && (s3.withCredentials = false), "responseType" in s3 && i && (s3.responseType = "blob"), a2.headers.forEach(function(e4, t3) {
                s3.setRequestHeader(t3, e4);
              }), a2.signal && (a2.signal.addEventListener("abort", f3), s3.onreadystatechange = function() {
                4 === s3.readyState && a2.signal.removeEventListener("abort", f3);
              }), s3.send(void 0 === a2._bodyInit ? null : a2._bodyInit);
            });
          }
          A.polyfill = true, e2.fetch || (e2.fetch = A, e2.Headers = h, e2.Request = g, e2.Response = _), t2.Headers = h, t2.Request = g, t2.Response = _, t2.fetch = A, Object.defineProperty(t2, "__esModule", { value: true });
        }({});
      }("undefined" != typeof self ? self : void 0);
    }, function(e, t, r2) {
      (function(n, i) {
        var o, a, s2, f2 = r2(0)(r2(2));
        /*!
         * @overview es6-promise - a tiny implementation of Promises/A+.
         * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
         * @license   Licensed under MIT license
         *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
         * @version   v4.2.8+1e68dce6
         */
        s2 = function() {
          function e2(e3) {
            return "function" == typeof e3;
          }
          var t2 = Array.isArray ? Array.isArray : function(e3) {
            return "[object Array]" === Object.prototype.toString.call(e3);
          }, r3 = 0, o2 = void 0, a2 = void 0, s3 = function(e3, t3) {
            b[r3] = e3, b[r3 + 1] = t3, 2 === (r3 += 2) && (a2 ? a2(y) : _());
          }, c = "undefined" != typeof window ? window : void 0, u = c || {}, d = u.MutationObserver || u.WebKitMutationObserver, h = "undefined" == typeof self && void 0 !== n && "[object process]" === {}.toString.call(n), l = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
          function p() {
            var e3 = setTimeout;
            return function() {
              return e3(y, 1);
            };
          }
          var b = new Array(1e3);
          function y() {
            for (var e3 = 0; e3 < r3; e3 += 2)
              (0, b[e3])(b[e3 + 1]), b[e3] = void 0, b[e3 + 1] = void 0;
            r3 = 0;
          }
          var v, m, g, w, _ = void 0;
          function k(e3, t3) {
            var r4 = this, n2 = new this.constructor(E);
            void 0 === n2[S] && U(n2);
            var i2 = r4._state;
            if (i2) {
              var o3 = arguments[i2 - 1];
              s3(function() {
                return I(i2, n2, o3, r4._result);
              });
            } else
              M(r4, n2, e3, t3);
            return n2;
          }
          function A(e3) {
            if (e3 && "object" === (0, f2.default)(e3) && e3.constructor === this)
              return e3;
            var t3 = new this(E);
            return P(t3, e3), t3;
          }
          h ? _ = function() {
            return n.nextTick(y);
          } : d ? (m = 0, g = new d(y), w = document.createTextNode(""), g.observe(w, { characterData: true }), _ = function() {
            w.data = m = ++m % 2;
          }) : l ? ((v = new MessageChannel()).port1.onmessage = y, _ = function() {
            return v.port2.postMessage(0);
          }) : _ = void 0 === c ? function() {
            try {
              var e3 = Function("return this")().require("vertx");
              return void 0 !== (o2 = e3.runOnLoop || e3.runOnContext) ? function() {
                o2(y);
              } : p();
            } catch (e4) {
              return p();
            }
          }() : p();
          var S = Math.random().toString(36).substring(2);
          function E() {
          }
          function x(t3, r4, n2) {
            r4.constructor === t3.constructor && n2 === k && r4.constructor.resolve === A ? function(e3, t4) {
              1 === t4._state ? T(e3, t4._result) : 2 === t4._state ? B(e3, t4._result) : M(t4, void 0, function(t5) {
                return P(e3, t5);
              }, function(t5) {
                return B(e3, t5);
              });
            }(t3, r4) : void 0 === n2 ? T(t3, r4) : e2(n2) ? function(e3, t4, r5) {
              s3(function(e4) {
                var n3 = false, i2 = function(e5, t5, r6, n4) {
                  try {
                    e5.call(t5, r6, n4);
                  } catch (e6) {
                    return e6;
                  }
                }(r5, t4, function(r6) {
                  n3 || (n3 = true, t4 !== r6 ? P(e4, r6) : T(e4, r6));
                }, function(t5) {
                  n3 || (n3 = true, B(e4, t5));
                }, e4._label);
                !n3 && i2 && (n3 = true, B(e4, i2));
              }, e3);
            }(t3, r4, n2) : T(t3, r4);
          }
          function P(e3, t3) {
            if (e3 === t3)
              B(e3, new TypeError("You cannot resolve a promise with itself"));
            else if (n2 = t3, i2 = (0, f2.default)(n2), null === n2 || "object" !== i2 && "function" !== i2)
              T(e3, t3);
            else {
              var r4 = void 0;
              try {
                r4 = t3.then;
              } catch (t4) {
                return void B(e3, t4);
              }
              x(e3, t3, r4);
            }
            var n2, i2;
          }
          function O(e3) {
            e3._onerror && e3._onerror(e3._result), R(e3);
          }
          function T(e3, t3) {
            void 0 === e3._state && (e3._result = t3, e3._state = 1, 0 !== e3._subscribers.length && s3(R, e3));
          }
          function B(e3, t3) {
            void 0 === e3._state && (e3._state = 2, e3._result = t3, s3(O, e3));
          }
          function M(e3, t3, r4, n2) {
            var i2 = e3._subscribers, o3 = i2.length;
            e3._onerror = null, i2[o3] = t3, i2[o3 + 1] = r4, i2[o3 + 2] = n2, 0 === o3 && e3._state && s3(R, e3);
          }
          function R(e3) {
            var t3 = e3._subscribers, r4 = e3._state;
            if (0 !== t3.length) {
              for (var n2 = void 0, i2 = void 0, o3 = e3._result, a3 = 0; a3 < t3.length; a3 += 3)
                n2 = t3[a3], i2 = t3[a3 + r4], n2 ? I(r4, n2, i2, o3) : i2(o3);
              e3._subscribers.length = 0;
            }
          }
          function I(t3, r4, n2, i2) {
            var o3 = e2(n2), a3 = void 0, s4 = void 0, f3 = true;
            if (o3) {
              try {
                a3 = n2(i2);
              } catch (e3) {
                f3 = false, s4 = e3;
              }
              if (r4 === a3)
                return void B(r4, new TypeError("A promises callback cannot return that same promise."));
            } else
              a3 = i2;
            void 0 !== r4._state || (o3 && f3 ? P(r4, a3) : false === f3 ? B(r4, s4) : 1 === t3 ? T(r4, a3) : 2 === t3 && B(r4, a3));
          }
          var C = 0;
          function U(e3) {
            e3[S] = C++, e3._state = void 0, e3._result = void 0, e3._subscribers = [];
          }
          var j = function() {
            function e3(e4, r4) {
              this._instanceConstructor = e4, this.promise = new e4(E), this.promise[S] || U(this.promise), t2(r4) ? (this.length = r4.length, this._remaining = r4.length, this._result = new Array(this.length), 0 === this.length ? T(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(r4), 0 === this._remaining && T(this.promise, this._result))) : B(this.promise, new Error("Array Methods must be provided an Array"));
            }
            return e3.prototype._enumerate = function(e4) {
              for (var t3 = 0; void 0 === this._state && t3 < e4.length; t3++)
                this._eachEntry(e4[t3], t3);
            }, e3.prototype._eachEntry = function(e4, t3) {
              var r4 = this._instanceConstructor, n2 = r4.resolve;
              if (n2 === A) {
                var i2 = void 0, o3 = void 0, a3 = false;
                try {
                  i2 = e4.then;
                } catch (e5) {
                  a3 = true, o3 = e5;
                }
                if (i2 === k && void 0 !== e4._state)
                  this._settledAt(e4._state, t3, e4._result);
                else if ("function" != typeof i2)
                  this._remaining--, this._result[t3] = e4;
                else if (r4 === N) {
                  var s4 = new r4(E);
                  a3 ? B(s4, o3) : x(s4, e4, i2), this._willSettleAt(s4, t3);
                } else
                  this._willSettleAt(new r4(function(t4) {
                    return t4(e4);
                  }), t3);
              } else
                this._willSettleAt(n2(e4), t3);
            }, e3.prototype._settledAt = function(e4, t3, r4) {
              var n2 = this.promise;
              void 0 === n2._state && (this._remaining--, 2 === e4 ? B(n2, r4) : this._result[t3] = r4), 0 === this._remaining && T(n2, this._result);
            }, e3.prototype._willSettleAt = function(e4, t3) {
              var r4 = this;
              M(e4, void 0, function(e5) {
                return r4._settledAt(1, t3, e5);
              }, function(e5) {
                return r4._settledAt(2, t3, e5);
              });
            }, e3;
          }(), N = function() {
            function t3(e3) {
              this[S] = C++, this._result = this._state = void 0, this._subscribers = [], E !== e3 && ("function" != typeof e3 && function() {
                throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
              }(), this instanceof t3 ? function(e4, t4) {
                try {
                  t4(function(t5) {
                    P(e4, t5);
                  }, function(t5) {
                    B(e4, t5);
                  });
                } catch (t5) {
                  B(e4, t5);
                }
              }(this, e3) : function() {
                throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
              }());
            }
            return t3.prototype.catch = function(e3) {
              return this.then(null, e3);
            }, t3.prototype.finally = function(t4) {
              var r4 = this.constructor;
              return e2(t4) ? this.then(function(e3) {
                return r4.resolve(t4()).then(function() {
                  return e3;
                });
              }, function(e3) {
                return r4.resolve(t4()).then(function() {
                  throw e3;
                });
              }) : this.then(t4, t4);
            }, t3;
          }();
          return N.prototype.then = k, N.all = function(e3) {
            return new j(this, e3).promise;
          }, N.race = function(e3) {
            var r4 = this;
            return t2(e3) ? new r4(function(t3, n2) {
              for (var i2 = e3.length, o3 = 0; o3 < i2; o3++)
                r4.resolve(e3[o3]).then(t3, n2);
            }) : new r4(function(e4, t3) {
              return t3(new TypeError("You must pass an array to race."));
            });
          }, N.resolve = A, N.reject = function(e3) {
            var t3 = new this(E);
            return B(t3, e3), t3;
          }, N._setScheduler = function(e3) {
            a2 = e3;
          }, N._setAsap = function(e3) {
            s3 = e3;
          }, N._asap = s3, N.polyfill = function() {
            var e3 = void 0;
            if (void 0 !== i)
              e3 = i;
            else if ("undefined" != typeof self)
              e3 = self;
            else
              try {
                e3 = Function("return this")();
              } catch (e4) {
                throw new Error("polyfill failed because global object is unavailable in this environment");
              }
            var t3 = e3.Promise;
            if (t3) {
              var r4 = null;
              try {
                r4 = Object.prototype.toString.call(t3.resolve());
              } catch (e4) {
              }
              if ("[object Promise]" === r4 && !t3.cast)
                return;
            }
            e3.Promise = N;
          }, N.Promise = N, N;
        }, "object" === (0, f2.default)(t) && void 0 !== e ? e.exports = s2() : void 0 === (a = "function" == typeof (o = s2) ? o.call(t, r2, t, e) : o) || (e.exports = a);
      }).call(this, r2(6), r2(7));
    }, function(e, t, r2) {
      (function(n) {
        var i, o, a = r2(0)(r2(2));
        void 0 === (o = "function" == typeof (i = function() {
          function e2(e3, t3) {
            if (!(e3 instanceof t3))
              throw new TypeError("Cannot call a class as a function");
          }
          function t2(e3, t3) {
            for (var r4 = 0; r4 < t3.length; r4++) {
              var n2 = t3[r4];
              n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e3, n2.key, n2);
            }
          }
          function r3(e3, r4, n2) {
            return r4 && t2(e3.prototype, r4), n2 && t2(e3, n2), Object.defineProperty(e3, "prototype", { writable: false }), e3;
          }
          function i2(e3) {
            return (i2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e4) {
              return e4.__proto__ || Object.getPrototypeOf(e4);
            })(e3);
          }
          function o2(e3, t3) {
            return (o2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e4, t4) {
              return e4.__proto__ = t4, e4;
            })(e3, t3);
          }
          function s2(e3) {
            if (void 0 === e3)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e3;
          }
          function f2(e3, t3) {
            if (t3 && ("object" === (0, a.default)(t3) || "function" == typeof t3))
              return t3;
            if (void 0 !== t3)
              throw new TypeError("Derived constructors may only return object or undefined");
            return s2(e3);
          }
          function c(e3) {
            var t3 = function() {
              if ("undefined" == typeof Reflect || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if ("function" == typeof Proxy)
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (e4) {
                return false;
              }
            }();
            return function() {
              var r4, n2 = i2(e3);
              if (t3) {
                var o3 = i2(this).constructor;
                r4 = Reflect.construct(n2, arguments, o3);
              } else
                r4 = n2.apply(this, arguments);
              return f2(this, r4);
            };
          }
          function u(e3, t3) {
            for (; !Object.prototype.hasOwnProperty.call(e3, t3) && null !== (e3 = i2(e3)); )
              ;
            return e3;
          }
          function d() {
            return (d = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e3, t3, r4) {
              var n2 = u(e3, t3);
              if (n2) {
                var i3 = Object.getOwnPropertyDescriptor(n2, t3);
                return i3.get ? i3.get.call(arguments.length < 3 ? e3 : r4) : i3.value;
              }
            }).apply(this, arguments);
          }
          var h = function() {
            function t3() {
              e2(this, t3), Object.defineProperty(this, "listeners", { value: {}, writable: true, configurable: true });
            }
            return r3(t3, [{ key: "addEventListener", value: function(e3, t4, r4) {
              e3 in this.listeners || (this.listeners[e3] = []), this.listeners[e3].push({ callback: t4, options: r4 });
            } }, { key: "removeEventListener", value: function(e3, t4) {
              if (e3 in this.listeners) {
                for (var r4 = this.listeners[e3], n2 = 0, i3 = r4.length; n2 < i3; n2++)
                  if (r4[n2].callback === t4)
                    return void r4.splice(n2, 1);
              }
            } }, { key: "dispatchEvent", value: function(e3) {
              if (e3.type in this.listeners) {
                for (var t4 = this.listeners[e3.type].slice(), r4 = 0, n2 = t4.length; r4 < n2; r4++) {
                  var i3 = t4[r4];
                  try {
                    i3.callback.call(this, e3);
                  } catch (e4) {
                    Promise.resolve().then(function() {
                      throw e4;
                    });
                  }
                  i3.options && i3.options.once && this.removeEventListener(e3.type, i3.callback);
                }
                return !e3.defaultPrevented;
              }
            } }]), t3;
          }(), l = function(t3) {
            !function(e3, t4) {
              if ("function" != typeof t4 && null !== t4)
                throw new TypeError("Super expression must either be null or a function");
              e3.prototype = Object.create(t4 && t4.prototype, { constructor: { value: e3, writable: true, configurable: true } }), Object.defineProperty(e3, "prototype", { writable: false }), t4 && o2(e3, t4);
            }(a2, t3);
            var n2 = c(a2);
            function a2() {
              var t4;
              return e2(this, a2), (t4 = n2.call(this)).listeners || h.call(s2(t4)), Object.defineProperty(s2(t4), "aborted", { value: false, writable: true, configurable: true }), Object.defineProperty(s2(t4), "onabort", { value: null, writable: true, configurable: true }), Object.defineProperty(s2(t4), "reason", { value: void 0, writable: true, configurable: true }), t4;
            }
            return r3(a2, [{ key: "toString", value: function() {
              return "[object AbortSignal]";
            } }, { key: "dispatchEvent", value: function(e3) {
              "abort" === e3.type && (this.aborted = true, "function" == typeof this.onabort && this.onabort.call(this, e3)), d(i2(a2.prototype), "dispatchEvent", this).call(this, e3);
            } }]), a2;
          }(h), p = function() {
            function t3() {
              e2(this, t3), Object.defineProperty(this, "signal", { value: new l(), writable: true, configurable: true });
            }
            return r3(t3, [{ key: "abort", value: function(e3) {
              var t4;
              try {
                t4 = new Event("abort");
              } catch (e4) {
                "undefined" != typeof document ? document.createEvent ? (t4 = document.createEvent("Event")).initEvent("abort", false, false) : (t4 = document.createEventObject()).type = "abort" : t4 = { type: "abort", bubbles: false, cancelable: false };
              }
              var r4 = e3;
              if (void 0 === r4)
                if ("undefined" == typeof document)
                  (r4 = new Error("This operation was aborted")).name = "AbortError";
                else
                  try {
                    r4 = new DOMException("signal is aborted without reason");
                  } catch (e4) {
                    (r4 = new Error("This operation was aborted")).name = "AbortError";
                  }
              this.signal.reason = r4, this.signal.dispatchEvent(t4);
            } }, { key: "toString", value: function() {
              return "[object AbortController]";
            } }]), t3;
          }();
          function b(e3) {
            return e3.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL ? (console.log("__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill"), true) : "function" == typeof e3.Request && !e3.Request.prototype.hasOwnProperty("signal") || !e3.AbortController;
          }
          "undefined" != typeof Symbol && Symbol.toStringTag && (p.prototype[Symbol.toStringTag] = "AbortController", l.prototype[Symbol.toStringTag] = "AbortSignal"), function(e3) {
            if (b(e3))
              if (e3.fetch) {
                var t3 = function(e4) {
                  "function" == typeof e4 && (e4 = { fetch: e4 });
                  var t4 = e4, r5 = t4.fetch, n3 = t4.Request, i3 = void 0 === n3 ? r5.Request : n3, o3 = t4.AbortController, a2 = t4.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL, s3 = void 0 !== a2 && a2;
                  if (!b({ fetch: r5, Request: i3, AbortController: o3, __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL: s3 }))
                    return { fetch: r5, Request: f3 };
                  var f3 = i3;
                  (f3 && !f3.prototype.hasOwnProperty("signal") || s3) && ((f3 = function(e5, t5) {
                    var r6;
                    t5 && t5.signal && (r6 = t5.signal, delete t5.signal);
                    var n4 = new i3(e5, t5);
                    return r6 && Object.defineProperty(n4, "signal", { writable: false, enumerable: false, configurable: true, value: r6 }), n4;
                  }).prototype = i3.prototype);
                  var c2 = r5;
                  return { fetch: function(e5, t5) {
                    var r6 = f3 && f3.prototype.isPrototypeOf(e5) ? e5.signal : t5 ? t5.signal : void 0;
                    if (r6) {
                      var n4;
                      try {
                        n4 = new DOMException("Aborted", "AbortError");
                      } catch (e6) {
                        (n4 = new Error("Aborted")).name = "AbortError";
                      }
                      if (r6.aborted)
                        return Promise.reject(n4);
                      var i4 = new Promise(function(e6, t6) {
                        r6.addEventListener("abort", function() {
                          return t6(n4);
                        }, { once: true });
                      });
                      return t5 && t5.signal && delete t5.signal, Promise.race([i4, c2(e5, t5)]);
                    }
                    return c2(e5, t5);
                  }, Request: f3 };
                }(e3), r4 = t3.fetch, n2 = t3.Request;
                e3.fetch = r4, e3.Request = n2, Object.defineProperty(e3, "AbortController", { writable: true, enumerable: false, configurable: true, value: p }), Object.defineProperty(e3, "AbortSignal", { writable: true, enumerable: false, configurable: true, value: l });
              } else
                console.warn("fetch() is not available, cannot install abortcontroller-polyfill");
          }("undefined" != typeof self ? self : n);
        }) ? i.call(t, r2, t, e) : i) || (e.exports = o);
      }).call(this, r2(7));
    }, function(e, t, r2) {
      var n = r2(12).errors, i = r2(355), o = function(e2, t2) {
        var r3 = this;
        this.responseCallbacks = {}, this.notificationCallbacks = [], this.path = e2, this.connected = false, this.connection = t2.connect({ path: this.path }), this.addDefaultEvents();
        var n2 = function(e3) {
          var t3 = null;
          Array.isArray(e3) ? e3.forEach(function(e4) {
            r3.responseCallbacks[e4.id] && (t3 = e4.id);
          }) : t3 = e3.id, t3 || -1 === e3.method.indexOf("_subscription") ? r3.responseCallbacks[t3] && (r3.responseCallbacks[t3](null, e3), delete r3.responseCallbacks[t3]) : r3.notificationCallbacks.forEach(function(t4) {
            "function" == typeof t4 && t4(e3);
          });
        };
        "Socket" === t2.constructor.name ? i(this.connection).done(n2) : this.connection.on("data", function(e3) {
          r3._parseResponse(e3.toString()).forEach(n2);
        });
      };
      o.prototype.addDefaultEvents = function() {
        var e2 = this;
        this.connection.on("connect", function() {
          e2.connected = true;
        }), this.connection.on("close", function() {
          e2.connected = false;
        }), this.connection.on("error", function() {
          e2._timeout();
        }), this.connection.on("end", function() {
          e2._timeout();
        }), this.connection.on("timeout", function() {
          e2._timeout();
        });
      }, o.prototype._parseResponse = function(e2) {
        var t2 = this, r3 = [];
        return e2.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach(function(e3) {
          t2.lastChunk && (e3 = t2.lastChunk + e3);
          var i2 = null;
          try {
            i2 = JSON.parse(e3);
          } catch (r4) {
            return t2.lastChunk = e3, clearTimeout(t2.lastChunkTimeout), void (t2.lastChunkTimeout = setTimeout(function() {
              throw t2._timeout(), n.InvalidResponse(e3);
            }, 15e3));
          }
          clearTimeout(t2.lastChunkTimeout), t2.lastChunk = null, i2 && r3.push(i2);
        }), r3;
      }, o.prototype._addResponseCallback = function(e2, t2) {
        var r3 = e2.id || e2[0].id, n2 = e2.method || e2[0].method;
        this.responseCallbacks[r3] = t2, this.responseCallbacks[r3].method = n2;
      }, o.prototype._timeout = function() {
        for (var e2 in this.responseCallbacks)
          this.responseCallbacks.hasOwnProperty(e2) && (this.responseCallbacks[e2](n.InvalidConnection("on IPC")), delete this.responseCallbacks[e2]);
      }, o.prototype.reconnect = function() {
        this.connection.connect({ path: this.path });
      }, o.prototype.send = function(e2, t2) {
        this.connection.writable || this.connection.connect({ path: this.path }), this.connection.write(JSON.stringify(e2)), this._addResponseCallback(e2, t2);
      }, o.prototype.on = function(e2, t2) {
        if ("function" != typeof t2)
          throw new Error("The second parameter callback must be a function.");
        switch (e2) {
          case "data":
            this.notificationCallbacks.push(t2);
            break;
          default:
            this.connection.on(e2, t2);
        }
      }, o.prototype.once = function(e2, t2) {
        if ("function" != typeof t2)
          throw new Error("The second parameter callback must be a function.");
        this.connection.once(e2, t2);
      }, o.prototype.removeListener = function(e2, t2) {
        var r3 = this;
        switch (e2) {
          case "data":
            this.notificationCallbacks.forEach(function(e3, n2) {
              e3 === t2 && r3.notificationCallbacks.splice(n2, 1);
            });
            break;
          default:
            this.connection.removeListener(e2, t2);
        }
      }, o.prototype.removeAllListeners = function(e2) {
        switch (e2) {
          case "data":
            this.notificationCallbacks = [];
            break;
          default:
            this.connection.removeAllListeners(e2);
        }
      }, o.prototype.reset = function() {
        this._timeout(), this.notificationCallbacks = [], this.connection.removeAllListeners("error"), this.connection.removeAllListeners("end"), this.connection.removeAllListeners("timeout"), this.addDefaultEvents();
      }, o.prototype.supportsSubscriptions = function() {
        return true;
      }, e.exports = o;
    }, function(e, t, r2) {
      (function(e2) {
        var n, i, o, a, s2 = r2(0)(r2(2));
        /*!
        * v2.1.4-104-gc868b3a
        * 
        */
        a = function() {
          return function(e3) {
            var t2 = {};
            function r3(n2) {
              if (t2[n2])
                return t2[n2].exports;
              var i2 = t2[n2] = { i: n2, l: false, exports: {} };
              return e3[n2].call(i2.exports, i2, i2.exports, r3), i2.l = true, i2.exports;
            }
            return r3.m = e3, r3.c = t2, r3.d = function(e4, t3, n2) {
              r3.o(e4, t3) || Object.defineProperty(e4, t3, { configurable: false, enumerable: true, get: n2 });
            }, r3.n = function(e4) {
              var t3 = e4 && e4.__esModule ? function() {
                return e4.default;
              } : function() {
                return e4;
              };
              return r3.d(t3, "a", t3), t3;
            }, r3.o = function(e4, t3) {
              return Object.prototype.hasOwnProperty.call(e4, t3);
            }, r3.p = "", r3(r3.s = 7);
          }([function(e3, t2, r3) {
            r3.d(t2, "j", function() {
              return i2;
            }), r3.d(t2, "d", function() {
              return o2;
            }), r3.d(t2, "c", function() {
              return a2;
            }), r3.d(t2, "h", function() {
              return s3;
            }), r3.d(t2, "b", function() {
              return f2;
            }), r3.d(t2, "k", function() {
              return c;
            }), r3.d(t2, "e", function() {
              return u;
            }), r3.d(t2, "g", function() {
              return d;
            }), r3.d(t2, "i", function() {
              return h;
            }), r3.d(t2, "a", function() {
              return l;
            }), r3.d(t2, "f", function() {
              return p;
            });
            var n2 = r3(1), i2 = c(function(e4, t3) {
              var r4 = t3.length;
              return c(function(n3) {
                for (var i3 = 0; i3 < n3.length; i3++)
                  t3[r4 + i3] = n3[i3];
                return t3.length = r4 + n3.length, e4.apply(this, t3);
              });
            });
            function o2(e4, t3) {
              return function() {
                return e4.call(this, t3.apply(this, arguments));
              };
            }
            function a2(e4) {
              return function(t3) {
                return t3[e4];
              };
            }
            c(function(e4) {
              var t3 = Object(n2.c)(e4);
              function r4(e5, t4) {
                return [f2(e5, t4)];
              }
              return c(function(e5) {
                return Object(n2.f)(r4, e5, t3)[0];
              });
            });
            var s3 = c(function(e4) {
              return c(function(t3) {
                for (var r4, n3 = 0; n3 < a2("length")(e4); n3++)
                  if (r4 = f2(t3, e4[n3]))
                    return r4;
              });
            });
            function f2(e4, t3) {
              return t3.apply(void 0, e4);
            }
            function c(e4) {
              var t3 = e4.length - 1, r4 = Array.prototype.slice;
              if (0 === t3)
                return function() {
                  return e4.call(this, r4.call(arguments));
                };
              if (1 === t3)
                return function() {
                  return e4.call(this, arguments[0], r4.call(arguments, 1));
                };
              var n3 = Array(e4.length);
              return function() {
                for (var i3 = 0; i3 < t3; i3++)
                  n3[i3] = arguments[i3];
                return n3[t3] = r4.call(arguments, t3), e4.apply(this, n3);
              };
            }
            function u(e4) {
              return function(t3, r4) {
                return e4(r4, t3);
              };
            }
            function d(e4, t3) {
              return function(r4) {
                return e4(r4) && t3(r4);
              };
            }
            function h() {
            }
            function l() {
              return true;
            }
            function p(e4) {
              return function() {
                return e4;
              };
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "d", function() {
              return i2;
            }), r3.d(t2, "g", function() {
              return o2;
            }), r3.d(t2, "l", function() {
              return a2;
            }), r3.d(t2, "c", function() {
              return s3;
            }), r3.d(t2, "h", function() {
              return f2;
            }), r3.d(t2, "i", function() {
              return c;
            }), r3.d(t2, "j", function() {
              return u;
            }), r3.d(t2, "f", function() {
              return d;
            }), r3.d(t2, "m", function() {
              return h;
            }), r3.d(t2, "a", function() {
              return l;
            }), r3.d(t2, "b", function() {
              return p;
            }), r3.d(t2, "k", function() {
              return b;
            }), r3.d(t2, "e", function() {
              return y;
            });
            var n2 = r3(0);
            function i2(e4, t3) {
              return [e4, t3];
            }
            var o2 = Object(n2.c)(0), a2 = Object(n2.c)(1);
            function s3(e4) {
              return b(e4.reduce(Object(n2.e)(i2), null));
            }
            var f2 = Object(n2.k)(s3);
            function c(e4) {
              return d(function(e5, t3) {
                return e5.unshift(t3), e5;
              }, [], e4);
            }
            function u(e4, t3) {
              return t3 ? i2(e4(o2(t3)), u(e4, a2(t3))) : null;
            }
            function d(e4, t3, r4) {
              return r4 ? e4(d(e4, t3, a2(r4)), o2(r4)) : t3;
            }
            function h(e4, t3, r4) {
              return function e5(r5, n3) {
                return r5 ? t3(o2(r5)) ? (n3(o2(r5)), a2(r5)) : i2(o2(r5), e5(a2(r5), n3)) : null;
              }(e4, r4 || n2.i);
            }
            function l(e4, t3) {
              return !t3 || e4(o2(t3)) && l(e4, a2(t3));
            }
            function p(e4, t3) {
              e4 && (o2(e4).apply(null, t3), p(a2(e4), t3));
            }
            function b(e4) {
              return function e5(t3, r4) {
                return t3 ? e5(a2(t3), i2(o2(t3), r4)) : r4;
              }(e4, null);
            }
            function y(e4, t3) {
              return t3 && (e4(o2(t3)) ? o2(t3) : y(e4, a2(t3)));
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "c", function() {
              return o2;
            }), r3.d(t2, "e", function() {
              return a2;
            }), r3.d(t2, "d", function() {
              return s3;
            }), r3.d(t2, "a", function() {
              return f2;
            }), r3.d(t2, "b", function() {
              return c;
            });
            var n2 = r3(1), i2 = r3(0);
            function o2(e4, t3) {
              return t3 && t3.constructor === e4;
            }
            var a2 = Object(i2.c)("length"), s3 = Object(i2.j)(o2, String);
            function f2(e4) {
              return void 0 !== e4;
            }
            function c(e4, t3) {
              return t3 instanceof Object && Object(n2.a)(function(e5) {
                return e5 in t3;
              }, e4);
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "f", function() {
              return i2;
            }), r3.d(t2, "d", function() {
              return o2;
            }), r3.d(t2, "g", function() {
              return a2;
            }), r3.d(t2, "e", function() {
              return s3;
            }), r3.d(t2, "b", function() {
              return f2;
            }), r3.d(t2, "h", function() {
              return c;
            }), r3.d(t2, "i", function() {
              return u;
            }), r3.d(t2, "c", function() {
              return d;
            }), r3.d(t2, "m", function() {
              return h;
            }), r3.d(t2, "n", function() {
              return l;
            }), r3.d(t2, "a", function() {
              return p;
            }), r3.d(t2, "j", function() {
              return b;
            }), r3.d(t2, "l", function() {
              return y;
            }), r3.d(t2, "k", function() {
              return v;
            }), r3.d(t2, "o", function() {
              return m;
            });
            var n2 = 1, i2 = n2++, o2 = n2++, a2 = n2++, s3 = n2++, f2 = "fail", c = n2++, u = n2++, d = "start", h = "data", l = "end", p = n2++, b = n2++, y = n2++, v = n2++;
            function m(e4, t3, r4) {
              try {
                var n3 = JSON.parse(t3);
              } catch (e5) {
              }
              return { statusCode: e4, body: t3, jsonBody: n3, thrown: r4 };
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "b", function() {
              return i2;
            }), r3.d(t2, "a", function() {
              return o2;
            }), r3.d(t2, "c", function() {
              return a2;
            });
            var n2 = r3(0);
            function i2(e4, t3) {
              return { key: e4, node: t3 };
            }
            var o2 = Object(n2.c)("key"), a2 = Object(n2.c)("node");
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return f2;
            });
            var n2 = r3(1), i2 = r3(0), o2 = r3(2), a2 = r3(8), s3 = r3(9);
            function f2(e4) {
              var t3 = Object(n2.h)("resume", "pause", "pipe"), r4 = Object(i2.j)(o2.b, t3);
              return e4 ? r4(e4) || Object(o2.d)(e4) ? Object(a2.a)(s3.a, e4) : Object(a2.a)(s3.a, e4.url, e4.method, e4.body, e4.headers, e4.withCredentials, e4.cached) : Object(s3.a)();
            }
            f2.drop = function() {
              return f2.drop;
            };
          }, function(e3, t2, r3) {
            r3.d(t2, "b", function() {
              return f2;
            }), r3.d(t2, "a", function() {
              return s3;
            });
            var n2 = r3(3), i2 = r3(4), o2 = r3(2), a2 = r3(1), s3 = {};
            function f2(e4) {
              var t3 = e4(n2.f).emit, r4 = e4(n2.d).emit, f3 = e4(n2.i).emit, c = e4(n2.h).emit;
              function u(e5, t4, r5) {
                Object(i2.c)(Object(a2.g)(e5))[t4] = r5;
              }
              function d(e5, r5, n3) {
                e5 && u(e5, r5, n3);
                var o3 = Object(a2.d)(Object(i2.b)(r5, n3), e5);
                return t3(o3), o3;
              }
              var h = {};
              return h[n2.l] = function(e5, t4) {
                if (!e5)
                  return f3(t4), d(e5, s3, t4);
                var r5 = function(e6, t5) {
                  var r6 = Object(i2.c)(Object(a2.g)(e6));
                  return Object(o2.c)(Array, r6) ? d(e6, Object(o2.e)(r6), t5) : e6;
                }(e5, t4), n3 = Object(a2.l)(r5), c2 = Object(i2.a)(Object(a2.g)(r5));
                return u(n3, c2, t4), Object(a2.d)(Object(i2.b)(c2, t4), n3);
              }, h[n2.k] = function(e5) {
                return r4(e5), Object(a2.l)(e5) || c(Object(i2.c)(Object(a2.g)(e5)));
              }, h[n2.j] = d, h;
            }
          }, function(e3, t2, r3) {
            Object.defineProperty(t2, "__esModule", { value: true });
            var n2 = r3(5);
            t2.default = n2.a;
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return i2;
            });
            var n2 = r3(2);
            function i2(e4, t3, r4, i3, o2, a2, s3) {
              return o2 = o2 ? JSON.parse(JSON.stringify(o2)) : {}, i3 ? (Object(n2.d)(i3) || (i3 = JSON.stringify(i3), o2["Content-Type"] = o2["Content-Type"] || "application/json"), o2["Content-Length"] = o2["Content-Length"] || i3.length) : i3 = null, e4(r4 || "GET", function(e5, t4) {
                return false === t4 && (-1 === e5.indexOf("?") ? e5 += "?" : e5 += "&", e5 += "_=" + new Date().getTime()), e5;
              }(t3, s3), i3, o2, a2 || false);
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return d;
            });
            var n2 = r3(10), i2 = r3(12), o2 = r3(6), a2 = r3(13), s3 = r3(14), f2 = r3(16), c = r3(17), u = r3(18);
            function d(e4, t3, r4, d2, h) {
              var l = Object(n2.a)();
              return t3 && Object(u.b)(l, Object(u.a)(), e4, t3, r4, d2, h), Object(c.a)(l), Object(i2.a)(l, Object(o2.b)(l)), Object(a2.a)(l, s3.a), Object(f2.a)(l, t3);
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return o2;
            });
            var n2 = r3(11), i2 = r3(0);
            function o2() {
              var e4 = {}, t3 = o3("newListener"), r4 = o3("removeListener");
              function o3(i3) {
                return e4[i3] = Object(n2.a)(i3, t3, r4), e4[i3];
              }
              function a2(t4) {
                return e4[t4] || o3(t4);
              }
              return ["emit", "on", "un"].forEach(function(e5) {
                a2[e5] = Object(i2.k)(function(t4, r5) {
                  Object(i2.b)(r5, a2(t4)[e5]);
                });
              }), a2;
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return a2;
            });
            var n2 = r3(1), i2 = r3(2), o2 = r3(0);
            function a2(e4, t3, r4) {
              var a3, s3;
              function f2(e5) {
                return function(t4) {
                  return t4.id === e5;
                };
              }
              return { on: function(r5, i3) {
                var o3 = { listener: r5, id: i3 || r5 };
                return t3 && t3.emit(e4, r5, o3.id), a3 = Object(n2.d)(o3, a3), s3 = Object(n2.d)(r5, s3), this;
              }, emit: function() {
                Object(n2.b)(s3, arguments);
              }, un: function(t4) {
                var i3;
                a3 = Object(n2.m)(a3, f2(t4), function(e5) {
                  i3 = e5;
                }), i3 && (s3 = Object(n2.m)(s3, function(e5) {
                  return e5 === i3.listener;
                }), r4 && r4.emit(e4, i3.listener, i3.id));
              }, listeners: function() {
                return s3;
              }, hasListener: function(e5) {
                var t4 = e5 ? f2(e5) : o2.a;
                return Object(i2.a)(Object(n2.e)(t4, a3));
              } };
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return a2;
            });
            var n2 = r3(4), i2 = r3(3), o2 = r3(1);
            function a2(e4, t3) {
              var r4, a3 = {};
              function s3(e5) {
                return function(t4) {
                  r4 = e5(r4, t4);
                };
              }
              for (var f2 in t3)
                e4(f2).on(s3(t3[f2]), a3);
              e4(i2.g).on(function(e5) {
                var t4 = Object(o2.g)(r4), i3 = Object(n2.a)(t4), a4 = Object(o2.l)(r4);
                a4 && (Object(n2.c)(Object(o2.g)(a4))[i3] = e5);
              }), e4(i2.e).on(function() {
                var e5 = Object(o2.g)(r4), t4 = Object(n2.a)(e5), i3 = Object(o2.l)(r4);
                i3 && delete Object(n2.c)(Object(o2.g)(i3))[t4];
              }), e4(i2.a).on(function() {
                for (var r5 in t3)
                  e4(r5).un(a3);
              });
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return a2;
            });
            var n2 = r3(3), i2 = r3(1), o2 = r3(4);
            function a2(e4, t3) {
              var r4 = { node: e4(n2.d), path: e4(n2.f) };
              function a3(t4, r5, n3) {
                var a4 = e4(t4).emit;
                r5.on(function(e5) {
                  var t5 = n3(e5);
                  false !== t5 && function(e6, t6, r6) {
                    var n4 = Object(i2.k)(r6);
                    e6(t6, Object(i2.i)(Object(i2.l)(Object(i2.j)(o2.a, n4))), Object(i2.i)(Object(i2.j)(o2.c, n4)));
                  }(a4, Object(o2.c)(t5), e5);
                }, t4), e4("removeListener").on(function(n4) {
                  n4 === t4 && (e4(n4).listeners() || r5.un(t4));
                });
              }
              e4("newListener").on(function(e5) {
                var n3 = /(node|path):(.*)/.exec(e5);
                if (n3) {
                  var i3 = r4[n3[1]];
                  i3.hasListener(e5) || a3(e5, i3, t3(n3[2]));
                }
              });
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return c;
            });
            var n2 = r3(0), i2 = r3(1), o2 = r3(4), a2 = r3(2), s3 = r3(6), f2 = r3(15), c = Object(f2.a)(function(e4, t3, r4, f3, c2) {
              var u = Object(n2.d)(o2.a, i2.g), d = Object(n2.d)(o2.c, i2.g);
              function h(e5, t4) {
                return t4[1] ? Object(n2.g)(e5, i2.g) : e5;
              }
              function l(e5) {
                return e5 === n2.a ? n2.a : Object(n2.g)(function(e6) {
                  return u(e6) !== s3.a;
                }, Object(n2.d)(e5, i2.l));
              }
              function p() {
                return function(e5) {
                  return u(e5) === s3.a;
                };
              }
              function b(e5, t4, r5, n3, o3) {
                var s4 = e5(r5);
                if (s4) {
                  var f4 = function(e6, t5, r6) {
                    return Object(i2.f)(function(e7, t6) {
                      return t6(e7, r6);
                    }, t5, e6);
                  }(t4, n3, s4);
                  return o3(r5.substr(Object(a2.e)(s4[0])), f4);
                }
              }
              function y(e5, t4) {
                return Object(n2.j)(b, e5, t4);
              }
              var v = Object(n2.h)(y(e4, Object(i2.h)(h, function(e5, t4) {
                var r5 = t4[3];
                if (!r5)
                  return e5;
                var o3 = Object(n2.j)(a2.b, Object(i2.c)(r5.split(/\W+/))), s4 = Object(n2.d)(o3, d);
                return Object(n2.g)(s4, e5);
              }, function(e5, t4) {
                var r5 = t4[2], i3 = r5 && "*" !== r5 ? function(e6) {
                  return String(u(e6)) === r5;
                } : n2.a;
                return Object(n2.g)(i3, e5);
              }, l)), y(t3, Object(i2.h)(function(e5) {
                if (e5 === n2.a)
                  return n2.a;
                var t4 = p(), r5 = e5, i3 = l(function(e6) {
                  return o3(e6);
                }), o3 = Object(n2.h)(t4, r5, i3);
                return o3;
              })), y(r4, Object(i2.h)()), y(f3, Object(i2.h)(h, p)), y(c2, Object(i2.h)(function(e5) {
                return function(t4) {
                  var r5 = e5(t4);
                  return true === r5 ? Object(i2.g)(t4) : r5;
                };
              })), function(e5) {
                throw Error('"' + e5 + '" could not be tokenised');
              });
              function m(e5, t4) {
                return t4;
              }
              function g(e5, t4) {
                return v(e5, t4, e5 ? g : m);
              }
              return function(e5) {
                try {
                  return g(e5, n2.a);
                } catch (t4) {
                  throw Error('Could not compile "' + e5 + '" because ' + t4.message);
                }
              };
            });
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return b;
            });
            var n2, i2, o2, a2, s3, f2, c, u, d, h, l, p = r3(0), b = (n2 = Object(p.k)(function(e4) {
              return e4.unshift(/^/), (t3 = RegExp(e4.map(Object(p.c)("source")).join(""))).exec.bind(t3);
              var t3;
            }), a2 = n2(i2 = /(\$?)/, /([\w-_]+|\*)/, o2 = /(?:{([\w ]*?)})?/), s3 = n2(i2, /\["([^"]+)"\]/, o2), f2 = n2(i2, /\[(\d+|\*)\]/, o2), c = n2(i2, /()/, /{([\w ]*?)}/), u = n2(/\.\./), d = n2(/\./), h = n2(i2, /!/), l = n2(/$/), function(e4) {
              return e4(Object(p.h)(a2, s3, f2, c), u, d, h, l);
            });
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return s3;
            });
            var n2 = r3(3), i2 = r3(0), o2 = r3(2), a2 = r3(5);
            function s3(e4, t3) {
              var r4, s4 = /^(node|path):./, f2 = e4(n2.h), c = e4(n2.e).emit, u = e4(n2.g).emit, d = Object(i2.k)(function(t4, n3) {
                if (r4[t4])
                  Object(i2.b)(n3, r4[t4]);
                else {
                  var o3 = e4(t4), a3 = n3[0];
                  s4.test(t4) ? h(o3, p(a3)) : o3.on(a3);
                }
                return r4;
              });
              function h(e5, t4, n3) {
                n3 = n3 || t4;
                var o3 = l(t4);
                return e5.on(function() {
                  var t5 = false;
                  r4.forget = function() {
                    t5 = true;
                  }, Object(i2.b)(arguments, o3), delete r4.forget, t5 && e5.un(n3);
                }, n3), r4;
              }
              function l(e5) {
                return function() {
                  try {
                    return e5.apply(r4, arguments);
                  } catch (e6) {
                    setTimeout(function() {
                      throw new Error(e6.message);
                    });
                  }
                };
              }
              function p(e5) {
                return function() {
                  var t4 = e5.apply(this, arguments);
                  Object(o2.a)(t4) && (t4 === a2.a.drop ? c() : u(t4));
                };
              }
              function b(t4, r5, n3) {
                var i3;
                i3 = "node" === t4 ? p(n3) : n3, h(function(t5, r6) {
                  return e4(t5 + ":" + r6);
                }(t4, r5), i3, n3);
              }
              function y(e5, t4, n3) {
                return Object(o2.d)(t4) ? b(e5, t4, n3) : function(e6, t5) {
                  for (var r5 in t5)
                    b(e6, r5, t5[r5]);
                }(e5, t4), r4;
              }
              return e4(n2.i).on(function(e5) {
                r4.root = Object(i2.f)(e5);
              }), e4(n2.c).on(function(e5, t4) {
                r4.header = function(e6) {
                  return e6 ? t4[e6] : t4;
                };
              }), r4 = { on: d, addListener: d, removeListener: function(t4, n3, i3) {
                if ("done" === t4)
                  f2.un(n3);
                else if ("node" === t4 || "path" === t4)
                  e4.un(t4 + ":" + n3, i3);
                else {
                  var o3 = n3;
                  e4(t4).un(o3);
                }
                return r4;
              }, emit: e4.emit, node: Object(i2.j)(y, "node"), path: Object(i2.j)(y, "path"), done: Object(i2.j)(h, f2), start: Object(i2.j)(function(t4, n3) {
                return e4(t4).on(l(n3), n3), r4;
              }, n2.c), fail: e4(n2.b).on, abort: e4(n2.a).emit, header: i2.i, root: i2.i, source: t3 };
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return i2;
            });
            var n2 = r3(3);
            function i2(e4) {
              var t3, r4, i3, o2, a2 = e4(n2.j).emit, s3 = e4(n2.l).emit, f2 = e4(n2.k).emit, c = e4(n2.b).emit, u = /[\\"\n]/g, d = 0, h = d++, l = d++, p = d++, b = d++, y = d++, v = d++, m = d++, g = d++, w = d++, _ = d++, k = d++, A = d++, S = d++, E = d++, x = d++, P = d++, O = d++, T = d++, B = d++, M = d++, R = 65536, I = "", C = false, U = false, j = h, N = [], L = null, D = 0, F = 0, q = 0, z = 0, H = 1;
              function K2(e5) {
                void 0 !== o2 && (s3(o2), f2(), o2 = void 0), t3 = Error(e5 + "\nLn: " + H + "\nCol: " + z + "\nChr: " + r4), c(Object(n2.o)(void 0, void 0, t3));
              }
              function G(e5) {
                return "\r" === e5 || "\n" === e5 || " " === e5 || "	" === e5;
              }
              e4(n2.m).on(function(e5) {
                if (!t3) {
                  if (U)
                    return K2("Cannot write after close");
                  var n3, c2 = 0;
                  for (r4 = e5[0]; r4 && (c2 > 0 && (i3 = r4), r4 = e5[c2++]); )
                    switch (q++, "\n" === r4 ? (H++, z = 0) : z++, j) {
                      case h:
                        if ("{" === r4)
                          j = p;
                        else if ("[" === r4)
                          j = y;
                        else if (!G(r4))
                          return K2("Non-whitespace before {[.");
                        continue;
                      case g:
                      case p:
                        if (G(r4))
                          continue;
                        if (j === g)
                          N.push(w);
                        else {
                          if ("}" === r4) {
                            s3({}), f2(), j = N.pop() || l;
                            continue;
                          }
                          N.push(b);
                        }
                        if ('"' !== r4)
                          return K2('Malformed object key should start with " ');
                        j = m;
                        continue;
                      case w:
                      case b:
                        if (G(r4))
                          continue;
                        if (":" === r4)
                          j === b ? (N.push(b), void 0 !== o2 && (s3({}), a2(o2), o2 = void 0), F++) : void 0 !== o2 && (a2(o2), o2 = void 0), j = l;
                        else if ("}" === r4)
                          void 0 !== o2 && (s3(o2), f2(), o2 = void 0), f2(), F--, j = N.pop() || l;
                        else {
                          if ("," !== r4)
                            return K2("Bad object");
                          j === b && N.push(b), void 0 !== o2 && (s3(o2), f2(), o2 = void 0), j = g;
                        }
                        continue;
                      case y:
                      case l:
                        if (G(r4))
                          continue;
                        if (j === y) {
                          if (s3([]), F++, j = l, "]" === r4) {
                            f2(), F--, j = N.pop() || l;
                            continue;
                          }
                          N.push(v);
                        }
                        if ('"' === r4)
                          j = m;
                        else if ("{" === r4)
                          j = p;
                        else if ("[" === r4)
                          j = y;
                        else if ("t" === r4)
                          j = _;
                        else if ("f" === r4)
                          j = S;
                        else if ("n" === r4)
                          j = O;
                        else if ("-" === r4)
                          I += r4;
                        else if ("0" === r4)
                          I += r4, j = 20;
                        else {
                          if (-1 === "123456789".indexOf(r4))
                            return K2("Bad value");
                          I += r4, j = 20;
                        }
                        continue;
                      case v:
                        if ("," === r4)
                          N.push(v), void 0 !== o2 && (s3(o2), f2(), o2 = void 0), j = l;
                        else {
                          if ("]" !== r4) {
                            if (G(r4))
                              continue;
                            return K2("Bad array");
                          }
                          void 0 !== o2 && (s3(o2), f2(), o2 = void 0), f2(), F--, j = N.pop() || l;
                        }
                        continue;
                      case m:
                        void 0 === o2 && (o2 = "");
                        var d2 = c2 - 1;
                        e:
                          for (; ; ) {
                            for (; D > 0; )
                              if (L += r4, r4 = e5.charAt(c2++), 4 === D ? (o2 += String.fromCharCode(parseInt(L, 16)), D = 0, d2 = c2 - 1) : D++, !r4)
                                break e;
                            if ('"' === r4 && !C) {
                              j = N.pop() || l, o2 += e5.substring(d2, c2 - 1);
                              break;
                            }
                            if (!("\\" !== r4 || C || (C = true, o2 += e5.substring(d2, c2 - 1), r4 = e5.charAt(c2++))))
                              break;
                            if (C) {
                              if (C = false, "n" === r4 ? o2 += "\n" : "r" === r4 ? o2 += "\r" : "t" === r4 ? o2 += "	" : "f" === r4 ? o2 += "\f" : "b" === r4 ? o2 += "\b" : "u" === r4 ? (D = 1, L = "") : o2 += r4, r4 = e5.charAt(c2++), d2 = c2 - 1, r4)
                                continue;
                              break;
                            }
                            u.lastIndex = c2;
                            var W = u.exec(e5);
                            if (!W) {
                              c2 = e5.length + 1, o2 += e5.substring(d2, c2 - 1);
                              break;
                            }
                            if (c2 = W.index + 1, !(r4 = e5.charAt(W.index))) {
                              o2 += e5.substring(d2, c2 - 1);
                              break;
                            }
                          }
                        continue;
                      case _:
                        if (!r4)
                          continue;
                        if ("r" !== r4)
                          return K2("Invalid true started with t" + r4);
                        j = k;
                        continue;
                      case k:
                        if (!r4)
                          continue;
                        if ("u" !== r4)
                          return K2("Invalid true started with tr" + r4);
                        j = A;
                        continue;
                      case A:
                        if (!r4)
                          continue;
                        if ("e" !== r4)
                          return K2("Invalid true started with tru" + r4);
                        s3(true), f2(), j = N.pop() || l;
                        continue;
                      case S:
                        if (!r4)
                          continue;
                        if ("a" !== r4)
                          return K2("Invalid false started with f" + r4);
                        j = E;
                        continue;
                      case E:
                        if (!r4)
                          continue;
                        if ("l" !== r4)
                          return K2("Invalid false started with fa" + r4);
                        j = x;
                        continue;
                      case x:
                        if (!r4)
                          continue;
                        if ("s" !== r4)
                          return K2("Invalid false started with fal" + r4);
                        j = P;
                        continue;
                      case P:
                        if (!r4)
                          continue;
                        if ("e" !== r4)
                          return K2("Invalid false started with fals" + r4);
                        s3(false), f2(), j = N.pop() || l;
                        continue;
                      case O:
                        if (!r4)
                          continue;
                        if ("u" !== r4)
                          return K2("Invalid null started with n" + r4);
                        j = T;
                        continue;
                      case T:
                        if (!r4)
                          continue;
                        if ("l" !== r4)
                          return K2("Invalid null started with nu" + r4);
                        j = B;
                        continue;
                      case B:
                        if (!r4)
                          continue;
                        if ("l" !== r4)
                          return K2("Invalid null started with nul" + r4);
                        s3(null), f2(), j = N.pop() || l;
                        continue;
                      case M:
                        if ("." !== r4)
                          return K2("Leading zero not followed by .");
                        I += r4, j = 20;
                        continue;
                      case 20:
                        if (-1 !== "0123456789".indexOf(r4))
                          I += r4;
                        else if ("." === r4) {
                          if (-1 !== I.indexOf("."))
                            return K2("Invalid number has two dots");
                          I += r4;
                        } else if ("e" === r4 || "E" === r4) {
                          if (-1 !== I.indexOf("e") || -1 !== I.indexOf("E"))
                            return K2("Invalid number has two exponential");
                          I += r4;
                        } else if ("+" === r4 || "-" === r4) {
                          if ("e" !== i3 && "E" !== i3)
                            return K2("Invalid symbol in number");
                          I += r4;
                        } else
                          I && (s3(parseFloat(I)), f2(), I = ""), c2--, j = N.pop() || l;
                        continue;
                      default:
                        return K2("Unknown state: " + j);
                    }
                  q >= R && (n3 = 0, void 0 !== o2 && o2.length > 65536 && (K2("Max buffer length exceeded: textNode"), n3 = Math.max(n3, o2.length)), I.length > 65536 && (K2("Max buffer length exceeded: numberNode"), n3 = Math.max(n3, I.length)), R = 65536 - n3 + q);
                }
              }), e4(n2.n).on(function() {
                if (j === h)
                  return s3({}), f2(), void (U = true);
                j === l && 0 === F || K2("Unexpected end"), void 0 !== o2 && (s3(o2), f2(), o2 = void 0), U = true;
              });
            }
          }, function(e3, t2, r3) {
            r3.d(t2, "a", function() {
              return f2;
            }), r3.d(t2, "b", function() {
              return c;
            });
            var n2 = r3(19), i2 = r3(3), o2 = r3(2), a2 = r3(20), s3 = r3(0);
            function f2() {
              return new XMLHttpRequest();
            }
            function c(e4, t3, r4, f3, c2, u, d) {
              var h = e4(i2.m).emit, l = e4(i2.b).emit, p = 0, b = true;
              function y() {
                if ("2" === String(t3.status)[0]) {
                  var e5 = t3.responseText, r5 = (" " + e5.substr(p)).substr(1);
                  r5 && h(r5), p = Object(o2.e)(e5);
                }
              }
              function v(t4) {
                try {
                  b && e4(i2.c).emit(t4.status, Object(a2.a)(t4.getAllResponseHeaders())), b = false;
                } catch (e5) {
                }
              }
              e4(i2.a).on(function() {
                t3.onreadystatechange = null, t3.abort();
              }), "onprogress" in t3 && (t3.onprogress = y), t3.onreadystatechange = function() {
                switch (t3.readyState) {
                  case 2:
                  case 3:
                    return v(t3);
                  case 4:
                    v(t3), "2" === String(t3.status)[0] ? (y(), e4(i2.n).emit()) : l(Object(i2.o)(t3.status, t3.responseText));
                }
              };
              try {
                for (var m in t3.open(r4, f3, true), u)
                  t3.setRequestHeader(m, u[m]);
                Object(n2.a)(window.location, Object(n2.b)(f3)) || t3.setRequestHeader("X-Requested-With", "XMLHttpRequest"), t3.withCredentials = d, t3.send(c2);
              } catch (e5) {
                window.setTimeout(Object(s3.j)(l, Object(i2.o)(void 0, void 0, e5)), 0);
              }
            }
          }, function(e3, t2, r3) {
            function n2(e4, t3) {
              function r4(t4) {
                return String(t4.port || { "http:": 80, "https:": 443 }[t4.protocol || e4.protocol]);
              }
              return !!(t3.protocol && t3.protocol !== e4.protocol || t3.host && t3.host !== e4.host || t3.host && r4(t3) !== r4(e4));
            }
            function i2(e4) {
              var t3 = /(\w+:)?(?:\/\/)([\w.-]+)?(?::(\d+))?\/?/.exec(e4) || [];
              return { protocol: t3[1] || "", host: t3[2] || "", port: t3[3] || "" };
            }
            r3.d(t2, "a", function() {
              return n2;
            }), r3.d(t2, "b", function() {
              return i2;
            });
          }, function(e3, t2, r3) {
            function n2(e4) {
              var t3 = {};
              return e4 && e4.split("\r\n").forEach(function(e5) {
                var r4 = e5.indexOf(": ");
                t3[e5.substring(0, r4)] = e5.substring(r4 + 2);
              }), t3;
            }
            r3.d(t2, "a", function() {
              return n2;
            });
          }]).default;
        }, "object" === (0, s2.default)(t) && "object" === (0, s2.default)(e2) ? e2.exports = a() : (i = [], void 0 === (o = "function" == typeof (n = a) ? n.apply(t, i) : n) || (e2.exports = o));
      }).call(this, r2(35)(e));
    }, function(e, t, r2) {
      var n = r2(12).formatters, i = r2(38), o = r2(17);
      e.exports = function(e2) {
        var t2 = function(t3) {
          var r3;
          return t3.property ? (e2[t3.property] || (e2[t3.property] = {}), r3 = e2[t3.property]) : r3 = e2, t3.methods && t3.methods.forEach(function(t4) {
            t4 instanceof i || (t4 = new i(t4)), t4.attachToObject(r3), t4.setRequestManager(e2._requestManager);
          }), e2;
        };
        return t2.formatters = n, t2.utils = o, t2.Method = i, t2;
      };
    }, function(e, t, r2) {
      var n = r2(2).default;
      function i() {
        /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
        e.exports = i = function() {
          return t2;
        }, e.exports.__esModule = true, e.exports.default = e.exports;
        var t2 = {}, r3 = Object.prototype, o = r3.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, s2 = a.iterator || "@@iterator", f2 = a.asyncIterator || "@@asyncIterator", c = a.toStringTag || "@@toStringTag";
        function u(e2, t3, r4) {
          return Object.defineProperty(e2, t3, { value: r4, enumerable: true, configurable: true, writable: true }), e2[t3];
        }
        try {
          u({}, "");
        } catch (e2) {
          u = function(e3, t3, r4) {
            return e3[t3] = r4;
          };
        }
        function d(e2, t3, r4, n2) {
          var i2 = t3 && t3.prototype instanceof p ? t3 : p, o2 = Object.create(i2.prototype), a2 = new x(n2 || []);
          return o2._invoke = function(e3, t4, r5) {
            var n3 = "suspendedStart";
            return function(i3, o3) {
              if ("executing" === n3)
                throw new Error("Generator is already running");
              if ("completed" === n3) {
                if ("throw" === i3)
                  throw o3;
                return O();
              }
              for (r5.method = i3, r5.arg = o3; ; ) {
                var a3 = r5.delegate;
                if (a3) {
                  var s3 = A(a3, r5);
                  if (s3) {
                    if (s3 === l)
                      continue;
                    return s3;
                  }
                }
                if ("next" === r5.method)
                  r5.sent = r5._sent = r5.arg;
                else if ("throw" === r5.method) {
                  if ("suspendedStart" === n3)
                    throw n3 = "completed", r5.arg;
                  r5.dispatchException(r5.arg);
                } else
                  "return" === r5.method && r5.abrupt("return", r5.arg);
                n3 = "executing";
                var f3 = h(e3, t4, r5);
                if ("normal" === f3.type) {
                  if (n3 = r5.done ? "completed" : "suspendedYield", f3.arg === l)
                    continue;
                  return { value: f3.arg, done: r5.done };
                }
                "throw" === f3.type && (n3 = "completed", r5.method = "throw", r5.arg = f3.arg);
              }
            };
          }(e2, r4, a2), o2;
        }
        function h(e2, t3, r4) {
          try {
            return { type: "normal", arg: e2.call(t3, r4) };
          } catch (e3) {
            return { type: "throw", arg: e3 };
          }
        }
        t2.wrap = d;
        var l = {};
        function p() {
        }
        function b() {
        }
        function y() {
        }
        var v = {};
        u(v, s2, function() {
          return this;
        });
        var m = Object.getPrototypeOf, g = m && m(m(P([])));
        g && g !== r3 && o.call(g, s2) && (v = g);
        var w = y.prototype = p.prototype = Object.create(v);
        function _(e2) {
          ["next", "throw", "return"].forEach(function(t3) {
            u(e2, t3, function(e3) {
              return this._invoke(t3, e3);
            });
          });
        }
        function k(e2, t3) {
          var r4;
          this._invoke = function(i2, a2) {
            function s3() {
              return new t3(function(r5, s4) {
                !function r6(i3, a3, s5, f3) {
                  var c2 = h(e2[i3], e2, a3);
                  if ("throw" !== c2.type) {
                    var u2 = c2.arg, d2 = u2.value;
                    return d2 && "object" == n(d2) && o.call(d2, "__await") ? t3.resolve(d2.__await).then(function(e3) {
                      r6("next", e3, s5, f3);
                    }, function(e3) {
                      r6("throw", e3, s5, f3);
                    }) : t3.resolve(d2).then(function(e3) {
                      u2.value = e3, s5(u2);
                    }, function(e3) {
                      return r6("throw", e3, s5, f3);
                    });
                  }
                  f3(c2.arg);
                }(i2, a2, r5, s4);
              });
            }
            return r4 = r4 ? r4.then(s3, s3) : s3();
          };
        }
        function A(e2, t3) {
          var r4 = e2.iterator[t3.method];
          if (void 0 === r4) {
            if (t3.delegate = null, "throw" === t3.method) {
              if (e2.iterator.return && (t3.method = "return", t3.arg = void 0, A(e2, t3), "throw" === t3.method))
                return l;
              t3.method = "throw", t3.arg = new TypeError("The iterator does not provide a 'throw' method");
            }
            return l;
          }
          var n2 = h(r4, e2.iterator, t3.arg);
          if ("throw" === n2.type)
            return t3.method = "throw", t3.arg = n2.arg, t3.delegate = null, l;
          var i2 = n2.arg;
          return i2 ? i2.done ? (t3[e2.resultName] = i2.value, t3.next = e2.nextLoc, "return" !== t3.method && (t3.method = "next", t3.arg = void 0), t3.delegate = null, l) : i2 : (t3.method = "throw", t3.arg = new TypeError("iterator result is not an object"), t3.delegate = null, l);
        }
        function S(e2) {
          var t3 = { tryLoc: e2[0] };
          1 in e2 && (t3.catchLoc = e2[1]), 2 in e2 && (t3.finallyLoc = e2[2], t3.afterLoc = e2[3]), this.tryEntries.push(t3);
        }
        function E(e2) {
          var t3 = e2.completion || {};
          t3.type = "normal", delete t3.arg, e2.completion = t3;
        }
        function x(e2) {
          this.tryEntries = [{ tryLoc: "root" }], e2.forEach(S, this), this.reset(true);
        }
        function P(e2) {
          if (e2) {
            var t3 = e2[s2];
            if (t3)
              return t3.call(e2);
            if ("function" == typeof e2.next)
              return e2;
            if (!isNaN(e2.length)) {
              var r4 = -1, n2 = function t4() {
                for (; ++r4 < e2.length; )
                  if (o.call(e2, r4))
                    return t4.value = e2[r4], t4.done = false, t4;
                return t4.value = void 0, t4.done = true, t4;
              };
              return n2.next = n2;
            }
          }
          return { next: O };
        }
        function O() {
          return { value: void 0, done: true };
        }
        return b.prototype = y, u(w, "constructor", y), u(y, "constructor", b), b.displayName = u(y, c, "GeneratorFunction"), t2.isGeneratorFunction = function(e2) {
          var t3 = "function" == typeof e2 && e2.constructor;
          return !!t3 && (t3 === b || "GeneratorFunction" === (t3.displayName || t3.name));
        }, t2.mark = function(e2) {
          return Object.setPrototypeOf ? Object.setPrototypeOf(e2, y) : (e2.__proto__ = y, u(e2, c, "GeneratorFunction")), e2.prototype = Object.create(w), e2;
        }, t2.awrap = function(e2) {
          return { __await: e2 };
        }, _(k.prototype), u(k.prototype, f2, function() {
          return this;
        }), t2.AsyncIterator = k, t2.async = function(e2, r4, n2, i2, o2) {
          void 0 === o2 && (o2 = Promise);
          var a2 = new k(d(e2, r4, n2, i2), o2);
          return t2.isGeneratorFunction(r4) ? a2 : a2.next().then(function(e3) {
            return e3.done ? e3.value : a2.next();
          });
        }, _(w), u(w, c, "Generator"), u(w, s2, function() {
          return this;
        }), u(w, "toString", function() {
          return "[object Generator]";
        }), t2.keys = function(e2) {
          var t3 = [];
          for (var r4 in e2)
            t3.push(r4);
          return t3.reverse(), function r5() {
            for (; t3.length; ) {
              var n2 = t3.pop();
              if (n2 in e2)
                return r5.value = n2, r5.done = false, r5;
            }
            return r5.done = true, r5;
          };
        }, t2.values = P, x.prototype = { constructor: x, reset: function(e2) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e2)
            for (var t3 in this)
              "t" === t3.charAt(0) && o.call(this, t3) && !isNaN(+t3.slice(1)) && (this[t3] = void 0);
        }, stop: function() {
          this.done = true;
          var e2 = this.tryEntries[0].completion;
          if ("throw" === e2.type)
            throw e2.arg;
          return this.rval;
        }, dispatchException: function(e2) {
          if (this.done)
            throw e2;
          var t3 = this;
          function r4(r5, n3) {
            return a2.type = "throw", a2.arg = e2, t3.next = r5, n3 && (t3.method = "next", t3.arg = void 0), !!n3;
          }
          for (var n2 = this.tryEntries.length - 1; n2 >= 0; --n2) {
            var i2 = this.tryEntries[n2], a2 = i2.completion;
            if ("root" === i2.tryLoc)
              return r4("end");
            if (i2.tryLoc <= this.prev) {
              var s3 = o.call(i2, "catchLoc"), f3 = o.call(i2, "finallyLoc");
              if (s3 && f3) {
                if (this.prev < i2.catchLoc)
                  return r4(i2.catchLoc, true);
                if (this.prev < i2.finallyLoc)
                  return r4(i2.finallyLoc);
              } else if (s3) {
                if (this.prev < i2.catchLoc)
                  return r4(i2.catchLoc, true);
              } else {
                if (!f3)
                  throw new Error("try statement without catch or finally");
                if (this.prev < i2.finallyLoc)
                  return r4(i2.finallyLoc);
              }
            }
          }
        }, abrupt: function(e2, t3) {
          for (var r4 = this.tryEntries.length - 1; r4 >= 0; --r4) {
            var n2 = this.tryEntries[r4];
            if (n2.tryLoc <= this.prev && o.call(n2, "finallyLoc") && this.prev < n2.finallyLoc) {
              var i2 = n2;
              break;
            }
          }
          i2 && ("break" === e2 || "continue" === e2) && i2.tryLoc <= t3 && t3 <= i2.finallyLoc && (i2 = null);
          var a2 = i2 ? i2.completion : {};
          return a2.type = e2, a2.arg = t3, i2 ? (this.method = "next", this.next = i2.finallyLoc, l) : this.complete(a2);
        }, complete: function(e2, t3) {
          if ("throw" === e2.type)
            throw e2.arg;
          return "break" === e2.type || "continue" === e2.type ? this.next = e2.arg : "return" === e2.type ? (this.rval = this.arg = e2.arg, this.method = "return", this.next = "end") : "normal" === e2.type && t3 && (this.next = t3), l;
        }, finish: function(e2) {
          for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
            var r4 = this.tryEntries[t3];
            if (r4.finallyLoc === e2)
              return this.complete(r4.completion, r4.afterLoc), E(r4), l;
          }
        }, catch: function(e2) {
          for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
            var r4 = this.tryEntries[t3];
            if (r4.tryLoc === e2) {
              var n2 = r4.completion;
              if ("throw" === n2.type) {
                var i2 = n2.arg;
                E(r4);
              }
              return i2;
            }
          }
          throw new Error("illegal catch attempt");
        }, delegateYield: function(e2, t3, r4) {
          return this.delegate = { iterator: P(e2), resultName: t3, nextLoc: r4 }, "next" === this.method && (this.arg = void 0), l;
        } }, t2;
      }
      e.exports = i, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(12).errors, o = r2(104), a = r2(12).formatters;
      function s2(e2) {
        return e2;
      }
      function f2(e2) {
        o.call(this), this.id = null, this.callback = s2, this.arguments = null, this.lastBlock = null, this.options = { subscription: e2.subscription, type: e2.type, requestManager: e2.requestManager };
      }
      f2.prototype = Object.create(o.prototype), f2.prototype.constructor = f2, f2.prototype._extractCallback = function(e2) {
        if ("function" == typeof e2[e2.length - 1])
          return e2.pop();
      }, f2.prototype._validateArgs = function(e2) {
        var t2 = this.options.subscription;
        if (t2 || (t2 = {}), t2.params || (t2.params = 0), e2.length !== t2.params)
          throw i.InvalidNumberOfParams(e2.length, t2.params, t2.subscriptionName);
      }, f2.prototype._formatInput = function(e2) {
        var t2 = this.options.subscription;
        return t2 && t2.inputFormatter ? t2.inputFormatter.map(function(t3, r3) {
          return t3 ? t3(e2[r3]) : e2[r3];
        }) : e2;
      }, f2.prototype._formatOutput = function(e2) {
        var t2 = this.options.subscription;
        return t2 && t2.outputFormatter && e2 ? t2.outputFormatter(e2) : e2;
      }, f2.prototype._toPayload = function(e2) {
        var t2 = [];
        if (this.callback = this._extractCallback(e2) || s2, this.subscriptionMethod || (this.subscriptionMethod = e2.shift(), this.options.subscription.subscriptionName && (this.subscriptionMethod = this.options.subscription.subscriptionName)), this.arguments || (this.arguments = this._formatInput(e2), this._validateArgs(this.arguments), e2 = []), t2.push(this.subscriptionMethod), t2 = t2.concat(this.arguments), e2.length)
          throw new Error("Only a callback is allowed as parameter on an already instantiated subscription.");
        return { method: this.options.type + "_subscribe", params: t2 };
      }, f2.prototype.unsubscribe = function(e2) {
        this.options.requestManager.removeSubscription(this.id, e2), this.id = null, this.lastBlock = null, this.removeAllListeners();
      }, f2.prototype.subscribe = function() {
        var e2 = this, t2 = Array.prototype.slice.call(arguments), r3 = this._toPayload(t2);
        if (!r3)
          return this;
        if (!this.options.requestManager.provider)
          return setTimeout(function() {
            var t3 = new Error("No provider set.");
            e2.callback(t3, null, e2), e2.emit("error", t3);
          }, 0), this;
        if (!this.options.requestManager.provider.on)
          return setTimeout(function() {
            var t3 = new Error("The current provider doesn't support subscriptions: " + e2.options.requestManager.provider.constructor.name);
            e2.callback(t3, null, e2), e2.emit("error", t3);
          }, 0), this;
        if (this.lastBlock && this.options.params && "object" === (0, n.default)(this.options.params) && (r3.params[1] = this.options.params, r3.params[1].fromBlock = a.inputBlockNumberFormatter(this.lastBlock + 1)), this.id && this.unsubscribe(), this.options.params = r3.params[1], "logs" === r3.params[0] && r3.params[1] && "object" === (0, n.default)(r3.params[1]) && r3.params[1].hasOwnProperty("fromBlock") && isFinite(r3.params[1].fromBlock)) {
          var i2 = Object.assign({}, r3.params[1]);
          this.options.requestManager.send({ method: "eth_getLogs", params: [i2] }, function(t3, r4) {
            t3 ? setTimeout(function() {
              e2.callback(t3, null, e2), e2.emit("error", t3);
            }, 0) : r4.forEach(function(t4) {
              var r5 = e2._formatOutput(t4);
              e2.callback(null, r5, e2), e2.emit("data", r5);
            });
          });
        }
        return "object" === (0, n.default)(r3.params[1]) && delete r3.params[1].fromBlock, this.options.requestManager.send(r3, function(t3, i3) {
          !t3 && i3 ? (e2.id = i3, e2.method = r3.params[0], e2.options.requestManager.addSubscription(e2, function(t4, r4) {
            t4 ? (e2.callback(t4, false, e2), e2.emit("error", t4)) : (Array.isArray(r4) || (r4 = [r4]), r4.forEach(function(t5) {
              var r5 = e2._formatOutput(t5);
              if (e2.lastBlock = r5 && "object" === (0, n.default)(r5) ? r5.blockNumber : null, "function" == typeof e2.options.subscription.subscriptionHandler)
                return e2.options.subscription.subscriptionHandler.call(e2, r5);
              e2.emit("data", r5), e2.callback(null, r5, e2);
            }));
          }), e2.emit("connected", i3)) : setTimeout(function() {
            e2.callback(t3, false, e2), e2.emit("error", t3);
          }, 0);
        }), this;
      }, f2.prototype.resubscribe = function() {
        this.options.requestManager.removeSubscription(this.id), this.id = null, this.subscribe(this.callback);
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(2);
      Object.defineProperty(t, "__esModule", { value: true }), t.TransactionTypes = void 0, t.accessListify = E, t.computeAddress = _, t.parse = function(e2) {
        var t2 = (0, a.arrayify)(e2);
        if (t2[0] > 127)
          return function(e3) {
            var t3 = u.decode(e3);
            9 !== t3.length && 6 !== t3.length && y.throwArgumentError("invalid raw transaction", "rawTransaction", e3);
            var r3 = { nonce: m(t3[0]).toNumber(), gasPrice: m(t3[1]), gasLimit: m(t3[2]), to: v(t3[3]), value: m(t3[4]), data: t3[5], chainId: 0 };
            if (6 === t3.length)
              return r3;
            try {
              r3.v = o.BigNumber.from(t3[6]).toNumber();
            } catch (e4) {
              return r3;
            }
            if (r3.r = (0, a.hexZeroPad)(t3[7], 32), r3.s = (0, a.hexZeroPad)(t3[8], 32), o.BigNumber.from(r3.r).isZero() && o.BigNumber.from(r3.s).isZero())
              r3.chainId = r3.v, r3.v = 0;
            else {
              r3.chainId = Math.floor((r3.v - 35) / 2), r3.chainId < 0 && (r3.chainId = 0);
              var n2 = r3.v - 27, i2 = t3.slice(0, 6);
              0 !== r3.chainId && (i2.push((0, a.hexlify)(r3.chainId)), i2.push("0x"), i2.push("0x"), n2 -= 2 * r3.chainId + 8);
              var s3 = (0, f2.keccak256)(u.encode(i2));
              try {
                r3.from = k(s3, { r: (0, a.hexlify)(r3.r), s: (0, a.hexlify)(r3.s), recoveryParam: n2 });
              } catch (e4) {
              }
              r3.hash = (0, f2.keccak256)(e3);
            }
            return r3.type = null, r3;
          }(t2);
        switch (t2[0]) {
          case 1:
            return function(e3) {
              var t3 = u.decode(e3.slice(1));
              8 !== t3.length && 11 !== t3.length && y.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, a.hexlify)(e3));
              var r3 = { type: 1, chainId: m(t3[0]).toNumber(), nonce: m(t3[1]).toNumber(), gasPrice: m(t3[2]), gasLimit: m(t3[3]), to: v(t3[4]), value: m(t3[5]), data: t3[6], accessList: E(t3[7]) };
              if (8 === t3.length)
                return r3;
              return r3.hash = (0, f2.keccak256)(e3), T(r3, t3.slice(8), O), r3;
            }(t2);
          case 2:
            return function(e3) {
              var t3 = u.decode(e3.slice(1));
              9 !== t3.length && 12 !== t3.length && y.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, a.hexlify)(e3));
              var r3 = m(t3[2]), n2 = m(t3[3]), i2 = { type: 2, chainId: m(t3[0]).toNumber(), nonce: m(t3[1]).toNumber(), maxPriorityFeePerGas: r3, maxFeePerGas: n2, gasPrice: null, gasLimit: m(t3[4]), to: v(t3[5]), value: m(t3[6]), data: t3[7], accessList: E(t3[8]) };
              if (9 === t3.length)
                return i2;
              return i2.hash = (0, f2.keccak256)(e3), T(i2, t3.slice(9), P), i2;
            }(t2);
        }
        return y.throwError("unsupported transaction type: ".concat(t2[0]), h.Logger.errors.UNSUPPORTED_OPERATION, { operation: "parseTransaction", transactionType: t2[0] });
      }, t.recoverAddress = k, t.serialize = function(e2, t2) {
        if (null == e2.type || 0 === e2.type)
          return null != e2.accessList && y.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", e2), function(e3, t3) {
            (0, c.checkProperties)(e3, w);
            var r3 = [];
            g.forEach(function(t4) {
              var n3 = e3[t4.name] || [], i3 = {};
              t4.numeric && (i3.hexPad = "left"), n3 = (0, a.arrayify)((0, a.hexlify)(n3, i3)), t4.length && n3.length !== t4.length && n3.length > 0 && y.throwArgumentError("invalid length for " + t4.name, "transaction:" + t4.name, n3), t4.maxLength && (n3 = (0, a.stripZeros)(n3)).length > t4.maxLength && y.throwArgumentError("invalid length for " + t4.name, "transaction:" + t4.name, n3), r3.push((0, a.hexlify)(n3));
            });
            var n2 = 0;
            null != e3.chainId ? "number" != typeof (n2 = e3.chainId) && y.throwArgumentError("invalid transaction.chainId", "transaction", e3) : t3 && !(0, a.isBytesLike)(t3) && t3.v > 28 && (n2 = Math.floor((t3.v - 35) / 2));
            0 !== n2 && (r3.push((0, a.hexlify)(n2)), r3.push("0x"), r3.push("0x"));
            if (!t3)
              return u.encode(r3);
            var i2 = (0, a.splitSignature)(t3), o2 = 27 + i2.recoveryParam;
            0 !== n2 ? (r3.pop(), r3.pop(), r3.pop(), o2 += 2 * n2 + 8, i2.v > 28 && i2.v !== o2 && y.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", t3)) : i2.v !== o2 && y.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", t3);
            return r3.push((0, a.hexlify)(o2)), r3.push((0, a.stripZeros)((0, a.arrayify)(i2.r))), r3.push((0, a.stripZeros)((0, a.arrayify)(i2.s))), u.encode(r3);
          }(e2, t2);
        switch (e2.type) {
          case 1:
            return O(e2, t2);
          case 2:
            return P(e2, t2);
        }
        return y.throwError("unsupported transaction type: ".concat(e2.type), h.Logger.errors.UNSUPPORTED_OPERATION, { operation: "serializeTransaction", transactionType: e2.type });
      };
      var i = r2(80), o = r2(33), a = r2(11), s2 = r2(106), f2 = r2(39), c = r2(40), u = function(e2, t2) {
        if (!t2 && e2 && e2.__esModule)
          return e2;
        if (null === e2 || "object" !== n(e2) && "function" != typeof e2)
          return { default: e2 };
        var r3 = p(t2);
        if (r3 && r3.has(e2))
          return r3.get(e2);
        var i2 = {}, o2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var a2 in e2)
          if ("default" !== a2 && Object.prototype.hasOwnProperty.call(e2, a2)) {
            var s3 = o2 ? Object.getOwnPropertyDescriptor(e2, a2) : null;
            s3 && (s3.get || s3.set) ? Object.defineProperty(i2, a2, s3) : i2[a2] = e2[a2];
          }
        i2.default = e2, r3 && r3.set(e2, i2);
        return i2;
      }(r2(175)), d = r2(371), h = r2(16), l = r2(374);
      function p(e2) {
        if ("function" != typeof WeakMap)
          return null;
        var t2 = /* @__PURE__ */ new WeakMap(), r3 = /* @__PURE__ */ new WeakMap();
        return (p = function(e3) {
          return e3 ? r3 : t2;
        })(e2);
      }
      var b, y = new h.Logger(l.version);
      function v(e2) {
        return "0x" === e2 ? null : (0, i.getAddress)(e2);
      }
      function m(e2) {
        return "0x" === e2 ? s2.Zero : o.BigNumber.from(e2);
      }
      t.TransactionTypes = b, function(e2) {
        e2[e2.legacy = 0] = "legacy", e2[e2.eip2930 = 1] = "eip2930", e2[e2.eip1559 = 2] = "eip1559";
      }(b || (t.TransactionTypes = b = {}));
      var g = [{ name: "nonce", maxLength: 32, numeric: true }, { name: "gasPrice", maxLength: 32, numeric: true }, { name: "gasLimit", maxLength: 32, numeric: true }, { name: "to", length: 20 }, { name: "value", maxLength: 32, numeric: true }, { name: "data" }], w = { chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true };
      function _(e2) {
        var t2 = (0, d.computePublicKey)(e2);
        return (0, i.getAddress)((0, a.hexDataSlice)((0, f2.keccak256)((0, a.hexDataSlice)(t2, 1)), 12));
      }
      function k(e2, t2) {
        return _((0, d.recoverPublicKey)((0, a.arrayify)(e2), t2));
      }
      function A(e2, t2) {
        var r3 = (0, a.stripZeros)(o.BigNumber.from(e2).toHexString());
        return r3.length > 32 && y.throwArgumentError("invalid length for " + t2, "transaction:" + t2, e2), r3;
      }
      function S(e2, t2) {
        return { address: (0, i.getAddress)(e2), storageKeys: (t2 || []).map(function(t3, r3) {
          return 32 !== (0, a.hexDataLength)(t3) && y.throwArgumentError("invalid access list storageKey", "accessList[".concat(e2, ":").concat(r3, "]"), t3), t3.toLowerCase();
        }) };
      }
      function E(e2) {
        if (Array.isArray(e2))
          return e2.map(function(e3, t3) {
            return Array.isArray(e3) ? (e3.length > 2 && y.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[".concat(t3, "]"), e3), S(e3[0], e3[1])) : S(e3.address, e3.storageKeys);
          });
        var t2 = Object.keys(e2).map(function(t3) {
          var r3 = e2[t3].reduce(function(e3, t4) {
            return e3[t4] = true, e3;
          }, {});
          return S(t3, Object.keys(r3).sort());
        });
        return t2.sort(function(e3, t3) {
          return e3.address.localeCompare(t3.address);
        }), t2;
      }
      function x(e2) {
        return E(e2).map(function(e3) {
          return [e3.address, e3.storageKeys];
        });
      }
      function P(e2, t2) {
        if (null != e2.gasPrice) {
          var r3 = o.BigNumber.from(e2.gasPrice), n2 = o.BigNumber.from(e2.maxFeePerGas || 0);
          r3.eq(n2) || y.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", { gasPrice: r3, maxFeePerGas: n2 });
        }
        var s3 = [A(e2.chainId || 0, "chainId"), A(e2.nonce || 0, "nonce"), A(e2.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), A(e2.maxFeePerGas || 0, "maxFeePerGas"), A(e2.gasLimit || 0, "gasLimit"), null != e2.to ? (0, i.getAddress)(e2.to) : "0x", A(e2.value || 0, "value"), e2.data || "0x", x(e2.accessList || [])];
        if (t2) {
          var f3 = (0, a.splitSignature)(t2);
          s3.push(A(f3.recoveryParam, "recoveryParam")), s3.push((0, a.stripZeros)(f3.r)), s3.push((0, a.stripZeros)(f3.s));
        }
        return (0, a.hexConcat)(["0x02", u.encode(s3)]);
      }
      function O(e2, t2) {
        var r3 = [A(e2.chainId || 0, "chainId"), A(e2.nonce || 0, "nonce"), A(e2.gasPrice || 0, "gasPrice"), A(e2.gasLimit || 0, "gasLimit"), null != e2.to ? (0, i.getAddress)(e2.to) : "0x", A(e2.value || 0, "value"), e2.data || "0x", x(e2.accessList || [])];
        if (t2) {
          var n2 = (0, a.splitSignature)(t2);
          r3.push(A(n2.recoveryParam, "recoveryParam")), r3.push((0, a.stripZeros)(n2.r)), r3.push((0, a.stripZeros)(n2.s));
        }
        return (0, a.hexConcat)(["0x01", u.encode(r3)]);
      }
      function T(e2, t2, r3) {
        try {
          var n2 = m(t2[0]).toNumber();
          if (0 !== n2 && 1 !== n2)
            throw new Error("bad recid");
          e2.v = n2;
        } catch (e3) {
          y.throwArgumentError("invalid v for transaction type: 1", "v", t2[0]);
        }
        e2.r = (0, a.hexZeroPad)(t2[1], 32), e2.s = (0, a.hexZeroPad)(t2[2], 32);
        try {
          var i2 = (0, f2.keccak256)(r3(e2));
          e2.from = k(i2, { r: e2.r, s: e2.s, recoveryParam: e2.v });
        } catch (e3) {
        }
      }
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "logger/5.7.0";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "bytes/5.7.0";
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.FixedNumber = t.FixedFormat = void 0, t.formatFixed = m, t.parseFixed = g;
      var i = n(r2(2)), o = n(r2(8)), a = n(r2(9)), s2 = r2(11), f2 = r2(16), c = r2(174), u = r2(173), d = new f2.Logger(c.version), h = {}, l = u.BigNumber.from(0), p = u.BigNumber.from(-1);
      function b(e2, t2, r3, n2) {
        var i2 = { fault: t2, operation: r3 };
        return void 0 !== n2 && (i2.value = n2), d.throwError(e2, f2.Logger.errors.NUMERIC_FAULT, i2);
      }
      for (var y = "0"; y.length < 256; )
        y += y;
      function v(e2) {
        if ("number" != typeof e2)
          try {
            e2 = u.BigNumber.from(e2).toNumber();
          } catch (e3) {
          }
        return "number" == typeof e2 && e2 >= 0 && e2 <= 256 && !(e2 % 1) ? "1" + y.substring(0, e2) : d.throwArgumentError("invalid decimal size", "decimals", e2);
      }
      function m(e2, t2) {
        null == t2 && (t2 = 0);
        var r3 = v(t2), n2 = (e2 = u.BigNumber.from(e2)).lt(l);
        n2 && (e2 = e2.mul(p));
        for (var i2 = e2.mod(r3).toString(); i2.length < r3.length - 1; )
          i2 = "0" + i2;
        i2 = i2.match(/^([0-9]*[1-9]|0)(0*)/)[1];
        var o2 = e2.div(r3).toString();
        return e2 = 1 === r3.length ? o2 : o2 + "." + i2, n2 && (e2 = "-" + e2), e2;
      }
      function g(e2, t2) {
        null == t2 && (t2 = 0);
        var r3 = v(t2);
        "string" == typeof e2 && e2.match(/^-?[0-9.]+$/) || d.throwArgumentError("invalid decimal value", "value", e2);
        var n2 = "-" === e2.substring(0, 1);
        n2 && (e2 = e2.substring(1)), "." === e2 && d.throwArgumentError("missing value", "value", e2);
        var i2 = e2.split(".");
        i2.length > 2 && d.throwArgumentError("too many decimal points", "value", e2);
        var o2 = i2[0], a2 = i2[1];
        for (o2 || (o2 = "0"), a2 || (a2 = "0"); "0" === a2[a2.length - 1]; )
          a2 = a2.substring(0, a2.length - 1);
        for (a2.length > r3.length - 1 && b("fractional component exceeds decimals", "underflow", "parseFixed"), "" === a2 && (a2 = "0"); a2.length < r3.length - 1; )
          a2 += "0";
        var s3 = u.BigNumber.from(o2), f3 = u.BigNumber.from(a2), c2 = s3.mul(r3).add(f3);
        return n2 && (c2 = c2.mul(p)), c2;
      }
      var w = function() {
        function e2(t2, r3, n2, i2) {
          (0, o.default)(this, e2), t2 !== h && d.throwError("cannot use FixedFormat constructor; use FixedFormat.from", f2.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.signed = r3, this.width = n2, this.decimals = i2, this.name = (r3 ? "" : "u") + "fixed" + String(n2) + "x" + String(i2), this._multiplier = v(i2), Object.freeze(this);
        }
        return (0, a.default)(e2, null, [{ key: "from", value: function(t2) {
          if (t2 instanceof e2)
            return t2;
          "number" == typeof t2 && (t2 = "fixed128x".concat(t2));
          var r3 = true, n2 = 128, o2 = 18;
          if ("string" == typeof t2)
            if ("fixed" === t2)
              ;
            else if ("ufixed" === t2)
              r3 = false;
            else {
              var a2 = t2.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
              a2 || d.throwArgumentError("invalid fixed format", "format", t2), r3 = "u" !== a2[1], n2 = parseInt(a2[2]), o2 = parseInt(a2[3]);
            }
          else if (t2) {
            var s3 = function(e3, r4, n3) {
              return null == t2[e3] ? n3 : ((0, i.default)(t2[e3]) !== r4 && d.throwArgumentError("invalid fixed format (" + e3 + " not " + r4 + ")", "format." + e3, t2[e3]), t2[e3]);
            };
            r3 = s3("signed", "boolean", r3), n2 = s3("width", "number", n2), o2 = s3("decimals", "number", o2);
          }
          return n2 % 8 && d.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", n2), o2 > 80 && d.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", o2), new e2(h, r3, n2, o2);
        } }]), e2;
      }();
      t.FixedFormat = w;
      var _ = function() {
        function e2(t2, r3, n2, i2) {
          (0, o.default)(this, e2), t2 !== h && d.throwError("cannot use FixedNumber constructor; use FixedNumber.from", f2.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.format = i2, this._hex = r3, this._value = n2, this._isFixedNumber = true, Object.freeze(this);
        }
        return (0, a.default)(e2, [{ key: "_checkFormat", value: function(e3) {
          this.format.name !== e3.format.name && d.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", e3);
        } }, { key: "addUnsafe", value: function(t2) {
          this._checkFormat(t2);
          var r3 = g(this._value, this.format.decimals), n2 = g(t2._value, t2.format.decimals);
          return e2.fromValue(r3.add(n2), this.format.decimals, this.format);
        } }, { key: "subUnsafe", value: function(t2) {
          this._checkFormat(t2);
          var r3 = g(this._value, this.format.decimals), n2 = g(t2._value, t2.format.decimals);
          return e2.fromValue(r3.sub(n2), this.format.decimals, this.format);
        } }, { key: "mulUnsafe", value: function(t2) {
          this._checkFormat(t2);
          var r3 = g(this._value, this.format.decimals), n2 = g(t2._value, t2.format.decimals);
          return e2.fromValue(r3.mul(n2).div(this.format._multiplier), this.format.decimals, this.format);
        } }, { key: "divUnsafe", value: function(t2) {
          this._checkFormat(t2);
          var r3 = g(this._value, this.format.decimals), n2 = g(t2._value, t2.format.decimals);
          return e2.fromValue(r3.mul(this.format._multiplier).div(n2), this.format.decimals, this.format);
        } }, { key: "floor", value: function() {
          var t2 = this.toString().split(".");
          1 === t2.length && t2.push("0");
          var r3 = e2.from(t2[0], this.format), n2 = !t2[1].match(/^(0*)$/);
          return this.isNegative() && n2 && (r3 = r3.subUnsafe(k.toFormat(r3.format))), r3;
        } }, { key: "ceiling", value: function() {
          var t2 = this.toString().split(".");
          1 === t2.length && t2.push("0");
          var r3 = e2.from(t2[0], this.format), n2 = !t2[1].match(/^(0*)$/);
          return !this.isNegative() && n2 && (r3 = r3.addUnsafe(k.toFormat(r3.format))), r3;
        } }, { key: "round", value: function(t2) {
          null == t2 && (t2 = 0);
          var r3 = this.toString().split(".");
          if (1 === r3.length && r3.push("0"), (t2 < 0 || t2 > 80 || t2 % 1) && d.throwArgumentError("invalid decimal count", "decimals", t2), r3[1].length <= t2)
            return this;
          var n2 = e2.from("1" + y.substring(0, t2), this.format), i2 = A.toFormat(this.format);
          return this.mulUnsafe(n2).addUnsafe(i2).floor().divUnsafe(n2);
        } }, { key: "isZero", value: function() {
          return "0.0" === this._value || "0" === this._value;
        } }, { key: "isNegative", value: function() {
          return "-" === this._value[0];
        } }, { key: "toString", value: function() {
          return this._value;
        } }, { key: "toHexString", value: function(e3) {
          if (null == e3)
            return this._hex;
          e3 % 8 && d.throwArgumentError("invalid byte width", "width", e3);
          var t2 = u.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(e3).toHexString();
          return (0, s2.hexZeroPad)(t2, e3 / 8);
        } }, { key: "toUnsafeFloat", value: function() {
          return parseFloat(this.toString());
        } }, { key: "toFormat", value: function(t2) {
          return e2.fromString(this._value, t2);
        } }], [{ key: "fromValue", value: function(t2, r3, n2) {
          return null != n2 || null == r3 || (0, u.isBigNumberish)(r3) || (n2 = r3, r3 = null), null == r3 && (r3 = 0), null == n2 && (n2 = "fixed"), e2.fromString(m(t2, r3), w.from(n2));
        } }, { key: "fromString", value: function(t2, r3) {
          null == r3 && (r3 = "fixed");
          var n2 = w.from(r3), i2 = g(t2, n2.decimals);
          !n2.signed && i2.lt(l) && b("unsigned value cannot be negative", "overflow", "value", t2);
          var o2 = null;
          n2.signed ? o2 = i2.toTwos(n2.width).toHexString() : (o2 = i2.toHexString(), o2 = (0, s2.hexZeroPad)(o2, n2.width / 8));
          var a2 = m(i2, n2.decimals);
          return new e2(h, o2, a2, n2);
        } }, { key: "fromBytes", value: function(t2, r3) {
          null == r3 && (r3 = "fixed");
          var n2 = w.from(r3);
          if ((0, s2.arrayify)(t2).length > n2.width / 8)
            throw new Error("overflow");
          var i2 = u.BigNumber.from(t2);
          n2.signed && (i2 = i2.fromTwos(n2.width));
          var o2 = i2.toTwos((n2.signed ? 0 : 1) + n2.width).toHexString(), a2 = m(i2, n2.decimals);
          return new e2(h, o2, a2, n2);
        } }, { key: "from", value: function(t2, r3) {
          if ("string" == typeof t2)
            return e2.fromString(t2, r3);
          if ((0, s2.isBytes)(t2))
            return e2.fromBytes(t2, r3);
          try {
            return e2.fromValue(t2, 0, r3);
          } catch (e3) {
            if (e3.code !== f2.Logger.errors.INVALID_ARGUMENT)
              throw e3;
          }
          return d.throwArgumentError("invalid FixedNumber value", "value", t2);
        } }, { key: "isFixedNumber", value: function(e3) {
          return !(!e3 || !e3._isFixedNumber);
        } }]), e2;
      }();
      t.FixedNumber = _;
      var k = _.from(1), A = _.from("0.5");
    }, function(e, t, r2) {
      (function(e2, n, i) {
        var o, a = r2(0)(r2(2));
        /**
         * [js-sha3]{@link https://github.com/emn178/js-sha3}
         *
         * @version 0.8.0
         * @author Chen, Yi-Cyuan [emn178@gmail.com]
         * @copyright Chen, Yi-Cyuan 2015-2018
         * @license MIT
         */
        !function() {
          var s2 = "input is invalid type", f2 = "object" === ("undefined" == typeof window ? "undefined" : (0, a.default)(window)), c = f2 ? window : {};
          c.JS_SHA3_NO_WINDOW && (f2 = false);
          var u = !f2 && "object" === ("undefined" == typeof self ? "undefined" : (0, a.default)(self));
          !c.JS_SHA3_NO_NODE_JS && "object" === (void 0 === e2 ? "undefined" : (0, a.default)(e2)) && e2.versions && e2.versions.node ? c = n : u && (c = self);
          var d = !c.JS_SHA3_NO_COMMON_JS && "object" === (0, a.default)(i) && i.exports, h = r2(76), l = !c.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer, p = "0123456789abcdef".split(""), b = [4, 1024, 262144, 67108864], y = [0, 8, 16, 24], v = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], m = [224, 256, 384, 512], g = [128, 256], w = ["hex", "buffer", "arrayBuffer", "array", "digest"], _ = { 128: 168, 256: 136 };
          !c.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function(e3) {
            return "[object Array]" === Object.prototype.toString.call(e3);
          }), !l || !c.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(e3) {
            return "object" === (0, a.default)(e3) && e3.buffer && e3.buffer.constructor === ArrayBuffer;
          });
          for (var k = function(e3, t2, r3) {
            return function(n2) {
              return new N(e3, t2, e3).update(n2)[r3]();
            };
          }, A = function(e3, t2, r3) {
            return function(n2, i2) {
              return new N(e3, t2, i2).update(n2)[r3]();
            };
          }, S = function(e3, t2, r3) {
            return function(t3, n2, i2, o2) {
              return T["cshake" + e3].update(t3, n2, i2, o2)[r3]();
            };
          }, E = function(e3, t2, r3) {
            return function(t3, n2, i2, o2) {
              return T["kmac" + e3].update(t3, n2, i2, o2)[r3]();
            };
          }, x = function(e3, t2, r3, n2) {
            for (var i2 = 0; i2 < w.length; ++i2) {
              var o2 = w[i2];
              e3[o2] = t2(r3, n2, o2);
            }
            return e3;
          }, P = function(e3, t2) {
            var r3 = k(e3, t2, "hex");
            return r3.create = function() {
              return new N(e3, t2, e3);
            }, r3.update = function(e4) {
              return r3.create().update(e4);
            }, x(r3, k, e3, t2);
          }, O = [{ name: "keccak", padding: [1, 256, 65536, 16777216], bits: m, createMethod: P }, { name: "sha3", padding: [6, 1536, 393216, 100663296], bits: m, createMethod: P }, { name: "shake", padding: [31, 7936, 2031616, 520093696], bits: g, createMethod: function(e3, t2) {
            var r3 = A(e3, t2, "hex");
            return r3.create = function(r4) {
              return new N(e3, t2, r4);
            }, r3.update = function(e4, t3) {
              return r3.create(t3).update(e4);
            }, x(r3, A, e3, t2);
          } }, { name: "cshake", padding: b, bits: g, createMethod: function(e3, t2) {
            var r3 = _[e3], n2 = S(e3, 0, "hex");
            return n2.create = function(n3, i2, o2) {
              return i2 || o2 ? new N(e3, t2, n3).bytepad([i2, o2], r3) : T["shake" + e3].create(n3);
            }, n2.update = function(e4, t3, r4, i2) {
              return n2.create(t3, r4, i2).update(e4);
            }, x(n2, S, e3, t2);
          } }, { name: "kmac", padding: b, bits: g, createMethod: function(e3, t2) {
            var r3 = _[e3], n2 = E(e3, 0, "hex");
            return n2.create = function(n3, i2, o2) {
              return new L(e3, t2, i2).bytepad(["KMAC", o2], r3).bytepad([n3], r3);
            }, n2.update = function(e4, t3, r4, i2) {
              return n2.create(e4, r4, i2).update(t3);
            }, x(n2, E, e3, t2);
          } }], T = {}, B = [], M = 0; M < O.length; ++M)
            for (var R = O[M], I = R.bits, C = 0; C < I.length; ++C) {
              var U = R.name + "_" + I[C];
              if (B.push(U), T[U] = R.createMethod(I[C], R.padding), "sha3" !== R.name) {
                var j = R.name + I[C];
                B.push(j), T[j] = T[U];
              }
            }
          function N(e3, t2, r3) {
            this.blocks = [], this.s = [], this.padding = t2, this.outputBits = r3, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (e3 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r3 >> 5, this.extraBytes = (31 & r3) >> 3;
            for (var n2 = 0; n2 < 50; ++n2)
              this.s[n2] = 0;
          }
          function L(e3, t2, r3) {
            N.call(this, e3, t2, r3);
          }
          N.prototype.update = function(e3) {
            if (this.finalized)
              throw new Error("finalize already called");
            var t2, r3 = (0, a.default)(e3);
            if ("string" !== r3) {
              if ("object" !== r3)
                throw new Error(s2);
              if (null === e3)
                throw new Error(s2);
              if (l && e3.constructor === ArrayBuffer)
                e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || l && ArrayBuffer.isView(e3)))
                throw new Error(s2);
              t2 = true;
            }
            for (var n2, i2, o2 = this.blocks, f3 = this.byteCount, c2 = e3.length, u2 = this.blockCount, d2 = 0, h2 = this.s; d2 < c2; ) {
              if (this.reset)
                for (this.reset = false, o2[0] = this.block, n2 = 1; n2 < u2 + 1; ++n2)
                  o2[n2] = 0;
              if (t2)
                for (n2 = this.start; d2 < c2 && n2 < f3; ++d2)
                  o2[n2 >> 2] |= e3[d2] << y[3 & n2++];
              else
                for (n2 = this.start; d2 < c2 && n2 < f3; ++d2)
                  (i2 = e3.charCodeAt(d2)) < 128 ? o2[n2 >> 2] |= i2 << y[3 & n2++] : i2 < 2048 ? (o2[n2 >> 2] |= (192 | i2 >> 6) << y[3 & n2++], o2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]) : i2 < 55296 || i2 >= 57344 ? (o2[n2 >> 2] |= (224 | i2 >> 12) << y[3 & n2++], o2[n2 >> 2] |= (128 | i2 >> 6 & 63) << y[3 & n2++], o2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]) : (i2 = 65536 + ((1023 & i2) << 10 | 1023 & e3.charCodeAt(++d2)), o2[n2 >> 2] |= (240 | i2 >> 18) << y[3 & n2++], o2[n2 >> 2] |= (128 | i2 >> 12 & 63) << y[3 & n2++], o2[n2 >> 2] |= (128 | i2 >> 6 & 63) << y[3 & n2++], o2[n2 >> 2] |= (128 | 63 & i2) << y[3 & n2++]);
              if (this.lastByteIndex = n2, n2 >= f3) {
                for (this.start = n2 - f3, this.block = o2[u2], n2 = 0; n2 < u2; ++n2)
                  h2[n2] ^= o2[n2];
                D(h2), this.reset = true;
              } else
                this.start = n2;
            }
            return this;
          }, N.prototype.encode = function(e3, t2) {
            var r3 = 255 & e3, n2 = 1, i2 = [r3];
            for (r3 = 255 & (e3 >>= 8); r3 > 0; )
              i2.unshift(r3), r3 = 255 & (e3 >>= 8), ++n2;
            return t2 ? i2.push(n2) : i2.unshift(n2), this.update(i2), i2.length;
          }, N.prototype.encodeString = function(e3) {
            var t2, r3 = (0, a.default)(e3);
            if ("string" !== r3) {
              if ("object" !== r3)
                throw new Error(s2);
              if (null === e3)
                throw new Error(s2);
              if (l && e3.constructor === ArrayBuffer)
                e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || l && ArrayBuffer.isView(e3)))
                throw new Error(s2);
              t2 = true;
            }
            var n2 = 0, i2 = e3.length;
            if (t2)
              n2 = i2;
            else
              for (var o2 = 0; o2 < e3.length; ++o2) {
                var f3 = e3.charCodeAt(o2);
                f3 < 128 ? n2 += 1 : f3 < 2048 ? n2 += 2 : f3 < 55296 || f3 >= 57344 ? n2 += 3 : (f3 = 65536 + ((1023 & f3) << 10 | 1023 & e3.charCodeAt(++o2)), n2 += 4);
              }
            return n2 += this.encode(8 * n2), this.update(e3), n2;
          }, N.prototype.bytepad = function(e3, t2) {
            for (var r3 = this.encode(t2), n2 = 0; n2 < e3.length; ++n2)
              r3 += this.encodeString(e3[n2]);
            var i2 = t2 - r3 % t2, o2 = [];
            return o2.length = i2, this.update(o2), this;
          }, N.prototype.finalize = function() {
            if (!this.finalized) {
              this.finalized = true;
              var e3 = this.blocks, t2 = this.lastByteIndex, r3 = this.blockCount, n2 = this.s;
              if (e3[t2 >> 2] |= this.padding[3 & t2], this.lastByteIndex === this.byteCount)
                for (e3[0] = e3[r3], t2 = 1; t2 < r3 + 1; ++t2)
                  e3[t2] = 0;
              for (e3[r3 - 1] |= 2147483648, t2 = 0; t2 < r3; ++t2)
                n2[t2] ^= e3[t2];
              D(n2);
            }
          }, N.prototype.toString = N.prototype.hex = function() {
            this.finalize();
            for (var e3, t2 = this.blockCount, r3 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, o2 = 0, a2 = 0, s3 = ""; a2 < n2; ) {
              for (o2 = 0; o2 < t2 && a2 < n2; ++o2, ++a2)
                e3 = r3[o2], s3 += p[e3 >> 4 & 15] + p[15 & e3] + p[e3 >> 12 & 15] + p[e3 >> 8 & 15] + p[e3 >> 20 & 15] + p[e3 >> 16 & 15] + p[e3 >> 28 & 15] + p[e3 >> 24 & 15];
              a2 % t2 == 0 && (D(r3), o2 = 0);
            }
            return i2 && (e3 = r3[o2], s3 += p[e3 >> 4 & 15] + p[15 & e3], i2 > 1 && (s3 += p[e3 >> 12 & 15] + p[e3 >> 8 & 15]), i2 > 2 && (s3 += p[e3 >> 20 & 15] + p[e3 >> 16 & 15])), s3;
          }, N.prototype.arrayBuffer = function() {
            this.finalize();
            var e3, t2 = this.blockCount, r3 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, o2 = 0, a2 = 0, s3 = this.outputBits >> 3;
            e3 = i2 ? new ArrayBuffer(n2 + 1 << 2) : new ArrayBuffer(s3);
            for (var f3 = new Uint32Array(e3); a2 < n2; ) {
              for (o2 = 0; o2 < t2 && a2 < n2; ++o2, ++a2)
                f3[a2] = r3[o2];
              a2 % t2 == 0 && D(r3);
            }
            return i2 && (f3[o2] = r3[o2], e3 = e3.slice(0, s3)), e3;
          }, N.prototype.buffer = N.prototype.arrayBuffer, N.prototype.digest = N.prototype.array = function() {
            this.finalize();
            for (var e3, t2, r3 = this.blockCount, n2 = this.s, i2 = this.outputBlocks, o2 = this.extraBytes, a2 = 0, s3 = 0, f3 = []; s3 < i2; ) {
              for (a2 = 0; a2 < r3 && s3 < i2; ++a2, ++s3)
                e3 = s3 << 2, t2 = n2[a2], f3[e3] = 255 & t2, f3[e3 + 1] = t2 >> 8 & 255, f3[e3 + 2] = t2 >> 16 & 255, f3[e3 + 3] = t2 >> 24 & 255;
              s3 % r3 == 0 && D(n2);
            }
            return o2 && (e3 = s3 << 2, t2 = n2[a2], f3[e3] = 255 & t2, o2 > 1 && (f3[e3 + 1] = t2 >> 8 & 255), o2 > 2 && (f3[e3 + 2] = t2 >> 16 & 255)), f3;
          }, L.prototype = new N(), L.prototype.finalize = function() {
            return this.encode(this.outputBits, true), N.prototype.finalize.call(this);
          };
          var D = function(e3) {
            var t2, r3, n2, i2, o2, a2, s3, f3, c2, u2, d2, h2, l2, p2, b2, y2, m2, g2, w2, _2, k2, A2, S2, E2, x2, P2, O2, T2, B2, M2, R2, I2, C2, U2, j2, N2, L2, D2, F, q, z, H, K2, G, W, V, J, Y, X, Q, Z, $, ee, te, re, ne, ie, oe, ae, se, fe, ce, ue;
            for (n2 = 0; n2 < 48; n2 += 2)
              i2 = e3[0] ^ e3[10] ^ e3[20] ^ e3[30] ^ e3[40], o2 = e3[1] ^ e3[11] ^ e3[21] ^ e3[31] ^ e3[41], a2 = e3[2] ^ e3[12] ^ e3[22] ^ e3[32] ^ e3[42], s3 = e3[3] ^ e3[13] ^ e3[23] ^ e3[33] ^ e3[43], f3 = e3[4] ^ e3[14] ^ e3[24] ^ e3[34] ^ e3[44], c2 = e3[5] ^ e3[15] ^ e3[25] ^ e3[35] ^ e3[45], u2 = e3[6] ^ e3[16] ^ e3[26] ^ e3[36] ^ e3[46], d2 = e3[7] ^ e3[17] ^ e3[27] ^ e3[37] ^ e3[47], t2 = (h2 = e3[8] ^ e3[18] ^ e3[28] ^ e3[38] ^ e3[48]) ^ (a2 << 1 | s3 >>> 31), r3 = (l2 = e3[9] ^ e3[19] ^ e3[29] ^ e3[39] ^ e3[49]) ^ (s3 << 1 | a2 >>> 31), e3[0] ^= t2, e3[1] ^= r3, e3[10] ^= t2, e3[11] ^= r3, e3[20] ^= t2, e3[21] ^= r3, e3[30] ^= t2, e3[31] ^= r3, e3[40] ^= t2, e3[41] ^= r3, t2 = i2 ^ (f3 << 1 | c2 >>> 31), r3 = o2 ^ (c2 << 1 | f3 >>> 31), e3[2] ^= t2, e3[3] ^= r3, e3[12] ^= t2, e3[13] ^= r3, e3[22] ^= t2, e3[23] ^= r3, e3[32] ^= t2, e3[33] ^= r3, e3[42] ^= t2, e3[43] ^= r3, t2 = a2 ^ (u2 << 1 | d2 >>> 31), r3 = s3 ^ (d2 << 1 | u2 >>> 31), e3[4] ^= t2, e3[5] ^= r3, e3[14] ^= t2, e3[15] ^= r3, e3[24] ^= t2, e3[25] ^= r3, e3[34] ^= t2, e3[35] ^= r3, e3[44] ^= t2, e3[45] ^= r3, t2 = f3 ^ (h2 << 1 | l2 >>> 31), r3 = c2 ^ (l2 << 1 | h2 >>> 31), e3[6] ^= t2, e3[7] ^= r3, e3[16] ^= t2, e3[17] ^= r3, e3[26] ^= t2, e3[27] ^= r3, e3[36] ^= t2, e3[37] ^= r3, e3[46] ^= t2, e3[47] ^= r3, t2 = u2 ^ (i2 << 1 | o2 >>> 31), r3 = d2 ^ (o2 << 1 | i2 >>> 31), e3[8] ^= t2, e3[9] ^= r3, e3[18] ^= t2, e3[19] ^= r3, e3[28] ^= t2, e3[29] ^= r3, e3[38] ^= t2, e3[39] ^= r3, e3[48] ^= t2, e3[49] ^= r3, p2 = e3[0], b2 = e3[1], V = e3[11] << 4 | e3[10] >>> 28, J = e3[10] << 4 | e3[11] >>> 28, T2 = e3[20] << 3 | e3[21] >>> 29, B2 = e3[21] << 3 | e3[20] >>> 29, se = e3[31] << 9 | e3[30] >>> 23, fe = e3[30] << 9 | e3[31] >>> 23, H = e3[40] << 18 | e3[41] >>> 14, K2 = e3[41] << 18 | e3[40] >>> 14, U2 = e3[2] << 1 | e3[3] >>> 31, j2 = e3[3] << 1 | e3[2] >>> 31, y2 = e3[13] << 12 | e3[12] >>> 20, m2 = e3[12] << 12 | e3[13] >>> 20, Y = e3[22] << 10 | e3[23] >>> 22, X = e3[23] << 10 | e3[22] >>> 22, M2 = e3[33] << 13 | e3[32] >>> 19, R2 = e3[32] << 13 | e3[33] >>> 19, ce = e3[42] << 2 | e3[43] >>> 30, ue = e3[43] << 2 | e3[42] >>> 30, te = e3[5] << 30 | e3[4] >>> 2, re = e3[4] << 30 | e3[5] >>> 2, N2 = e3[14] << 6 | e3[15] >>> 26, L2 = e3[15] << 6 | e3[14] >>> 26, g2 = e3[25] << 11 | e3[24] >>> 21, w2 = e3[24] << 11 | e3[25] >>> 21, Q = e3[34] << 15 | e3[35] >>> 17, Z = e3[35] << 15 | e3[34] >>> 17, I2 = e3[45] << 29 | e3[44] >>> 3, C2 = e3[44] << 29 | e3[45] >>> 3, E2 = e3[6] << 28 | e3[7] >>> 4, x2 = e3[7] << 28 | e3[6] >>> 4, ne = e3[17] << 23 | e3[16] >>> 9, ie = e3[16] << 23 | e3[17] >>> 9, D2 = e3[26] << 25 | e3[27] >>> 7, F = e3[27] << 25 | e3[26] >>> 7, _2 = e3[36] << 21 | e3[37] >>> 11, k2 = e3[37] << 21 | e3[36] >>> 11, $ = e3[47] << 24 | e3[46] >>> 8, ee = e3[46] << 24 | e3[47] >>> 8, G = e3[8] << 27 | e3[9] >>> 5, W = e3[9] << 27 | e3[8] >>> 5, P2 = e3[18] << 20 | e3[19] >>> 12, O2 = e3[19] << 20 | e3[18] >>> 12, oe = e3[29] << 7 | e3[28] >>> 25, ae = e3[28] << 7 | e3[29] >>> 25, q = e3[38] << 8 | e3[39] >>> 24, z = e3[39] << 8 | e3[38] >>> 24, A2 = e3[48] << 14 | e3[49] >>> 18, S2 = e3[49] << 14 | e3[48] >>> 18, e3[0] = p2 ^ ~y2 & g2, e3[1] = b2 ^ ~m2 & w2, e3[10] = E2 ^ ~P2 & T2, e3[11] = x2 ^ ~O2 & B2, e3[20] = U2 ^ ~N2 & D2, e3[21] = j2 ^ ~L2 & F, e3[30] = G ^ ~V & Y, e3[31] = W ^ ~J & X, e3[40] = te ^ ~ne & oe, e3[41] = re ^ ~ie & ae, e3[2] = y2 ^ ~g2 & _2, e3[3] = m2 ^ ~w2 & k2, e3[12] = P2 ^ ~T2 & M2, e3[13] = O2 ^ ~B2 & R2, e3[22] = N2 ^ ~D2 & q, e3[23] = L2 ^ ~F & z, e3[32] = V ^ ~Y & Q, e3[33] = J ^ ~X & Z, e3[42] = ne ^ ~oe & se, e3[43] = ie ^ ~ae & fe, e3[4] = g2 ^ ~_2 & A2, e3[5] = w2 ^ ~k2 & S2, e3[14] = T2 ^ ~M2 & I2, e3[15] = B2 ^ ~R2 & C2, e3[24] = D2 ^ ~q & H, e3[25] = F ^ ~z & K2, e3[34] = Y ^ ~Q & $, e3[35] = X ^ ~Z & ee, e3[44] = oe ^ ~se & ce, e3[45] = ae ^ ~fe & ue, e3[6] = _2 ^ ~A2 & p2, e3[7] = k2 ^ ~S2 & b2, e3[16] = M2 ^ ~I2 & E2, e3[17] = R2 ^ ~C2 & x2, e3[26] = q ^ ~H & U2, e3[27] = z ^ ~K2 & j2, e3[36] = Q ^ ~$ & G, e3[37] = Z ^ ~ee & W, e3[46] = se ^ ~ce & te, e3[47] = fe ^ ~ue & re, e3[8] = A2 ^ ~p2 & y2, e3[9] = S2 ^ ~b2 & m2, e3[18] = I2 ^ ~E2 & P2, e3[19] = C2 ^ ~x2 & O2, e3[28] = H ^ ~U2 & N2, e3[29] = K2 ^ ~j2 & L2, e3[38] = $ ^ ~G & V, e3[39] = ee ^ ~W & J, e3[48] = ce ^ ~te & ne, e3[49] = ue ^ ~re & ie, e3[0] ^= v[n2], e3[1] ^= v[n2 + 1];
          };
          if (d)
            i.exports = T;
          else {
            for (M = 0; M < B.length; ++M)
              c[B[M]] = T[B[M]];
            h && (void 0 === (o = function() {
              return T;
            }.call(t, r2, t, i)) || (i.exports = o));
          }
        }();
      }).call(this, r2(6), r2(7), r2(35)(e));
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "rlp/5.7.0";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "address/5.7.0";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.AddressZero = void 0;
      t.AddressZero = "0x0000000000000000000000000000000000000000";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.Zero = t.WeiPerEther = t.Two = t.One = t.NegativeOne = t.MinInt256 = t.MaxUint256 = t.MaxInt256 = void 0;
      var n = r2(33), i = n.BigNumber.from(-1);
      t.NegativeOne = i;
      var o = n.BigNumber.from(0);
      t.Zero = o;
      var a = n.BigNumber.from(1);
      t.One = a;
      var s2 = n.BigNumber.from(2);
      t.Two = s2;
      var f2 = n.BigNumber.from("1000000000000000000");
      t.WeiPerEther = f2;
      var c = n.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      t.MaxUint256 = c;
      var u = n.BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000");
      t.MinInt256 = u;
      var d = n.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      t.MaxInt256 = d;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.HashZero = void 0;
      t.HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.EtherSymbol = void 0;
      t.EtherSymbol = "\u039E";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "properties/5.7.0";
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.SigningKey = void 0, t.computePublicKey = b, t.recoverPublicKey = function(e2, t2) {
        var r3 = (0, s2.splitSignature)(t2), n2 = { r: (0, s2.arrayify)(r3.r), s: (0, s2.arrayify)(r3.s) };
        return "0x" + l().recoverPubKey((0, s2.arrayify)(e2), n2, r3.recoveryParam).encode("hex", false);
      };
      var i = n(r2(8)), o = n(r2(9)), a = r2(372), s2 = r2(11), f2 = r2(40), c = r2(16), u = r2(373), d = new c.Logger(u.version), h = null;
      function l() {
        return h || (h = new a.EC("secp256k1")), h;
      }
      var p = function() {
        function e2(t2) {
          (0, i.default)(this, e2), (0, f2.defineReadOnly)(this, "curve", "secp256k1"), (0, f2.defineReadOnly)(this, "privateKey", (0, s2.hexlify)(t2)), 32 !== (0, s2.hexDataLength)(this.privateKey) && d.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
          var r3 = l().keyFromPrivate((0, s2.arrayify)(this.privateKey));
          (0, f2.defineReadOnly)(this, "publicKey", "0x" + r3.getPublic(false, "hex")), (0, f2.defineReadOnly)(this, "compressedPublicKey", "0x" + r3.getPublic(true, "hex")), (0, f2.defineReadOnly)(this, "_isSigningKey", true);
        }
        return (0, o.default)(e2, [{ key: "_addPoint", value: function(e3) {
          var t2 = l().keyFromPublic((0, s2.arrayify)(this.publicKey)), r3 = l().keyFromPublic((0, s2.arrayify)(e3));
          return "0x" + t2.pub.add(r3.pub).encodeCompressed("hex");
        } }, { key: "signDigest", value: function(e3) {
          var t2 = l().keyFromPrivate((0, s2.arrayify)(this.privateKey)), r3 = (0, s2.arrayify)(e3);
          32 !== r3.length && d.throwArgumentError("bad digest length", "digest", e3);
          var n2 = t2.sign(r3, { canonical: true });
          return (0, s2.splitSignature)({ recoveryParam: n2.recoveryParam, r: (0, s2.hexZeroPad)("0x" + n2.r.toString(16), 32), s: (0, s2.hexZeroPad)("0x" + n2.s.toString(16), 32) });
        } }, { key: "computeSharedSecret", value: function(e3) {
          var t2 = l().keyFromPrivate((0, s2.arrayify)(this.privateKey)), r3 = l().keyFromPublic((0, s2.arrayify)(b(e3)));
          return (0, s2.hexZeroPad)("0x" + t2.derive(r3.getPublic()).toString(16), 32);
        } }], [{ key: "isSigningKey", value: function(e3) {
          return !(!e3 || !e3._isSigningKey);
        } }]), e2;
      }();
      function b(e2, t2) {
        var r3 = (0, s2.arrayify)(e2);
        if (32 === r3.length) {
          var n2 = new p(r3);
          return t2 ? "0x" + l().keyFromPrivate(r3).getPublic(true, "hex") : n2.publicKey;
        }
        return 33 === r3.length ? t2 ? (0, s2.hexlify)(r3) : "0x" + l().keyFromPublic(r3).getPublic(false, "hex") : 65 === r3.length ? t2 ? "0x" + l().keyFromPublic(r3).getPublic(true, "hex") : (0, s2.hexlify)(r3) : d.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
      }
      t.SigningKey = p;
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.EC = void 0;
        var i = n(r2(2)), o = n(r2(4)), a = n(r2(72));
        function s2(e3, t2, r3) {
          return e3(r3 = { path: t2, exports: {}, require: function(e4, t3) {
            return function() {
              throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
            }(null == t3 && r3.path);
          } }, r3.exports), r3.exports;
        }
        var f2 = c;
        function c(e3, t2) {
          if (!e3)
            throw new Error(t2 || "Assertion failed");
        }
        c.equal = function(e3, t2, r3) {
          if (e3 != t2)
            throw new Error(r3 || "Assertion failed: " + e3 + " != " + t2);
        };
        var u = s2(function(e3, t2) {
          var r3 = t2;
          function n2(e4) {
            return 1 === e4.length ? "0" + e4 : e4;
          }
          function i2(e4) {
            for (var t3 = "", r4 = 0; r4 < e4.length; r4++)
              t3 += n2(e4[r4].toString(16));
            return t3;
          }
          r3.toArray = function(e4, t3) {
            if (Array.isArray(e4))
              return e4.slice();
            if (!e4)
              return [];
            var r4 = [];
            if ("string" != typeof e4) {
              for (var n3 = 0; n3 < e4.length; n3++)
                r4[n3] = 0 | e4[n3];
              return r4;
            }
            if ("hex" === t3) {
              (e4 = e4.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e4 = "0" + e4);
              for (n3 = 0; n3 < e4.length; n3 += 2)
                r4.push(parseInt(e4[n3] + e4[n3 + 1], 16));
            } else
              for (n3 = 0; n3 < e4.length; n3++) {
                var i3 = e4.charCodeAt(n3), o2 = i3 >> 8, a2 = 255 & i3;
                o2 ? r4.push(o2, a2) : r4.push(a2);
              }
            return r4;
          }, r3.zero2 = n2, r3.toHex = i2, r3.encode = function(e4, t3) {
            return "hex" === t3 ? i2(e4) : e4;
          };
        }), d = s2(function(e3, t2) {
          var r3 = t2;
          r3.assert = f2, r3.toArray = u.toArray, r3.zero2 = u.zero2, r3.toHex = u.toHex, r3.encode = u.encode, r3.getNAF = function(e4, t3, r4) {
            var n2 = new Array(Math.max(e4.bitLength(), r4) + 1);
            n2.fill(0);
            for (var i2 = 1 << t3 + 1, o2 = e4.clone(), a2 = 0; a2 < n2.length; a2++) {
              var s3, f3 = o2.andln(i2 - 1);
              o2.isOdd() ? (s3 = f3 > (i2 >> 1) - 1 ? (i2 >> 1) - f3 : f3, o2.isubn(s3)) : s3 = 0, n2[a2] = s3, o2.iushrn(1);
            }
            return n2;
          }, r3.getJSF = function(e4, t3) {
            var r4 = [[], []];
            e4 = e4.clone(), t3 = t3.clone();
            for (var n2, i2 = 0, o2 = 0; e4.cmpn(-i2) > 0 || t3.cmpn(-o2) > 0; ) {
              var a2, s3, f3 = e4.andln(3) + i2 & 3, c2 = t3.andln(3) + o2 & 3;
              3 === f3 && (f3 = -1), 3 === c2 && (c2 = -1), a2 = 0 == (1 & f3) ? 0 : 3 !== (n2 = e4.andln(7) + i2 & 7) && 5 !== n2 || 2 !== c2 ? f3 : -f3, r4[0].push(a2), s3 = 0 == (1 & c2) ? 0 : 3 !== (n2 = t3.andln(7) + o2 & 7) && 5 !== n2 || 2 !== f3 ? c2 : -c2, r4[1].push(s3), 2 * i2 === a2 + 1 && (i2 = 1 - i2), 2 * o2 === s3 + 1 && (o2 = 1 - o2), e4.iushrn(1), t3.iushrn(1);
            }
            return r4;
          }, r3.cachedProperty = function(e4, t3, r4) {
            var n2 = "_" + t3;
            e4.prototype[t3] = function() {
              return void 0 !== this[n2] ? this[n2] : this[n2] = r4.call(this);
            };
          }, r3.parseBytes = function(e4) {
            return "string" == typeof e4 ? r3.toArray(e4, "hex") : e4;
          }, r3.intFromLE = function(e4) {
            return new o.default(e4, "hex", "le");
          };
        }), h = d.getNAF, l = d.getJSF, p = d.assert;
        function b(e3, t2) {
          this.type = e3, this.p = new o.default(t2.p, 16), this.red = t2.prime ? o.default.red(t2.prime) : o.default.mont(this.p), this.zero = new o.default(0).toRed(this.red), this.one = new o.default(1).toRed(this.red), this.two = new o.default(2).toRed(this.red), this.n = t2.n && new o.default(t2.n, 16), this.g = t2.g && this.pointFromJSON(t2.g, t2.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
          var r3 = this.n && this.p.div(this.n);
          !r3 || r3.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
        }
        var y = b;
        function v(e3, t2) {
          this.curve = e3, this.type = t2, this.precomputed = null;
        }
        b.prototype.point = function() {
          throw new Error("Not implemented");
        }, b.prototype.validate = function() {
          throw new Error("Not implemented");
        }, b.prototype._fixedNafMul = function(e3, t2) {
          p(e3.precomputed);
          var r3 = e3._getDoubles(), n2 = h(t2, 1, this._bitLength), i2 = (1 << r3.step + 1) - (r3.step % 2 == 0 ? 2 : 1);
          i2 /= 3;
          var o2, a2, s3 = [];
          for (o2 = 0; o2 < n2.length; o2 += r3.step) {
            a2 = 0;
            for (var f3 = o2 + r3.step - 1; f3 >= o2; f3--)
              a2 = (a2 << 1) + n2[f3];
            s3.push(a2);
          }
          for (var c2 = this.jpoint(null, null, null), u2 = this.jpoint(null, null, null), d2 = i2; d2 > 0; d2--) {
            for (o2 = 0; o2 < s3.length; o2++)
              (a2 = s3[o2]) === d2 ? u2 = u2.mixedAdd(r3.points[o2]) : a2 === -d2 && (u2 = u2.mixedAdd(r3.points[o2].neg()));
            c2 = c2.add(u2);
          }
          return c2.toP();
        }, b.prototype._wnafMul = function(e3, t2) {
          var r3 = 4, n2 = e3._getNAFPoints(r3);
          r3 = n2.wnd;
          for (var i2 = n2.points, o2 = h(t2, r3, this._bitLength), a2 = this.jpoint(null, null, null), s3 = o2.length - 1; s3 >= 0; s3--) {
            for (var f3 = 0; s3 >= 0 && 0 === o2[s3]; s3--)
              f3++;
            if (s3 >= 0 && f3++, a2 = a2.dblp(f3), s3 < 0)
              break;
            var c2 = o2[s3];
            p(0 !== c2), a2 = "affine" === e3.type ? c2 > 0 ? a2.mixedAdd(i2[c2 - 1 >> 1]) : a2.mixedAdd(i2[-c2 - 1 >> 1].neg()) : c2 > 0 ? a2.add(i2[c2 - 1 >> 1]) : a2.add(i2[-c2 - 1 >> 1].neg());
          }
          return "affine" === e3.type ? a2.toP() : a2;
        }, b.prototype._wnafMulAdd = function(e3, t2, r3, n2, i2) {
          var o2, a2, s3, f3 = this._wnafT1, c2 = this._wnafT2, u2 = this._wnafT3, d2 = 0;
          for (o2 = 0; o2 < n2; o2++) {
            var p2 = (s3 = t2[o2])._getNAFPoints(e3);
            f3[o2] = p2.wnd, c2[o2] = p2.points;
          }
          for (o2 = n2 - 1; o2 >= 1; o2 -= 2) {
            var b2 = o2 - 1, y2 = o2;
            if (1 === f3[b2] && 1 === f3[y2]) {
              var v2 = [t2[b2], null, null, t2[y2]];
              0 === t2[b2].y.cmp(t2[y2].y) ? (v2[1] = t2[b2].add(t2[y2]), v2[2] = t2[b2].toJ().mixedAdd(t2[y2].neg())) : 0 === t2[b2].y.cmp(t2[y2].y.redNeg()) ? (v2[1] = t2[b2].toJ().mixedAdd(t2[y2]), v2[2] = t2[b2].add(t2[y2].neg())) : (v2[1] = t2[b2].toJ().mixedAdd(t2[y2]), v2[2] = t2[b2].toJ().mixedAdd(t2[y2].neg()));
              var m2 = [-3, -1, -5, -7, 0, 7, 5, 1, 3], g2 = l(r3[b2], r3[y2]);
              for (d2 = Math.max(g2[0].length, d2), u2[b2] = new Array(d2), u2[y2] = new Array(d2), a2 = 0; a2 < d2; a2++) {
                var w2 = 0 | g2[0][a2], _2 = 0 | g2[1][a2];
                u2[b2][a2] = m2[3 * (w2 + 1) + (_2 + 1)], u2[y2][a2] = 0, c2[b2] = v2;
              }
            } else
              u2[b2] = h(r3[b2], f3[b2], this._bitLength), u2[y2] = h(r3[y2], f3[y2], this._bitLength), d2 = Math.max(u2[b2].length, d2), d2 = Math.max(u2[y2].length, d2);
          }
          var k2 = this.jpoint(null, null, null), A2 = this._wnafT4;
          for (o2 = d2; o2 >= 0; o2--) {
            for (var S2 = 0; o2 >= 0; ) {
              var E2 = true;
              for (a2 = 0; a2 < n2; a2++)
                A2[a2] = 0 | u2[a2][o2], 0 !== A2[a2] && (E2 = false);
              if (!E2)
                break;
              S2++, o2--;
            }
            if (o2 >= 0 && S2++, k2 = k2.dblp(S2), o2 < 0)
              break;
            for (a2 = 0; a2 < n2; a2++) {
              var x2 = A2[a2];
              0 !== x2 && (x2 > 0 ? s3 = c2[a2][x2 - 1 >> 1] : x2 < 0 && (s3 = c2[a2][-x2 - 1 >> 1].neg()), k2 = "affine" === s3.type ? k2.mixedAdd(s3) : k2.add(s3));
            }
          }
          for (o2 = 0; o2 < n2; o2++)
            c2[o2] = null;
          return i2 ? k2 : k2.toP();
        }, b.BasePoint = v, v.prototype.eq = function() {
          throw new Error("Not implemented");
        }, v.prototype.validate = function() {
          return this.curve.validate(this);
        }, b.prototype.decodePoint = function(e3, t2) {
          e3 = d.toArray(e3, t2);
          var r3 = this.p.byteLength();
          if ((4 === e3[0] || 6 === e3[0] || 7 === e3[0]) && e3.length - 1 == 2 * r3)
            return 6 === e3[0] ? p(e3[e3.length - 1] % 2 == 0) : 7 === e3[0] && p(e3[e3.length - 1] % 2 == 1), this.point(e3.slice(1, 1 + r3), e3.slice(1 + r3, 1 + 2 * r3));
          if ((2 === e3[0] || 3 === e3[0]) && e3.length - 1 === r3)
            return this.pointFromX(e3.slice(1, 1 + r3), 3 === e3[0]);
          throw new Error("Unknown point format");
        }, v.prototype.encodeCompressed = function(e3) {
          return this.encode(e3, true);
        }, v.prototype._encode = function(e3) {
          var t2 = this.curve.p.byteLength(), r3 = this.getX().toArray("be", t2);
          return e3 ? [this.getY().isEven() ? 2 : 3].concat(r3) : [4].concat(r3, this.getY().toArray("be", t2));
        }, v.prototype.encode = function(e3, t2) {
          return d.encode(this._encode(t2), e3);
        }, v.prototype.precompute = function(e3) {
          if (this.precomputed)
            return this;
          var t2 = { doubles: null, naf: null, beta: null };
          return t2.naf = this._getNAFPoints(8), t2.doubles = this._getDoubles(4, e3), t2.beta = this._getBeta(), this.precomputed = t2, this;
        }, v.prototype._hasDoubles = function(e3) {
          if (!this.precomputed)
            return false;
          var t2 = this.precomputed.doubles;
          return !!t2 && t2.points.length >= Math.ceil((e3.bitLength() + 1) / t2.step);
        }, v.prototype._getDoubles = function(e3, t2) {
          if (this.precomputed && this.precomputed.doubles)
            return this.precomputed.doubles;
          for (var r3 = [this], n2 = this, i2 = 0; i2 < t2; i2 += e3) {
            for (var o2 = 0; o2 < e3; o2++)
              n2 = n2.dbl();
            r3.push(n2);
          }
          return { step: e3, points: r3 };
        }, v.prototype._getNAFPoints = function(e3) {
          if (this.precomputed && this.precomputed.naf)
            return this.precomputed.naf;
          for (var t2 = [this], r3 = (1 << e3) - 1, n2 = 1 === r3 ? null : this.dbl(), i2 = 1; i2 < r3; i2++)
            t2[i2] = t2[i2 - 1].add(n2);
          return { wnd: e3, points: t2 };
        }, v.prototype._getBeta = function() {
          return null;
        }, v.prototype.dblp = function(e3) {
          for (var t2 = this, r3 = 0; r3 < e3; r3++)
            t2 = t2.dbl();
          return t2;
        };
        var m = s2(function(e3) {
          "function" == typeof Object.create ? e3.exports = function(e4, t2) {
            t2 && (e4.super_ = t2, e4.prototype = Object.create(t2.prototype, { constructor: { value: e4, enumerable: false, writable: true, configurable: true } }));
          } : e3.exports = function(e4, t2) {
            if (t2) {
              e4.super_ = t2;
              var r3 = function() {
              };
              r3.prototype = t2.prototype, e4.prototype = new r3(), e4.prototype.constructor = e4;
            }
          };
        }), g = d.assert;
        function w(e3) {
          y.call(this, "short", e3), this.a = new o.default(e3.a, 16).toRed(this.red), this.b = new o.default(e3.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e3), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
        }
        m(w, y);
        var _ = w;
        function k(e3, t2, r3, n2) {
          y.BasePoint.call(this, e3, "affine"), null === t2 && null === r3 ? (this.x = null, this.y = null, this.inf = true) : (this.x = new o.default(t2, 16), this.y = new o.default(r3, 16), n2 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
        }
        function A(e3, t2, r3, n2) {
          y.BasePoint.call(this, e3, "jacobian"), null === t2 && null === r3 && null === n2 ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new o.default(0)) : (this.x = new o.default(t2, 16), this.y = new o.default(r3, 16), this.z = new o.default(n2, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
        }
        w.prototype._getEndomorphism = function(e3) {
          if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
            var t2, r3;
            if (e3.beta)
              t2 = new o.default(e3.beta, 16).toRed(this.red);
            else {
              var n2 = this._getEndoRoots(this.p);
              t2 = (t2 = n2[0].cmp(n2[1]) < 0 ? n2[0] : n2[1]).toRed(this.red);
            }
            if (e3.lambda)
              r3 = new o.default(e3.lambda, 16);
            else {
              var i2 = this._getEndoRoots(this.n);
              0 === this.g.mul(i2[0]).x.cmp(this.g.x.redMul(t2)) ? r3 = i2[0] : (r3 = i2[1], g(0 === this.g.mul(r3).x.cmp(this.g.x.redMul(t2))));
            }
            return { beta: t2, lambda: r3, basis: e3.basis ? e3.basis.map(function(e4) {
              return { a: new o.default(e4.a, 16), b: new o.default(e4.b, 16) };
            }) : this._getEndoBasis(r3) };
          }
        }, w.prototype._getEndoRoots = function(e3) {
          var t2 = e3 === this.p ? this.red : o.default.mont(e3), r3 = new o.default(2).toRed(t2).redInvm(), n2 = r3.redNeg(), i2 = new o.default(3).toRed(t2).redNeg().redSqrt().redMul(r3);
          return [n2.redAdd(i2).fromRed(), n2.redSub(i2).fromRed()];
        }, w.prototype._getEndoBasis = function(e3) {
          for (var t2, r3, n2, i2, a2, s3, f3, c2, u2, d2 = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h2 = e3, l2 = this.n.clone(), p2 = new o.default(1), b2 = new o.default(0), y2 = new o.default(0), v2 = new o.default(1), m2 = 0; 0 !== h2.cmpn(0); ) {
            var g2 = l2.div(h2);
            c2 = l2.sub(g2.mul(h2)), u2 = y2.sub(g2.mul(p2));
            var w2 = v2.sub(g2.mul(b2));
            if (!n2 && c2.cmp(d2) < 0)
              t2 = f3.neg(), r3 = p2, n2 = c2.neg(), i2 = u2;
            else if (n2 && 2 == ++m2)
              break;
            f3 = c2, l2 = h2, h2 = c2, y2 = p2, p2 = u2, v2 = b2, b2 = w2;
          }
          a2 = c2.neg(), s3 = u2;
          var _2 = n2.sqr().add(i2.sqr());
          return a2.sqr().add(s3.sqr()).cmp(_2) >= 0 && (a2 = t2, s3 = r3), n2.negative && (n2 = n2.neg(), i2 = i2.neg()), a2.negative && (a2 = a2.neg(), s3 = s3.neg()), [{ a: n2, b: i2 }, { a: a2, b: s3 }];
        }, w.prototype._endoSplit = function(e3) {
          var t2 = this.endo.basis, r3 = t2[0], n2 = t2[1], i2 = n2.b.mul(e3).divRound(this.n), o2 = r3.b.neg().mul(e3).divRound(this.n), a2 = i2.mul(r3.a), s3 = o2.mul(n2.a), f3 = i2.mul(r3.b), c2 = o2.mul(n2.b);
          return { k1: e3.sub(a2).sub(s3), k2: f3.add(c2).neg() };
        }, w.prototype.pointFromX = function(e3, t2) {
          (e3 = new o.default(e3, 16)).red || (e3 = e3.toRed(this.red));
          var r3 = e3.redSqr().redMul(e3).redIAdd(e3.redMul(this.a)).redIAdd(this.b), n2 = r3.redSqrt();
          if (0 !== n2.redSqr().redSub(r3).cmp(this.zero))
            throw new Error("invalid point");
          var i2 = n2.fromRed().isOdd();
          return (t2 && !i2 || !t2 && i2) && (n2 = n2.redNeg()), this.point(e3, n2);
        }, w.prototype.validate = function(e3) {
          if (e3.inf)
            return true;
          var t2 = e3.x, r3 = e3.y, n2 = this.a.redMul(t2), i2 = t2.redSqr().redMul(t2).redIAdd(n2).redIAdd(this.b);
          return 0 === r3.redSqr().redISub(i2).cmpn(0);
        }, w.prototype._endoWnafMulAdd = function(e3, t2, r3) {
          for (var n2 = this._endoWnafT1, i2 = this._endoWnafT2, o2 = 0; o2 < e3.length; o2++) {
            var a2 = this._endoSplit(t2[o2]), s3 = e3[o2], f3 = s3._getBeta();
            a2.k1.negative && (a2.k1.ineg(), s3 = s3.neg(true)), a2.k2.negative && (a2.k2.ineg(), f3 = f3.neg(true)), n2[2 * o2] = s3, n2[2 * o2 + 1] = f3, i2[2 * o2] = a2.k1, i2[2 * o2 + 1] = a2.k2;
          }
          for (var c2 = this._wnafMulAdd(1, n2, i2, 2 * o2, r3), u2 = 0; u2 < 2 * o2; u2++)
            n2[u2] = null, i2[u2] = null;
          return c2;
        }, m(k, y.BasePoint), w.prototype.point = function(e3, t2, r3) {
          return new k(this, e3, t2, r3);
        }, w.prototype.pointFromJSON = function(e3, t2) {
          return k.fromJSON(this, e3, t2);
        }, k.prototype._getBeta = function() {
          if (this.curve.endo) {
            var e3 = this.precomputed;
            if (e3 && e3.beta)
              return e3.beta;
            var t2 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
            if (e3) {
              var r3 = this.curve, n2 = function(e4) {
                return r3.point(e4.x.redMul(r3.endo.beta), e4.y);
              };
              e3.beta = t2, t2.precomputed = { beta: null, naf: e3.naf && { wnd: e3.naf.wnd, points: e3.naf.points.map(n2) }, doubles: e3.doubles && { step: e3.doubles.step, points: e3.doubles.points.map(n2) } };
            }
            return t2;
          }
        }, k.prototype.toJSON = function() {
          return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
        }, k.fromJSON = function(e3, t2, r3) {
          "string" == typeof t2 && (t2 = JSON.parse(t2));
          var n2 = e3.point(t2[0], t2[1], r3);
          if (!t2[2])
            return n2;
          function i2(t3) {
            return e3.point(t3[0], t3[1], r3);
          }
          var o2 = t2[2];
          return n2.precomputed = { beta: null, doubles: o2.doubles && { step: o2.doubles.step, points: [n2].concat(o2.doubles.points.map(i2)) }, naf: o2.naf && { wnd: o2.naf.wnd, points: [n2].concat(o2.naf.points.map(i2)) } }, n2;
        }, k.prototype.inspect = function() {
          return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
        }, k.prototype.isInfinity = function() {
          return this.inf;
        }, k.prototype.add = function(e3) {
          if (this.inf)
            return e3;
          if (e3.inf)
            return this;
          if (this.eq(e3))
            return this.dbl();
          if (this.neg().eq(e3))
            return this.curve.point(null, null);
          if (0 === this.x.cmp(e3.x))
            return this.curve.point(null, null);
          var t2 = this.y.redSub(e3.y);
          0 !== t2.cmpn(0) && (t2 = t2.redMul(this.x.redSub(e3.x).redInvm()));
          var r3 = t2.redSqr().redISub(this.x).redISub(e3.x), n2 = t2.redMul(this.x.redSub(r3)).redISub(this.y);
          return this.curve.point(r3, n2);
        }, k.prototype.dbl = function() {
          if (this.inf)
            return this;
          var e3 = this.y.redAdd(this.y);
          if (0 === e3.cmpn(0))
            return this.curve.point(null, null);
          var t2 = this.curve.a, r3 = this.x.redSqr(), n2 = e3.redInvm(), i2 = r3.redAdd(r3).redIAdd(r3).redIAdd(t2).redMul(n2), o2 = i2.redSqr().redISub(this.x.redAdd(this.x)), a2 = i2.redMul(this.x.redSub(o2)).redISub(this.y);
          return this.curve.point(o2, a2);
        }, k.prototype.getX = function() {
          return this.x.fromRed();
        }, k.prototype.getY = function() {
          return this.y.fromRed();
        }, k.prototype.mul = function(e3) {
          return e3 = new o.default(e3, 16), this.isInfinity() ? this : this._hasDoubles(e3) ? this.curve._fixedNafMul(this, e3) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e3]) : this.curve._wnafMul(this, e3);
        }, k.prototype.mulAdd = function(e3, t2, r3) {
          var n2 = [this, t2], i2 = [e3, r3];
          return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2) : this.curve._wnafMulAdd(1, n2, i2, 2);
        }, k.prototype.jmulAdd = function(e3, t2, r3) {
          var n2 = [this, t2], i2 = [e3, r3];
          return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2, true) : this.curve._wnafMulAdd(1, n2, i2, 2, true);
        }, k.prototype.eq = function(e3) {
          return this === e3 || this.inf === e3.inf && (this.inf || 0 === this.x.cmp(e3.x) && 0 === this.y.cmp(e3.y));
        }, k.prototype.neg = function(e3) {
          if (this.inf)
            return this;
          var t2 = this.curve.point(this.x, this.y.redNeg());
          if (e3 && this.precomputed) {
            var r3 = this.precomputed, n2 = function(e4) {
              return e4.neg();
            };
            t2.precomputed = { naf: r3.naf && { wnd: r3.naf.wnd, points: r3.naf.points.map(n2) }, doubles: r3.doubles && { step: r3.doubles.step, points: r3.doubles.points.map(n2) } };
          }
          return t2;
        }, k.prototype.toJ = function() {
          return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
        }, m(A, y.BasePoint), w.prototype.jpoint = function(e3, t2, r3) {
          return new A(this, e3, t2, r3);
        }, A.prototype.toP = function() {
          if (this.isInfinity())
            return this.curve.point(null, null);
          var e3 = this.z.redInvm(), t2 = e3.redSqr(), r3 = this.x.redMul(t2), n2 = this.y.redMul(t2).redMul(e3);
          return this.curve.point(r3, n2);
        }, A.prototype.neg = function() {
          return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        }, A.prototype.add = function(e3) {
          if (this.isInfinity())
            return e3;
          if (e3.isInfinity())
            return this;
          var t2 = e3.z.redSqr(), r3 = this.z.redSqr(), n2 = this.x.redMul(t2), i2 = e3.x.redMul(r3), o2 = this.y.redMul(t2.redMul(e3.z)), a2 = e3.y.redMul(r3.redMul(this.z)), s3 = n2.redSub(i2), f3 = o2.redSub(a2);
          if (0 === s3.cmpn(0))
            return 0 !== f3.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
          var c2 = s3.redSqr(), u2 = c2.redMul(s3), d2 = n2.redMul(c2), h2 = f3.redSqr().redIAdd(u2).redISub(d2).redISub(d2), l2 = f3.redMul(d2.redISub(h2)).redISub(o2.redMul(u2)), p2 = this.z.redMul(e3.z).redMul(s3);
          return this.curve.jpoint(h2, l2, p2);
        }, A.prototype.mixedAdd = function(e3) {
          if (this.isInfinity())
            return e3.toJ();
          if (e3.isInfinity())
            return this;
          var t2 = this.z.redSqr(), r3 = this.x, n2 = e3.x.redMul(t2), i2 = this.y, o2 = e3.y.redMul(t2).redMul(this.z), a2 = r3.redSub(n2), s3 = i2.redSub(o2);
          if (0 === a2.cmpn(0))
            return 0 !== s3.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
          var f3 = a2.redSqr(), c2 = f3.redMul(a2), u2 = r3.redMul(f3), d2 = s3.redSqr().redIAdd(c2).redISub(u2).redISub(u2), h2 = s3.redMul(u2.redISub(d2)).redISub(i2.redMul(c2)), l2 = this.z.redMul(a2);
          return this.curve.jpoint(d2, h2, l2);
        }, A.prototype.dblp = function(e3) {
          if (0 === e3)
            return this;
          if (this.isInfinity())
            return this;
          if (!e3)
            return this.dbl();
          var t2;
          if (this.curve.zeroA || this.curve.threeA) {
            var r3 = this;
            for (t2 = 0; t2 < e3; t2++)
              r3 = r3.dbl();
            return r3;
          }
          var n2 = this.curve.a, i2 = this.curve.tinv, o2 = this.x, a2 = this.y, s3 = this.z, f3 = s3.redSqr().redSqr(), c2 = a2.redAdd(a2);
          for (t2 = 0; t2 < e3; t2++) {
            var u2 = o2.redSqr(), d2 = c2.redSqr(), h2 = d2.redSqr(), l2 = u2.redAdd(u2).redIAdd(u2).redIAdd(n2.redMul(f3)), p2 = o2.redMul(d2), b2 = l2.redSqr().redISub(p2.redAdd(p2)), y2 = p2.redISub(b2), v2 = l2.redMul(y2);
            v2 = v2.redIAdd(v2).redISub(h2);
            var m2 = c2.redMul(s3);
            t2 + 1 < e3 && (f3 = f3.redMul(h2)), o2 = b2, s3 = m2, c2 = v2;
          }
          return this.curve.jpoint(o2, c2.redMul(i2), s3);
        }, A.prototype.dbl = function() {
          return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
        }, A.prototype._zeroDbl = function() {
          var e3, t2, r3;
          if (this.zOne) {
            var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
            a2 = a2.redIAdd(a2);
            var s3 = n2.redAdd(n2).redIAdd(n2), f3 = s3.redSqr().redISub(a2).redISub(a2), c2 = o2.redIAdd(o2);
            c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), e3 = f3, t2 = s3.redMul(a2.redISub(f3)).redISub(c2), r3 = this.y.redAdd(this.y);
          } else {
            var u2 = this.x.redSqr(), d2 = this.y.redSqr(), h2 = d2.redSqr(), l2 = this.x.redAdd(d2).redSqr().redISub(u2).redISub(h2);
            l2 = l2.redIAdd(l2);
            var p2 = u2.redAdd(u2).redIAdd(u2), b2 = p2.redSqr(), y2 = h2.redIAdd(h2);
            y2 = (y2 = y2.redIAdd(y2)).redIAdd(y2), e3 = b2.redISub(l2).redISub(l2), t2 = p2.redMul(l2.redISub(e3)).redISub(y2), r3 = (r3 = this.y.redMul(this.z)).redIAdd(r3);
          }
          return this.curve.jpoint(e3, t2, r3);
        }, A.prototype._threeDbl = function() {
          var e3, t2, r3;
          if (this.zOne) {
            var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
            a2 = a2.redIAdd(a2);
            var s3 = n2.redAdd(n2).redIAdd(n2).redIAdd(this.curve.a), f3 = s3.redSqr().redISub(a2).redISub(a2);
            e3 = f3;
            var c2 = o2.redIAdd(o2);
            c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), t2 = s3.redMul(a2.redISub(f3)).redISub(c2), r3 = this.y.redAdd(this.y);
          } else {
            var u2 = this.z.redSqr(), d2 = this.y.redSqr(), h2 = this.x.redMul(d2), l2 = this.x.redSub(u2).redMul(this.x.redAdd(u2));
            l2 = l2.redAdd(l2).redIAdd(l2);
            var p2 = h2.redIAdd(h2), b2 = (p2 = p2.redIAdd(p2)).redAdd(p2);
            e3 = l2.redSqr().redISub(b2), r3 = this.y.redAdd(this.z).redSqr().redISub(d2).redISub(u2);
            var y2 = d2.redSqr();
            y2 = (y2 = (y2 = y2.redIAdd(y2)).redIAdd(y2)).redIAdd(y2), t2 = l2.redMul(p2.redISub(e3)).redISub(y2);
          }
          return this.curve.jpoint(e3, t2, r3);
        }, A.prototype._dbl = function() {
          var e3 = this.curve.a, t2 = this.x, r3 = this.y, n2 = this.z, i2 = n2.redSqr().redSqr(), o2 = t2.redSqr(), a2 = r3.redSqr(), s3 = o2.redAdd(o2).redIAdd(o2).redIAdd(e3.redMul(i2)), f3 = t2.redAdd(t2), c2 = (f3 = f3.redIAdd(f3)).redMul(a2), u2 = s3.redSqr().redISub(c2.redAdd(c2)), d2 = c2.redISub(u2), h2 = a2.redSqr();
          h2 = (h2 = (h2 = h2.redIAdd(h2)).redIAdd(h2)).redIAdd(h2);
          var l2 = s3.redMul(d2).redISub(h2), p2 = r3.redAdd(r3).redMul(n2);
          return this.curve.jpoint(u2, l2, p2);
        }, A.prototype.trpl = function() {
          if (!this.curve.zeroA)
            return this.dbl().add(this);
          var e3 = this.x.redSqr(), t2 = this.y.redSqr(), r3 = this.z.redSqr(), n2 = t2.redSqr(), i2 = e3.redAdd(e3).redIAdd(e3), o2 = i2.redSqr(), a2 = this.x.redAdd(t2).redSqr().redISub(e3).redISub(n2), s3 = (a2 = (a2 = (a2 = a2.redIAdd(a2)).redAdd(a2).redIAdd(a2)).redISub(o2)).redSqr(), f3 = n2.redIAdd(n2);
          f3 = (f3 = (f3 = f3.redIAdd(f3)).redIAdd(f3)).redIAdd(f3);
          var c2 = i2.redIAdd(a2).redSqr().redISub(o2).redISub(s3).redISub(f3), u2 = t2.redMul(c2);
          u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2);
          var d2 = this.x.redMul(s3).redISub(u2);
          d2 = (d2 = d2.redIAdd(d2)).redIAdd(d2);
          var h2 = this.y.redMul(c2.redMul(f3.redISub(c2)).redISub(a2.redMul(s3)));
          h2 = (h2 = (h2 = h2.redIAdd(h2)).redIAdd(h2)).redIAdd(h2);
          var l2 = this.z.redAdd(a2).redSqr().redISub(r3).redISub(s3);
          return this.curve.jpoint(d2, h2, l2);
        }, A.prototype.mul = function(e3, t2) {
          return e3 = new o.default(e3, t2), this.curve._wnafMul(this, e3);
        }, A.prototype.eq = function(e3) {
          if ("affine" === e3.type)
            return this.eq(e3.toJ());
          if (this === e3)
            return true;
          var t2 = this.z.redSqr(), r3 = e3.z.redSqr();
          if (0 !== this.x.redMul(r3).redISub(e3.x.redMul(t2)).cmpn(0))
            return false;
          var n2 = t2.redMul(this.z), i2 = r3.redMul(e3.z);
          return 0 === this.y.redMul(i2).redISub(e3.y.redMul(n2)).cmpn(0);
        }, A.prototype.eqXToP = function(e3) {
          var t2 = this.z.redSqr(), r3 = e3.toRed(this.curve.red).redMul(t2);
          if (0 === this.x.cmp(r3))
            return true;
          for (var n2 = e3.clone(), i2 = this.curve.redN.redMul(t2); ; ) {
            if (n2.iadd(this.curve.n), n2.cmp(this.curve.p) >= 0)
              return false;
            if (r3.redIAdd(i2), 0 === this.x.cmp(r3))
              return true;
          }
        }, A.prototype.inspect = function() {
          return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
        }, A.prototype.isInfinity = function() {
          return 0 === this.z.cmpn(0);
        };
        var S = s2(function(e3, t2) {
          var r3 = t2;
          r3.base = y, r3.short = _, r3.mont = null, r3.edwards = null;
        }), E = s2(function(e3, t2) {
          var r3, n2 = t2, i2 = d.assert;
          function o2(e4) {
            "short" === e4.type ? this.curve = new S.short(e4) : "edwards" === e4.type ? this.curve = new S.edwards(e4) : this.curve = new S.mont(e4), this.g = this.curve.g, this.n = this.curve.n, this.hash = e4.hash, i2(this.g.validate(), "Invalid curve"), i2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
          }
          function s3(e4, t3) {
            Object.defineProperty(n2, e4, { configurable: true, enumerable: true, get: function() {
              var r4 = new o2(t3);
              return Object.defineProperty(n2, e4, { configurable: true, enumerable: true, value: r4 }), r4;
            } });
          }
          n2.PresetCurve = o2, s3("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: a.default.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), s3("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: a.default.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), s3("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: a.default.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), s3("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: a.default.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), s3("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: a.default.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), s3("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: a.default.sha256, gRed: false, g: ["9"] }), s3("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: a.default.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
          try {
            r3 = null.crash();
          } catch (e4) {
            r3 = void 0;
          }
          s3("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: a.default.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r3] });
        });
        function x(e3) {
          if (!(this instanceof x))
            return new x(e3);
          this.hash = e3.hash, this.predResist = !!e3.predResist, this.outLen = this.hash.outSize, this.minEntropy = e3.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
          var t2 = u.toArray(e3.entropy, e3.entropyEnc || "hex"), r3 = u.toArray(e3.nonce, e3.nonceEnc || "hex"), n2 = u.toArray(e3.pers, e3.persEnc || "hex");
          f2(t2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t2, r3, n2);
        }
        var P = x;
        x.prototype._init = function(e3, t2, r3) {
          var n2 = e3.concat(t2).concat(r3);
          this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
          for (var i2 = 0; i2 < this.V.length; i2++)
            this.K[i2] = 0, this.V[i2] = 1;
          this._update(n2), this._reseed = 1, this.reseedInterval = 281474976710656;
        }, x.prototype._hmac = function() {
          return new a.default.hmac(this.hash, this.K);
        }, x.prototype._update = function(e3) {
          var t2 = this._hmac().update(this.V).update([0]);
          e3 && (t2 = t2.update(e3)), this.K = t2.digest(), this.V = this._hmac().update(this.V).digest(), e3 && (this.K = this._hmac().update(this.V).update([1]).update(e3).digest(), this.V = this._hmac().update(this.V).digest());
        }, x.prototype.reseed = function(e3, t2, r3, n2) {
          "string" != typeof t2 && (n2 = r3, r3 = t2, t2 = null), e3 = u.toArray(e3, t2), r3 = u.toArray(r3, n2), f2(e3.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e3.concat(r3 || [])), this._reseed = 1;
        }, x.prototype.generate = function(e3, t2, r3, n2) {
          if (this._reseed > this.reseedInterval)
            throw new Error("Reseed is required");
          "string" != typeof t2 && (n2 = r3, r3 = t2, t2 = null), r3 && (r3 = u.toArray(r3, n2 || "hex"), this._update(r3));
          for (var i2 = []; i2.length < e3; )
            this.V = this._hmac().update(this.V).digest(), i2 = i2.concat(this.V);
          var o2 = i2.slice(0, e3);
          return this._update(r3), this._reseed++, u.encode(o2, t2);
        };
        var O = d.assert;
        function T(e3, t2) {
          this.ec = e3, this.priv = null, this.pub = null, t2.priv && this._importPrivate(t2.priv, t2.privEnc), t2.pub && this._importPublic(t2.pub, t2.pubEnc);
        }
        var B = T;
        T.fromPublic = function(e3, t2, r3) {
          return t2 instanceof T ? t2 : new T(e3, { pub: t2, pubEnc: r3 });
        }, T.fromPrivate = function(e3, t2, r3) {
          return t2 instanceof T ? t2 : new T(e3, { priv: t2, privEnc: r3 });
        }, T.prototype.validate = function() {
          var e3 = this.getPublic();
          return e3.isInfinity() ? { result: false, reason: "Invalid public key" } : e3.validate() ? e3.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
        }, T.prototype.getPublic = function(e3, t2) {
          return "string" == typeof e3 && (t2 = e3, e3 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t2 ? this.pub.encode(t2, e3) : this.pub;
        }, T.prototype.getPrivate = function(e3) {
          return "hex" === e3 ? this.priv.toString(16, 2) : this.priv;
        }, T.prototype._importPrivate = function(e3, t2) {
          this.priv = new o.default(e3, t2 || 16), this.priv = this.priv.umod(this.ec.curve.n);
        }, T.prototype._importPublic = function(e3, t2) {
          if (e3.x || e3.y)
            return "mont" === this.ec.curve.type ? O(e3.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || O(e3.x && e3.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(e3.x, e3.y));
          this.pub = this.ec.curve.decodePoint(e3, t2);
        }, T.prototype.derive = function(e3) {
          return e3.validate() || O(e3.validate(), "public point not validated"), e3.mul(this.priv).getX();
        }, T.prototype.sign = function(e3, t2, r3) {
          return this.ec.sign(e3, this, t2, r3);
        }, T.prototype.verify = function(e3, t2) {
          return this.ec.verify(e3, t2, this);
        }, T.prototype.inspect = function() {
          return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
        };
        var M = d.assert;
        function R(e3, t2) {
          if (e3 instanceof R)
            return e3;
          this._importDER(e3, t2) || (M(e3.r && e3.s, "Signature without r or s"), this.r = new o.default(e3.r, 16), this.s = new o.default(e3.s, 16), void 0 === e3.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e3.recoveryParam);
        }
        var I = R;
        function C() {
          this.place = 0;
        }
        function U(e3, t2) {
          var r3 = e3[t2.place++];
          if (!(128 & r3))
            return r3;
          var n2 = 15 & r3;
          if (0 === n2 || n2 > 4)
            return false;
          for (var i2 = 0, o2 = 0, a2 = t2.place; o2 < n2; o2++, a2++)
            i2 <<= 8, i2 |= e3[a2], i2 >>>= 0;
          return !(i2 <= 127) && (t2.place = a2, i2);
        }
        function j(e3) {
          for (var t2 = 0, r3 = e3.length - 1; !e3[t2] && !(128 & e3[t2 + 1]) && t2 < r3; )
            t2++;
          return 0 === t2 ? e3 : e3.slice(t2);
        }
        function N(e3, t2) {
          if (t2 < 128)
            e3.push(t2);
          else {
            var r3 = 1 + (Math.log(t2) / Math.LN2 >>> 3);
            for (e3.push(128 | r3); --r3; )
              e3.push(t2 >>> (r3 << 3) & 255);
            e3.push(t2);
          }
        }
        R.prototype._importDER = function(e3, t2) {
          e3 = d.toArray(e3, t2);
          var r3 = new C();
          if (48 !== e3[r3.place++])
            return false;
          var n2 = U(e3, r3);
          if (false === n2)
            return false;
          if (n2 + r3.place !== e3.length)
            return false;
          if (2 !== e3[r3.place++])
            return false;
          var i2 = U(e3, r3);
          if (false === i2)
            return false;
          var a2 = e3.slice(r3.place, i2 + r3.place);
          if (r3.place += i2, 2 !== e3[r3.place++])
            return false;
          var s3 = U(e3, r3);
          if (false === s3)
            return false;
          if (e3.length !== s3 + r3.place)
            return false;
          var f3 = e3.slice(r3.place, s3 + r3.place);
          if (0 === a2[0]) {
            if (!(128 & a2[1]))
              return false;
            a2 = a2.slice(1);
          }
          if (0 === f3[0]) {
            if (!(128 & f3[1]))
              return false;
            f3 = f3.slice(1);
          }
          return this.r = new o.default(a2), this.s = new o.default(f3), this.recoveryParam = null, true;
        }, R.prototype.toDER = function(e3) {
          var t2 = this.r.toArray(), r3 = this.s.toArray();
          for (128 & t2[0] && (t2 = [0].concat(t2)), 128 & r3[0] && (r3 = [0].concat(r3)), t2 = j(t2), r3 = j(r3); !(r3[0] || 128 & r3[1]); )
            r3 = r3.slice(1);
          var n2 = [2];
          N(n2, t2.length), (n2 = n2.concat(t2)).push(2), N(n2, r3.length);
          var i2 = n2.concat(r3), o2 = [48];
          return N(o2, i2.length), o2 = o2.concat(i2), d.encode(o2, e3);
        };
        var L = function() {
          throw new Error("unsupported");
        }, D = d.assert;
        function F(e3) {
          if (!(this instanceof F))
            return new F(e3);
          "string" == typeof e3 && (D(Object.prototype.hasOwnProperty.call(E, e3), "Unknown curve " + e3), e3 = E[e3]), e3 instanceof E.PresetCurve && (e3 = { curve: e3 }), this.curve = e3.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e3.curve.g, this.g.precompute(e3.curve.n.bitLength() + 1), this.hash = e3.hash || e3.curve.hash;
        }
        var q = F;
        F.prototype.keyPair = function(e3) {
          return new B(this, e3);
        }, F.prototype.keyFromPrivate = function(e3, t2) {
          return B.fromPrivate(this, e3, t2);
        }, F.prototype.keyFromPublic = function(e3, t2) {
          return B.fromPublic(this, e3, t2);
        }, F.prototype.genKeyPair = function(e3) {
          e3 || (e3 = {});
          for (var t2 = new P({ hash: this.hash, pers: e3.pers, persEnc: e3.persEnc || "utf8", entropy: e3.entropy || L(this.hash.hmacStrength), entropyEnc: e3.entropy && e3.entropyEnc || "utf8", nonce: this.n.toArray() }), r3 = this.n.byteLength(), n2 = this.n.sub(new o.default(2)); ; ) {
            var i2 = new o.default(t2.generate(r3));
            if (!(i2.cmp(n2) > 0))
              return i2.iaddn(1), this.keyFromPrivate(i2);
          }
        }, F.prototype._truncateToN = function(e3, t2) {
          var r3 = 8 * e3.byteLength() - this.n.bitLength();
          return r3 > 0 && (e3 = e3.ushrn(r3)), !t2 && e3.cmp(this.n) >= 0 ? e3.sub(this.n) : e3;
        }, F.prototype.sign = function(e3, t2, r3, n2) {
          "object" === (0, i.default)(r3) && (n2 = r3, r3 = null), n2 || (n2 = {}), t2 = this.keyFromPrivate(t2, r3), e3 = this._truncateToN(new o.default(e3, 16));
          for (var a2 = this.n.byteLength(), s3 = t2.getPrivate().toArray("be", a2), f3 = e3.toArray("be", a2), c2 = new P({ hash: this.hash, entropy: s3, nonce: f3, pers: n2.pers, persEnc: n2.persEnc || "utf8" }), u2 = this.n.sub(new o.default(1)), d2 = 0; ; d2++) {
            var h2 = n2.k ? n2.k(d2) : new o.default(c2.generate(this.n.byteLength()));
            if (!((h2 = this._truncateToN(h2, true)).cmpn(1) <= 0 || h2.cmp(u2) >= 0)) {
              var l2 = this.g.mul(h2);
              if (!l2.isInfinity()) {
                var p2 = l2.getX(), b2 = p2.umod(this.n);
                if (0 !== b2.cmpn(0)) {
                  var y2 = h2.invm(this.n).mul(b2.mul(t2.getPrivate()).iadd(e3));
                  if (0 !== (y2 = y2.umod(this.n)).cmpn(0)) {
                    var v2 = (l2.getY().isOdd() ? 1 : 0) | (0 !== p2.cmp(b2) ? 2 : 0);
                    return n2.canonical && y2.cmp(this.nh) > 0 && (y2 = this.n.sub(y2), v2 ^= 1), new I({ r: b2, s: y2, recoveryParam: v2 });
                  }
                }
              }
            }
          }
        }, F.prototype.verify = function(e3, t2, r3, n2) {
          e3 = this._truncateToN(new o.default(e3, 16)), r3 = this.keyFromPublic(r3, n2);
          var i2 = (t2 = new I(t2, "hex")).r, a2 = t2.s;
          if (i2.cmpn(1) < 0 || i2.cmp(this.n) >= 0)
            return false;
          if (a2.cmpn(1) < 0 || a2.cmp(this.n) >= 0)
            return false;
          var s3, f3 = a2.invm(this.n), c2 = f3.mul(e3).umod(this.n), u2 = f3.mul(i2).umod(this.n);
          return this.curve._maxwellTrick ? !(s3 = this.g.jmulAdd(c2, r3.getPublic(), u2)).isInfinity() && s3.eqXToP(i2) : !(s3 = this.g.mulAdd(c2, r3.getPublic(), u2)).isInfinity() && 0 === s3.getX().umod(this.n).cmp(i2);
        }, F.prototype.recoverPubKey = function(e3, t2, r3, n2) {
          D((3 & r3) === r3, "The recovery param is more than two bits"), t2 = new I(t2, n2);
          var i2 = this.n, a2 = new o.default(e3), s3 = t2.r, f3 = t2.s, c2 = 1 & r3, u2 = r3 >> 1;
          if (s3.cmp(this.curve.p.umod(this.curve.n)) >= 0 && u2)
            throw new Error("Unable to find sencond key candinate");
          s3 = u2 ? this.curve.pointFromX(s3.add(this.curve.n), c2) : this.curve.pointFromX(s3, c2);
          var d2 = t2.r.invm(i2), h2 = i2.sub(a2).mul(d2).umod(i2), l2 = f3.mul(d2).umod(i2);
          return this.g.mulAdd(h2, s3, l2);
        }, F.prototype.getKeyRecoveryParam = function(e3, t2, r3, n2) {
          if (null !== (t2 = new I(t2, n2)).recoveryParam)
            return t2.recoveryParam;
          for (var i2 = 0; i2 < 4; i2++) {
            var o2;
            try {
              o2 = this.recoverPubKey(e3, t2, i2);
            } catch (e4) {
              continue;
            }
            if (o2.eq(r3))
              return i2;
          }
          throw new Error("Unable to find valid recovery factor");
        };
        var z = s2(function(e3, t2) {
          var r3 = t2;
          r3.version = "6.5.4", r3.utils = d, r3.rand = function() {
            throw new Error("unsupported");
          }, r3.curve = S, r3.curves = E, r3.ec = q, r3.eddsa = null;
        }).ec;
        t.EC = z;
      }).call(this, r2(7));
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "signing-key/5.7.0";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "transactions/5.7.0";
    }, function(e, t, r2) {
      var n = r2(34), i = r2(12), o = r2(79).subscriptions, a = r2(38), s2 = r2(17), f2 = r2(81), c = r2(376), u = r2(193), d = r2(177), h = r2(166), l = r2(443), p = r2(178), b = r2(600), y = i.formatters, v = function(e2) {
        return "string" == typeof e2[0] && 0 === e2[0].indexOf("0x") ? "eth_getBlockByHash" : "eth_getBlockByNumber";
      }, m = function(e2) {
        return "string" == typeof e2[0] && 0 === e2[0].indexOf("0x") ? "eth_getTransactionByBlockHashAndIndex" : "eth_getTransactionByBlockNumberAndIndex";
      }, g = function(e2) {
        return "string" == typeof e2[0] && 0 === e2[0].indexOf("0x") ? "eth_getUncleByBlockHashAndIndex" : "eth_getUncleByBlockNumberAndIndex";
      }, w = function(e2) {
        return "string" == typeof e2[0] && 0 === e2[0].indexOf("0x") ? "eth_getBlockTransactionCountByHash" : "eth_getBlockTransactionCountByNumber";
      }, _ = function(e2) {
        return "string" == typeof e2[0] && 0 === e2[0].indexOf("0x") ? "eth_getUncleCountByBlockHash" : "eth_getUncleCountByBlockNumber";
      }, k = function() {
        var e2 = this;
        n.packageInit(this, arguments);
        var t2 = this.setRequestManager;
        this.setRequestManager = function(r4) {
          return t2(r4), e2.net.setRequestManager(r4), e2.personal.setRequestManager(r4), e2.accounts.setRequestManager(r4), e2.Contract._requestManager = e2._requestManager, e2.Contract.currentProvider = e2._provider, true;
        };
        var r3 = this.setProvider;
        this.setProvider = function() {
          r3.apply(e2, arguments), e2.setRequestManager(e2._requestManager), e2.ens._detectedAddress = null, e2.ens._lastSyncCheck = null;
        };
        var i2, k2, A, S = false, E = null, x = "latest", P = 50, O = 24, T = 750, B = 1e3, M = 10, R = 100;
        Object.defineProperty(this, "handleRevert", { get: function() {
          return S;
        }, set: function(t3) {
          S = t3, e2.Contract.handleRevert = S, U.forEach(function(e3) {
            e3.handleRevert = S;
          });
        }, enumerable: true }), Object.defineProperty(this, "defaultCommon", { get: function() {
          return A;
        }, set: function(t3) {
          A = t3, e2.Contract.defaultCommon = A, U.forEach(function(e3) {
            e3.defaultCommon = A;
          });
        }, enumerable: true }), Object.defineProperty(this, "defaultHardfork", { get: function() {
          return k2;
        }, set: function(t3) {
          k2 = t3, e2.Contract.defaultHardfork = k2, U.forEach(function(e3) {
            e3.defaultHardfork = k2;
          });
        }, enumerable: true }), Object.defineProperty(this, "defaultChain", { get: function() {
          return i2;
        }, set: function(t3) {
          i2 = t3, e2.Contract.defaultChain = i2, U.forEach(function(e3) {
            e3.defaultChain = i2;
          });
        }, enumerable: true }), Object.defineProperty(this, "transactionPollingTimeout", { get: function() {
          return T;
        }, set: function(t3) {
          T = t3, e2.Contract.transactionPollingTimeout = T, U.forEach(function(e3) {
            e3.transactionPollingTimeout = T;
          });
        }, enumerable: true }), Object.defineProperty(this, "transactionPollingInterval", { get: function() {
          return B;
        }, set: function(t3) {
          B = t3, e2.Contract.transactionPollingInterval = B, U.forEach(function(e3) {
            e3.transactionPollingInterval = B;
          });
        }, enumerable: true }), Object.defineProperty(this, "transactionConfirmationBlocks", { get: function() {
          return O;
        }, set: function(t3) {
          O = t3, e2.Contract.transactionConfirmationBlocks = O, U.forEach(function(e3) {
            e3.transactionConfirmationBlocks = O;
          });
        }, enumerable: true }), Object.defineProperty(this, "transactionBlockTimeout", { get: function() {
          return P;
        }, set: function(t3) {
          P = t3, e2.Contract.transactionBlockTimeout = P, U.forEach(function(e3) {
            e3.transactionBlockTimeout = P;
          });
        }, enumerable: true }), Object.defineProperty(this, "blockHeaderTimeout", { get: function() {
          return M;
        }, set: function(t3) {
          M = t3, e2.Contract.blockHeaderTimeout = M, U.forEach(function(e3) {
            e3.blockHeaderTimeout = M;
          });
        }, enumerable: true }), Object.defineProperty(this, "defaultAccount", { get: function() {
          return E;
        }, set: function(t3) {
          return t3 && (E = s2.toChecksumAddress(y.inputAddressFormatter(t3))), e2.Contract.defaultAccount = E, e2.personal.defaultAccount = E, U.forEach(function(e3) {
            e3.defaultAccount = E;
          }), t3;
        }, enumerable: true }), Object.defineProperty(this, "defaultBlock", { get: function() {
          return x;
        }, set: function(t3) {
          return x = t3, e2.Contract.defaultBlock = x, e2.personal.defaultBlock = x, U.forEach(function(e3) {
            e3.defaultBlock = x;
          }), t3;
        }, enumerable: true }), Object.defineProperty(this, "maxListenersWarningThreshold", { get: function() {
          return R;
        }, set: function(t3) {
          e2.currentProvider && e2.currentProvider.setMaxListeners && (R = t3, e2.currentProvider.setMaxListeners(t3));
        }, enumerable: true }), this.clearSubscriptions = e2._requestManager.clearSubscriptions.bind(e2._requestManager), this.removeSubscriptionById = e2._requestManager.removeSubscription.bind(e2._requestManager), this.net = new f2(this), this.net.getNetworkType = b.bind(this), this.accounts = new l(this), this.personal = new u(this), this.personal.defaultAccount = this.defaultAccount, this.maxListenersWarningThreshold = R;
        var I = this, C = function() {
          d.apply(this, arguments);
          var e3 = this, t3 = I.setProvider;
          I.setProvider = function() {
            t3.apply(I, arguments), n.packageInit(e3, [I]);
          };
        };
        C.setProvider = function() {
          d.setProvider.apply(this, arguments);
        }, C.prototype = Object.create(d.prototype), C.prototype.constructor = C, this.Contract = C, this.Contract.defaultAccount = this.defaultAccount, this.Contract.defaultBlock = this.defaultBlock, this.Contract.transactionBlockTimeout = this.transactionBlockTimeout, this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks, this.Contract.transactionPollingTimeout = this.transactionPollingTimeout, this.Contract.transactionPollingInterval = this.transactionPollingInterval, this.Contract.blockHeaderTimeout = this.blockHeaderTimeout, this.Contract.handleRevert = this.handleRevert, this.Contract._requestManager = this._requestManager, this.Contract._ethAccounts = this.accounts, this.Contract.currentProvider = this._requestManager.provider, this.Iban = h, this.abi = p, this.ens = new c(this);
        var U = [new a({ name: "getNodeInfo", call: "web3_clientVersion" }), new a({ name: "getProtocolVersion", call: "eth_protocolVersion", params: 0 }), new a({ name: "getCoinbase", call: "eth_coinbase", params: 0 }), new a({ name: "isMining", call: "eth_mining", params: 0 }), new a({ name: "getHashrate", call: "eth_hashrate", params: 0, outputFormatter: s2.hexToNumber }), new a({ name: "isSyncing", call: "eth_syncing", params: 0, outputFormatter: y.outputSyncingFormatter }), new a({ name: "getGasPrice", call: "eth_gasPrice", params: 0, outputFormatter: y.outputBigNumberFormatter }), new a({ name: "getFeeHistory", call: "eth_feeHistory", params: 3, inputFormatter: [s2.numberToHex, y.inputBlockNumberFormatter, null] }), new a({ name: "getAccounts", call: "eth_accounts", params: 0, outputFormatter: s2.toChecksumAddress }), new a({ name: "getBlockNumber", call: "eth_blockNumber", params: 0, outputFormatter: s2.hexToNumber }), new a({ name: "getBalance", call: "eth_getBalance", params: 2, inputFormatter: [y.inputAddressFormatter, y.inputDefaultBlockNumberFormatter], outputFormatter: y.outputBigNumberFormatter }), new a({ name: "getStorageAt", call: "eth_getStorageAt", params: 3, inputFormatter: [y.inputAddressFormatter, s2.numberToHex, y.inputDefaultBlockNumberFormatter] }), new a({ name: "getCode", call: "eth_getCode", params: 2, inputFormatter: [y.inputAddressFormatter, y.inputDefaultBlockNumberFormatter] }), new a({ name: "getBlock", call: v, params: 2, inputFormatter: [y.inputBlockNumberFormatter, function(e3) {
          return !!e3;
        }], outputFormatter: y.outputBlockFormatter }), new a({ name: "getUncle", call: g, params: 2, inputFormatter: [y.inputBlockNumberFormatter, s2.numberToHex], outputFormatter: y.outputBlockFormatter }), new a({ name: "getBlockTransactionCount", call: w, params: 1, inputFormatter: [y.inputBlockNumberFormatter], outputFormatter: s2.hexToNumber }), new a({ name: "getBlockUncleCount", call: _, params: 1, inputFormatter: [y.inputBlockNumberFormatter], outputFormatter: s2.hexToNumber }), new a({ name: "getTransaction", call: "eth_getTransactionByHash", params: 1, inputFormatter: [null], outputFormatter: y.outputTransactionFormatter }), new a({ name: "getTransactionFromBlock", call: m, params: 2, inputFormatter: [y.inputBlockNumberFormatter, s2.numberToHex], outputFormatter: y.outputTransactionFormatter }), new a({ name: "getTransactionReceipt", call: "eth_getTransactionReceipt", params: 1, inputFormatter: [null], outputFormatter: y.outputTransactionReceiptFormatter }), new a({ name: "getTransactionCount", call: "eth_getTransactionCount", params: 2, inputFormatter: [y.inputAddressFormatter, y.inputDefaultBlockNumberFormatter], outputFormatter: s2.hexToNumber }), new a({ name: "sendSignedTransaction", call: "eth_sendRawTransaction", params: 1, inputFormatter: [null], abiCoder: p }), new a({ name: "signTransaction", call: "eth_signTransaction", params: 1, inputFormatter: [y.inputTransactionFormatter] }), new a({ name: "sendTransaction", call: "eth_sendTransaction", params: 1, inputFormatter: [y.inputTransactionFormatter], abiCoder: p }), new a({ name: "sign", call: "eth_sign", params: 2, inputFormatter: [y.inputSignFormatter, y.inputAddressFormatter], transformPayload: function(e3) {
          return e3.params.reverse(), e3;
        } }), new a({ name: "call", call: "eth_call", params: 2, inputFormatter: [y.inputCallFormatter, y.inputDefaultBlockNumberFormatter], abiCoder: p }), new a({ name: "estimateGas", call: "eth_estimateGas", params: 1, inputFormatter: [y.inputCallFormatter], outputFormatter: s2.hexToNumber }), new a({ name: "submitWork", call: "eth_submitWork", params: 3 }), new a({ name: "getWork", call: "eth_getWork", params: 0 }), new a({ name: "getPastLogs", call: "eth_getLogs", params: 1, inputFormatter: [y.inputLogFormatter], outputFormatter: y.outputLogFormatter }), new a({ name: "getChainId", call: "eth_chainId", params: 0, outputFormatter: s2.hexToNumber }), new a({ name: "requestAccounts", call: "eth_requestAccounts", params: 0, outputFormatter: s2.toChecksumAddress }), new a({ name: "getProof", call: "eth_getProof", params: 3, inputFormatter: [y.inputAddressFormatter, y.inputStorageKeysFormatter, y.inputDefaultBlockNumberFormatter], outputFormatter: y.outputProofFormatter }), new a({ name: "getPendingTransactions", call: "eth_pendingTransactions", params: 0, outputFormatter: y.outputTransactionFormatter }), new a({ name: "createAccessList", call: "eth_createAccessList", params: 2, inputFormatter: [y.inputTransactionFormatter, y.inputDefaultBlockNumberFormatter] }), new o({ name: "subscribe", type: "eth", subscriptions: { newBlockHeaders: { subscriptionName: "newHeads", params: 0, outputFormatter: y.outputBlockFormatter }, pendingTransactions: { subscriptionName: "newPendingTransactions", params: 0 }, logs: { params: 1, inputFormatter: [y.inputLogFormatter], outputFormatter: y.outputLogFormatter, subscriptionHandler: function(e3) {
          e3.removed ? this.emit("changed", e3) : this.emit("data", e3), "function" == typeof this.callback && this.callback(null, e3, this);
        } }, syncing: { params: 0, outputFormatter: y.outputSyncingFormatter, subscriptionHandler: function(e3) {
          var t3 = this;
          true !== this._isSyncing ? (this._isSyncing = true, this.emit("changed", t3._isSyncing), "function" == typeof this.callback && this.callback(null, t3._isSyncing, this), setTimeout(function() {
            t3.emit("data", e3), "function" == typeof t3.callback && t3.callback(null, e3, t3);
          }, 0)) : (this.emit("data", e3), "function" == typeof t3.callback && this.callback(null, e3, this), clearTimeout(this._isSyncingTimeout), this._isSyncingTimeout = setTimeout(function() {
            e3.currentBlock > e3.highestBlock - 200 && (t3._isSyncing = false, t3.emit("changed", t3._isSyncing), "function" == typeof t3.callback && t3.callback(null, t3._isSyncing, t3));
          }, 500));
        } } } })];
        U.forEach(function(t3) {
          t3.attachToObject(e2), t3.setRequestManager(e2._requestManager, e2.accounts), t3.defaultBlock = e2.defaultBlock, t3.defaultAccount = e2.defaultAccount, t3.transactionBlockTimeout = e2.transactionBlockTimeout, t3.transactionConfirmationBlocks = e2.transactionConfirmationBlocks, t3.transactionPollingTimeout = e2.transactionPollingTimeout, t3.transactionPollingInterval = e2.transactionPollingInterval, t3.handleRevert = e2.handleRevert;
        });
      };
      n.addProviders(k), e.exports = k;
    }, function(e, t, r2) {
      var n = r2(377);
      e.exports = n;
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(63)), o = n(r2(105)), a = r2(176), s2 = r2(12).formatters, f2 = r2(17), c = r2(378), u = r2(408), d = r2(409);
      function h(e2) {
        this.eth = e2;
        var t2 = null;
        this._detectedAddress = null, this._lastSyncCheck = null, Object.defineProperty(this, "registry", { get: function() {
          return new c(this);
        }, enumerable: true }), Object.defineProperty(this, "resolverMethodHandler", { get: function() {
          return new u(this.registry);
        }, enumerable: true }), Object.defineProperty(this, "registryAddress", { get: function() {
          return t2;
        }, set: function(e3) {
          t2 = null !== e3 ? s2.inputAddressFormatter(e3) : e3;
        }, enumerable: true });
      }
      h.prototype.supportsInterface = function(e2, t2, r3) {
        return this.getResolver(e2).then(function(e3) {
          return f2.isHexStrict(t2) || (t2 = f2.sha3(t2).slice(0, 10)), e3.methods.supportsInterface(t2).call(r3);
        }).catch(function(e3) {
          if ("function" != typeof r3)
            throw e3;
          r3(e3, null);
        });
      }, h.prototype.resolver = function(e2, t2) {
        return this.registry.resolver(e2, t2);
      }, h.prototype.getResolver = function(e2, t2) {
        return this.registry.getResolver(e2, t2);
      }, h.prototype.setResolver = function(e2, t2, r3, n2) {
        return this.registry.setResolver(e2, t2, r3, n2);
      }, h.prototype.setRecord = function(e2, t2, r3, n2, i2, o2) {
        return this.registry.setRecord(e2, t2, r3, n2, i2, o2);
      }, h.prototype.setSubnodeRecord = function(e2, t2, r3, n2, i2, o2, a2) {
        return this.registry.setSubnodeRecord(e2, t2, r3, n2, i2, o2, a2);
      }, h.prototype.setApprovalForAll = function(e2, t2, r3, n2) {
        return this.registry.setApprovalForAll(e2, t2, r3, n2);
      }, h.prototype.isApprovedForAll = function(e2, t2, r3) {
        return this.registry.isApprovedForAll(e2, t2, r3);
      }, h.prototype.recordExists = function(e2, t2) {
        return this.registry.recordExists(e2, t2);
      }, h.prototype.setSubnodeOwner = function(e2, t2, r3, n2, i2) {
        return this.registry.setSubnodeOwner(e2, t2, r3, n2, i2);
      }, h.prototype.getTTL = function(e2, t2) {
        return this.registry.getTTL(e2, t2);
      }, h.prototype.setTTL = function(e2, t2, r3, n2) {
        return this.registry.setTTL(e2, t2, r3, n2);
      }, h.prototype.getOwner = function(e2, t2) {
        return this.registry.getOwner(e2, t2);
      }, h.prototype.setOwner = function(e2, t2, r3, n2) {
        return this.registry.setOwner(e2, t2, r3, n2);
      }, h.prototype.getAddress = function(e2, t2) {
        return this.resolverMethodHandler.method(e2, "addr", []).call(t2);
      }, h.prototype.setAddress = function(e2, t2, r3, n2) {
        return this.resolverMethodHandler.method(e2, "setAddr", [t2]).send(r3, n2);
      }, h.prototype.getPubkey = function(e2, t2) {
        return this.resolverMethodHandler.method(e2, "pubkey", [], null, t2).call(t2);
      }, h.prototype.setPubkey = function(e2, t2, r3, n2, i2) {
        return this.resolverMethodHandler.method(e2, "setPubkey", [t2, r3]).send(n2, i2);
      }, h.prototype.getContent = function(e2, t2) {
        return this.resolverMethodHandler.method(e2, "content", []).call(t2);
      }, h.prototype.setContent = function(e2, t2, r3, n2) {
        return this.resolverMethodHandler.method(e2, "setContent", [t2]).send(r3, n2);
      }, h.prototype.getContenthash = function(e2, t2) {
        return this.resolverMethodHandler.method(e2, "contenthash", [], d.decode).call(t2);
      }, h.prototype.setContenthash = function(e2, t2, r3, n2) {
        var i2;
        try {
          i2 = d.encode(t2);
        } catch (e3) {
          var o2 = new Error("Could not encode " + t2 + ". See docs for supported hash protocols.");
          if ("function" == typeof n2)
            return void n2(o2, null);
          throw o2;
        }
        return this.resolverMethodHandler.method(e2, "setContenthash", [i2]).send(r3, n2);
      }, h.prototype.getMultihash = function(e2, t2) {
        return this.resolverMethodHandler.method(e2, "multihash", []).call(t2);
      }, h.prototype.setMultihash = function(e2, t2, r3, n2) {
        return this.resolverMethodHandler.method(e2, "multihash", [t2]).send(r3, n2);
      }, h.prototype.checkNetwork = (0, o.default)(i.default.mark(function e2() {
        var t2, r3, n2, o2, s3;
        return i.default.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                if (t2 = new Date() / 1e3, this._lastSyncCheck && !(t2 - this._lastSyncCheck > 3600)) {
                  e3.next = 9;
                  break;
                }
                return e3.next = 4, this.eth.getBlock("latest");
              case 4:
                if (r3 = e3.sent, !((n2 = t2 - r3.timestamp) > 3600)) {
                  e3.next = 8;
                  break;
                }
                throw new Error("Network not synced; last block was " + n2 + " seconds ago");
              case 8:
                this._lastSyncCheck = t2;
              case 9:
                if (!this.registryAddress) {
                  e3.next = 11;
                  break;
                }
                return e3.abrupt("return", this.registryAddress);
              case 11:
                if (this._detectedAddress) {
                  e3.next = 20;
                  break;
                }
                return e3.next = 14, this.eth.net.getNetworkType();
              case 14:
                if (o2 = e3.sent, void 0 !== (s3 = a.addresses[o2])) {
                  e3.next = 18;
                  break;
                }
                throw new Error("ENS is not supported on network " + o2);
              case 18:
                return this._detectedAddress = s3, e3.abrupt("return", this._detectedAddress);
              case 20:
                return e3.abrupt("return", this._detectedAddress);
              case 21:
              case "end":
                return e3.stop();
            }
        }, e2, this);
      })), e.exports = h;
    }, function(e, t, r2) {
      var n = r2(177), i = r2(188), o = r2(78), a = r2(12).formatters, s2 = r2(17), f2 = r2(406), c = r2(407);
      function u(e2) {
        var t2 = this;
        this.ens = e2, this.contract = e2.checkNetwork().then(function(e3) {
          var r3 = new n(f2, e3);
          return r3.setProvider(t2.ens.eth.currentProvider), r3;
        });
      }
      u.prototype.owner = function(e2, t2) {
        return console.warn('Deprecated: Please use the "getOwner" method instead of "owner".'), this.getOwner(e2, t2);
      }, u.prototype.getOwner = function(e2, t2) {
        var r3 = new o(true);
        return this.contract.then(function(t3) {
          return t3.methods.owner(i.hash(e2)).call();
        }).then(function(e3) {
          "function" != typeof t2 ? r3.resolve(e3) : t2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof t2 ? r3.reject(e3) : t2(e3, null);
        }), r3.eventEmitter;
      }, u.prototype.setOwner = function(e2, t2, r3, n2) {
        var s3 = new o(true);
        return this.contract.then(function(n3) {
          return n3.methods.setOwner(i.hash(e2), a.inputAddressFormatter(t2)).send(r3);
        }).then(function(e3) {
          "function" != typeof n2 ? s3.resolve(e3) : n2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof n2 ? s3.reject(e3) : n2(e3, null);
        }), s3.eventEmitter;
      }, u.prototype.getTTL = function(e2, t2) {
        var r3 = new o(true);
        return this.contract.then(function(t3) {
          return t3.methods.ttl(i.hash(e2)).call();
        }).then(function(e3) {
          "function" != typeof t2 ? r3.resolve(e3) : t2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof t2 ? r3.reject(e3) : t2(e3, null);
        }), r3.eventEmitter;
      }, u.prototype.setTTL = function(e2, t2, r3, n2) {
        var a2 = new o(true);
        return this.contract.then(function(n3) {
          return n3.methods.setTTL(i.hash(e2), t2).send(r3);
        }).then(function(e3) {
          "function" != typeof n2 ? a2.resolve(e3) : n2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof n2 ? a2.reject(e3) : n2(e3, null);
        }), a2.eventEmitter;
      }, u.prototype.setSubnodeOwner = function(e2, t2, r3, n2, f3) {
        var c2 = new o(true);
        return s2.isHexStrict(t2) || (t2 = s2.sha3(t2)), this.contract.then(function(o2) {
          return o2.methods.setSubnodeOwner(i.hash(e2), t2, a.inputAddressFormatter(r3)).send(n2);
        }).then(function(e3) {
          "function" != typeof f3 ? c2.resolve(e3) : f3(e3, e3);
        }).catch(function(e3) {
          "function" != typeof f3 ? c2.reject(e3) : f3(e3, null);
        }), c2.eventEmitter;
      }, u.prototype.setRecord = function(e2, t2, r3, n2, s3, f3) {
        var c2 = new o(true);
        return this.contract.then(function(o2) {
          return o2.methods.setRecord(i.hash(e2), a.inputAddressFormatter(t2), a.inputAddressFormatter(r3), n2).send(s3);
        }).then(function(e3) {
          "function" != typeof f3 ? c2.resolve(e3) : f3(e3, e3);
        }).catch(function(e3) {
          "function" != typeof f3 ? c2.reject(e3) : f3(e3, null);
        }), c2.eventEmitter;
      }, u.prototype.setSubnodeRecord = function(e2, t2, r3, n2, f3, c2, u2) {
        var d = new o(true);
        return s2.isHexStrict(t2) || (t2 = s2.sha3(t2)), this.contract.then(function(o2) {
          return o2.methods.setSubnodeRecord(i.hash(e2), t2, a.inputAddressFormatter(r3), a.inputAddressFormatter(n2), f3).send(c2);
        }).then(function(e3) {
          "function" != typeof u2 ? d.resolve(e3) : u2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof u2 ? d.reject(e3) : u2(e3, null);
        }), d.eventEmitter;
      }, u.prototype.setApprovalForAll = function(e2, t2, r3, n2) {
        var i2 = new o(true);
        return this.contract.then(function(n3) {
          return n3.methods.setApprovalForAll(a.inputAddressFormatter(e2), t2).send(r3);
        }).then(function(e3) {
          "function" != typeof n2 ? i2.resolve(e3) : n2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof n2 ? i2.reject(e3) : n2(e3, null);
        }), i2.eventEmitter;
      }, u.prototype.isApprovedForAll = function(e2, t2, r3) {
        var n2 = new o(true);
        return this.contract.then(function(r4) {
          return r4.methods.isApprovedForAll(a.inputAddressFormatter(e2), a.inputAddressFormatter(t2)).call();
        }).then(function(e3) {
          "function" != typeof r3 ? n2.resolve(e3) : r3(e3, e3);
        }).catch(function(e3) {
          "function" != typeof r3 ? n2.reject(e3) : r3(e3, null);
        }), n2.eventEmitter;
      }, u.prototype.recordExists = function(e2, t2) {
        var r3 = new o(true);
        return this.contract.then(function(t3) {
          return t3.methods.recordExists(i.hash(e2)).call();
        }).then(function(e3) {
          "function" != typeof t2 ? r3.resolve(e3) : t2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof t2 ? r3.reject(e3) : t2(e3, null);
        }), r3.eventEmitter;
      }, u.prototype.resolver = function(e2, t2) {
        return console.warn('Deprecated: Please use the "getResolver" method instead of "resolver".'), this.getResolver(e2, t2);
      }, u.prototype.getResolver = function(e2, t2) {
        var r3 = this;
        return this.contract.then(function(t3) {
          return t3.methods.resolver(i.hash(e2)).call();
        }).then(function(e3) {
          var i2 = new n(c, e3);
          if (i2.setProvider(r3.ens.eth.currentProvider), "function" != typeof t2)
            return i2;
          t2(i2, i2);
        }).catch(function(e3) {
          if ("function" != typeof t2)
            throw e3;
          t2(e3, null);
        });
      }, u.prototype.setResolver = function(e2, t2, r3, n2) {
        var s3 = new o(true);
        return this.contract.then(function(n3) {
          return n3.methods.setResolver(i.hash(e2), a.inputAddressFormatter(t2)).send(r3);
        }).then(function(e3) {
          "function" != typeof n2 ? s3.resolve(e3) : n2(e3, e3);
        }).catch(function(e3) {
          "function" != typeof n2 ? s3.reject(e3) : n2(e3, null);
        }), s3.eventEmitter;
      }, e.exports = u;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.AddressCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13)), c = r2(80), u = r2(11);
      function d(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var h = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = d(r3);
        function r3(e3) {
          return (0, i.default)(this, r3), t2.call(this, "address", "address", e3, false);
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          return "0x0000000000000000000000000000000000000000";
        } }, { key: "encode", value: function(e3, t3) {
          try {
            t3 = (0, c.getAddress)(t3);
          } catch (e4) {
            this._throwError(e4.message, t3);
          }
          return e3.writeValue(t3);
        } }, { key: "decode", value: function(e3) {
          return (0, c.getAddress)((0, u.hexZeroPad)(e3.readValue().toHexString(), 20));
        } }]), r3;
      }(r2(23).Coder);
      t.AddressCoder = h;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.AnonymousCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13));
      function c(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var u = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = c(r3);
        function r3(e3) {
          var n2;
          return (0, i.default)(this, r3), (n2 = t2.call(this, e3.name, e3.type, void 0, e3.dynamic)).coder = e3, n2;
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          return this.coder.defaultValue();
        } }, { key: "encode", value: function(e3, t3) {
          return this.coder.encode(e3, t3);
        } }, { key: "decode", value: function(e3) {
          return this.coder.decode(e3);
        } }]), r3;
      }(r2(23).Coder);
      t.AnonymousCoder = u;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.BooleanCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13));
      function c(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var u = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = c(r3);
        function r3(e3) {
          return (0, i.default)(this, r3), t2.call(this, "bool", "bool", e3, false);
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          return false;
        } }, { key: "encode", value: function(e3, t3) {
          return e3.writeValue(t3 ? 1 : 0);
        } }, { key: "decode", value: function(e3) {
          return e3.coerce(this.type, !e3.readValue().isZero());
        } }]), r3;
      }(r2(23).Coder);
      t.BooleanCoder = u;
    }, function(e, t, r2) {
      var n = r2(13);
      e.exports = function(e2, t2) {
        for (; !Object.prototype.hasOwnProperty.call(e2, t2) && null !== (e2 = n(e2)); )
          ;
        return e2;
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.FixedBytesCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13)), c = r2(11);
      function u(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var d = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = u(r3);
        function r3(e3, n2) {
          var o2;
          (0, i.default)(this, r3);
          var a2 = "bytes" + String(e3);
          return (o2 = t2.call(this, a2, a2, n2, false)).size = e3, o2;
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size);
        } }, { key: "encode", value: function(e3, t3) {
          var r4 = (0, c.arrayify)(t3);
          return r4.length !== this.size && this._throwError("incorrect data length", t3), e3.writeBytes(r4);
        } }, { key: "decode", value: function(e3) {
          return e3.coerce(this.name, (0, c.hexlify)(e3.readBytes(this.size)));
        } }]), r3;
      }(r2(23).Coder);
      t.FixedBytesCoder = d;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.NullCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13));
      function c(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var u = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = c(r3);
        function r3(e3) {
          return (0, i.default)(this, r3), t2.call(this, "null", "", e3, false);
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          return null;
        } }, { key: "encode", value: function(e3, t3) {
          return null != t3 && this._throwError("not null", t3), e3.writeBytes([]);
        } }, { key: "decode", value: function(e3) {
          return e3.readBytes(0), e3.coerce(this.name, null);
        } }]), r3;
      }(r2(23).Coder);
      t.NullCoder = u;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.NumberCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13)), c = r2(33), u = r2(106);
      function d(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var h = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = d(r3);
        function r3(e3, n2, o2) {
          var a2;
          (0, i.default)(this, r3);
          var s3 = (n2 ? "int" : "uint") + 8 * e3;
          return (a2 = t2.call(this, s3, s3, o2, false)).size = e3, a2.signed = n2, a2;
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          return 0;
        } }, { key: "encode", value: function(e3, t3) {
          var r4 = c.BigNumber.from(t3), n2 = u.MaxUint256.mask(8 * e3.wordSize);
          if (this.signed) {
            var i2 = n2.mask(8 * this.size - 1);
            (r4.gt(i2) || r4.lt(i2.add(u.One).mul(u.NegativeOne))) && this._throwError("value out-of-bounds", t3);
          } else
            (r4.lt(u.Zero) || r4.gt(n2.mask(8 * this.size))) && this._throwError("value out-of-bounds", t3);
          return r4 = r4.toTwos(8 * this.size).mask(8 * this.size), this.signed && (r4 = r4.fromTwos(8 * this.size).toTwos(8 * e3.wordSize)), e3.writeValue(r4);
        } }, { key: "decode", value: function(e3) {
          var t3 = e3.readValue().mask(8 * this.size);
          return this.signed && (t3 = t3.fromTwos(8 * this.size)), e3.coerce(this.name, t3);
        } }]), r3;
      }(r2(23).Coder);
      t.NumberCoder = h;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.StringCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(183)), s2 = n(r2(14)), f2 = n(r2(15)), c = n(r2(13)), u = r2(65);
      function d(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, c.default)(e2);
          if (t2) {
            var i2 = (0, c.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, f2.default)(this, r3);
        };
      }
      var h = function(e2) {
        (0, s2.default)(r3, e2);
        var t2 = d(r3);
        function r3(e3) {
          return (0, i.default)(this, r3), t2.call(this, "string", e3);
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          return "";
        } }, { key: "encode", value: function(e3, t3) {
          return (0, a.default)((0, c.default)(r3.prototype), "encode", this).call(this, e3, (0, u.toUtf8Bytes)(t3));
        } }, { key: "decode", value: function(e3) {
          return (0, u.toUtf8String)((0, a.default)((0, c.default)(r3.prototype), "decode", this).call(this, e3));
        } }]), r3;
      }(r2(182).DynamicBytesCoder);
      t.StringCoder = h;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.formatBytes32String = function(e2) {
        var t2 = (0, o.toUtf8Bytes)(e2);
        if (t2.length > 31)
          throw new Error("bytes32 string must be less than 32 bytes");
        return (0, i.hexlify)((0, i.concat)([t2, n.HashZero]).slice(0, 32));
      }, t.parseBytes32String = function(e2) {
        var t2 = (0, i.arrayify)(e2);
        if (32 !== t2.length)
          throw new Error("invalid bytes32 - not 32 bytes long");
        if (0 !== t2[31])
          throw new Error("invalid bytes32 string - no null terminator");
        var r3 = 31;
        for (; 0 === t2[r3 - 1]; )
          r3--;
        return (0, o.toUtf8String)(t2.slice(0, r3));
      };
      var n = r2(106), i = r2(11), o = r2(108);
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.version = void 0;
      t.version = "strings/5.7.0";
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t._nameprepTableA1 = p, t._nameprepTableB2 = b, t._nameprepTableC = y, t.nameprep = function(e2) {
        if (e2.match(/^[a-z0-9-]*$/i) && e2.length <= 59)
          return e2.toLowerCase();
        var t2 = (0, n.toUtf8CodePoints)(e2);
        r3 = t2.map(function(e3) {
          if (f2.indexOf(e3) >= 0)
            return [];
          if (e3 >= 65024 && e3 <= 65039)
            return [];
          var t3 = b(e3);
          return t3 || [e3];
        }), t2 = r3.reduce(function(e3, t3) {
          return t3.forEach(function(t4) {
            e3.push(t4);
          }), e3;
        }, []), (t2 = (0, n.toUtf8CodePoints)((0, n._toUtf8String)(t2), n.UnicodeNormalizationForm.NFKC)).forEach(function(e3) {
          if (y(e3))
            throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
        }), t2.forEach(function(e3) {
          if (p(e3))
            throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
        });
        var r3;
        var i2 = (0, n._toUtf8String)(t2);
        if ("-" === i2.substring(0, 1) || "--" === i2.substring(2, 4) || "-" === i2.substring(i2.length - 1))
          throw new Error("invalid hyphen");
        return i2;
      };
      var n = r2(108);
      function i(e2, t2) {
        t2 || (t2 = function(e3) {
          return [parseInt(e3, 16)];
        });
        var r3 = 0, n2 = {};
        return e2.split(",").forEach(function(e3) {
          var i2 = e3.split(":");
          r3 += parseInt(i2[0], 16), n2[r3] = t2(i2[1]);
        }), n2;
      }
      function o(e2) {
        var t2 = 0;
        return e2.split(",").map(function(e3) {
          var r3 = e3.split("-");
          return 1 === r3.length ? r3[1] = "0" : "" === r3[1] && (r3[1] = "1"), { l: t2 + parseInt(r3[0], 16), h: t2 = parseInt(r3[1], 16) };
        });
      }
      function a(e2, t2) {
        for (var r3 = 0, n2 = 0; n2 < t2.length; n2++) {
          var i2 = t2[n2];
          if (e2 >= (r3 += i2.l) && e2 <= r3 + i2.h && (e2 - r3) % (i2.d || 1) == 0) {
            if (i2.e && -1 !== i2.e.indexOf(e2 - r3))
              continue;
            return i2;
          }
        }
        return null;
      }
      var s2 = o("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), f2 = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(function(e2) {
        return parseInt(e2, 16);
      }), c = [{ h: 25, s: 32, l: 65 }, { h: 30, s: 32, e: [23], l: 127 }, { h: 54, s: 1, e: [48], l: 64, d: 2 }, { h: 14, s: 1, l: 57, d: 2 }, { h: 44, s: 1, l: 17, d: 2 }, { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 }, { h: 16, s: 1, l: 68, d: 2 }, { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 }, { h: 26, s: 32, e: [17], l: 435 }, { h: 22, s: 1, l: 71, d: 2 }, { h: 15, s: 80, l: 40 }, { h: 31, s: 32, l: 16 }, { h: 32, s: 1, l: 80, d: 2 }, { h: 52, s: 1, l: 42, d: 2 }, { h: 12, s: 1, l: 55, d: 2 }, { h: 40, s: 1, e: [38], l: 15, d: 2 }, { h: 14, s: 1, l: 48, d: 2 }, { h: 37, s: 48, l: 49 }, { h: 148, s: 1, l: 6351, d: 2 }, { h: 88, s: 1, l: 160, d: 2 }, { h: 15, s: 16, l: 704 }, { h: 25, s: 26, l: 854 }, { h: 25, s: 32, l: 55915 }, { h: 37, s: 40, l: 1247 }, { h: 25, s: -119711, l: 53248 }, { h: 25, s: -119763, l: 52 }, { h: 25, s: -119815, l: 52 }, { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 }, { h: 25, s: -119919, l: 52 }, { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 }, { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 }, { h: 25, s: -120075, l: 52 }, { h: 25, s: -120127, l: 52 }, { h: 25, s: -120179, l: 52 }, { h: 25, s: -120231, l: 52 }, { h: 25, s: -120283, l: 52 }, { h: 25, s: -120335, l: 52 }, { h: 24, s: -119543, e: [17], l: 56 }, { h: 24, s: -119601, e: [17], l: 58 }, { h: 24, s: -119659, e: [17], l: 58 }, { h: 24, s: -119717, e: [17], l: 58 }, { h: 24, s: -119775, e: [17], l: 58 }], u = i("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), d = i("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), h = i("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", function(e2) {
        if (e2.length % 4 != 0)
          throw new Error("bad data");
        for (var t2 = [], r3 = 0; r3 < e2.length; r3 += 4)
          t2.push(parseInt(e2.substring(r3, r3 + 4), 16));
        return t2;
      }), l = o("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
      function p(e2) {
        return !!a(e2, s2);
      }
      function b(e2) {
        var t2 = a(e2, c);
        if (t2)
          return [e2 + t2.s];
        var r3 = u[e2];
        if (r3)
          return r3;
        var n2 = d[e2];
        if (n2)
          return [e2 + n2[0]];
        var i2 = h[e2];
        return i2 || null;
      }
      function y(e2) {
        return !!a(e2, l);
      }
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.TupleCoder = void 0;
      var i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13)), c = r2(23), u = r2(181);
      function d(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var h = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = d(r3);
        function r3(e3, n2) {
          var o2;
          (0, i.default)(this, r3);
          var a2 = false, s3 = [];
          e3.forEach(function(e4) {
            e4.dynamic && (a2 = true), s3.push(e4.type);
          });
          var f3 = "tuple(" + s3.join(",") + ")";
          return (o2 = t2.call(this, "tuple", f3, n2, a2)).coders = e3, o2;
        }
        return (0, o.default)(r3, [{ key: "defaultValue", value: function() {
          var e3 = [];
          this.coders.forEach(function(t4) {
            e3.push(t4.defaultValue());
          });
          var t3 = this.coders.reduce(function(e4, t4) {
            var r4 = t4.localName;
            return r4 && (e4[r4] || (e4[r4] = 0), e4[r4]++), e4;
          }, {});
          return this.coders.forEach(function(r4, n2) {
            var i2 = r4.localName;
            i2 && 1 === t3[i2] && ("length" === i2 && (i2 = "_length"), null == e3[i2] && (e3[i2] = e3[n2]));
          }), Object.freeze(e3);
        } }, { key: "encode", value: function(e3, t3) {
          return (0, u.pack)(e3, this.coders, t3);
        } }, { key: "decode", value: function(e3) {
          return e3.coerce(this.name, (0, u.unpack)(e3, this.coders));
        } }]), r3;
      }(c.Coder);
      t.TupleCoder = h;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.TransactionDescription = t.LogDescription = t.Interface = t.Indexed = t.ErrorDescription = void 0, Object.defineProperty(t, "checkResultErrors", { enumerable: true, get: function() {
        return y.checkResultErrors;
      } });
      var i = n(r2(9)), o = n(r2(8)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13)), c = r2(80), u = r2(33), d = r2(11), h = r2(392), l = r2(39), p = r2(40), b = r2(180), y = r2(23), v = r2(107), m = r2(16), g = r2(64);
      function w(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, f2.default)(e2);
          if (t2) {
            var i2 = (0, f2.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, s2.default)(this, r3);
        };
      }
      var _ = new m.Logger(g.version), k = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = w(r3);
        function r3() {
          return (0, o.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, i.default)(r3);
      }(p.Description);
      t.LogDescription = k;
      var A = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = w(r3);
        function r3() {
          return (0, o.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, i.default)(r3);
      }(p.Description);
      t.TransactionDescription = A;
      var S = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = w(r3);
        function r3() {
          return (0, o.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, i.default)(r3);
      }(p.Description);
      t.ErrorDescription = S;
      var E = function(e2) {
        (0, a.default)(r3, e2);
        var t2 = w(r3);
        function r3() {
          return (0, o.default)(this, r3), t2.apply(this, arguments);
        }
        return (0, i.default)(r3, null, [{ key: "isIndexed", value: function(e3) {
          return !(!e3 || !e3._isIndexed);
        } }]), r3;
      }(p.Description);
      t.Indexed = E;
      var x = { "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: true }, "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] } };
      function P(e2, t2) {
        var r3 = new Error("deferred error during ABI decoding triggered accessing ".concat(e2));
        return r3.error = t2, r3;
      }
      var O = function() {
        function e2(t2) {
          var r3 = this;
          (0, o.default)(this, e2);
          var n2 = [];
          n2 = "string" == typeof t2 ? JSON.parse(t2) : t2, (0, p.defineReadOnly)(this, "fragments", n2.map(function(e3) {
            return v.Fragment.from(e3);
          }).filter(function(e3) {
            return null != e3;
          })), (0, p.defineReadOnly)(this, "_abiCoder", (0, p.getStatic)(this instanceof e2 ? this.constructor : void 0, "getAbiCoder")()), (0, p.defineReadOnly)(this, "functions", {}), (0, p.defineReadOnly)(this, "errors", {}), (0, p.defineReadOnly)(this, "events", {}), (0, p.defineReadOnly)(this, "structs", {}), this.fragments.forEach(function(e3) {
            var t3 = null;
            switch (e3.type) {
              case "constructor":
                return r3.deploy ? void _.warn("duplicate definition - constructor") : void (0, p.defineReadOnly)(r3, "deploy", e3);
              case "function":
                t3 = r3.functions;
                break;
              case "event":
                t3 = r3.events;
                break;
              case "error":
                t3 = r3.errors;
                break;
              default:
                return;
            }
            var n3 = e3.format();
            t3[n3] ? _.warn("duplicate definition - " + n3) : t3[n3] = e3;
          }), this.deploy || (0, p.defineReadOnly)(this, "deploy", v.ConstructorFragment.from({ payable: false, type: "constructor" })), (0, p.defineReadOnly)(this, "_isInterface", true);
        }
        return (0, i.default)(e2, [{ key: "format", value: function(e3) {
          e3 || (e3 = v.FormatTypes.full), e3 === v.FormatTypes.sighash && _.throwArgumentError("interface does not support formatting sighash", "format", e3);
          var t2 = this.fragments.map(function(t3) {
            return t3.format(e3);
          });
          return e3 === v.FormatTypes.json ? JSON.stringify(t2.map(function(e4) {
            return JSON.parse(e4);
          })) : t2;
        } }, { key: "getFunction", value: function(e3) {
          if ((0, d.isHexString)(e3)) {
            for (var t2 in this.functions)
              if (e3 === this.getSighash(t2))
                return this.functions[t2];
            _.throwArgumentError("no matching function", "sighash", e3);
          }
          if (-1 === e3.indexOf("(")) {
            var r3 = e3.trim(), n2 = Object.keys(this.functions).filter(function(e4) {
              return e4.split("(")[0] === r3;
            });
            return 0 === n2.length ? _.throwArgumentError("no matching function", "name", r3) : n2.length > 1 && _.throwArgumentError("multiple matching functions", "name", r3), this.functions[n2[0]];
          }
          var i2 = this.functions[v.FunctionFragment.fromString(e3).format()];
          return i2 || _.throwArgumentError("no matching function", "signature", e3), i2;
        } }, { key: "getEvent", value: function(e3) {
          if ((0, d.isHexString)(e3)) {
            var t2 = e3.toLowerCase();
            for (var r3 in this.events)
              if (t2 === this.getEventTopic(r3))
                return this.events[r3];
            _.throwArgumentError("no matching event", "topichash", t2);
          }
          if (-1 === e3.indexOf("(")) {
            var n2 = e3.trim(), i2 = Object.keys(this.events).filter(function(e4) {
              return e4.split("(")[0] === n2;
            });
            return 0 === i2.length ? _.throwArgumentError("no matching event", "name", n2) : i2.length > 1 && _.throwArgumentError("multiple matching events", "name", n2), this.events[i2[0]];
          }
          var o2 = this.events[v.EventFragment.fromString(e3).format()];
          return o2 || _.throwArgumentError("no matching event", "signature", e3), o2;
        } }, { key: "getError", value: function(e3) {
          if ((0, d.isHexString)(e3)) {
            var t2 = (0, p.getStatic)(this.constructor, "getSighash");
            for (var r3 in this.errors) {
              if (e3 === t2(this.errors[r3]))
                return this.errors[r3];
            }
            _.throwArgumentError("no matching error", "sighash", e3);
          }
          if (-1 === e3.indexOf("(")) {
            var n2 = e3.trim(), i2 = Object.keys(this.errors).filter(function(e4) {
              return e4.split("(")[0] === n2;
            });
            return 0 === i2.length ? _.throwArgumentError("no matching error", "name", n2) : i2.length > 1 && _.throwArgumentError("multiple matching errors", "name", n2), this.errors[i2[0]];
          }
          var o2 = this.errors[v.FunctionFragment.fromString(e3).format()];
          return o2 || _.throwArgumentError("no matching error", "signature", e3), o2;
        } }, { key: "getSighash", value: function(e3) {
          if ("string" == typeof e3)
            try {
              e3 = this.getFunction(e3);
            } catch (t2) {
              try {
                e3 = this.getError(e3);
              } catch (e4) {
                throw t2;
              }
            }
          return (0, p.getStatic)(this.constructor, "getSighash")(e3);
        } }, { key: "getEventTopic", value: function(e3) {
          return "string" == typeof e3 && (e3 = this.getEvent(e3)), (0, p.getStatic)(this.constructor, "getEventTopic")(e3);
        } }, { key: "_decodeParams", value: function(e3, t2) {
          return this._abiCoder.decode(e3, t2);
        } }, { key: "_encodeParams", value: function(e3, t2) {
          return this._abiCoder.encode(e3, t2);
        } }, { key: "encodeDeploy", value: function(e3) {
          return this._encodeParams(this.deploy.inputs, e3 || []);
        } }, { key: "decodeErrorResult", value: function(e3, t2) {
          "string" == typeof e3 && (e3 = this.getError(e3));
          var r3 = (0, d.arrayify)(t2);
          return (0, d.hexlify)(r3.slice(0, 4)) !== this.getSighash(e3) && _.throwArgumentError("data signature does not match error ".concat(e3.name, "."), "data", (0, d.hexlify)(r3)), this._decodeParams(e3.inputs, r3.slice(4));
        } }, { key: "encodeErrorResult", value: function(e3, t2) {
          return "string" == typeof e3 && (e3 = this.getError(e3)), (0, d.hexlify)((0, d.concat)([this.getSighash(e3), this._encodeParams(e3.inputs, t2 || [])]));
        } }, { key: "decodeFunctionData", value: function(e3, t2) {
          "string" == typeof e3 && (e3 = this.getFunction(e3));
          var r3 = (0, d.arrayify)(t2);
          return (0, d.hexlify)(r3.slice(0, 4)) !== this.getSighash(e3) && _.throwArgumentError("data signature does not match function ".concat(e3.name, "."), "data", (0, d.hexlify)(r3)), this._decodeParams(e3.inputs, r3.slice(4));
        } }, { key: "encodeFunctionData", value: function(e3, t2) {
          return "string" == typeof e3 && (e3 = this.getFunction(e3)), (0, d.hexlify)((0, d.concat)([this.getSighash(e3), this._encodeParams(e3.inputs, t2 || [])]));
        } }, { key: "decodeFunctionResult", value: function(e3, t2) {
          "string" == typeof e3 && (e3 = this.getFunction(e3));
          var r3 = (0, d.arrayify)(t2), n2 = null, i2 = "", o2 = null, a2 = null, s3 = null;
          switch (r3.length % this._abiCoder._getWordSize()) {
            case 0:
              try {
                return this._abiCoder.decode(e3.outputs, r3);
              } catch (u3) {
              }
              break;
            case 4:
              var f3 = (0, d.hexlify)(r3.slice(0, 4)), c2 = x[f3];
              if (c2)
                o2 = this._abiCoder.decode(c2.inputs, r3.slice(4)), a2 = c2.name, s3 = c2.signature, c2.reason && (n2 = o2[0]), "Error" === a2 ? i2 = "; VM Exception while processing transaction: reverted with reason string ".concat(JSON.stringify(o2[0])) : "Panic" === a2 && (i2 = "; VM Exception while processing transaction: reverted with panic code ".concat(o2[0]));
              else
                try {
                  var u2 = this.getError(f3);
                  o2 = this._abiCoder.decode(u2.inputs, r3.slice(4)), a2 = u2.name, s3 = u2.format();
                } catch (u3) {
                }
          }
          return _.throwError("call revert exception" + i2, m.Logger.errors.CALL_EXCEPTION, { method: e3.format(), data: (0, d.hexlify)(t2), errorArgs: o2, errorName: a2, errorSignature: s3, reason: n2 });
        } }, { key: "encodeFunctionResult", value: function(e3, t2) {
          return "string" == typeof e3 && (e3 = this.getFunction(e3)), (0, d.hexlify)(this._abiCoder.encode(e3.outputs, t2 || []));
        } }, { key: "encodeFilterTopics", value: function(e3, t2) {
          var r3 = this;
          "string" == typeof e3 && (e3 = this.getEvent(e3)), t2.length > e3.inputs.length && _.throwError("too many arguments for " + e3.format(), m.Logger.errors.UNEXPECTED_ARGUMENT, { argument: "values", value: t2 });
          var n2 = [];
          e3.anonymous || n2.push(this.getEventTopic(e3));
          var i2 = function(e4, t3) {
            return "string" === e4.type ? (0, h.id)(t3) : "bytes" === e4.type ? (0, l.keccak256)((0, d.hexlify)(t3)) : ("bool" === e4.type && "boolean" == typeof t3 && (t3 = t3 ? "0x01" : "0x00"), e4.type.match(/^u?int/) && (t3 = u.BigNumber.from(t3).toHexString()), "address" === e4.type && r3._abiCoder.encode(["address"], [t3]), (0, d.hexZeroPad)((0, d.hexlify)(t3), 32));
          };
          for (t2.forEach(function(t3, r4) {
            var o2 = e3.inputs[r4];
            o2.indexed ? null == t3 ? n2.push(null) : "array" === o2.baseType || "tuple" === o2.baseType ? _.throwArgumentError("filtering with tuples or arrays not supported", "contract." + o2.name, t3) : Array.isArray(t3) ? n2.push(t3.map(function(e4) {
              return i2(o2, e4);
            })) : n2.push(i2(o2, t3)) : null != t3 && _.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + o2.name, t3);
          }); n2.length && null === n2[n2.length - 1]; )
            n2.pop();
          return n2;
        } }, { key: "encodeEventLog", value: function(e3, t2) {
          var r3 = this;
          "string" == typeof e3 && (e3 = this.getEvent(e3));
          var n2 = [], i2 = [], o2 = [];
          return e3.anonymous || n2.push(this.getEventTopic(e3)), t2.length !== e3.inputs.length && _.throwArgumentError("event arguments/values mismatch", "values", t2), e3.inputs.forEach(function(e4, a2) {
            var s3 = t2[a2];
            if (e4.indexed)
              if ("string" === e4.type)
                n2.push((0, h.id)(s3));
              else if ("bytes" === e4.type)
                n2.push((0, l.keccak256)(s3));
              else {
                if ("tuple" === e4.baseType || "array" === e4.baseType)
                  throw new Error("not implemented");
                n2.push(r3._abiCoder.encode([e4.type], [s3]));
              }
            else
              i2.push(e4), o2.push(s3);
          }), { data: this._abiCoder.encode(i2, o2), topics: n2 };
        } }, { key: "decodeEventLog", value: function(e3, t2, r3) {
          if ("string" == typeof e3 && (e3 = this.getEvent(e3)), null != r3 && !e3.anonymous) {
            var n2 = this.getEventTopic(e3);
            (0, d.isHexString)(r3[0], 32) && r3[0].toLowerCase() === n2 || _.throwError("fragment/topic mismatch", m.Logger.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: n2, value: r3[0] }), r3 = r3.slice(1);
          }
          var i2 = [], o2 = [], a2 = [];
          e3.inputs.forEach(function(e4, t3) {
            e4.indexed ? "string" === e4.type || "bytes" === e4.type || "tuple" === e4.baseType || "array" === e4.baseType ? (i2.push(v.ParamType.fromObject({ type: "bytes32", name: e4.name })), a2.push(true)) : (i2.push(e4), a2.push(false)) : (o2.push(e4), a2.push(false));
          });
          var s3 = null != r3 ? this._abiCoder.decode(i2, (0, d.concat)(r3)) : null, f3 = this._abiCoder.decode(o2, t2, true), c2 = [], u2 = 0, h2 = 0;
          e3.inputs.forEach(function(e4, t3) {
            if (e4.indexed)
              if (null == s3)
                c2[t3] = new E({ _isIndexed: true, hash: null });
              else if (a2[t3])
                c2[t3] = new E({ _isIndexed: true, hash: s3[h2++] });
              else
                try {
                  c2[t3] = s3[h2++];
                } catch (e5) {
                  c2[t3] = e5;
                }
            else
              try {
                c2[t3] = f3[u2++];
              } catch (e5) {
                c2[t3] = e5;
              }
            if (e4.name && null == c2[e4.name]) {
              var r4 = c2[t3];
              r4 instanceof Error ? Object.defineProperty(c2, e4.name, { enumerable: true, get: function() {
                throw P("property ".concat(JSON.stringify(e4.name)), r4);
              } }) : c2[e4.name] = r4;
            }
          });
          for (var l2 = function(e4) {
            var t3 = c2[e4];
            t3 instanceof Error && Object.defineProperty(c2, e4, { enumerable: true, get: function() {
              throw P("index ".concat(e4), t3);
            } });
          }, p2 = 0; p2 < c2.length; p2++)
            l2(p2);
          return Object.freeze(c2);
        } }, { key: "parseTransaction", value: function(e3) {
          var t2 = this.getFunction(e3.data.substring(0, 10).toLowerCase());
          return t2 ? new A({ args: this._abiCoder.decode(t2.inputs, "0x" + e3.data.substring(10)), functionFragment: t2, name: t2.name, signature: t2.format(), sighash: this.getSighash(t2), value: u.BigNumber.from(e3.value || "0") }) : null;
        } }, { key: "parseLog", value: function(e3) {
          var t2 = this.getEvent(e3.topics[0]);
          return !t2 || t2.anonymous ? null : new k({ eventFragment: t2, name: t2.name, signature: t2.format(), topic: this.getEventTopic(t2), args: this.decodeEventLog(t2, e3.data, e3.topics) });
        } }, { key: "parseError", value: function(e3) {
          var t2 = (0, d.hexlify)(e3), r3 = this.getError(t2.substring(0, 10).toLowerCase());
          return r3 ? new S({ args: this._abiCoder.decode(r3.inputs, "0x" + t2.substring(10)), errorFragment: r3, name: r3.name, signature: r3.format(), sighash: this.getSighash(r3) }) : null;
        } }], [{ key: "getAbiCoder", value: function() {
          return b.defaultAbiCoder;
        } }, { key: "getAddress", value: function(e3) {
          return (0, c.getAddress)(e3);
        } }, { key: "getSighash", value: function(e3) {
          return (0, d.hexDataSlice)((0, h.id)(e3.format()), 0, 4);
        } }, { key: "getEventTopic", value: function(e3) {
          return (0, h.id)(e3.format());
        } }, { key: "isInterface", value: function(e3) {
          return !(!e3 || !e3._isInterface);
        } }]), e2;
      }();
      t.Interface = O;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "_TypedDataEncoder", { enumerable: true, get: function() {
        return a.TypedDataEncoder;
      } }), Object.defineProperty(t, "dnsEncode", { enumerable: true, get: function() {
        return i.dnsEncode;
      } }), Object.defineProperty(t, "ensNormalize", { enumerable: true, get: function() {
        return i.ensNormalize;
      } }), Object.defineProperty(t, "hashMessage", { enumerable: true, get: function() {
        return o.hashMessage;
      } }), Object.defineProperty(t, "id", { enumerable: true, get: function() {
        return n.id;
      } }), Object.defineProperty(t, "isValidName", { enumerable: true, get: function() {
        return i.isValidName;
      } }), Object.defineProperty(t, "messagePrefix", { enumerable: true, get: function() {
        return o.messagePrefix;
      } }), Object.defineProperty(t, "namehash", { enumerable: true, get: function() {
        return i.namehash;
      } });
      var n = r2(184), i = r2(393), o = r2(401), a = r2(402);
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.dnsEncode = function(e2) {
        return (0, n.hexlify)((0, n.concat)(h(e2).map(function(e3) {
          if (e3.length > 63)
            throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
          var t2 = new Uint8Array(e3.length + 1);
          return t2.set(e3, 1), t2[0] = t2.length - 1, t2;
        }))) + "00";
      }, t.ensNormalize = function(e2) {
        return h(e2).map(function(e3) {
          return (0, i.toUtf8String)(e3);
        }).join(".");
      }, t.isValidName = function(e2) {
        try {
          return 0 !== h(e2).length;
        } catch (e3) {
        }
        return false;
      }, t.namehash = function(e2) {
        "string" != typeof e2 && c.throwArgumentError("invalid ENS name; not a string", "name", e2);
        var t2 = u, r3 = h(e2);
        for (; r3.length; )
          t2 = (0, o.keccak256)((0, n.concat)([t2, (0, o.keccak256)(r3.pop())]));
        return (0, n.hexlify)(t2);
      };
      var n = r2(11), i = r2(65), o = r2(39), a = r2(16), s2 = r2(185), f2 = r2(394), c = new a.Logger(s2.version), u = new Uint8Array(32);
      function d(e2) {
        if (0 === e2.length)
          throw new Error("invalid ENS name; empty component");
        return e2;
      }
      function h(e2) {
        var t2 = (0, i.toUtf8Bytes)((0, f2.ens_normalize)(e2)), r3 = [];
        if (0 === e2.length)
          return r3;
        for (var n2 = 0, o2 = 0; o2 < t2.length; o2++) {
          46 === t2[o2] && (r3.push(d(t2.slice(n2, o2))), n2 = o2 + 1);
        }
        if (n2 >= t2.length)
          throw new Error("invalid ENS name; empty component");
        return r3.push(d(t2.slice(n2))), r3;
      }
      u.fill(0);
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.ens_normalize = function(e2) {
        return v(function(e3, t2) {
          var r3 = b(e3).reverse(), n2 = [];
          for (; r3.length; ) {
            var o2 = m(r3);
            if (o2)
              n2.push.apply(n2, (0, i.default)(t2(o2)));
            else {
              var a2 = r3.pop();
              if (d.has(a2))
                n2.push(a2);
              else if (!h.has(a2)) {
                var s3 = l[a2];
                if (!s3)
                  throw new Error("Disallowed codepoint: 0x".concat(a2.toString(16).toUpperCase()));
                n2.push.apply(n2, (0, i.default)(s3));
              }
            }
          }
          return v((f3 = String.fromCodePoint.apply(String, n2), f3.normalize("NFC")));
          var f3;
        }(e2, y));
      }, t.ens_normalize_post_check = v;
      var i = n(r2(186)), o = r2(65), a = r2(398), s2 = r2(187);
      function f2(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return c(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return c(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o2, a2 = true, s3 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return a2 = e3.done, e3;
        }, e: function(e3) {
          s3 = true, o2 = e3;
        }, f: function() {
          try {
            a2 || null == r3.return || r3.return();
          } finally {
            if (s3)
              throw o2;
          }
        } };
      }
      function c(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      var u = (0, a.getData)(), d = new Set((0, s2.read_member_array)(u)), h = new Set((0, s2.read_member_array)(u)), l = (0, s2.read_mapped_map)(u), p = (0, s2.read_emoji_trie)(u);
      function b(e2) {
        return (0, o.toUtf8CodePoints)(e2);
      }
      function y(e2) {
        return e2.filter(function(e3) {
          return 65039 != e3;
        });
      }
      function v(e2) {
        var t2, r3 = f2(e2.split("."));
        try {
          for (r3.s(); !(t2 = r3.n()).done; ) {
            var n2 = t2.value, i2 = b(n2);
            try {
              for (var o2 = i2.lastIndexOf(95) - 1; o2 >= 0; o2--)
                if (95 !== i2[o2])
                  throw new Error("underscore only allowed at start");
              if (i2.length >= 4 && i2.every(function(e3) {
                return e3 < 128;
              }) && 45 === i2[2] && 45 === i2[3])
                throw new Error("invalid label extension");
            } catch (e3) {
              throw new Error('Invalid label "'.concat(n2, '": ').concat(e3.message));
            }
          }
        } catch (e3) {
          r3.e(e3);
        } finally {
          r3.f();
        }
        return e2;
      }
      function m(e2, t2) {
        var r3, n2, o2, a2 = p, s3 = [], f3 = e2.length;
        t2 && (t2.length = 0);
        for (var c2 = function() {
          var c3 = e2[--f3];
          if (!(a2 = null === (r3 = a2.branches.find(function(e3) {
            return e3.set.has(c3);
          })) || void 0 === r3 ? void 0 : r3.node))
            return "break";
          if (a2.save)
            o2 = c3;
          else if (a2.check && c3 === o2)
            return "break";
          s3.push(c3), a2.fe0f && (s3.push(65039), f3 > 0 && 65039 == e2[f3 - 1] && f3--), a2.valid && (n2 = s3.slice(), 2 == a2.valid && n2.splice(1, 1), t2 && t2.push.apply(t2, (0, i.default)(e2.slice(f3).reverse())), e2.length = f3);
        }; f3; ) {
          if ("break" === c2())
            break;
        }
        return n2;
      }
    }, function(e, t, r2) {
      var n = r2(132);
      e.exports = function(e2) {
        if (Array.isArray(e2))
          return n(e2);
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      e.exports = function(e2) {
        if ("undefined" != typeof Symbol && null != e2[Symbol.iterator] || null != e2["@@iterator"])
          return Array.from(e2);
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      e.exports = function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.getData = function() {
        return (0, i.read_compressed_payload)((0, n.decode)(""));
      };
      var n = r2(399), i = r2(187);
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "decode", { enumerable: true, get: function() {
        return n.decode;
      } }), Object.defineProperty(t, "encode", { enumerable: true, get: function() {
        return n.encode;
      } });
      var n = r2(400);
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.decode = function(e2) {
        e2 = atob(e2);
        for (var t2 = [], r3 = 0; r3 < e2.length; r3++)
          t2.push(e2.charCodeAt(r3));
        return (0, n.arrayify)(t2);
      }, t.encode = function(e2) {
        e2 = (0, n.arrayify)(e2);
        for (var t2 = "", r3 = 0; r3 < e2.length; r3++)
          t2 += String.fromCharCode(e2[r3]);
        return btoa(t2);
      };
      var n = r2(11);
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.hashMessage = function(e2) {
        "string" == typeof e2 && (e2 = (0, o.toUtf8Bytes)(e2));
        return (0, i.keccak256)((0, n.concat)([(0, o.toUtf8Bytes)("Ethereum Signed Message:\n"), (0, o.toUtf8Bytes)(String(e2.length)), e2]));
      }, t.messagePrefix = void 0;
      var n = r2(11), i = r2(39), o = r2(65);
      t.messagePrefix = "Ethereum Signed Message:\n";
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.TypedDataEncoder = void 0;
      var i = n(r2(63)), o = n(r2(8)), a = n(r2(9)), s2 = r2(80), f2 = r2(33), c = r2(11), u = r2(39), d = r2(40), h = r2(16), l = r2(185), p = r2(184), b = function(e2, t2, r3, n2) {
        return new (r3 || (r3 = Promise))(function(i2, o2) {
          function a2(e3) {
            try {
              f3(n2.next(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function s3(e3) {
            try {
              f3(n2.throw(e3));
            } catch (e4) {
              o2(e4);
            }
          }
          function f3(e3) {
            var t3;
            e3.done ? i2(e3.value) : (t3 = e3.value, t3 instanceof r3 ? t3 : new r3(function(e4) {
              e4(t3);
            })).then(a2, s3);
          }
          f3((n2 = n2.apply(e2, t2 || [])).next());
        });
      }, y = new h.Logger(l.version), v = new Uint8Array(32);
      v.fill(0);
      var m = f2.BigNumber.from(-1), g = f2.BigNumber.from(0), w = f2.BigNumber.from(1), _ = f2.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      var k = (0, c.hexZeroPad)(w.toHexString(), 32), A = (0, c.hexZeroPad)(g.toHexString(), 32), S = { name: "string", version: "string", chainId: "uint256", verifyingContract: "address", salt: "bytes32" }, E = ["name", "version", "chainId", "verifyingContract", "salt"];
      function x(e2) {
        return function(t2) {
          return "string" != typeof t2 && y.throwArgumentError("invalid domain value for ".concat(JSON.stringify(e2)), "domain.".concat(e2), t2), t2;
        };
      }
      var P = { name: x("name"), version: x("version"), chainId: function(e2) {
        try {
          return f2.BigNumber.from(e2).toString();
        } catch (e3) {
        }
        return y.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", e2);
      }, verifyingContract: function(e2) {
        try {
          return (0, s2.getAddress)(e2).toLowerCase();
        } catch (e3) {
        }
        return y.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", e2);
      }, salt: function(e2) {
        try {
          var t2 = (0, c.arrayify)(e2);
          if (32 !== t2.length)
            throw new Error("bad length");
          return (0, c.hexlify)(t2);
        } catch (e3) {
        }
        return y.throwArgumentError('invalid domain value "salt"', "domain.salt", e2);
      } };
      function O(e2) {
        var t2 = e2.match(/^(u?)int(\d*)$/);
        if (t2) {
          var r3 = "" === t2[1], n2 = parseInt(t2[2] || "256");
          (n2 % 8 != 0 || n2 > 256 || t2[2] && t2[2] !== String(n2)) && y.throwArgumentError("invalid numeric width", "type", e2);
          var i2 = _.mask(r3 ? n2 - 1 : n2), o2 = r3 ? i2.add(w).mul(m) : g;
          return function(t3) {
            var r4 = f2.BigNumber.from(t3);
            return (r4.lt(o2) || r4.gt(i2)) && y.throwArgumentError("value out-of-bounds for ".concat(e2), "value", t3), (0, c.hexZeroPad)(r4.toTwos(256).toHexString(), 32);
          };
        }
        var a2 = e2.match(/^bytes(\d+)$/);
        if (a2) {
          var d2 = parseInt(a2[1]);
          return (0 === d2 || d2 > 32 || a2[1] !== String(d2)) && y.throwArgumentError("invalid bytes width", "type", e2), function(t3) {
            return (0, c.arrayify)(t3).length !== d2 && y.throwArgumentError("invalid length for ".concat(e2), "value", t3), function(e3) {
              var t4 = (0, c.arrayify)(e3), r4 = t4.length % 32;
              return r4 ? (0, c.hexConcat)([t4, v.slice(r4)]) : (0, c.hexlify)(t4);
            }(t3);
          };
        }
        switch (e2) {
          case "address":
            return function(e3) {
              return (0, c.hexZeroPad)((0, s2.getAddress)(e3), 32);
            };
          case "bool":
            return function(e3) {
              return e3 ? k : A;
            };
          case "bytes":
            return function(e3) {
              return (0, u.keccak256)(e3);
            };
          case "string":
            return function(e3) {
              return (0, p.id)(e3);
            };
        }
        return null;
      }
      function T(e2, t2) {
        return "".concat(e2, "(").concat(t2.map(function(e3) {
          var t3 = e3.name;
          return e3.type + " " + t3;
        }).join(","), ")");
      }
      var B = function() {
        function e2(t2) {
          (0, o.default)(this, e2), (0, d.defineReadOnly)(this, "types", Object.freeze((0, d.deepCopy)(t2))), (0, d.defineReadOnly)(this, "_encoderCache", {}), (0, d.defineReadOnly)(this, "_types", {});
          var r3 = {}, n2 = {}, i2 = {};
          Object.keys(t2).forEach(function(e3) {
            r3[e3] = {}, n2[e3] = [], i2[e3] = {};
          });
          var a2 = function(e3) {
            var i3 = {};
            t2[e3].forEach(function(o2) {
              i3[o2.name] && y.throwArgumentError("duplicate variable name ".concat(JSON.stringify(o2.name), " in ").concat(JSON.stringify(e3)), "types", t2), i3[o2.name] = true;
              var a3 = o2.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
              a3 === e3 && y.throwArgumentError("circular type reference to ".concat(JSON.stringify(a3)), "types", t2), O(a3) || (n2[a3] || y.throwArgumentError("unknown type ".concat(JSON.stringify(a3)), "types", t2), n2[a3].push(e3), r3[e3][a3] = true);
            });
          };
          for (var s3 in t2)
            a2(s3);
          var f3 = Object.keys(n2).filter(function(e3) {
            return 0 === n2[e3].length;
          });
          for (var c2 in 0 === f3.length ? y.throwArgumentError("missing primary type", "types", t2) : f3.length > 1 && y.throwArgumentError("ambiguous primary types or unused types: ".concat(f3.map(function(e3) {
            return JSON.stringify(e3);
          }).join(", ")), "types", t2), (0, d.defineReadOnly)(this, "primaryType", f3[0]), function e3(o2, a3) {
            a3[o2] && y.throwArgumentError("circular type reference to ".concat(JSON.stringify(o2)), "types", t2), a3[o2] = true, Object.keys(r3[o2]).forEach(function(t3) {
              n2[t3] && (e3(t3, a3), Object.keys(a3).forEach(function(e4) {
                i2[e4][t3] = true;
              }));
            }), delete a3[o2];
          }(this.primaryType, {}), i2) {
            var u2 = Object.keys(i2[c2]);
            u2.sort(), this._types[c2] = T(c2, t2[c2]) + u2.map(function(e3) {
              return T(e3, t2[e3]);
            }).join("");
          }
        }
        return (0, a.default)(e2, [{ key: "getEncoder", value: function(e3) {
          var t2 = this._encoderCache[e3];
          return t2 || (t2 = this._encoderCache[e3] = this._getEncoder(e3)), t2;
        } }, { key: "_getEncoder", value: function(e3) {
          var t2 = this, r3 = O(e3);
          if (r3)
            return r3;
          var n2 = e3.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (n2) {
            var i2 = n2[1], o2 = this.getEncoder(i2), a2 = parseInt(n2[3]);
            return function(e4) {
              a2 >= 0 && e4.length !== a2 && y.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e4);
              var r4 = e4.map(o2);
              return t2._types[i2] && (r4 = r4.map(u.keccak256)), (0, u.keccak256)((0, c.hexConcat)(r4));
            };
          }
          var s3 = this.types[e3];
          if (s3) {
            var f3 = (0, p.id)(this._types[e3]);
            return function(e4) {
              var r4 = s3.map(function(r5) {
                var n3 = r5.name, i3 = r5.type, o3 = t2.getEncoder(i3)(e4[n3]);
                return t2._types[i3] ? (0, u.keccak256)(o3) : o3;
              });
              return r4.unshift(f3), (0, c.hexConcat)(r4);
            };
          }
          return y.throwArgumentError("unknown type: ".concat(e3), "type", e3);
        } }, { key: "encodeType", value: function(e3) {
          var t2 = this._types[e3];
          return t2 || y.throwArgumentError("unknown type: ".concat(JSON.stringify(e3)), "name", e3), t2;
        } }, { key: "encodeData", value: function(e3, t2) {
          return this.getEncoder(e3)(t2);
        } }, { key: "hashStruct", value: function(e3, t2) {
          return (0, u.keccak256)(this.encodeData(e3, t2));
        } }, { key: "encode", value: function(e3) {
          return this.encodeData(this.primaryType, e3);
        } }, { key: "hash", value: function(e3) {
          return this.hashStruct(this.primaryType, e3);
        } }, { key: "_visit", value: function(e3, t2, r3) {
          var n2 = this;
          if (O(e3))
            return r3(e3, t2);
          var i2 = e3.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (i2) {
            var o2 = i2[1], a2 = parseInt(i2[3]);
            return a2 >= 0 && t2.length !== a2 && y.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", t2), t2.map(function(e4) {
              return n2._visit(o2, e4, r3);
            });
          }
          var s3 = this.types[e3];
          return s3 ? s3.reduce(function(e4, i3) {
            var o3 = i3.name, a3 = i3.type;
            return e4[o3] = n2._visit(a3, t2[o3], r3), e4;
          }, {}) : y.throwArgumentError("unknown type: ".concat(e3), "type", e3);
        } }, { key: "visit", value: function(e3, t2) {
          return this._visit(this.primaryType, e3, t2);
        } }], [{ key: "from", value: function(t2) {
          return new e2(t2);
        } }, { key: "getPrimaryType", value: function(t2) {
          return e2.from(t2).primaryType;
        } }, { key: "hashStruct", value: function(t2, r3, n2) {
          return e2.from(r3).hashStruct(t2, n2);
        } }, { key: "hashDomain", value: function(t2) {
          var r3 = [];
          for (var n2 in t2) {
            var i2 = S[n2];
            i2 || y.throwArgumentError("invalid typed-data domain key: ".concat(JSON.stringify(n2)), "domain", t2), r3.push({ name: n2, type: i2 });
          }
          return r3.sort(function(e3, t3) {
            return E.indexOf(e3.name) - E.indexOf(t3.name);
          }), e2.hashStruct("EIP712Domain", { EIP712Domain: r3 }, t2);
        } }, { key: "encode", value: function(t2, r3, n2) {
          return (0, c.hexConcat)(["0x1901", e2.hashDomain(t2), e2.from(r3).hash(n2)]);
        } }, { key: "hash", value: function(t2, r3, n2) {
          return (0, u.keccak256)(e2.encode(t2, r3, n2));
        } }, { key: "resolveNames", value: function(t2, r3, n2, o2) {
          return b(this, void 0, void 0, i.default.mark(function a2() {
            var s3, f3, u2;
            return i.default.wrap(function(a3) {
              for (; ; )
                switch (a3.prev = a3.next) {
                  case 0:
                    t2 = (0, d.shallowCopy)(t2), s3 = {}, t2.verifyingContract && !(0, c.isHexString)(t2.verifyingContract, 20) && (s3[t2.verifyingContract] = "0x"), (f3 = e2.from(r3)).visit(n2, function(e3, t3) {
                      return "address" !== e3 || (0, c.isHexString)(t3, 20) || (s3[t3] = "0x"), t3;
                    }), a3.t0 = i.default.keys(s3);
                  case 6:
                    if ((a3.t1 = a3.t0()).done) {
                      a3.next = 13;
                      break;
                    }
                    return u2 = a3.t1.value, a3.next = 10, o2(u2);
                  case 10:
                    s3[u2] = a3.sent, a3.next = 6;
                    break;
                  case 13:
                    return t2.verifyingContract && s3[t2.verifyingContract] && (t2.verifyingContract = s3[t2.verifyingContract]), n2 = f3.visit(n2, function(e3, t3) {
                      return "address" === e3 && s3[t3] ? s3[t3] : t3;
                    }), a3.abrupt("return", { domain: t2, value: n2 });
                  case 16:
                  case "end":
                    return a3.stop();
                }
            }, a2);
          }));
        } }, { key: "getPayload", value: function(t2, r3, n2) {
          e2.hashDomain(t2);
          var i2 = {}, o2 = [];
          E.forEach(function(e3) {
            var r4 = t2[e3];
            null != r4 && (i2[e3] = P[e3](r4), o2.push({ name: e3, type: S[e3] }));
          });
          var a2 = e2.from(r3), s3 = (0, d.shallowCopy)(r3);
          return s3.EIP712Domain ? y.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", r3) : s3.EIP712Domain = o2, a2.encode(n2), { types: s3, domain: i2, primaryType: a2.primaryType, message: a2.visit(n2, function(e3, t3) {
            if (e3.match(/^bytes(\d*)/))
              return (0, c.hexlify)((0, c.arrayify)(t3));
            if (e3.match(/^u?int/))
              return f2.BigNumber.from(t3).toString();
            switch (e3) {
              case "address":
                return t3.toLowerCase();
              case "bool":
                return !!t3;
              case "string":
                return "string" != typeof t3 && y.throwArgumentError("invalid string", "value", t3), t3;
            }
            return y.throwArgumentError("unsupported type", "type", e3);
          }) };
        } }]), e2;
      }();
      t.TypedDataEncoder = B;
    }, function(e, t, r2) {
      (function(e2, t2, n) {
        var i = r2(0)(r2(2));
        /**
         * [js-sha3]{@link https://github.com/emn178/js-sha3}
         *
         * @version 0.5.7
         * @author Chen, Yi-Cyuan [emn178@gmail.com]
         * @copyright Chen, Yi-Cyuan 2015-2016
         * @license MIT
         */
        !function() {
          var r3 = "object" === ("undefined" == typeof window ? "undefined" : (0, i.default)(window)) ? window : {};
          !r3.JS_SHA3_NO_NODE_JS && "object" === (void 0 === e2 ? "undefined" : (0, i.default)(e2)) && e2.versions && e2.versions.node && (r3 = t2);
          for (var o = !r3.JS_SHA3_NO_COMMON_JS && "object" === (0, i.default)(n) && n.exports, a = "0123456789abcdef".split(""), s2 = [0, 8, 16, 24], f2 = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], c = [224, 256, 384, 512], u = ["hex", "buffer", "arrayBuffer", "array"], d = function(e3, t3, r4) {
            return function(n2) {
              return new k(e3, t3, e3).update(n2)[r4]();
            };
          }, h = function(e3, t3, r4) {
            return function(n2, i2) {
              return new k(e3, t3, i2).update(n2)[r4]();
            };
          }, l = function(e3, t3) {
            var r4 = d(e3, t3, "hex");
            r4.create = function() {
              return new k(e3, t3, e3);
            }, r4.update = function(e4) {
              return r4.create().update(e4);
            };
            for (var n2 = 0; n2 < u.length; ++n2) {
              var i2 = u[n2];
              r4[i2] = d(e3, t3, i2);
            }
            return r4;
          }, p = [{ name: "keccak", padding: [1, 256, 65536, 16777216], bits: c, createMethod: l }, { name: "sha3", padding: [6, 1536, 393216, 100663296], bits: c, createMethod: l }, { name: "shake", padding: [31, 7936, 2031616, 520093696], bits: [128, 256], createMethod: function(e3, t3) {
            var r4 = h(e3, t3, "hex");
            r4.create = function(r5) {
              return new k(e3, t3, r5);
            }, r4.update = function(e4, t4) {
              return r4.create(t4).update(e4);
            };
            for (var n2 = 0; n2 < u.length; ++n2) {
              var i2 = u[n2];
              r4[i2] = h(e3, t3, i2);
            }
            return r4;
          } }], b = {}, y = [], v = 0; v < p.length; ++v)
            for (var m = p[v], g = m.bits, w = 0; w < g.length; ++w) {
              var _ = m.name + "_" + g[w];
              y.push(_), b[_] = m.createMethod(g[w], m.padding);
            }
          function k(e3, t3, r4) {
            this.blocks = [], this.s = [], this.padding = t3, this.outputBits = r4, this.reset = true, this.block = 0, this.start = 0, this.blockCount = 1600 - (e3 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r4 >> 5, this.extraBytes = (31 & r4) >> 3;
            for (var n2 = 0; n2 < 50; ++n2)
              this.s[n2] = 0;
          }
          k.prototype.update = function(e3) {
            var t3 = "string" != typeof e3;
            t3 && e3.constructor === ArrayBuffer && (e3 = new Uint8Array(e3));
            for (var r4, n2, i2 = e3.length, o2 = this.blocks, a2 = this.byteCount, f3 = this.blockCount, c2 = 0, u2 = this.s; c2 < i2; ) {
              if (this.reset)
                for (this.reset = false, o2[0] = this.block, r4 = 1; r4 < f3 + 1; ++r4)
                  o2[r4] = 0;
              if (t3)
                for (r4 = this.start; c2 < i2 && r4 < a2; ++c2)
                  o2[r4 >> 2] |= e3[c2] << s2[3 & r4++];
              else
                for (r4 = this.start; c2 < i2 && r4 < a2; ++c2)
                  (n2 = e3.charCodeAt(c2)) < 128 ? o2[r4 >> 2] |= n2 << s2[3 & r4++] : n2 < 2048 ? (o2[r4 >> 2] |= (192 | n2 >> 6) << s2[3 & r4++], o2[r4 >> 2] |= (128 | 63 & n2) << s2[3 & r4++]) : n2 < 55296 || n2 >= 57344 ? (o2[r4 >> 2] |= (224 | n2 >> 12) << s2[3 & r4++], o2[r4 >> 2] |= (128 | n2 >> 6 & 63) << s2[3 & r4++], o2[r4 >> 2] |= (128 | 63 & n2) << s2[3 & r4++]) : (n2 = 65536 + ((1023 & n2) << 10 | 1023 & e3.charCodeAt(++c2)), o2[r4 >> 2] |= (240 | n2 >> 18) << s2[3 & r4++], o2[r4 >> 2] |= (128 | n2 >> 12 & 63) << s2[3 & r4++], o2[r4 >> 2] |= (128 | n2 >> 6 & 63) << s2[3 & r4++], o2[r4 >> 2] |= (128 | 63 & n2) << s2[3 & r4++]);
              if (this.lastByteIndex = r4, r4 >= a2) {
                for (this.start = r4 - a2, this.block = o2[f3], r4 = 0; r4 < f3; ++r4)
                  u2[r4] ^= o2[r4];
                A(u2), this.reset = true;
              } else
                this.start = r4;
            }
            return this;
          }, k.prototype.finalize = function() {
            var e3 = this.blocks, t3 = this.lastByteIndex, r4 = this.blockCount, n2 = this.s;
            if (e3[t3 >> 2] |= this.padding[3 & t3], this.lastByteIndex === this.byteCount)
              for (e3[0] = e3[r4], t3 = 1; t3 < r4 + 1; ++t3)
                e3[t3] = 0;
            for (e3[r4 - 1] |= 2147483648, t3 = 0; t3 < r4; ++t3)
              n2[t3] ^= e3[t3];
            A(n2);
          }, k.prototype.toString = k.prototype.hex = function() {
            this.finalize();
            for (var e3, t3 = this.blockCount, r4 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, o2 = 0, s3 = 0, f3 = ""; s3 < n2; ) {
              for (o2 = 0; o2 < t3 && s3 < n2; ++o2, ++s3)
                e3 = r4[o2], f3 += a[e3 >> 4 & 15] + a[15 & e3] + a[e3 >> 12 & 15] + a[e3 >> 8 & 15] + a[e3 >> 20 & 15] + a[e3 >> 16 & 15] + a[e3 >> 28 & 15] + a[e3 >> 24 & 15];
              s3 % t3 == 0 && (A(r4), o2 = 0);
            }
            return i2 && (e3 = r4[o2], i2 > 0 && (f3 += a[e3 >> 4 & 15] + a[15 & e3]), i2 > 1 && (f3 += a[e3 >> 12 & 15] + a[e3 >> 8 & 15]), i2 > 2 && (f3 += a[e3 >> 20 & 15] + a[e3 >> 16 & 15])), f3;
          }, k.prototype.arrayBuffer = function() {
            this.finalize();
            var e3, t3 = this.blockCount, r4 = this.s, n2 = this.outputBlocks, i2 = this.extraBytes, o2 = 0, a2 = 0, s3 = this.outputBits >> 3;
            e3 = i2 ? new ArrayBuffer(n2 + 1 << 2) : new ArrayBuffer(s3);
            for (var f3 = new Uint32Array(e3); a2 < n2; ) {
              for (o2 = 0; o2 < t3 && a2 < n2; ++o2, ++a2)
                f3[a2] = r4[o2];
              a2 % t3 == 0 && A(r4);
            }
            return i2 && (f3[o2] = r4[o2], e3 = e3.slice(0, s3)), e3;
          }, k.prototype.buffer = k.prototype.arrayBuffer, k.prototype.digest = k.prototype.array = function() {
            this.finalize();
            for (var e3, t3, r4 = this.blockCount, n2 = this.s, i2 = this.outputBlocks, o2 = this.extraBytes, a2 = 0, s3 = 0, f3 = []; s3 < i2; ) {
              for (a2 = 0; a2 < r4 && s3 < i2; ++a2, ++s3)
                e3 = s3 << 2, t3 = n2[a2], f3[e3] = 255 & t3, f3[e3 + 1] = t3 >> 8 & 255, f3[e3 + 2] = t3 >> 16 & 255, f3[e3 + 3] = t3 >> 24 & 255;
              s3 % r4 == 0 && A(n2);
            }
            return o2 && (e3 = s3 << 2, t3 = n2[a2], o2 > 0 && (f3[e3] = 255 & t3), o2 > 1 && (f3[e3 + 1] = t3 >> 8 & 255), o2 > 2 && (f3[e3 + 2] = t3 >> 16 & 255)), f3;
          };
          var A = function(e3) {
            var t3, r4, n2, i2, o2, a2, s3, c2, u2, d2, h2, l2, p2, b2, y2, v2, m2, g2, w2, _2, k2, A2, S, E, x, P, O, T, B, M, R, I, C, U, j, N, L, D, F, q, z, H, K2, G, W, V, J, Y, X, Q, Z, $, ee, te, re, ne, ie, oe, ae, se, fe, ce, ue;
            for (n2 = 0; n2 < 48; n2 += 2)
              i2 = e3[0] ^ e3[10] ^ e3[20] ^ e3[30] ^ e3[40], o2 = e3[1] ^ e3[11] ^ e3[21] ^ e3[31] ^ e3[41], a2 = e3[2] ^ e3[12] ^ e3[22] ^ e3[32] ^ e3[42], s3 = e3[3] ^ e3[13] ^ e3[23] ^ e3[33] ^ e3[43], c2 = e3[4] ^ e3[14] ^ e3[24] ^ e3[34] ^ e3[44], u2 = e3[5] ^ e3[15] ^ e3[25] ^ e3[35] ^ e3[45], d2 = e3[6] ^ e3[16] ^ e3[26] ^ e3[36] ^ e3[46], h2 = e3[7] ^ e3[17] ^ e3[27] ^ e3[37] ^ e3[47], t3 = (l2 = e3[8] ^ e3[18] ^ e3[28] ^ e3[38] ^ e3[48]) ^ (a2 << 1 | s3 >>> 31), r4 = (p2 = e3[9] ^ e3[19] ^ e3[29] ^ e3[39] ^ e3[49]) ^ (s3 << 1 | a2 >>> 31), e3[0] ^= t3, e3[1] ^= r4, e3[10] ^= t3, e3[11] ^= r4, e3[20] ^= t3, e3[21] ^= r4, e3[30] ^= t3, e3[31] ^= r4, e3[40] ^= t3, e3[41] ^= r4, t3 = i2 ^ (c2 << 1 | u2 >>> 31), r4 = o2 ^ (u2 << 1 | c2 >>> 31), e3[2] ^= t3, e3[3] ^= r4, e3[12] ^= t3, e3[13] ^= r4, e3[22] ^= t3, e3[23] ^= r4, e3[32] ^= t3, e3[33] ^= r4, e3[42] ^= t3, e3[43] ^= r4, t3 = a2 ^ (d2 << 1 | h2 >>> 31), r4 = s3 ^ (h2 << 1 | d2 >>> 31), e3[4] ^= t3, e3[5] ^= r4, e3[14] ^= t3, e3[15] ^= r4, e3[24] ^= t3, e3[25] ^= r4, e3[34] ^= t3, e3[35] ^= r4, e3[44] ^= t3, e3[45] ^= r4, t3 = c2 ^ (l2 << 1 | p2 >>> 31), r4 = u2 ^ (p2 << 1 | l2 >>> 31), e3[6] ^= t3, e3[7] ^= r4, e3[16] ^= t3, e3[17] ^= r4, e3[26] ^= t3, e3[27] ^= r4, e3[36] ^= t3, e3[37] ^= r4, e3[46] ^= t3, e3[47] ^= r4, t3 = d2 ^ (i2 << 1 | o2 >>> 31), r4 = h2 ^ (o2 << 1 | i2 >>> 31), e3[8] ^= t3, e3[9] ^= r4, e3[18] ^= t3, e3[19] ^= r4, e3[28] ^= t3, e3[29] ^= r4, e3[38] ^= t3, e3[39] ^= r4, e3[48] ^= t3, e3[49] ^= r4, b2 = e3[0], y2 = e3[1], V = e3[11] << 4 | e3[10] >>> 28, J = e3[10] << 4 | e3[11] >>> 28, T = e3[20] << 3 | e3[21] >>> 29, B = e3[21] << 3 | e3[20] >>> 29, se = e3[31] << 9 | e3[30] >>> 23, fe = e3[30] << 9 | e3[31] >>> 23, H = e3[40] << 18 | e3[41] >>> 14, K2 = e3[41] << 18 | e3[40] >>> 14, U = e3[2] << 1 | e3[3] >>> 31, j = e3[3] << 1 | e3[2] >>> 31, v2 = e3[13] << 12 | e3[12] >>> 20, m2 = e3[12] << 12 | e3[13] >>> 20, Y = e3[22] << 10 | e3[23] >>> 22, X = e3[23] << 10 | e3[22] >>> 22, M = e3[33] << 13 | e3[32] >>> 19, R = e3[32] << 13 | e3[33] >>> 19, ce = e3[42] << 2 | e3[43] >>> 30, ue = e3[43] << 2 | e3[42] >>> 30, te = e3[5] << 30 | e3[4] >>> 2, re = e3[4] << 30 | e3[5] >>> 2, N = e3[14] << 6 | e3[15] >>> 26, L = e3[15] << 6 | e3[14] >>> 26, g2 = e3[25] << 11 | e3[24] >>> 21, w2 = e3[24] << 11 | e3[25] >>> 21, Q = e3[34] << 15 | e3[35] >>> 17, Z = e3[35] << 15 | e3[34] >>> 17, I = e3[45] << 29 | e3[44] >>> 3, C = e3[44] << 29 | e3[45] >>> 3, E = e3[6] << 28 | e3[7] >>> 4, x = e3[7] << 28 | e3[6] >>> 4, ne = e3[17] << 23 | e3[16] >>> 9, ie = e3[16] << 23 | e3[17] >>> 9, D = e3[26] << 25 | e3[27] >>> 7, F = e3[27] << 25 | e3[26] >>> 7, _2 = e3[36] << 21 | e3[37] >>> 11, k2 = e3[37] << 21 | e3[36] >>> 11, $ = e3[47] << 24 | e3[46] >>> 8, ee = e3[46] << 24 | e3[47] >>> 8, G = e3[8] << 27 | e3[9] >>> 5, W = e3[9] << 27 | e3[8] >>> 5, P = e3[18] << 20 | e3[19] >>> 12, O = e3[19] << 20 | e3[18] >>> 12, oe = e3[29] << 7 | e3[28] >>> 25, ae = e3[28] << 7 | e3[29] >>> 25, q = e3[38] << 8 | e3[39] >>> 24, z = e3[39] << 8 | e3[38] >>> 24, A2 = e3[48] << 14 | e3[49] >>> 18, S = e3[49] << 14 | e3[48] >>> 18, e3[0] = b2 ^ ~v2 & g2, e3[1] = y2 ^ ~m2 & w2, e3[10] = E ^ ~P & T, e3[11] = x ^ ~O & B, e3[20] = U ^ ~N & D, e3[21] = j ^ ~L & F, e3[30] = G ^ ~V & Y, e3[31] = W ^ ~J & X, e3[40] = te ^ ~ne & oe, e3[41] = re ^ ~ie & ae, e3[2] = v2 ^ ~g2 & _2, e3[3] = m2 ^ ~w2 & k2, e3[12] = P ^ ~T & M, e3[13] = O ^ ~B & R, e3[22] = N ^ ~D & q, e3[23] = L ^ ~F & z, e3[32] = V ^ ~Y & Q, e3[33] = J ^ ~X & Z, e3[42] = ne ^ ~oe & se, e3[43] = ie ^ ~ae & fe, e3[4] = g2 ^ ~_2 & A2, e3[5] = w2 ^ ~k2 & S, e3[14] = T ^ ~M & I, e3[15] = B ^ ~R & C, e3[24] = D ^ ~q & H, e3[25] = F ^ ~z & K2, e3[34] = Y ^ ~Q & $, e3[35] = X ^ ~Z & ee, e3[44] = oe ^ ~se & ce, e3[45] = ae ^ ~fe & ue, e3[6] = _2 ^ ~A2 & b2, e3[7] = k2 ^ ~S & y2, e3[16] = M ^ ~I & E, e3[17] = R ^ ~C & x, e3[26] = q ^ ~H & U, e3[27] = z ^ ~K2 & j, e3[36] = Q ^ ~$ & G, e3[37] = Z ^ ~ee & W, e3[46] = se ^ ~ce & te, e3[47] = fe ^ ~ue & re, e3[8] = A2 ^ ~b2 & v2, e3[9] = S ^ ~y2 & m2, e3[18] = I ^ ~E & P, e3[19] = C ^ ~x & O, e3[28] = H ^ ~U & N, e3[29] = K2 ^ ~j & L, e3[38] = $ ^ ~G & V, e3[39] = ee ^ ~W & J, e3[48] = ce ^ ~te & ne, e3[49] = ue ^ ~re & ie, e3[0] ^= f2[n2], e3[1] ^= f2[n2 + 1];
          };
          if (o)
            n.exports = b;
          else
            for (v = 0; v < y.length; ++v)
              r3[y[v]] = b[y[v]];
        }();
      }).call(this, r2(6), r2(7), r2(35)(e));
    }, function(e, t, r2) {
      var n, i;
      r2(0)(r2(2));
      n = [r2(168), r2(405)], void 0 === (i = function(e2, t2) {
        return function(e3, t3) {
          function r3(r4, n3, i3) {
            for (var o = [], a = e3.ucs2.decode(r4), s2 = 0; s2 < a.length; s2++) {
              var f2 = a[s2], c = e3.ucs2.encode([a[s2]]), u = t3.mapChar(f2), d = u >> 23, h = u >> 21 & 3, l = u >> 5 & 65535, p = 31 & u, b = t3.mapStr.substr(l, p);
              if (0 === h || n3 && 1 & d)
                throw new Error("Illegal char " + c);
              1 === h ? o.push(b) : 2 === h ? o.push(i3 ? b : c) : 3 === h && o.push(c);
            }
            return o.join("").normalize("NFC");
          }
          function n2(t4, n3, o) {
            void 0 === o && (o = false);
            var a = r3(t4, o, n3).split(".");
            return (a = a.map(function(t5) {
              return t5.startsWith("xn--") ? i2(t5 = e3.decode(t5.substring(4)), o, false) : i2(t5, o, n3), t5;
            })).join(".");
          }
          function i2(e4, n3, i3) {
            if ("-" === e4[2] && "-" === e4[3])
              throw new Error("Failed to validate " + e4);
            if (e4.startsWith("-") || e4.endsWith("-"))
              throw new Error("Failed to validate " + e4);
            if (e4.includes("."))
              throw new Error("Failed to validate " + e4);
            if (r3(e4, n3, i3) !== e4)
              throw new Error("Failed to validate " + e4);
            var o = e4.codePointAt(0);
            if (t3.mapChar(o) & 2 << 23)
              throw new Error("Label contains illegal character: " + o);
          }
          return { toUnicode: function(e4, t4) {
            return void 0 === t4 && (t4 = {}), n2(e4, false, "useStd3ASCII" in t4 && t4.useStd3ASCII);
          }, toAscii: function(t4, r4) {
            void 0 === r4 && (r4 = {});
            var i3, o = !("transitional" in r4) || r4.transitional, a = "useStd3ASCII" in r4 && r4.useStd3ASCII, s2 = "verifyDnsLength" in r4 && r4.verifyDnsLength, f2 = n2(t4, o, a).split(".").map(e3.toASCII), c = f2.join(".");
            if (s2) {
              if (c.length < 1 || c.length > 253)
                throw new Error("DNS name has wrong length: " + c);
              for (i3 = 0; i3 < f2.length; i3++) {
                var u = f2[i3];
                if (u.length < 1 || u.length > 63)
                  throw new Error("DNS label has wrong length: " + u);
              }
            }
            return c;
          } };
        }(e2, t2);
      }.apply(t, n)) || (e.exports = i);
    }, function(e, t, r2) {
      var n;
      r2(0)(r2(2));
      void 0 === (n = function() {
        return e2 = [new Uint32Array([2157250, 2157314, 2157378, 2157442, 2157506, 2157570, 2157634, 0, 2157698, 2157762, 2157826, 2157890, 2157954, 0, 2158018, 0]), new Uint32Array([2179041, 6291456, 2179073, 6291456, 2179105, 6291456, 2179137, 6291456, 2179169, 6291456, 2179201, 6291456, 2179233, 6291456, 2179265, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([0, 2113729, 2197345, 2197377, 2113825, 2197409, 2197441, 2113921, 2197473, 2114017, 2197505, 2197537, 2197569, 2197601, 2197633, 2197665]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 23068672, 23068672, 23068672, 0, 0, 0, 0, 23068672]), new Uint32Array([14680064, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 14680064, 14680064]), new Uint32Array([2196001, 2196033, 2196065, 2196097, 2196129, 2196161, 2196193, 2196225, 2196257, 2196289, 2196321, 2196353, 2196385, 2196417, 2196449, 2196481]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2097281, 2105921, 2097729, 2106081, 0, 2097601, 2162337, 2106017, 2133281, 2097505, 2105889, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([2177025, 6291456, 2177057, 6291456, 2177089, 6291456, 2177121, 6291456, 2177153, 6291456, 2177185, 6291456, 2177217, 6291456, 2177249, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 0, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456]), new Uint32Array([2134435, 2134531, 2134627, 2134723, 2134723, 2134819, 2134819, 2134915, 2134915, 2135011, 2105987, 2135107, 2135203, 2135299, 2131587, 2135395]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 6291456, 2168673, 2169249, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2147906, 2147970, 2148034, 2148098, 2148162, 2148226, 2148290, 2148354, 2147906, 2147970, 2148034, 2148098, 2148162, 2148226, 2148290, 2148354]), new Uint32Array([2125219, 2125315, 2152834, 2152898, 2125411, 2152962, 2153026, 2125506, 2125507, 2125603, 2153090, 2153154, 2153218, 2153282, 2153346, 2105348]), new Uint32Array([2203393, 6291456, 2203425, 6291456, 2203457, 6291456, 2203489, 6291456, 6291456, 6291456, 6291456, 2203521, 6291456, 2181281, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 6291456, 2145538, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 6291456]), new Uint32Array([2139426, 2160834, 2160898, 2160962, 2134242, 2161026, 2161090, 2161154, 2161218, 2161282, 2161346, 2161410, 2138658, 2161474, 2161538, 2134722]), new Uint32Array([2119939, 2124930, 2125026, 2106658, 2125218, 2128962, 2129058, 2129154, 2129250, 2129346, 2129442, 2108866, 2108770, 2150466, 2150530, 2150594]), new Uint32Array([2201601, 6291456, 2201633, 6291456, 2201665, 6291456, 2201697, 6291456, 2201729, 6291456, 2201761, 6291456, 2201793, 6291456, 2201825, 6291456]), new Uint32Array([2193537, 2193569, 2193601, 2193633, 2193665, 2193697, 2193729, 2193761, 2193793, 2193825, 2193857, 2193889, 2193921, 2193953, 2193985, 2194017]), new Uint32Array([6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2190561, 6291456, 2190593, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2190625, 6291456, 2190657, 6291456, 23068672]), new Uint32Array([2215905, 2215937, 2215969, 2216001, 2216033, 2216065, 2216097, 2216129, 2216161, 2216193, 2216225, 2216257, 2105441, 2216289, 2216321, 2216353]), new Uint32Array([23068672, 18884130, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2191233, 2191265, 2191297, 2191329, 2191361, 2191393, 2191425, 2117377, 2191457, 2191489, 2191521, 2191553, 2191585, 2191617, 2191649, 2117953]), new Uint32Array([2132227, 2132323, 2132419, 2132419, 2132515, 2132515, 2132611, 2132707, 2132707, 2132803, 2132899, 2132899, 2132995, 2132995, 2133091, 2133187]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 0, 0]), new Uint32Array([2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 10609889, 10610785, 10609921, 10610817, 2222241]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0]), new Uint32Array([2219969, 2157121, 2157441, 2157505, 2157889, 2157953, 2220001, 2158465, 2158529, 10575617, 2156994, 2157058, 2129923, 2130019, 2157122, 2157186]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2185249, 6291456, 2185281, 6291456, 2185313, 6291456, 2185345, 6291456, 2185377, 6291456, 2185409, 6291456, 2185441, 6291456, 2185473, 6291456]), new Uint32Array([0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 6291456, 0]), new Uint32Array([2183361, 6291456, 2183393, 6291456, 2183425, 6291456, 2183457, 6291456, 2183489, 6291456, 2183521, 6291456, 2183553, 6291456, 2183585, 6291456]), new Uint32Array([2192161, 2192193, 2192225, 2192257, 2192289, 2192321, 2192353, 2192385, 2192417, 2192449, 2192481, 2192513, 2192545, 2192577, 2192609, 2192641]), new Uint32Array([2212001, 2212033, 2212065, 2212097, 2212129, 2212161, 2212193, 2212225, 2212257, 2212289, 2212321, 2212353, 2212385, 2212417, 2212449, 2207265]), new Uint32Array([2249825, 2249857, 2249889, 2249921, 2249954, 2250018, 2250082, 2250145, 2250177, 2250209, 2250241, 2250274, 2250337, 2250370, 2250433, 2250465]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2147905, 2147969, 2148033, 2148097, 2148161, 2148225, 2148289, 2148353]), new Uint32Array([10485857, 6291456, 2197217, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 23068672, 23068672]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2180353, 2180385, 2144033, 2180417, 2180449, 2180481, 2180513, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 10610209, 10610465, 10610241, 10610753, 10609857]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 0, 0]), new Uint32Array([2223842, 2223906, 2223970, 2224034, 2224098, 2224162, 2224226, 2224290, 2224354, 2224418, 2224482, 2224546, 2224610, 2224674, 2224738, 2224802]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 18923650, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 18923714, 23068672, 23068672]), new Uint32Array([2126179, 2125538, 2126275, 2126371, 2126467, 2125634, 2126563, 2105603, 2105604, 2125346, 2126659, 2126755, 2126851, 2098179, 2098181, 2098182]), new Uint32Array([2227426, 2227490, 2227554, 2227618, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2192353, 2240642, 2240642, 2240705, 2240737, 2240737, 2240769, 2240802, 2240866, 2240929, 2240961, 2240993, 2241025, 2241057, 2241089, 2241121]), new Uint32Array([6291456, 2170881, 2170913, 2170945, 6291456, 2170977, 6291456, 2171009, 2171041, 6291456, 6291456, 6291456, 2171073, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2132226, 2132514, 2163586, 2132610, 2160386, 2133090, 2133186, 2160450, 2160514, 2160578, 2133570, 2106178, 2160642, 2133858, 2160706, 2160770]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10532162, 10532226, 10532290, 10532354, 10532418, 10532482, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672]), new Uint32Array([2098209, 2108353, 2108193, 2108481, 2170241, 2111713, 2105473, 2105569, 2105601, 2112289, 2112481, 2098305, 2108321, 0, 0, 0]), new Uint32Array([2209121, 2209153, 2209185, 2209217, 2209249, 2209281, 2209313, 2209345, 2209377, 2209409, 2209441, 2209473, 2207265, 2209505, 2209537, 2209569]), new Uint32Array([2189025, 6291456, 2189057, 6291456, 2189089, 6291456, 2189121, 6291456, 2189153, 6291456, 2189185, 6291456, 2189217, 6291456, 2189249, 6291456]), new Uint32Array([2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233057]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2165764, 2140004]), new Uint32Array([2215105, 6291456, 2215137, 6291456, 6291456, 2215169, 2215201, 6291456, 6291456, 6291456, 2215233, 2215265, 2215297, 2215329, 2215361, 2215393]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([10505091, 10505187, 10505283, 10505379, 10505475, 10505571, 10505667, 10505763, 10505859, 10505955, 10506051, 10506147, 10506243, 10506339, 10506435, 10506531]), new Uint32Array([2229730, 2229794, 2229858, 2229922, 2229986, 2230050, 2230114, 2230178, 2230242, 2230306, 2230370, 2230434, 2230498, 2230562, 2230626, 2230690]), new Uint32Array([2105505, 2098241, 2108353, 2108417, 2105825, 0, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 10502115, 10502178, 10502211, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456]), new Uint32Array([2190305, 6291456, 2190337, 6291456, 2190369, 6291456, 2190401, 6291456, 2190433, 6291456, 2190465, 6291456, 2190497, 6291456, 2190529, 6291456]), new Uint32Array([2173793, 2173985, 2174017, 6291456, 2173761, 2173697, 6291456, 2174689, 6291456, 2174017, 2174721, 6291456, 6291456, 2174753, 2174785, 2174817]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2099521, 2099105, 2120705, 2098369, 2120801, 2103361, 2097985, 2098433, 2121377, 2121473, 2099169, 2099873, 2098401, 2099393, 2152609, 2100033]), new Uint32Array([2132898, 2163842, 2163906, 2133282, 2132034, 2131938, 2137410, 2132802, 2132706, 2164866, 2133282, 2160578, 2165186, 2165186, 6291456, 6291456]), new Uint32Array([10500003, 10500099, 10500195, 10500291, 10500387, 10500483, 10500579, 10500675, 10500771, 10500867, 10500963, 10501059, 10501155, 10501251, 10501347, 10501443]), new Uint32Array([2163458, 2130978, 2131074, 2131266, 2131362, 2163522, 2160130, 2132066, 2131010, 2131106, 2106018, 2131618, 2131298, 2132034, 2131938, 2137410]), new Uint32Array([2212961, 2116993, 2212993, 2213025, 2213057, 2213089, 2213121, 2213153, 2213185, 2213217, 2213249, 2209633, 2213281, 2213313, 2213345, 2213377]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2113729, 2113825, 2113921, 2114017, 2114113, 2114209, 2114305, 2114401, 2114497, 2114593, 2114689, 2114785, 2114881, 2114977, 2115073, 2115169]), new Uint32Array([2238177, 2238209, 2238241, 2238273, 2238305, 2238337, 2238337, 2217537, 2238369, 2238401, 2238433, 2238465, 2215649, 2238497, 2238529, 2238561]), new Uint32Array([2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905]), new Uint32Array([6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 0]), new Uint32Array([6291456, 0, 6291456, 2145026, 0, 6291456, 2145090, 0, 6291456, 6291456, 0, 0, 23068672, 0, 23068672, 23068672]), new Uint32Array([2099233, 2122017, 2200673, 2098113, 2121537, 2103201, 2200705, 2104033, 2121857, 2121953, 2122401, 2099649, 2099969, 2123009, 2100129, 2100289]), new Uint32Array([6291456, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0]), new Uint32Array([2187681, 2187713, 2187745, 2187777, 2187809, 2187841, 2187873, 2187905, 2187937, 2187969, 2188001, 2188033, 2188065, 2188097, 2188129, 2188161]), new Uint32Array([0, 10554498, 10554562, 10554626, 10554690, 10554754, 10554818, 10554882, 10554946, 10555010, 10555074, 6291456, 6291456, 0, 0, 0]), new Uint32Array([2235170, 2235234, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2181153, 6291456, 2188897, 6291456, 6291456, 2188929, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2111905, 2100865, 2188961, 2188993]), new Uint32Array([2100833, 2100897, 0, 0, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 10575617, 2187041, 10502177, 10489601, 10489697, 2112289]), new Uint32Array([6291456, 2172833, 6291456, 2172865, 2172897, 2172929, 2172961, 6291456, 2172993, 6291456, 2173025, 6291456, 2173057, 6291456, 2173089, 6291456]), new Uint32Array([6291456, 0, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 2190721]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456]), new Uint32Array([2184993, 6291456, 2185025, 6291456, 2185057, 6291456, 2185089, 6291456, 2185121, 6291456, 2185153, 6291456, 2185185, 6291456, 2185217, 6291456]), new Uint32Array([2115265, 2115361, 2115457, 2115553, 2115649, 2115745, 2115841, 2115937, 2116033, 2116129, 2116225, 2116321, 2150658, 2150722, 2200225, 6291456]), new Uint32Array([2168321, 6291456, 2168353, 6291456, 2168385, 6291456, 2168417, 6291456, 2168449, 6291456, 2168481, 6291456, 2168513, 6291456, 2168545, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 0, 6291456, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 2186625, 0, 0, 6291456, 6291456, 2186657, 2186689, 2186721, 2173505, 0, 10496067, 10496163, 10496259]), new Uint32Array([2178785, 6291456, 2178817, 6291456, 2178849, 6291456, 2178881, 6291456, 2178913, 6291456, 2178945, 6291456, 2178977, 6291456, 2179009, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2097152, 0, 0, 0, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 2197857, 2197889, 2197921, 2197953, 2197985, 2198017, 0, 0, 2198049, 2198081, 2198113, 2198145, 2198177, 2198209]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2098209, 2167297, 2111137, 6291456]), new Uint32Array([2171393, 6291456, 2171425, 6291456, 2171457, 6291456, 2171489, 6291456, 2171521, 6291456, 2171553, 6291456, 2171585, 6291456, 2171617, 6291456]), new Uint32Array([2206753, 2206785, 2195457, 2206817, 2206849, 2206881, 2206913, 2197153, 2197153, 2206945, 2117857, 2206977, 2207009, 2207041, 2207073, 2207105]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 23068672, 0, 0, 0, 0, 2144834, 2144898, 0, 2144962]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672]), new Uint32Array([2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 0, 2105505, 2098241]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 2202049, 6291456, 2202081, 6291456, 2202113, 6291456, 2202145, 6291456, 2202177, 6291456, 2202209, 6291456, 2202241, 6291456]), new Uint32Array([10501155, 10501251, 10501347, 10501443, 10501539, 10501635, 10501731, 10501827, 10501923, 10502019, 2141731, 2105505, 2098177, 2155586, 2166530, 0]), new Uint32Array([2102081, 2102209, 2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100833, 2100737, 2098337, 2101441]), new Uint32Array([2146882, 2146946, 2147010, 2147074, 2147138, 2147202, 2147266, 2147330, 2146882, 2146946, 2147010, 2147074, 2147138, 2147202, 2147266, 2147330]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([10502307, 10502403, 10502499, 10502595, 10502691, 10502787, 10502883, 10502979, 10503075, 10503171, 10503267, 10503363, 10503459, 10503555, 10503651, 10503747]), new Uint32Array([2179937, 2179969, 2180001, 2180033, 2156545, 2180065, 2156577, 2180097, 2180129, 2180161, 2180193, 2180225, 2180257, 2180289, 2156737, 2180321]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 0, 0, 0, 6291456, 0, 0, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0]), new Uint32Array([2227682, 2227746, 2227810, 2227874, 2227938, 2228002, 2228066, 2228130, 2228194, 2228258, 2228322, 2228386, 2228450, 2228514, 2228578, 2228642]), new Uint32Array([2105601, 2169121, 2108193, 2170049, 2181025, 2181057, 2112481, 2108321, 2108289, 2181089, 2170497, 2100865, 2181121, 2173601, 2173633, 2173665]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2180641, 6291456, 6291456, 6291456]), new Uint32Array([0, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 0, 0, 6291456, 6291456, 0, 6291456, 6291456, 6291456]), new Uint32Array([2178273, 6291456, 2178305, 6291456, 2178337, 6291456, 2178369, 6291456, 2178401, 6291456, 2178433, 6291456, 2178465, 6291456, 2178497, 6291456]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456]), new Uint32Array([2237377, 2237409, 2236225, 2237441, 2237473, 2217441, 2215521, 2215553, 2217473, 2237505, 2237537, 2209697, 2237569, 2215585, 2237601, 2237633]), new Uint32Array([2221985, 2165601, 2165601, 2165665, 2165665, 2222017, 2222017, 2165729, 2165729, 2158913, 2158913, 2158913, 2158913, 2097281, 2097281, 2105921]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2149634, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2176897, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 2176929, 6291456, 2176961, 6291456, 2176993, 6291456]), new Uint32Array([2172641, 6291456, 2172673, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2172705, 2172737, 6291456, 2172769, 2172801, 6291456]), new Uint32Array([2099173, 2104196, 2121667, 2099395, 2121763, 2152258, 2152322, 2098946, 2152386, 2121859, 2121955, 2099333, 2122051, 2104324, 2099493, 2122147]), new Uint32Array([6291456, 6291456, 6291456, 2145794, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 2145858, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 0, 0, 6291456, 0]), new Uint32Array([0, 2105921, 2097729, 0, 2097377, 0, 0, 2106017, 0, 2097505, 2105889, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2239074, 2239138, 2239201, 2239233, 2239265, 2239297, 2239329, 2239361, 0, 2239393, 2239425, 2239425, 2239458, 2239521, 2239553, 2209569]), new Uint32Array([14680064, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 6291456, 23068672]), new Uint32Array([2108321, 2108289, 2113153, 2098209, 2180897, 2180929, 2180961, 2111137, 2098241, 2108353, 2170241, 2170273, 2180993, 2105825, 6291456, 2105473]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2146114, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([2105921, 2105921, 2105921, 2222049, 2222049, 2130977, 2130977, 2130977, 2130977, 2160065, 2160065, 2160065, 2160065, 2097729, 2097729, 2097729]), new Uint32Array([2218145, 2214785, 2207937, 2218177, 2218209, 2192993, 2210113, 2212769, 2218241, 2218273, 2216129, 2218305, 2216161, 2218337, 2218369, 2218401]), new Uint32Array([0, 0, 0, 2156546, 2156610, 2156674, 2156738, 2156802, 0, 0, 0, 0, 0, 2156866, 23068672, 2156930]), new Uint32Array([23068672, 23068672, 23068672, 0, 0, 0, 0, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2213409, 2213441, 2213473, 2213505, 2213537, 2213569, 2213601, 2213633, 2213665, 2195681, 2213697, 2213729, 2213761, 2213793, 2213825, 2213857]), new Uint32Array([2100033, 2099233, 2122017, 2200673, 2098113, 2121537, 2103201, 2200705, 2104033, 2121857, 2121953, 2122401, 2099649, 2099969, 2123009, 2100129]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2201857, 6291456, 2201889, 6291456, 2201921, 6291456, 2201953, 6291456, 2201985, 6291456, 2202017, 6291456, 2176193, 2176257, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2188193, 2188225, 2188257, 2188289, 2188321, 2188353, 2188385, 2188417, 2188449, 2188481, 2188513, 2188545, 2188577, 2188609, 2188641, 0]), new Uint32Array([10554529, 2221089, 0, 10502113, 10562017, 10537921, 10538049, 2221121, 2221153, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2213889, 2213921, 2213953, 2213985, 2214017, 2214049, 2214081, 2194177, 2214113, 2214145, 2214177, 2214209, 2214241, 2214273, 2214305, 2214337]), new Uint32Array([2166978, 2167042, 2099169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2180545, 6291456, 6291456, 6291456]), new Uint32Array([10518915, 10519011, 10519107, 10519203, 2162242, 2162306, 2159554, 2162370, 2159362, 2159618, 2105922, 2162434, 2159746, 2162498, 2159810, 2159874]), new Uint32Array([2161730, 2161794, 2135586, 2161858, 2161922, 2137186, 2131810, 2160290, 2135170, 2161986, 2137954, 2162050, 2162114, 2162178, 10518723, 10518819]), new Uint32Array([10506627, 10506723, 10506819, 10506915, 10507011, 10507107, 10507203, 10507299, 10507395, 10507491, 10507587, 10507683, 10507779, 10507875, 10507971, 10508067]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2175873, 2175905, 2175937, 2175969, 2176001, 2176033, 2176065, 2176097, 2176129, 2176161, 2176193, 2176225, 2176257, 2176289, 2176321, 2176353]), new Uint32Array([2140006, 2140198, 2140390, 2140582, 2140774, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672]), new Uint32Array([2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241]), new Uint32Array([0, 23068672, 0, 0, 0, 0, 0, 0, 0, 2145154, 2145218, 2145282, 6291456, 0, 2145346, 0]), new Uint32Array([0, 0, 0, 0, 10531458, 10495395, 2148545, 2143201, 2173473, 2148865, 2173505, 0, 2173537, 0, 2173569, 2149121]), new Uint32Array([10537282, 10495683, 2148738, 2148802, 2148866, 0, 6291456, 2148930, 2186593, 2173473, 2148737, 2148865, 2148802, 10495779, 10495875, 10495971]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2215425, 2215457, 2215489, 2215521, 2215553, 2215585, 2215617, 2215649, 2215681, 2215713, 2215745, 2215777, 2192033, 2215809, 2215841, 2215873]), new Uint32Array([2242049, 2242081, 2242113, 2242145, 2242177, 2242209, 2242241, 2242273, 2215937, 2242305, 2242338, 2242401, 2242433, 2242465, 2242497, 2216001]), new Uint32Array([10554529, 2221089, 0, 0, 10562017, 10502113, 10538049, 10537921, 2221185, 10489601, 10489697, 10609889, 10609921, 2141729, 2141793, 10610273]), new Uint32Array([2141923, 2142019, 2142115, 2142211, 2142307, 2142403, 2142499, 2142595, 2142691, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 2221185, 2221217, 10609857, 10609857, 10489601, 10489697, 10609889, 10609921, 2141729, 2141793, 2221345, 2221377, 2221409, 2221441, 2187105]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 18923970, 23068672, 23068672, 23068672, 0, 6291456, 6291456]), new Uint32Array([2183105, 6291456, 2183137, 6291456, 2183169, 6291456, 2183201, 6291456, 2183233, 6291456, 2183265, 6291456, 2183297, 6291456, 2183329, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2134434, 2134818, 2097666, 2097186, 2097474, 2097698, 2105986, 2131586, 2132450, 2131874, 2131778, 2135970, 2135778, 2161602, 2136162, 2161666]), new Uint32Array([2236865, 2236897, 2236930, 2236993, 2237025, 2235681, 2237058, 2237121, 2237153, 2237185, 2237217, 2217281, 2237250, 2191233, 2237313, 2237345]), new Uint32Array([2190049, 6291456, 2190081, 6291456, 2190113, 6291456, 2190145, 6291456, 2190177, 6291456, 2190209, 6291456, 2190241, 6291456, 2190273, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2101922, 2102050, 2102178, 2102306, 10498755, 10498851, 10498947, 10499043, 10499139, 10499235, 10499331, 10499427, 10499523, 10489604, 10489732, 10489860]), new Uint32Array([2166914, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2181601, 2170561, 2181633, 2181665, 2170753, 2181697, 2172897, 2170881, 2181729, 2170913, 2172929, 2113441, 2181761, 2181793, 2171009, 2173761]), new Uint32Array([0, 2105921, 2097729, 2106081, 0, 2097601, 2162337, 2106017, 2133281, 2097505, 0, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([2248001, 2248033, 2248066, 2248130, 2248193, 2248226, 2248289, 2248322, 2248385, 2248417, 2216673, 2248450, 2248514, 2248577, 2248610, 2248673]), new Uint32Array([6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([2169729, 6291456, 2169761, 6291456, 2169793, 6291456, 2169825, 6291456, 2169857, 2169889, 6291456, 2169921, 6291456, 2143329, 6291456, 2098305]), new Uint32Array([2162178, 2163202, 2163266, 2135170, 2136226, 2161986, 2137954, 2159426, 2159490, 2163330, 2159554, 2163394, 2159682, 2139522, 2136450, 2159746]), new Uint32Array([2173953, 2173985, 0, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2174209, 2174241, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 4271169, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2174273]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 6291456, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 2190785, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2189793, 6291456, 2189825, 6291456, 2189857, 6291456, 2189889, 6291456, 2189921, 6291456, 2189953, 6291456, 2189985, 6291456, 2190017, 6291456]), new Uint32Array([2105601, 2112289, 2108193, 2112481, 2112577, 0, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 0, 2098209, 2111137]), new Uint32Array([2172129, 6291456, 2172161, 6291456, 2172193, 6291456, 2172225, 6291456, 2172257, 6291456, 2172289, 6291456, 2172321, 6291456, 2172353, 6291456]), new Uint32Array([2214753, 6291456, 2214785, 6291456, 6291456, 2214817, 2214849, 2214881, 2214913, 2214945, 2214977, 2215009, 2215041, 2215073, 2194401, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 0, 0, 0, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([10610305, 10610337, 10575617, 2221761, 10610401, 10610433, 10502177, 0, 10610465, 10610497, 10610529, 10610561, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 23068672, 0, 0, 0, 0, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2187105, 2187137, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2199393, 2199425, 2199457, 2199489, 2199521, 2199553, 2199585, 2199617, 2199649, 2199681, 2199713, 2199745, 2199777, 2199809, 2199841, 0]), new Uint32Array([2217249, 2217281, 2217313, 2217345, 2217377, 2217409, 2217441, 2217473, 2215617, 2217505, 2217537, 2217569, 2214753, 2217601, 2217633, 2217665]), new Uint32Array([2170273, 2170305, 6291456, 2170337, 2170369, 6291456, 2170401, 2170433, 2170465, 6291456, 6291456, 6291456, 2170497, 2170529, 6291456, 2170561]), new Uint32Array([2188673, 6291456, 2188705, 2188737, 2188769, 6291456, 6291456, 2188801, 6291456, 2188833, 6291456, 2188865, 6291456, 2180929, 2181505, 2180897]), new Uint32Array([10489988, 10490116, 10490244, 10490372, 10490500, 10490628, 10490756, 10490884, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2147393, 2147457, 2147521, 2147585, 2147649, 2147713, 2147777, 2147841]), new Uint32Array([23068672, 23068672, 0, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2241153, 2241185, 2241217, 2215809, 2241250, 2241313, 2241345, 2241377, 2217921, 2241377, 2241409, 2215873, 2241441, 2241473, 2241505, 2241537]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2220417, 2220417, 2220449, 2220449, 2220481, 2220481, 2220513, 2220513, 2220545, 2220545, 2220577, 2220577, 2220609, 2220609, 2220641, 2220641]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2144002, 0, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([2167105, 2167137, 2167169, 2167201, 2167233, 2167265, 2167297, 2167329, 2167361, 2167393, 2167425, 2167457, 2167489, 2167521, 2167553, 2167585]), new Uint32Array([10575521, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193]), new Uint32Array([2234146, 2234210, 2234274, 2234338, 2234402, 2234466, 2234530, 2234594, 2234658, 2234722, 2234786, 2234850, 2234914, 2234978, 2235042, 2235106]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 2180577, 0, 0, 0, 0, 0, 2180609, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 6291456, 6291456]), new Uint32Array([2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2242529, 2242561, 2242593, 2242625, 2242657, 2242689, 2242721, 2242753, 2207937, 2218177, 2242785, 2242817, 2242849, 2242882, 2242945, 2242977]), new Uint32Array([2118049, 2105345, 2118241, 2105441, 2118433, 2118529, 2118625, 2118721, 2118817, 2200257, 2200289, 2191809, 2200321, 2200353, 2200385, 2200417]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([2185505, 6291456, 2185537, 6291456, 2185569, 6291456, 2185601, 6291456, 2185633, 6291456, 2185665, 6291456, 2185697, 6291456, 2185729, 6291456]), new Uint32Array([2231970, 2232034, 2232098, 2232162, 2232226, 2232290, 2232354, 2232418, 2232482, 2232546, 2232610, 2232674, 2232738, 2232802, 2232866, 2232930]), new Uint32Array([2218625, 2246402, 2246466, 2246530, 2246594, 2246657, 2246689, 2246689, 2218657, 2219681, 2246721, 2246753, 2246785, 2246818, 2246881, 2208481]), new Uint32Array([2197025, 2197057, 2197089, 2197121, 2197153, 2197185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2219137, 2216961, 2219169, 2219201, 2219233, 2219265, 2219297, 2217025, 2215041, 2219329, 2217057, 2219361, 2217089, 2219393, 2197153, 2219426]), new Uint32Array([23068672, 23068672, 23068672, 0, 0, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713]), new Uint32Array([2243522, 2243585, 2243617, 2243649, 2243681, 2210113, 2243713, 2243746, 2243810, 2243874, 2243937, 2243970, 2244033, 2244065, 2244097, 2244129]), new Uint32Array([2178017, 6291456, 2178049, 6291456, 2178081, 6291456, 2178113, 6291456, 2178145, 6291456, 2178177, 6291456, 2178209, 6291456, 2178241, 6291456]), new Uint32Array([10553858, 2165314, 10518722, 6291456, 10518818, 0, 10518914, 2130690, 10519010, 2130786, 10519106, 2130882, 10519202, 2165378, 10554050, 2165506]), new Uint32Array([0, 0, 2135491, 2135587, 2135683, 2135779, 2135875, 2135971, 2135971, 2136067, 2136163, 2136259, 2136355, 2136355, 2136451, 2136547]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2220033, 2220033, 2220065, 2220065, 2220065, 2220065, 2220097, 2220097, 2220097, 2220097, 2220129, 2220129, 2220129, 2220129, 2220161, 2220161]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2100897, 2100898, 2100899, 2150018, 2100865, 2100866, 2100867, 2100868, 2150082, 2108481, 2109858, 2109859, 2105569, 2105505, 2098241, 2105601]), new Uint32Array([2097217, 2097505, 2097505, 2097505, 2097505, 2165570, 2165570, 2165634, 2165634, 2165698, 2165698, 2097858, 2097858, 0, 0, 2097152]), new Uint32Array([23068672, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([10503843, 10503939, 10504035, 10504131, 10504227, 10504323, 10504419, 10504515, 10504611, 10504707, 10504803, 10504899, 10504995, 10491140, 10491268, 0]), new Uint32Array([2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2173761, 2174017, 2174049]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2134145, 2097153, 2134241, 2105953, 2132705, 2130977, 2160065, 2131297, 2162049, 2133089, 2160577, 2133857, 2235297, 2220769, 2235329, 2235361]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2222401, 2222433, 2222465, 10531394, 2222497, 2222529, 2222561, 0, 2222593, 2222625, 2222657, 2222689, 2222721, 2222753, 2222785, 0]), new Uint32Array([2184481, 6291456, 2184513, 6291456, 2184545, 6291456, 2184577, 6291456, 2184609, 6291456, 2184641, 6291456, 2184673, 6291456, 2184705, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2105570, 2156034, 2126947, 2156098, 2153666, 2127043, 2127139, 2156162, 0, 2127235, 2156226, 2156290, 2156354, 2156418, 2127331, 2127427]), new Uint32Array([2215905, 2207041, 2153185, 2241569, 2241601, 2241633, 2241665, 2241697, 2241730, 2241793, 2241825, 2241857, 2241889, 2241921, 2241954, 2242017]), new Uint32Array([2203777, 6291456, 2203809, 6291456, 2203841, 6291456, 2203873, 6291456, 2203905, 6291456, 2173121, 2180993, 2181249, 2203937, 2181313, 0]), new Uint32Array([2168577, 6291456, 2168609, 6291456, 2168641, 6291456, 2168673, 6291456, 2168705, 6291456, 2168737, 6291456, 2168769, 6291456, 2168801, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 23068672, 23068672, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2210113, 2195521, 2210145, 2210177, 2210209, 2210241, 2210273, 2210305, 2210337, 2210369, 2210401, 2210433, 2210465, 2210497, 2210529, 2210561]), new Uint32Array([6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([2228706, 2228770, 2228834, 2228898, 2228962, 2229026, 2229090, 2229154, 2229218, 2229282, 2229346, 2229410, 2229474, 2229538, 2229602, 2229666]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 18874368, 18874368, 18874368, 0, 0]), new Uint32Array([2133089, 2133281, 2133281, 2133281, 2133281, 2160577, 2160577, 2160577, 2160577, 2097441, 2097441, 2097441, 2097441, 2133857, 2133857, 2133857]), new Uint32Array([6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2174017, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233089]), new Uint32Array([2178529, 6291456, 2178561, 6291456, 2178593, 6291456, 2178625, 6291456, 2178657, 6291456, 2178689, 6291456, 2178721, 6291456, 2178753, 6291456]), new Uint32Array([2221025, 2221025, 2221057, 2221057, 2159329, 2159329, 2159329, 2159329, 2097217, 2097217, 2158914, 2158914, 2158978, 2158978, 2159042, 2159042]), new Uint32Array([2208161, 2208193, 2208225, 2208257, 2194433, 2208289, 2208321, 2208353, 2208385, 2208417, 2208449, 2208481, 2208513, 2208545, 2208577, 2208609]), new Uint32Array([2169217, 6291456, 2169249, 6291456, 2169281, 6291456, 2169313, 6291456, 2169345, 6291456, 2169377, 6291456, 2169409, 6291456, 2169441, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2133187, 2133283, 2133283, 2133379, 2133475, 2133571, 2133667, 2133667, 2133763, 2133859, 2133955, 2134051, 2134147, 2134147, 2134243, 2134339]), new Uint32Array([2197697, 2114113, 2114209, 2197729, 2197761, 2114305, 2197793, 2114401, 2114497, 2197825, 2114593, 2114689, 2114785, 2114881, 2114977, 0]), new Uint32Array([2193089, 2193121, 2193153, 2193185, 2117665, 2117569, 2193217, 2193249, 2193281, 2193313, 2193345, 2193377, 2193409, 2193441, 2193473, 2193505]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2184225, 6291456, 2184257, 6291456, 2184289, 6291456, 2184321, 6291456, 2184353, 6291456, 2184385, 6291456, 2184417, 6291456, 2184449, 6291456]), new Uint32Array([2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2100833, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2098657, 2098049, 2200737, 2123489, 2123681, 2200769, 2098625, 2100321, 2098145, 2100449, 2098017, 2098753, 2200801, 2200833, 2200865, 0]), new Uint32Array([23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 0, 2098241, 2108353, 2108417, 2105825, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2181153, 2105505, 2181185, 2167617, 2180993]), new Uint32Array([2160002, 2160066, 2160130, 2160194, 2160258, 2132066, 2131010, 2131106, 2106018, 2131618, 2160322, 2131298, 2132034, 2131938, 2137410, 2132226]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([2183617, 6291456, 2183649, 6291456, 2183681, 6291456, 2183713, 6291456, 2183745, 6291456, 2183777, 6291456, 2183809, 6291456, 2183841, 6291456]), new Uint32Array([0, 6291456, 6291456, 0, 6291456, 0, 0, 6291456, 6291456, 0, 6291456, 0, 0, 6291456, 0, 0]), new Uint32Array([2250977, 2251009, 2251041, 2251073, 2195009, 2251106, 2251169, 2251201, 2251233, 2251265, 2251297, 2251330, 2251394, 2251457, 2251489, 2251521]), new Uint32Array([2205729, 2205761, 2205793, 2205825, 2205857, 2205889, 2205921, 2205953, 2205985, 2206017, 2206049, 2206081, 2206113, 2206145, 2206177, 2206209]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2143170, 2168993, 6291456, 2169025, 6291456, 2169057, 6291456, 2169089, 6291456, 2143234, 2169121, 6291456, 2169153, 6291456, 2169185, 6291456]), new Uint32Array([23068672, 23068672, 2190689, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2248706, 2248769, 2248801, 2248833, 2248865, 2248897, 2248929, 2248962, 2249026, 2249090, 2249154, 2240705, 2249217, 2249249, 2249281, 2249313]), new Uint32Array([10485857, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10495394, 6291456, 2098209, 6291456, 6291456, 2097152, 6291456, 10531394]), new Uint32Array([0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([14680064, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2173985, 2173953, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889]), new Uint32Array([6291456, 2186977, 6291456, 6291456, 6291456, 6291456, 6291456, 10537858, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2209601, 2209633, 2209665, 2209697, 2209729, 2209761, 2209793, 2209825, 2209857, 2209889, 2209921, 2209953, 2209985, 2210017, 2210049, 2210081]), new Uint32Array([10501539, 10501635, 10501731, 10501827, 10501923, 10502019, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905]), new Uint32Array([2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2174017, 2174017, 2174049]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2194561, 2194593, 2194625, 2119777, 2119873, 2194657, 2194689, 2194721, 2194753, 2194785, 2194817, 2194849, 2194881, 2194913, 2194945, 2194977]), new Uint32Array([2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569]), new Uint32Array([2222818, 2222882, 2222946, 2223010, 2223074, 2223138, 2223202, 2223266, 2223330, 2223394, 2223458, 2223522, 2223586, 2223650, 2223714, 2223778]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672]), new Uint32Array([0, 2179553, 2179585, 2179617, 2179649, 2144001, 2179681, 2179713, 2179745, 2179777, 2179809, 2156705, 2179841, 2156833, 2179873, 2179905]), new Uint32Array([6291456, 23068672, 6291456, 2145602, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 6291456, 0, 0]), new Uint32Array([2196513, 2196545, 2196577, 2196609, 2196641, 2196673, 2196705, 2196737, 2196769, 2196801, 2196833, 2196865, 2196897, 2196929, 2196961, 2196993]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2177281, 6291456, 2177313, 6291456, 2177345, 6291456, 2177377, 6291456, 2177409, 6291456, 2177441, 6291456, 2177473, 6291456, 2177505, 6291456]), new Uint32Array([2187137, 2221473, 2221505, 2221537, 2221569, 6291456, 6291456, 10610209, 10610241, 10537986, 10537986, 10537986, 10537986, 10609857, 10609857, 10609857]), new Uint32Array([2243009, 2243041, 2216033, 2243074, 2243137, 2243169, 2243201, 2219617, 2243233, 2243265, 2243297, 2243329, 2243362, 2243425, 2243457, 2243489]), new Uint32Array([10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 2097152, 4194304, 4194304, 0, 0]), new Uint32Array([2143042, 6291456, 2143106, 2143106, 2168833, 6291456, 2168865, 6291456, 6291456, 2168897, 6291456, 2168929, 6291456, 2168961, 6291456, 2143170]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2204193, 2204225, 2204257, 2204289, 2204321, 2204353, 2204385, 2204417, 2204449, 2204481, 2204513, 2204545, 2204577, 2204609, 2204641, 2204673]), new Uint32Array([2202753, 6291456, 2202785, 6291456, 2202817, 6291456, 2202849, 6291456, 2202881, 6291456, 2202913, 6291456, 2202945, 6291456, 2202977, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321]), new Uint32Array([2147394, 2147458, 2147522, 2147586, 2147650, 2147714, 2147778, 2147842, 2147394, 2147458, 2147522, 2147586, 2147650, 2147714, 2147778, 2147842]), new Uint32Array([2253313, 2253346, 2253409, 2253441, 2253473, 2253505, 2253537, 2253569, 2253601, 2253634, 2219393, 2253697, 2253729, 2253761, 2253793, 2253825]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([2162562, 2162626, 2131362, 2162690, 2159938, 2160002, 2162754, 2162818, 2160130, 2162882, 2160194, 2160258, 2160834, 2160898, 2161026, 2161090]), new Uint32Array([2175361, 2175393, 2175425, 2175457, 2175489, 2175521, 2175553, 2175585, 2175617, 2175649, 2175681, 2175713, 2175745, 2175777, 2175809, 2175841]), new Uint32Array([2253858, 2253921, 2253954, 2254018, 2254082, 2196737, 2254145, 2196865, 2254177, 2254209, 2254241, 2254273, 2197025, 2254306, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2202113, 2204129, 2188705, 2204161]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([2173985, 2174017, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113, 2173985, 2173953]), new Uint32Array([2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209]), new Uint32Array([2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 0, 2108417, 0, 2111713, 2100897, 2111905]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2175425, 2175489, 2175809, 2175905, 2175937, 2175937, 2176193, 2176417, 2180865, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 2143298, 2143298, 2143298, 2143362, 2143362, 2143362, 2143426, 2143426, 2143426, 2171105, 6291456, 2171137]), new Uint32Array([2120162, 2120258, 2151618, 2151682, 2151746, 2151810, 2151874, 2151938, 2152002, 2120035, 2120131, 2120227, 2152066, 2120323, 2152130, 2120419]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2195361, 2142433, 2236065, 2236097, 2236129, 2236161, 2118241, 2117473, 2236193, 2236225, 2236257, 2236289, 0, 0, 0, 0]), new Uint32Array([2189281, 6291456, 2189313, 6291456, 2189345, 6291456, 2189377, 6291456, 2189409, 6291456, 2189441, 6291456, 2189473, 6291456, 2189505, 6291456]), new Uint32Array([6291456, 6291456, 2145922, 6291456, 6291456, 6291456, 6291456, 2145986, 6291456, 6291456, 6291456, 6291456, 2146050, 6291456, 6291456, 6291456]), new Uint32Array([2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 10502113, 10562017, 10610401, 10502177, 10610433, 10538049]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 2186401, 0, 2186433, 0, 2186465, 0, 2186497]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 23068672, 23068672, 23068672]), new Uint32Array([0, 0, 2198241, 2198273, 2198305, 2198337, 2198369, 2198401, 0, 0, 2198433, 2198465, 2198497, 0, 0, 0]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([0, 2105921, 2097729, 0, 2097377, 0, 0, 2106017, 2133281, 2097505, 2105889, 0, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([2197889, 2197921, 2197953, 2197985, 2198017, 2198049, 2198081, 2198113, 2198145, 2198177, 2198209, 2198241, 2198273, 2198305, 2198337, 2198369]), new Uint32Array([2132514, 2132610, 2160386, 2133090, 2133186, 2160450, 2160514, 2133282, 2160578, 2133570, 2106178, 2160642, 2133858, 2160706, 2160770, 2134146]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 6291456, 23068672, 23068672, 6291456, 23068672, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2184737, 6291456, 2184769, 6291456, 2184801, 6291456, 2184833, 6291456, 2184865, 6291456, 2184897, 6291456, 2184929, 6291456, 2184961, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 2186753, 6291456, 6291456, 6291456, 6291456, 2186785, 2186817, 2186849, 2173569, 2186881, 10496355, 10495395, 10575521]), new Uint32Array([0, 0, 2097729, 0, 0, 0, 0, 2106017, 0, 2097505, 0, 2097185, 0, 2135777, 2097633, 2097441]), new Uint32Array([2189537, 6291456, 2189569, 6291456, 2189601, 6291456, 2189633, 6291456, 2189665, 6291456, 2189697, 6291456, 2189729, 6291456, 2189761, 6291456]), new Uint32Array([2202497, 6291456, 2202529, 6291456, 2202561, 6291456, 2202593, 6291456, 2202625, 6291456, 2202657, 6291456, 2202689, 6291456, 2202721, 6291456]), new Uint32Array([2245217, 2218369, 2245249, 2245282, 2245345, 2245377, 2245410, 2245474, 2245537, 2245569, 2245601, 2245633, 2245665, 2245665, 2245697, 2245729]), new Uint32Array([6291456, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 23068672, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 23068672, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672]), new Uint32Array([0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2097281, 2105921, 2097729, 2106081, 2097377, 2097601, 2162337, 2106017, 2133281, 2097505, 0, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([2176641, 6291456, 2176673, 6291456, 2176705, 6291456, 2176737, 6291456, 2176769, 6291456, 2176801, 6291456, 2176833, 6291456, 2176865, 6291456]), new Uint32Array([2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113, 2173985, 2173953, 2174369, 2174369, 0, 0, 2100833, 2100737]), new Uint32Array([2116513, 2190817, 2190849, 2190881, 2190913, 2190945, 2116609, 2190977, 2191009, 2191041, 2191073, 2117185, 2191105, 2191137, 2191169, 2191201]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456]), new Uint32Array([2167617, 2167649, 2167681, 2167713, 2167745, 2167777, 2167809, 6291456, 2167841, 2167873, 2167905, 2167937, 2167969, 2168001, 2168033, 4240130]), new Uint32Array([2165122, 2163970, 2164034, 2164098, 2164162, 2164226, 2164290, 2164354, 2164418, 2164482, 2164546, 2133122, 2134562, 2132162, 2132834, 2136866]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2186209, 2186241, 2186273, 2186305, 2186337, 2186369, 0, 0]), new Uint32Array([2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([0, 0, 23068672, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456]), new Uint32Array([0, 10537921, 10610689, 10610273, 10610497, 10610529, 10610305, 10610721, 10489601, 10489697, 10610337, 10575617, 10554529, 2221761, 2197217, 10496577]), new Uint32Array([2105473, 2105569, 2105601, 2112289, 0, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441]), new Uint32Array([2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481]), new Uint32Array([2125346, 2153410, 2153474, 2127394, 2153538, 2153602, 2153666, 2153730, 2105507, 2105476, 2153794, 2153858, 2153922, 2153986, 2154050, 2105794]), new Uint32Array([2200449, 2119681, 2200481, 2153313, 2199873, 2199905, 2199937, 2200513, 2200545, 2200577, 2200609, 2119105, 2119201, 2119297, 2119393, 2119489]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2175777, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2222273, 2197217, 2221473, 2221505, 2221089, 2222305, 2200865, 2099681, 2104481, 2222337, 2099905, 2120737, 2222369, 2103713, 2100225, 2098785]), new Uint32Array([2201377, 6291456, 2201409, 6291456, 2201441, 6291456, 2201473, 6291456, 2201505, 6291456, 2201537, 6291456, 2201569, 6291456, 6291456, 23068672]), new Uint32Array([2174081, 2174113, 2174145, 2174177, 2149057, 2233057, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793]), new Uint32Array([2200897, 6291456, 2200929, 6291456, 2200961, 6291456, 2200993, 6291456, 2201025, 6291456, 2180865, 6291456, 2201057, 6291456, 2201089, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2161154, 2161410, 2138658, 2161474, 2161538, 2097666, 2097186, 2097474, 2162946, 2132450, 2163010, 2163074, 2136162, 2163138, 2161666, 2161730]), new Uint32Array([2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953]), new Uint32Array([0, 0, 0, 0, 0, 0, 23068672, 23068672, 0, 0, 0, 0, 2145410, 2145474, 0, 6291456]), new Uint32Array([2244161, 2216065, 2212769, 2244193, 2244225, 2244257, 2244290, 2244353, 2244385, 2244417, 2244449, 2218273, 2244481, 2244514, 2244577, 2244609]), new Uint32Array([2125730, 2125699, 2125795, 2125891, 2125987, 2154114, 2154178, 2154242, 2154306, 2154370, 2154434, 2154498, 2126082, 2126178, 2126274, 2126083]), new Uint32Array([2237665, 2237697, 2237697, 2237697, 2237730, 2237793, 2237825, 2237857, 2237890, 2237953, 2237985, 2238017, 2238049, 2238081, 2238113, 2238145]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2150146, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2214369, 2238593, 2238625, 2238657, 2238689, 2238721, 2238753, 2238785, 2238817, 2238850, 2238913, 2238945, 2238977, 2235457, 2239009, 2239041]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([2252066, 2252130, 2252193, 2252225, 2252257, 2252290, 2252353, 2252385, 2252417, 2252449, 2252481, 2252513, 2252545, 2252578, 2252641, 2252673]), new Uint32Array([2197697, 2114113, 2114209, 2197729, 2197761, 2114305, 2197793, 2114401, 2114497, 2197825, 2114593, 2114689, 2114785, 2114881, 2114977, 2197857]), new Uint32Array([2224866, 2224930, 2224994, 2225058, 2225122, 2225186, 2225250, 2225314, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2219490, 2219554, 2219617, 2219649, 2219681, 2219714, 2219778, 2219842, 2219905, 2219937, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456]), new Uint32Array([2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289]), new Uint32Array([2174081, 2174113, 2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113, 2173985, 2173953, 2148481, 2173601, 2173633, 2173665]), new Uint32Array([2220161, 2220161, 2220193, 2220193, 2220193, 2220193, 2220225, 2220225, 2220225, 2220225, 2220257, 2220257, 2220257, 2220257, 2220289, 2220289]), new Uint32Array([2192673, 2192705, 2192737, 2192769, 2192801, 2192833, 2192865, 2118049, 2192897, 2117473, 2117761, 2192929, 2192961, 2192993, 2193025, 2193057]), new Uint32Array([2179297, 6291456, 2179329, 6291456, 2179361, 6291456, 2179393, 6291456, 2179425, 6291456, 2179457, 6291456, 2179489, 6291456, 2179521, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2235745, 2235777, 2193633, 2235809, 2235841, 2235873, 2235905, 2235937, 2235969, 2116513, 2116705, 2236001, 2200513, 2199905, 2200545, 2236033]), new Uint32Array([2113153, 2108481, 2113345, 2113441, 2232993, 2233025, 0, 0, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761]), new Uint32Array([2170593, 6291456, 2170625, 6291456, 2170657, 6291456, 2170689, 2170721, 6291456, 2170753, 6291456, 6291456, 2170785, 6291456, 2170817, 2170849]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2166786, 2166850, 0, 0, 0, 0]), new Uint32Array([23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 10575617, 2187041, 10502177, 10489601, 10489697, 0]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2134562, 2132162, 2132834, 2136866, 2136482, 2164610, 2164674, 2164738, 2164802, 2132802, 2132706, 2164866, 2132898, 2164930, 2164994, 2165058]), new Uint32Array([6291456, 6291456, 2098337, 2101441, 10531458, 2153473, 6291456, 6291456, 10531522, 2100737, 2108193, 6291456, 2106499, 2106595, 2106691, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2233122, 2233186, 2233250, 2233314, 2233378, 2233442, 2233506, 2233570, 2233634, 2233698, 2233762, 2233826, 2233890, 2233954, 2234018, 2234082]), new Uint32Array([23068672, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2205217, 2205249, 2205281, 2205313, 2205345, 2205377, 2205409, 2205441, 2205473, 2205505, 2205537, 2205569, 2205601, 2205633, 2205665, 2205697]), new Uint32Array([6291456, 0, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([2173601, 2173761, 2174081, 2173569, 2174241, 2174113, 2173953, 6291456, 2174305, 6291456, 2174337, 6291456, 2174369, 6291456, 2174401, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2152450, 2152514, 2099653, 2104452, 2099813, 2122243, 2099973, 2152578, 2122339, 2122435, 2122531, 2122627, 2122723, 2104580, 2122819, 2152642]), new Uint32Array([2236385, 2236417, 2236449, 2236482, 2236545, 2215425, 2236577, 2236609, 2236641, 2236673, 2215457, 2236705, 2236737, 2236770, 2215489, 2236833]), new Uint32Array([2163394, 2159746, 2163458, 2131362, 2163522, 2160130, 2163778, 2132226, 2163842, 2132898, 2163906, 2161410, 2138658, 2097666, 2136162, 2163650]), new Uint32Array([2218721, 2246913, 2246946, 2216385, 2247010, 2247074, 2215009, 2247137, 2247169, 2216481, 2247201, 2247233, 2247266, 2247330, 2247330, 0]), new Uint32Array([2129730, 2129762, 2129858, 2129731, 2129827, 2156482, 2156482, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 0, 0, 0, 0, 6291456, 0, 0]), new Uint32Array([2203969, 2204001, 2181377, 2204033, 2204065, 6291456, 2204097, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2169473, 6291456, 2169505, 6291456, 2169537, 6291456, 2169569, 6291456, 2169601, 6291456, 2169633, 6291456, 2169665, 6291456, 2169697, 6291456]), new Uint32Array([2141542, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2220801, 2220801, 2220801, 2220801, 2220833, 2220833, 2220865, 2220865, 2220865, 2220865, 2220897, 2220897, 2220897, 2220897, 2139873, 2139873]), new Uint32Array([0, 0, 0, 0, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 6291456, 0]), new Uint32Array([2214849, 2218433, 2218465, 2218497, 2218529, 2218561, 2214881, 2218593, 2218625, 2218657, 2218689, 2218721, 2218753, 2216545, 2218785, 2218817]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([2136482, 2164610, 2164674, 2164738, 2164802, 2132802, 2132706, 2164866, 2132898, 2164930, 2164994, 2165058, 2165122, 2132802, 2132706, 2164866]), new Uint32Array([2207649, 2207681, 2207713, 2207745, 2207777, 2207809, 2207841, 2207873, 2207905, 2207937, 2207969, 2208001, 2208033, 2208065, 2208097, 2208129]), new Uint32Array([2123683, 2105092, 2152706, 2123779, 2105220, 2152770, 2100453, 2098755, 2123906, 2124002, 2124098, 2124194, 2124290, 2124386, 2124482, 2124578]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 10485857]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([10508163, 10508259, 10508355, 10508451, 2200129, 2200161, 2192737, 2200193, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2203553, 6291456, 2203585, 6291456, 6291456, 6291456, 2203617, 6291456, 2203649, 6291456, 2203681, 6291456, 2203713, 6291456, 2203745, 6291456]), new Uint32Array([18884449, 18884065, 23068672, 18884417, 18884034, 18921185, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 18874368]), new Uint32Array([2247393, 2247426, 2247489, 2247521, 2247553, 2247586, 2247649, 2247681, 2247713, 2247745, 2247777, 2247810, 2247873, 2247905, 2247937, 2247969]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672]), new Uint32Array([2134145, 2097153, 2134241, 0, 2132705, 2130977, 2160065, 2131297, 0, 2133089, 2160577, 2133857, 2235297, 0, 2235329, 0]), new Uint32Array([2182593, 6291456, 2182625, 6291456, 2182657, 6291456, 2182689, 6291456, 2182721, 6291456, 2182753, 6291456, 2182785, 6291456, 2182817, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2102402, 2102403, 6291456, 2110050]), new Uint32Array([2149890, 2108323, 2149954, 6291456, 2113441, 6291456, 2149057, 6291456, 2113441, 6291456, 2105473, 2167265, 2111137, 2105505, 6291456, 2108353]), new Uint32Array([2219105, 2219137, 2195233, 2251554, 2251617, 2251649, 2251681, 2251713, 2251746, 2251810, 2251873, 2251905, 2251937, 2251970, 2252033, 2219169]), new Uint32Array([2203009, 6291456, 2203041, 6291456, 2203073, 6291456, 2203105, 6291456, 2203137, 6291456, 2203169, 6291456, 2203201, 6291456, 2203233, 6291456]), new Uint32Array([2128195, 2128291, 2128387, 2128483, 2128579, 2128675, 2128771, 2128867, 2128963, 2129059, 2129155, 2129251, 2129347, 2129443, 2129539, 2129635]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2140964, 2141156, 2140966, 2141158, 2141350]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2225378, 2225442, 2225506, 2225570, 2225634, 2225698, 2225762, 2225826, 2225890, 2225954, 2226018, 2226082, 2226146, 2226210, 2226274, 2226338]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417]), new Uint32Array([2108353, 2108417, 0, 2105601, 2108193, 2157121, 2157313, 2157377, 2157441, 2100897, 6291456, 2108419, 2173953, 2173633, 2173633, 2173953]), new Uint32Array([2111713, 2173121, 2111905, 2098177, 2173153, 2173185, 2173217, 2113153, 2113345, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 2190753]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2197249, 6291456, 2117377, 2197281, 2197313, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 23068672, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 23068672, 23068672]), new Uint32Array([2173281, 6291456, 2173313, 6291456, 2173345, 6291456, 2173377, 6291456, 0, 0, 10532546, 6291456, 6291456, 6291456, 10562017, 2173441]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2159426, 2159490, 2159554, 2159362, 2159618, 2159682, 2139522, 2136450, 2159746, 2159810, 2159874, 2130978, 2131074, 2131266, 2131362, 2159938]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2203233, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2203265, 6291456, 2203297, 6291456, 2203329, 2203361, 6291456]), new Uint32Array([6291456, 6291456, 2148418, 2148482, 2148546, 0, 6291456, 2148610, 2186529, 2186561, 2148417, 2148545, 2148482, 10495778, 2143969, 10495778]), new Uint32Array([2134146, 2139426, 2160962, 2134242, 2161218, 2161282, 2161346, 2161410, 2138658, 2134722, 2134434, 2134818, 2097666, 2097346, 2097698, 2105986]), new Uint32Array([2198881, 2198913, 2198945, 2198977, 2199009, 2199041, 2199073, 2199105, 2199137, 2199169, 2199201, 2199233, 2199265, 2199297, 2199329, 2199361]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([10610561, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193]), new Uint32Array([2183873, 6291456, 2183905, 6291456, 2183937, 6291456, 2183969, 6291456, 2184001, 6291456, 2184033, 6291456, 2184065, 6291456, 2184097, 6291456]), new Uint32Array([2244642, 2244706, 2244769, 2244801, 2218305, 2244833, 2244865, 2244897, 2244929, 2244961, 2244993, 2245026, 2245089, 2245122, 2245185, 0]), new Uint32Array([6291456, 6291456, 2116513, 2116609, 2116705, 2116801, 2199873, 2199905, 2199937, 2199969, 2190913, 2200001, 2200033, 2200065, 2200097, 2191009]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2180673, 2180705, 2180737, 2180769, 2180801, 2180833, 0, 0]), new Uint32Array([2098081, 2099521, 2099105, 2120705, 2098369, 2120801, 2103361, 2097985, 2098433, 2121377, 2121473, 2099169, 2099873, 2098401, 2099393, 2152609]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2150402]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2145666, 2145730, 6291456, 6291456]), new Uint32Array([2173921, 2173953, 2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233057, 2148481, 2173601, 2173633, 2173665]), new Uint32Array([2187073, 6291456, 6291456, 6291456, 6291456, 2098241, 2098241, 2108353, 2100897, 2111905, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2102404, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2100612, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10485857]), new Uint32Array([2149057, 2233057, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889]), new Uint32Array([2217697, 2217729, 2217761, 2217793, 2217825, 2217857, 2217889, 2217921, 2217953, 2215873, 2217985, 2215905, 2218017, 2218049, 2218081, 2218113]), new Uint32Array([2211233, 2218849, 2216673, 2218881, 2218913, 2218945, 2218977, 2219009, 2216833, 2219041, 2215137, 2219073, 2216865, 2209505, 2219105, 2216897]), new Uint32Array([2240097, 2240129, 2240161, 2240193, 2240225, 2240257, 2240289, 2240321, 2240353, 2240386, 2240449, 2240481, 2240513, 2240545, 2207905, 2240578]), new Uint32Array([6291456, 6291456, 2202273, 6291456, 2202305, 6291456, 2202337, 6291456, 2202369, 6291456, 2202401, 6291456, 2202433, 6291456, 2202465, 6291456]), new Uint32Array([0, 23068672, 23068672, 18923394, 23068672, 18923458, 18923522, 18884099, 18923586, 18884195, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2201121, 6291456, 2201153, 6291456, 2201185, 6291456, 2201217, 6291456, 2201249, 6291456, 2201281, 6291456, 2201313, 6291456, 2201345, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456]), new Uint32Array([2211041, 2211073, 2211105, 2211137, 2211169, 2211201, 2211233, 2211265, 2211297, 2211329, 2211361, 2211393, 2211425, 2211457, 2211489, 2211521]), new Uint32Array([2181825, 6291456, 2181857, 6291456, 2181889, 6291456, 2181921, 6291456, 2181953, 6291456, 2181985, 6291456, 2182017, 6291456, 2182049, 6291456]), new Uint32Array([2162337, 2097633, 2097633, 2097633, 2097633, 2132705, 2132705, 2132705, 2132705, 2097153, 2097153, 2097153, 2097153, 2133089, 2133089, 2133089]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 2148545, 6291456, 2173473, 6291456, 2148865, 6291456, 2173505, 6291456, 2173537, 6291456, 2173569, 6291456, 2149121, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2174017, 2174017, 2174049, 2174081, 2174113]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2207137, 2207169, 2207201, 2207233, 2207265, 2207297, 2207329, 2207361, 2207393, 2207425, 2207457, 2207489, 2207521, 2207553, 2207585, 2207617]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 0]), new Uint32Array([2198401, 2198433, 2198465, 2198497, 0, 2198529, 2198561, 2198593, 2198625, 2198657, 2198689, 2198721, 2198753, 2198785, 2198817, 2198849]), new Uint32Array([2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 0, 0]), new Uint32Array([2216385, 2118721, 2216417, 2216449, 2216481, 2216513, 2216545, 2211233, 2216577, 2216609, 2216641, 2216673, 2216705, 2216737, 2216737, 2216769]), new Uint32Array([2216801, 2216833, 2216865, 2216897, 2216929, 2216961, 2216993, 2215169, 2217025, 2217057, 2217089, 2217121, 2217154, 2217217, 0, 0]), new Uint32Array([2210593, 2191809, 2210625, 2210657, 2210689, 2210721, 2210753, 2210785, 2210817, 2210849, 2191297, 2210881, 2210913, 2210945, 2210977, 2211009]), new Uint32Array([0, 0, 2105825, 0, 0, 2111905, 2105473, 0, 0, 2112289, 2108193, 2112481, 2112577, 0, 2098305, 2108321]), new Uint32Array([0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 2097153, 2134241, 0, 2132705, 0, 0, 2131297, 0, 2133089, 0, 2133857, 0, 2220769, 0, 2235361]), new Uint32Array([14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 6291456, 6291456, 14680064]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2171873, 6291456, 2171905, 6291456, 2171937, 6291456, 2171969, 6291456, 2172001, 6291456, 2172033, 6291456, 2172065, 6291456, 2172097, 6291456]), new Uint32Array([2220929, 2220929, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2133857, 2134145, 2134145, 2134145, 2134145, 2134241, 2134241, 2134241, 2134241, 2105889, 2105889, 2105889, 2105889, 2097185, 2097185, 2097185]), new Uint32Array([2173697, 2173761, 2173793, 2174113, 2173985, 2173953, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10499619, 10499715, 10499811, 10499907]), new Uint32Array([0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 0, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 2144322, 2144386, 2144450, 2144514, 2144578, 2144642, 2144706, 2144770]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 0, 2098241, 2108353, 2108417, 2105825, 0, 0, 2111905, 2105473, 2105569]), new Uint32Array([2236321, 2236353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2152194, 2121283, 2103684, 2103812, 2097986, 2098533, 2097990, 2098693, 2098595, 2098853, 2099013, 2103940, 2121379, 2121475, 2121571, 2104068]), new Uint32Array([2206241, 2206273, 2206305, 2206337, 2206369, 2206401, 2206433, 2206465, 2206497, 2206529, 2206561, 2206593, 2206625, 2206657, 2206689, 2206721]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 16777216, 16777216, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 23068672, 10538818, 10538882, 6291456, 6291456, 2150338]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2214369, 2214401, 2214433, 2214465, 2214497, 2214529, 2214561, 2214593, 2194977, 2214625, 2195073, 2214657, 2214689, 2214721, 6291456, 6291456]), new Uint32Array([2097152, 2097152, 2097152, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2182081, 6291456, 2182113, 6291456, 2182145, 6291456, 2182177, 6291456, 2182209, 6291456, 2182241, 6291456, 2182273, 6291456, 2182305, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2146881, 2146945, 2147009, 2147073, 2147137, 2147201, 2147265, 2147329]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 23068672, 23068672]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2122915, 2123011, 2123107, 2104708, 2123203, 2123299, 2123395, 2100133, 2104836, 2100290, 2100293, 2104962, 2104964, 2098052, 2123491, 2123587]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([6291456, 2171169, 6291456, 2171201, 6291456, 2171233, 6291456, 2171265, 6291456, 2171297, 6291456, 2171329, 6291456, 6291456, 2171361, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 2148994, 2149058, 2149122, 0, 6291456, 2149186, 2186945, 2173537, 2148993, 2149121, 2149058, 10531458, 10496066, 0]), new Uint32Array([2195009, 2195041, 2195073, 2195105, 2195137, 2195169, 2195201, 2195233, 2195265, 2195297, 2195329, 2195361, 2195393, 2195425, 2195457, 2195489]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 0, 0, 6291456, 6291456]), new Uint32Array([2182849, 6291456, 2182881, 6291456, 2182913, 6291456, 2182945, 6291456, 2182977, 6291456, 2183009, 6291456, 2183041, 6291456, 2183073, 6291456]), new Uint32Array([2211553, 2210081, 2211585, 2211617, 2211649, 2211681, 2211713, 2211745, 2211777, 2211809, 2209569, 2211841, 2211873, 2211905, 2211937, 2211969]), new Uint32Array([2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2166594, 2127298, 2166658, 2142978, 2141827, 2166722]), new Uint32Array([2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233057, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2185761, 2185793, 2185825, 2185857, 2185889, 2185921, 0, 0]), new Uint32Array([6291456, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([0, 0, 0, 2220961, 2220961, 2220961, 2220961, 2144193, 2144193, 2159201, 2159201, 2159265, 2159265, 2144194, 2220993, 2220993]), new Uint32Array([2192641, 2235393, 2235425, 2152257, 2116609, 2235457, 2235489, 2200065, 2235521, 2235553, 2235585, 2212449, 2235617, 2235649, 2235681, 2235713]), new Uint32Array([2194049, 2194081, 2194113, 2194145, 2194177, 2194209, 2194241, 2194273, 2194305, 2194337, 2194369, 2194401, 2194433, 2194465, 2194497, 2194529]), new Uint32Array([2196673, 2208641, 2208673, 2208705, 2208737, 2208769, 2208801, 2208833, 2208865, 2208897, 2208929, 2208961, 2208993, 2209025, 2209057, 2209089]), new Uint32Array([2191681, 2191713, 2191745, 2191777, 2153281, 2191809, 2191841, 2191873, 2191905, 2191937, 2191969, 2192001, 2192033, 2192065, 2192097, 2192129]), new Uint32Array([2230946, 2231010, 2231074, 2231138, 2231202, 2231266, 2231330, 2231394, 2231458, 2231522, 2231586, 2231650, 2231714, 2231778, 2231842, 2231906]), new Uint32Array([14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2185953, 2185985, 2186017, 2186049, 2186081, 2186113, 2186145, 2186177]), new Uint32Array([2139811, 2139907, 2097284, 2105860, 2105988, 2106116, 2106244, 2097444, 2097604, 2097155, 10485778, 10486344, 2106372, 6291456, 0, 0]), new Uint32Array([2110051, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2172385, 6291456, 2172417, 6291456, 2172449, 6291456, 2172481, 6291456, 2172513, 6291456, 2172545, 6291456, 2172577, 6291456, 2172609, 6291456]), new Uint32Array([0, 0, 23068672, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2249345, 2249377, 2249409, 2249441, 2249473, 2249505, 2249537, 2249570, 2210209, 2249633, 2249665, 2249697, 2249729, 2249761, 2249793, 2216769]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2187169, 2187201, 2187233, 2187265, 2187297, 2187329, 2187361, 2187393, 2187425, 2187457, 2187489, 2187521, 2187553, 2187585, 2187617, 2187649]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456]), new Uint32Array([2182337, 6291456, 2182369, 6291456, 2182401, 6291456, 2182433, 6291456, 2182465, 6291456, 2182497, 6291456, 2182529, 6291456, 2182561, 6291456]), new Uint32Array([2138179, 2138275, 2138371, 2138467, 2134243, 2134435, 2138563, 2138659, 2138755, 2138851, 2138947, 2139043, 2138947, 2138755, 2139139, 2139235]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 0, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2250498, 2250562, 2250625, 2250657, 2208321, 2250689, 2250721, 2250753, 2250785, 2250817, 2250849, 2218945, 2250881, 2250913, 2250945, 0]), new Uint32Array([2170369, 2105569, 2098305, 2108481, 2173249, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456]), new Uint32Array([2100897, 2111905, 2105473, 2105569, 2105601, 0, 2108193, 0, 0, 0, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481]), new Uint32Array([2100897, 2100897, 2105569, 2105569, 6291456, 2112289, 2149826, 6291456, 6291456, 2112481, 2112577, 2098177, 2098177, 2098177, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 2169953, 2169985, 6291456, 2170017, 6291456, 2170049, 2170081, 6291456, 2170113, 2170145, 2170177, 6291456, 6291456, 2170209, 2170241]), new Uint32Array([6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2220641, 2220641, 2220673, 2220673, 2220673, 2220673, 2220705, 2220705, 2220705, 2220705, 2220737, 2220737, 2220737, 2220737, 2220769, 2220769]), new Uint32Array([2127650, 2127746, 2127842, 2127938, 2128034, 2128130, 2128226, 2128322, 2128418, 2127523, 2127619, 2127715, 2127811, 2127907, 2128003, 2128099]), new Uint32Array([2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177]), new Uint32Array([0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2204705, 2204737, 2204769, 2204801, 2204833, 2204865, 2204897, 2204929, 2204961, 2204993, 2205025, 2205057, 2205089, 2205121, 2205153, 2205185]), new Uint32Array([2176385, 6291456, 2176417, 6291456, 2176449, 6291456, 2176481, 6291456, 2176513, 6291456, 2176545, 6291456, 2176577, 6291456, 2176609, 6291456]), new Uint32Array([2195521, 2195553, 2195585, 2195617, 2195649, 2195681, 2117857, 2195713, 2195745, 2195777, 2195809, 2195841, 2195873, 2195905, 2195937, 2195969]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456]), new Uint32Array([2173921, 2173953, 2173985, 2174017, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113]), new Uint32Array([2131586, 2132450, 2135970, 2135778, 2161602, 2136162, 2163650, 2161794, 2135586, 2163714, 2137186, 2131810, 2160290, 2135170, 2097506, 2159554]), new Uint32Array([2134145, 2097153, 2134241, 2105953, 2132705, 2130977, 2160065, 2131297, 2162049, 2133089, 2160577, 2133857, 0, 0, 0, 0]), new Uint32Array([2116513, 2116609, 2116705, 2116801, 2116897, 2116993, 2117089, 2117185, 2117281, 2117377, 2117473, 2117569, 2117665, 2117761, 2117857, 2117953]), new Uint32Array([2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100802, 2101154, 2101282, 2101410, 2101538, 2101666, 2101794]), new Uint32Array([2100289, 2098657, 2098049, 2200737, 2123489, 2123681, 2200769, 2098625, 2100321, 2098145, 2100449, 2098017, 2098753, 2098977, 2150241, 2150305]), new Uint32Array([6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 2109955, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 0, 0]), new Uint32Array([2130979, 2131075, 2131075, 2131171, 2131267, 2131363, 2131459, 2131555, 2131651, 2131651, 2131747, 2131843, 2131939, 2132035, 2132131, 2132227]), new Uint32Array([0, 2177793, 6291456, 2177825, 6291456, 2177857, 6291456, 2177889, 6291456, 2177921, 6291456, 2177953, 6291456, 2177985, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2113345, 0, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289]), new Uint32Array([2136643, 2136739, 2136835, 2136931, 2137027, 2137123, 2137219, 2137315, 2137411, 2137507, 2137603, 2137699, 2137795, 2137891, 2137987, 2138083]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([2174433, 6291456, 2174465, 6291456, 2174497, 6291456, 2174529, 6291456, 2174561, 6291456, 2174593, 6291456, 2174625, 6291456, 2174657, 6291456]), new Uint32Array([0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441]), new Uint32Array([10496547, 10496643, 2105505, 2149698, 6291456, 10496739, 10496835, 2170273, 6291456, 2149762, 2105825, 2111713, 2111713, 2111713, 2111713, 2168673]), new Uint32Array([6291456, 2143490, 2143490, 2143490, 2171649, 6291456, 2171681, 2171713, 2171745, 6291456, 2171777, 6291456, 2171809, 6291456, 2171841, 6291456]), new Uint32Array([2159106, 2159106, 2159170, 2159170, 2159234, 2159234, 2159298, 2159298, 2159298, 2159362, 2159362, 2159362, 2106401, 2106401, 2106401, 2106401]), new Uint32Array([2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137]), new Uint32Array([2108417, 2181217, 2181249, 2181281, 2170433, 2170401, 2181313, 2181345, 2181377, 2181409, 2181441, 2181473, 2181505, 2181537, 2170529, 2181569]), new Uint32Array([2218433, 2245761, 2245793, 2245825, 2245857, 2245890, 2245953, 2245986, 2209665, 2246050, 2246113, 2246146, 2246210, 2246274, 2246337, 2246369]), new Uint32Array([2230754, 2230818, 2230882, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2184129, 6291456, 2184161, 6291456, 2184193, 6291456, 6291456, 6291456, 6291456, 6291456, 2146818, 2183361, 6291456, 6291456, 2142978, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2135170, 2097506, 2130691, 2130787, 2130883, 2163970, 2164034, 2164098, 2164162, 2164226, 2164290, 2164354, 2164418, 2164482, 2164546, 2133122]), new Uint32Array([2108515, 2108611, 2100740, 2108707, 2108803, 2108899, 2108995, 2109091, 2109187, 2109283, 2109379, 2109475, 2109571, 2109667, 2109763, 2100738]), new Uint32Array([2102788, 2102916, 2103044, 2120515, 2103172, 2120611, 2120707, 2098373, 2103300, 2120803, 2120899, 2120995, 2103428, 2103556, 2121091, 2121187]), new Uint32Array([2158082, 2158146, 0, 2158210, 2158274, 0, 2158338, 2158402, 2158466, 2129922, 2158530, 2158594, 2158658, 2158722, 2158786, 2158850]), new Uint32Array([10499619, 10499715, 10499811, 10499907, 10500003, 10500099, 10500195, 10500291, 10500387, 10500483, 10500579, 10500675, 10500771, 10500867, 10500963, 10501059]), new Uint32Array([2239585, 2239618, 2239681, 2239713, 0, 2191969, 2239745, 2239777, 2192033, 2239809, 2239841, 2239874, 2239937, 2239970, 2240033, 2240065]), new Uint32Array([2252705, 2252738, 2252801, 2252833, 2252865, 2252897, 2252930, 2252994, 2253057, 2253089, 2253121, 2253154, 2253217, 2253250, 2219361, 2219361]), new Uint32Array([2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10538050, 10538114, 10538178, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2226402, 2226466, 2226530, 2226594, 2226658, 2226722, 2226786, 2226850, 2226914, 2226978, 2227042, 2227106, 2227170, 2227234, 2227298, 2227362]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 2144066, 2144130, 2144194, 2144258, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2124674, 2124770, 2123875, 2123971, 2124067, 2124163, 2124259, 2124355, 2124451, 2124547, 2124643, 2124739, 2124835, 2124931, 2125027, 2125123]), new Uint32Array([2168065, 6291456, 2168097, 6291456, 2168129, 6291456, 2168161, 6291456, 2168193, 6291456, 2168225, 6291456, 2168257, 6291456, 2168289, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 2100610, 2100611, 6291456, 2107842, 2107843, 6291456, 6291456, 6291456, 6291456, 10537922, 6291456, 10537986, 6291456]), new Uint32Array([2174849, 2174881, 2174913, 2174945, 2174977, 2175009, 2175041, 2175073, 2175105, 2175137, 2175169, 2175201, 2175233, 2175265, 2175297, 2175329]), new Uint32Array([2154562, 2154626, 2154690, 2154754, 2141858, 2154818, 2154882, 2127298, 2154946, 2127298, 2155010, 2155074, 2155138, 2155202, 2155266, 2155202]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 0]), new Uint32Array([2200641, 2150786, 2150850, 2150914, 2150978, 2151042, 2106562, 2151106, 2150562, 2151170, 2151234, 2151298, 2151362, 2151426, 2151490, 2151554]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456]), new Uint32Array([2220289, 2220289, 2220321, 2220321, 2220321, 2220321, 2220353, 2220353, 2220353, 2220353, 2220385, 2220385, 2220385, 2220385, 2220417, 2220417]), new Uint32Array([2155330, 2155394, 0, 2155458, 2155522, 2155586, 2105732, 0, 2155650, 2155714, 2155778, 2125314, 2155842, 2155906, 2126274, 2155970]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0]), new Uint32Array([2097729, 2106017, 2106017, 2106017, 2106017, 2131297, 2131297, 2131297, 2131297, 2106081, 2106081, 2162049, 2162049, 2105953, 2105953, 2162337]), new Uint32Array([2097185, 2097697, 2097697, 2097697, 2097697, 2135777, 2135777, 2135777, 2135777, 2097377, 2097377, 2097377, 2097377, 2097601, 2097601, 2097217]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23068672]), new Uint32Array([2139331, 2139427, 2139523, 2139043, 2133571, 2132611, 2139619, 2139715, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2174113, 2174145, 2100897, 2098177, 2108289, 2100865, 2173601, 2173633, 2173985, 2174113, 2174145, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 18923778, 23068672, 23068672, 23068672, 23068672, 18923842, 23068672, 23068672, 23068672, 23068672, 18923906, 23068672, 23068672, 23068672]), new Uint32Array([2134145, 2097153, 2134241, 0, 2132705, 2130977, 2160065, 2131297, 0, 2133089, 0, 2133857, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2177537, 6291456, 2177569, 6291456, 2177601, 6291456, 2177633, 6291456, 2177665, 6291456, 2177697, 6291456, 2177729, 6291456, 2177761, 6291456]), new Uint32Array([2212481, 2212513, 2212545, 2212577, 2197121, 2212609, 2212641, 2212673, 2212705, 2212737, 2212769, 2212801, 2212833, 2212865, 2212897, 2212929]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2098241, 2108353, 2170209, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 6291456, 2108193, 2172417, 2112481, 2098177]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456])], t2 = new Uint16Array([616, 616, 565, 147, 161, 411, 330, 2, 131, 131, 328, 454, 241, 408, 86, 86, 696, 113, 285, 350, 325, 301, 473, 214, 639, 232, 447, 64, 369, 598, 124, 672, 567, 223, 621, 154, 107, 86, 86, 86, 86, 86, 86, 505, 86, 68, 634, 86, 218, 218, 218, 218, 486, 218, 218, 513, 188, 608, 216, 86, 217, 463, 668, 85, 700, 360, 184, 86, 86, 86, 647, 402, 153, 10, 346, 718, 662, 260, 145, 298, 117, 1, 443, 342, 138, 54, 563, 86, 240, 572, 218, 70, 387, 86, 118, 460, 641, 602, 86, 86, 306, 218, 86, 692, 86, 86, 86, 86, 86, 162, 707, 86, 458, 26, 86, 218, 638, 86, 86, 86, 86, 86, 65, 449, 86, 86, 306, 183, 86, 58, 391, 667, 86, 157, 131, 131, 131, 131, 86, 433, 131, 406, 31, 218, 247, 86, 86, 693, 218, 581, 351, 86, 438, 295, 69, 462, 45, 126, 173, 650, 14, 295, 69, 97, 168, 187, 641, 78, 523, 390, 69, 108, 287, 664, 173, 219, 83, 295, 69, 108, 431, 426, 173, 694, 412, 115, 628, 52, 257, 398, 641, 118, 501, 121, 69, 579, 151, 423, 173, 620, 464, 121, 69, 382, 151, 476, 173, 27, 53, 121, 86, 594, 578, 226, 173, 86, 632, 130, 86, 96, 228, 268, 641, 622, 563, 86, 86, 21, 148, 650, 131, 131, 321, 43, 144, 343, 381, 531, 131, 131, 178, 20, 86, 399, 156, 375, 164, 541, 30, 60, 715, 198, 92, 118, 131, 131, 86, 86, 306, 407, 86, 280, 457, 196, 488, 358, 131, 131, 244, 86, 86, 143, 86, 86, 86, 86, 86, 667, 563, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 336, 363, 86, 86, 336, 86, 86, 380, 678, 67, 86, 86, 86, 678, 86, 86, 86, 512, 86, 307, 86, 708, 86, 86, 86, 86, 86, 528, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 563, 307, 86, 86, 86, 86, 86, 104, 450, 337, 86, 720, 86, 32, 450, 397, 86, 86, 86, 587, 218, 558, 708, 708, 293, 708, 86, 86, 86, 86, 86, 694, 205, 86, 8, 86, 86, 86, 86, 549, 86, 667, 697, 697, 679, 86, 458, 460, 86, 86, 650, 86, 708, 543, 86, 86, 86, 245, 86, 86, 86, 140, 218, 127, 708, 708, 458, 197, 131, 131, 131, 131, 500, 86, 86, 483, 251, 86, 306, 510, 515, 86, 722, 86, 86, 86, 65, 201, 86, 86, 483, 580, 470, 86, 86, 86, 368, 131, 131, 131, 694, 114, 110, 555, 86, 86, 123, 721, 163, 142, 713, 418, 86, 317, 675, 209, 218, 218, 218, 371, 545, 592, 629, 490, 603, 199, 46, 320, 525, 680, 310, 279, 388, 111, 42, 252, 593, 607, 235, 617, 410, 377, 50, 548, 135, 356, 17, 520, 189, 116, 392, 600, 349, 332, 482, 699, 690, 535, 119, 106, 451, 71, 152, 667, 131, 218, 218, 265, 671, 637, 492, 504, 533, 683, 269, 269, 658, 86, 86, 86, 86, 86, 86, 86, 86, 86, 491, 619, 86, 86, 6, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 229, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 667, 86, 86, 171, 131, 118, 131, 656, 206, 234, 571, 89, 334, 670, 246, 311, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 534, 86, 86, 86, 86, 86, 86, 82, 86, 86, 86, 86, 86, 430, 86, 86, 86, 86, 86, 86, 86, 86, 86, 599, 86, 324, 86, 470, 69, 640, 264, 131, 626, 101, 174, 86, 86, 667, 233, 105, 73, 374, 394, 221, 204, 84, 28, 326, 86, 86, 471, 86, 86, 86, 109, 573, 86, 171, 200, 200, 200, 200, 218, 218, 86, 86, 86, 86, 460, 131, 131, 131, 86, 506, 86, 86, 86, 86, 86, 220, 404, 34, 614, 47, 442, 305, 25, 612, 338, 601, 648, 7, 344, 255, 131, 131, 51, 86, 312, 507, 563, 86, 86, 86, 86, 588, 86, 86, 86, 86, 86, 530, 511, 86, 458, 3, 435, 384, 556, 522, 230, 527, 86, 118, 86, 86, 717, 86, 137, 273, 79, 181, 484, 23, 93, 112, 655, 249, 417, 703, 370, 87, 98, 313, 684, 585, 155, 465, 596, 481, 695, 18, 416, 428, 61, 701, 706, 282, 643, 495, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 549, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 549, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 307, 86, 86, 86, 171, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 650, 131, 422, 542, 420, 263, 24, 172, 86, 86, 86, 86, 86, 566, 86, 86, 132, 540, 395, 353, 494, 519, 19, 485, 284, 472, 131, 131, 131, 16, 714, 86, 211, 708, 86, 86, 86, 694, 698, 86, 86, 483, 704, 708, 218, 272, 86, 86, 120, 86, 159, 478, 86, 307, 247, 86, 86, 663, 597, 459, 627, 667, 86, 86, 277, 455, 39, 302, 86, 250, 86, 86, 86, 271, 99, 452, 306, 281, 329, 400, 200, 86, 86, 362, 549, 352, 646, 461, 323, 586, 86, 86, 4, 708, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 717, 86, 518, 86, 86, 650, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 125, 554, 480, 300, 613, 72, 333, 288, 561, 544, 604, 48, 719, 91, 169, 176, 590, 224, 76, 191, 29, 559, 560, 231, 537, 166, 477, 538, 256, 437, 131, 131, 469, 167, 40, 0, 685, 266, 441, 705, 239, 642, 475, 568, 640, 610, 299, 673, 517, 318, 385, 22, 202, 180, 179, 359, 424, 215, 90, 66, 521, 653, 467, 682, 453, 409, 479, 88, 131, 661, 35, 303, 15, 262, 666, 630, 712, 131, 131, 618, 659, 175, 218, 195, 347, 193, 227, 261, 150, 165, 709, 546, 294, 569, 710, 270, 413, 376, 524, 55, 242, 38, 419, 529, 170, 657, 3, 304, 122, 379, 278, 131, 651, 86, 67, 576, 458, 458, 131, 131, 86, 86, 86, 86, 86, 86, 86, 118, 309, 86, 86, 547, 86, 86, 86, 86, 667, 650, 664, 131, 131, 86, 86, 56, 131, 131, 131, 131, 131, 131, 131, 131, 86, 307, 86, 86, 86, 664, 238, 650, 86, 86, 717, 86, 118, 86, 86, 315, 86, 59, 86, 86, 574, 549, 131, 131, 340, 57, 436, 86, 86, 86, 86, 86, 86, 458, 708, 499, 691, 62, 86, 650, 86, 86, 694, 86, 86, 86, 319, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 171, 86, 549, 694, 131, 131, 131, 131, 131, 131, 131, 131, 131, 77, 86, 86, 139, 86, 502, 86, 86, 86, 667, 595, 131, 131, 131, 86, 12, 86, 13, 86, 609, 131, 131, 131, 131, 86, 86, 86, 625, 86, 669, 86, 86, 182, 129, 86, 5, 694, 104, 86, 86, 86, 86, 131, 131, 86, 86, 386, 171, 86, 86, 86, 345, 86, 324, 86, 589, 86, 213, 36, 131, 131, 131, 131, 131, 86, 86, 86, 86, 104, 131, 131, 131, 141, 290, 80, 677, 86, 86, 86, 267, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 667, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 515, 86, 86, 33, 136, 669, 86, 711, 515, 86, 86, 550, 640, 86, 104, 708, 515, 86, 159, 372, 717, 86, 86, 444, 515, 86, 86, 663, 37, 86, 563, 460, 86, 390, 624, 702, 131, 131, 131, 131, 389, 59, 708, 86, 86, 341, 208, 708, 635, 295, 69, 108, 431, 508, 100, 190, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 649, 516, 660, 131, 131, 86, 86, 86, 218, 631, 708, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 341, 575, 238, 514, 131, 131, 86, 86, 86, 218, 291, 708, 307, 131, 86, 86, 306, 367, 708, 131, 131, 131, 86, 378, 697, 86, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 615, 253, 86, 86, 86, 292, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 104, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 69, 86, 341, 553, 549, 86, 307, 86, 86, 645, 275, 455, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 708, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 667, 460, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 717, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 667, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 171, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 104, 86, 667, 459, 131, 131, 131, 131, 131, 131, 86, 458, 225, 86, 86, 86, 516, 549, 11, 390, 405, 86, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 460, 44, 218, 197, 711, 515, 131, 131, 131, 131, 664, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 307, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 308, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 640, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 118, 307, 104, 286, 591, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 549, 86, 86, 681, 86, 86, 75, 185, 314, 582, 86, 358, 496, 474, 86, 104, 131, 86, 86, 86, 86, 146, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 171, 86, 640, 131, 131, 131, 131, 131, 131, 131, 131, 246, 503, 689, 339, 674, 81, 258, 415, 439, 128, 562, 366, 414, 246, 503, 689, 583, 222, 557, 316, 636, 665, 186, 355, 95, 670, 246, 503, 689, 339, 674, 557, 258, 415, 439, 186, 355, 95, 670, 246, 503, 689, 446, 644, 536, 652, 331, 532, 335, 440, 274, 421, 297, 570, 74, 425, 364, 425, 606, 552, 403, 509, 134, 365, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 218, 218, 218, 498, 218, 218, 577, 627, 551, 497, 572, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 553, 354, 236, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 296, 455, 131, 131, 456, 243, 103, 86, 41, 459, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 9, 276, 158, 716, 393, 564, 383, 489, 401, 654, 210, 654, 131, 131, 131, 640, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 650, 86, 86, 86, 86, 86, 86, 717, 667, 563, 563, 563, 86, 549, 102, 686, 133, 246, 605, 86, 448, 86, 86, 207, 307, 131, 131, 131, 641, 86, 177, 611, 445, 373, 194, 584, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 308, 307, 171, 86, 86, 86, 86, 86, 86, 86, 717, 86, 86, 86, 86, 86, 460, 131, 131, 650, 86, 86, 86, 694, 708, 86, 86, 694, 86, 458, 131, 131, 131, 131, 131, 131, 667, 694, 289, 650, 667, 131, 131, 86, 640, 131, 131, 664, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 171, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 460, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 458, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 640, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 466, 203, 149, 429, 94, 432, 160, 687, 539, 63, 237, 283, 192, 248, 348, 259, 427, 526, 396, 676, 254, 468, 487, 212, 327, 623, 49, 633, 322, 493, 434, 688, 357, 361, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131]), { mapStr: "\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064A\u0647 \u0648\u0633\u0644\u0645\u062C\u0644 \u062C\u0644\u0627\u0644\u0647\u30AD\u30ED\u30E1\u30FC\u30C8\u30EBrad\u2215s2\u30A8\u30B9\u30AF\u30FC\u30C9\u30AD\u30ED\u30B0\u30E9\u30E0\u30AD\u30ED\u30EF\u30C3\u30C8\u30B0\u30E9\u30E0\u30C8\u30F3\u30AF\u30EB\u30BC\u30A4\u30ED\u30B5\u30F3\u30C1\u30FC\u30E0\u30D1\u30FC\u30BB\u30F3\u30C8\u30D4\u30A2\u30B9\u30C8\u30EB\u30D5\u30A1\u30E9\u30C3\u30C9\u30D6\u30C3\u30B7\u30A7\u30EB\u30D8\u30AF\u30BF\u30FC\u30EB\u30DE\u30F3\u30B7\u30E7\u30F3\u30DF\u30EA\u30D0\u30FC\u30EB\u30EC\u30F3\u30C8\u30B2\u30F3\u2032\u2032\u2032\u20321\u204410viii(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)\u222B\u222B\u222B\u222B(\uC624\uC804)(\uC624\uD6C4)\u30A2\u30D1\u30FC\u30C8\u30A2\u30EB\u30D5\u30A1\u30A2\u30F3\u30DA\u30A2\u30A4\u30CB\u30F3\u30B0\u30A8\u30FC\u30AB\u30FC\u30AB\u30E9\u30C3\u30C8\u30AB\u30ED\u30EA\u30FC\u30AD\u30E5\u30EA\u30FC\u30AE\u30EB\u30C0\u30FC\u30AF\u30ED\u30FC\u30CD\u30B5\u30A4\u30AF\u30EB\u30B7\u30EA\u30F3\u30B0\u30D0\u30FC\u30EC\u30EB\u30D5\u30A3\u30FC\u30C8\u30DD\u30A4\u30F3\u30C8\u30DE\u30A4\u30AF\u30ED\u30DF\u30AF\u30ED\u30F3\u30E1\u30AC\u30C8\u30F3\u30EA\u30C3\u30C8\u30EB\u30EB\u30FC\u30D6\u30EB\u682A\u5F0F\u4F1A\u793Ekcalm\u2215s2c\u2215kg\u0627\u0643\u0628\u0631\u0645\u062D\u0645\u062F\u0635\u0644\u0639\u0645\u0631\u0633\u0648\u0644\u0631\u06CC\u0627\u06441\u204441\u204423\u20444 \u0308\u0301\u0FB2\u0F71\u0F80\u0FB3\u0F71\u0F80 \u0308\u0342 \u0313\u0300 \u0313\u0301 \u0313\u0342 \u0314\u0300 \u0314\u0301 \u0314\u0342 \u0308\u0300\u2035\u2035\u2035a/ca/sc/oc/utelfax1\u204471\u204491\u204432\u204431\u204452\u204453\u204454\u204451\u204465\u204461\u204483\u204485\u204487\u20448xii0\u20443\u222E\u222E\u222E(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)::====(\u1100)(\u1102)(\u1103)(\u1105)(\u1106)(\u1107)(\u1109)(\u110B)(\u110C)(\u110E)(\u110F)(\u1110)(\u1111)(\u1112)(\uAC00)(\uB098)(\uB2E4)(\uB77C)(\uB9C8)(\uBC14)(\uC0AC)(\uC544)(\uC790)(\uCC28)(\uCE74)(\uD0C0)(\uD30C)(\uD558)(\uC8FC)(\u4E00)(\u4E8C)(\u4E09)(\u56DB)(\u4E94)(\u516D)(\u4E03)(\u516B)(\u4E5D)(\u5341)(\u6708)(\u706B)(\u6C34)(\u6728)(\u91D1)(\u571F)(\u65E5)(\u682A)(\u6709)(\u793E)(\u540D)(\u7279)(\u8CA1)(\u795D)(\u52B4)(\u4EE3)(\u547C)(\u5B66)(\u76E3)(\u4F01)(\u8CC7)(\u5354)(\u796D)(\u4F11)(\u81EA)(\u81F3)pte10\u670811\u670812\u6708ergltd\u30A2\u30FC\u30EB\u30A4\u30F3\u30C1\u30A6\u30A9\u30F3\u30AA\u30F3\u30B9\u30AA\u30FC\u30E0\u30AB\u30A4\u30EA\u30AC\u30ED\u30F3\u30AC\u30F3\u30DE\u30AE\u30CB\u30FC\u30B1\u30FC\u30B9\u30B3\u30EB\u30CA\u30B3\u30FC\u30DD\u30BB\u30F3\u30C1\u30C0\u30FC\u30B9\u30CE\u30C3\u30C8\u30CF\u30A4\u30C4\u30D1\u30FC\u30C4\u30D4\u30AF\u30EB\u30D5\u30E9\u30F3\u30DA\u30CB\u30D2\u30D8\u30EB\u30C4\u30DA\u30F3\u30B9\u30DA\u30FC\u30B8\u30D9\u30FC\u30BF\u30DC\u30EB\u30C8\u30DD\u30F3\u30C9\u30DB\u30FC\u30EB\u30DB\u30FC\u30F3\u30DE\u30A4\u30EB\u30DE\u30C3\u30CF\u30DE\u30EB\u30AF\u30E4\u30FC\u30C9\u30E4\u30FC\u30EB\u30E6\u30A2\u30F3\u30EB\u30D4\u30FC10\u70B911\u70B912\u70B913\u70B914\u70B915\u70B916\u70B917\u70B918\u70B919\u70B920\u70B921\u70B922\u70B923\u70B924\u70B9hpabardm2dm3khzmhzghzthzmm2cm2km2mm3cm3km3kpampagpalogmilmolppmv\u2215ma\u2215m10\u65E511\u65E512\u65E513\u65E514\u65E515\u65E516\u65E517\u65E518\u65E519\u65E520\u65E521\u65E522\u65E523\u65E524\u65E525\u65E526\u65E527\u65E528\u65E529\u65E530\u65E531\u65E5galffiffl\u05E9\u05BC\u05C1\u05E9\u05BC\u05C2 \u064C\u0651 \u064D\u0651 \u064E\u0651 \u064F\u0651 \u0650\u0651 \u0651\u0670\u0640\u064E\u0651\u0640\u064F\u0651\u0640\u0650\u0651\u062A\u062C\u0645\u062A\u062D\u062C\u062A\u062D\u0645\u062A\u062E\u0645\u062A\u0645\u062C\u062A\u0645\u062D\u062A\u0645\u062E\u062C\u0645\u062D\u062D\u0645\u064A\u062D\u0645\u0649\u0633\u062D\u062C\u0633\u062C\u062D\u0633\u062C\u0649\u0633\u0645\u062D\u0633\u0645\u062C\u0633\u0645\u0645\u0635\u062D\u062D\u0635\u0645\u0645\u0634\u062D\u0645\u0634\u062C\u064A\u0634\u0645\u062E\u0634\u0645\u0645\u0636\u062D\u0649\u0636\u062E\u0645\u0637\u0645\u062D\u0637\u0645\u0645\u0637\u0645\u064A\u0639\u062C\u0645\u0639\u0645\u0645\u0639\u0645\u0649\u063A\u0645\u0645\u063A\u0645\u064A\u063A\u0645\u0649\u0641\u062E\u0645\u0642\u0645\u062D\u0642\u0645\u0645\u0644\u062D\u0645\u0644\u062D\u064A\u0644\u062D\u0649\u0644\u062C\u062C\u0644\u062E\u0645\u0644\u0645\u062D\u0645\u062D\u062C\u0645\u062D\u064A\u0645\u062C\u062D\u0645\u062C\u0645\u0645\u062E\u0645\u0645\u062C\u062E\u0647\u0645\u062C\u0647\u0645\u0645\u0646\u062D\u0645\u0646\u062D\u0649\u0646\u062C\u0645\u0646\u062C\u0649\u0646\u0645\u064A\u0646\u0645\u0649\u064A\u0645\u0645\u0628\u062E\u064A\u062A\u062C\u064A\u062A\u062C\u0649\u062A\u062E\u064A\u062A\u062E\u0649\u062A\u0645\u064A\u062A\u0645\u0649\u062C\u0645\u064A\u062C\u062D\u0649\u062C\u0645\u0649\u0633\u062E\u0649\u0635\u062D\u064A\u0634\u062D\u064A\u0636\u062D\u064A\u0644\u062C\u064A\u0644\u0645\u064A\u064A\u062D\u064A\u064A\u062C\u064A\u064A\u0645\u064A\u0645\u0645\u064A\u0642\u0645\u064A\u0646\u062D\u064A\u0639\u0645\u064A\u0643\u0645\u064A\u0646\u062C\u062D\u0645\u062E\u064A\u0644\u062C\u0645\u0643\u0645\u0645\u062C\u062D\u064A\u062D\u062C\u064A\u0645\u062C\u064A\u0641\u0645\u064A\u0628\u062D\u064A\u0633\u062E\u064A\u0646\u062C\u064A\u0635\u0644\u06D2\u0642\u0644\u06D2\u{1D158}\u{1D165}\u{1D16E}\u{1D158}\u{1D165}\u{1D16F}\u{1D158}\u{1D165}\u{1D170}\u{1D158}\u{1D165}\u{1D171}\u{1D158}\u{1D165}\u{1D172}\u{1D1B9}\u{1D165}\u{1D16E}\u{1D1BA}\u{1D165}\u{1D16E}\u{1D1B9}\u{1D165}\u{1D16F}\u{1D1BA}\u{1D165}\u{1D16F}\u3014s\u3015ppv\u3014\u672C\u3015\u3014\u4E09\u3015\u3014\u4E8C\u3015\u3014\u5B89\u3015\u3014\u70B9\u3015\u3014\u6253\u3015\u3014\u76D7\u3015\u3014\u52DD\u3015\u3014\u6557\u3015 \u0304 \u0301 \u0327ssi\u0307ijl\xB7\u02BCnd\u017Eljnjdz \u0306 \u0307 \u030A \u0328 \u0303 \u030B \u03B9\u0565\u0582\u0627\u0674\u0648\u0674\u06C7\u0674\u064A\u0674\u0915\u093C\u0916\u093C\u0917\u093C\u091C\u093C\u0921\u093C\u0922\u093C\u092B\u093C\u092F\u093C\u09A1\u09BC\u09A2\u09BC\u09AF\u09BC\u0A32\u0A3C\u0A38\u0A3C\u0A16\u0A3C\u0A17\u0A3C\u0A1C\u0A3C\u0A2B\u0A3C\u0B21\u0B3C\u0B22\u0B3C\u0E4D\u0E32\u0ECD\u0EB2\u0EAB\u0E99\u0EAB\u0EA1\u0F42\u0FB7\u0F4C\u0FB7\u0F51\u0FB7\u0F56\u0FB7\u0F5B\u0FB7\u0F40\u0FB5\u0F71\u0F72\u0F71\u0F74\u0FB2\u0F80\u0FB3\u0F80\u0F92\u0FB7\u0F9C\u0FB7\u0FA1\u0FB7\u0FA6\u0FB7\u0FAB\u0FB7\u0F90\u0FB5a\u02BE\u1F00\u03B9\u1F01\u03B9\u1F02\u03B9\u1F03\u03B9\u1F04\u03B9\u1F05\u03B9\u1F06\u03B9\u1F07\u03B9\u1F20\u03B9\u1F21\u03B9\u1F22\u03B9\u1F23\u03B9\u1F24\u03B9\u1F25\u03B9\u1F26\u03B9\u1F27\u03B9\u1F60\u03B9\u1F61\u03B9\u1F62\u03B9\u1F63\u03B9\u1F64\u03B9\u1F65\u03B9\u1F66\u03B9\u1F67\u03B9\u1F70\u03B9\u03B1\u03B9\u03AC\u03B9\u1FB6\u03B9 \u0342\u1F74\u03B9\u03B7\u03B9\u03AE\u03B9\u1FC6\u03B9\u1F7C\u03B9\u03C9\u03B9\u03CE\u03B9\u1FF6\u03B9 \u0333!! \u0305???!!?rs\xB0c\xB0fnosmtmivix\u2ADD\u0338 \u3099 \u309A\u3088\u308A\u30B3\u30C8333435\uCC38\uACE0\uC8FC\uC758363738394042444546474849503\u67084\u67085\u67086\u67087\u67088\u67089\u6708hgev\u30AE\u30AC\u30C7\u30B7\u30C9\u30EB\u30CA\u30CE\u30D4\u30B3\u30D3\u30EB\u30DA\u30BD\u30DB\u30F3\u30EA\u30E9\u30EC\u30E0daauovpciu\u5E73\u6210\u662D\u548C\u5927\u6B63\u660E\u6CBBna\u03BCakakbmbgbpfnf\u03BCf\u03BCgmg\u03BClmldlklfmnm\u03BCmpsns\u03BCsmsnv\u03BCvkvpwnw\u03BCwmwkwk\u03C9m\u03C9bqcccddbgyhainkkktlnlxphprsrsvwbst\u0574\u0576\u0574\u0565\u0574\u056B\u057E\u0576\u0574\u056D\u05D9\u05B4\u05F2\u05B7\u05E9\u05C1\u05E9\u05C2\u05D0\u05B7\u05D0\u05B8\u05D0\u05BC\u05D1\u05BC\u05D2\u05BC\u05D3\u05BC\u05D4\u05BC\u05D5\u05BC\u05D6\u05BC\u05D8\u05BC\u05D9\u05BC\u05DA\u05BC\u05DB\u05BC\u05DC\u05BC\u05DE\u05BC\u05E0\u05BC\u05E1\u05BC\u05E3\u05BC\u05E4\u05BC\u05E6\u05BC\u05E7\u05BC\u05E8\u05BC\u05EA\u05BC\u05D5\u05B9\u05D1\u05BF\u05DB\u05BF\u05E4\u05BF\u05D0\u05DC\u0626\u0627\u0626\u06D5\u0626\u0648\u0626\u06C7\u0626\u06C6\u0626\u06C8\u0626\u06D0\u0626\u0649\u0626\u062C\u0626\u062D\u0626\u0645\u0626\u064A\u0628\u062C\u0628\u0645\u0628\u0649\u0628\u064A\u062A\u0649\u062A\u064A\u062B\u062C\u062B\u0645\u062B\u0649\u062B\u064A\u062E\u062D\u0636\u062C\u0636\u0645\u0637\u062D\u0638\u0645\u063A\u062C\u0641\u062C\u0641\u062D\u0641\u0649\u0641\u064A\u0642\u062D\u0642\u0649\u0642\u064A\u0643\u0627\u0643\u062C\u0643\u062D\u0643\u062E\u0643\u0644\u0643\u0649\u0643\u064A\u0646\u062E\u0646\u0649\u0646\u064A\u0647\u062C\u0647\u0649\u0647\u064A\u064A\u0649\u0630\u0670\u0631\u0670\u0649\u0670\u0626\u0631\u0626\u0632\u0626\u0646\u0628\u0632\u0628\u0646\u062A\u0631\u062A\u0632\u062A\u0646\u062B\u0631\u062B\u0632\u062B\u0646\u0645\u0627\u0646\u0631\u0646\u0632\u0646\u0646\u064A\u0631\u064A\u0632\u0626\u062E\u0626\u0647\u0628\u0647\u062A\u0647\u0635\u062E\u0646\u0647\u0647\u0670\u062B\u0647\u0633\u0647\u0634\u0647\u0637\u0649\u0637\u064A\u0639\u0649\u0639\u064A\u063A\u0649\u063A\u064A\u0633\u0649\u0633\u064A\u0634\u0649\u0634\u064A\u0635\u0649\u0635\u064A\u0636\u0649\u0636\u064A\u0634\u062E\u0634\u0631\u0633\u0631\u0635\u0631\u0636\u0631\u0627\u064B \u064B\u0640\u064B\u0640\u0651 \u0652\u0640\u0652\u0644\u0622\u0644\u0623\u0644\u0625\u{1D157}\u{1D165}0,1,2,3,4,5,6,7,8,9,wzhvsdwcmcmddj\u307B\u304B\u30B3\u30B3\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF8\xF9\xFA\xFB\xFC\xFD\xFE\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0135\u0137\u013A\u013C\u013E\u0142\u0144\u0146\u0148\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\xFF\u017A\u017C\u0253\u0183\u0185\u0254\u0188\u0256\u0257\u018C\u01DD\u0259\u025B\u0192\u0260\u0263\u0269\u0268\u0199\u026F\u0272\u0275\u01A1\u01A3\u01A5\u0280\u01A8\u0283\u01AD\u0288\u01B0\u028A\u028B\u01B4\u01B6\u0292\u01B9\u01BD\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F5\u0195\u01BF\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u019E\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233\u2C65\u023C\u019A\u2C66\u0242\u0180\u0289\u028C\u0247\u0249\u024B\u024D\u024F\u0266\u0279\u027B\u0281\u0295\u0371\u0373\u02B9\u0377;\u03F3\u03AD\u03AF\u03CC\u03CD\u03B2\u03B3\u03B4\u03B5\u03B6\u03B8\u03BA\u03BB\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03CA\u03CB\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF\u03F8\u03FB\u037B\u037C\u037D\u0450\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u045D\u045E\u045F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561\u0562\u0563\u0564\u0566\u0567\u0568\u0569\u056A\u056C\u056E\u056F\u0570\u0571\u0572\u0573\u0575\u0577\u0578\u0579\u057A\u057B\u057C\u057D\u057F\u0580\u0581\u0583\u0584\u0585\u0586\u0F0B\u2D27\u2D2D\u10DC\u13F0\u13F1\u13F2\u13F3\u13F4\u13F5\uA64B\u0250\u0251\u1D02\u025C\u1D16\u1D17\u1D1D\u1D25\u0252\u0255\u025F\u0261\u0265\u026A\u1D7B\u029D\u026D\u1D85\u029F\u0271\u0270\u0273\u0274\u0278\u0282\u01AB\u1D1C\u0290\u0291\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF\u1F10\u1F11\u1F12\u1F13\u1F14\u1F15\u1F30\u1F31\u1F32\u1F33\u1F34\u1F35\u1F36\u1F37\u1F40\u1F41\u1F42\u1F43\u1F44\u1F45\u1F51\u1F53\u1F55\u1F57\u1FB0\u1FB1\u1F72\u0390\u1FD0\u1FD1\u1F76\u03B0\u1FE0\u1FE1\u1F7A\u1FE5`\u1F78\u2010+\u2212\u2211\u3008\u3009\u2C30\u2C31\u2C32\u2C33\u2C34\u2C35\u2C36\u2C37\u2C38\u2C39\u2C3A\u2C3B\u2C3C\u2C3D\u2C3E\u2C3F\u2C40\u2C41\u2C42\u2C43\u2C44\u2C45\u2C46\u2C47\u2C48\u2C49\u2C4A\u2C4B\u2C4C\u2C4D\u2C4E\u2C4F\u2C50\u2C51\u2C52\u2C53\u2C54\u2C55\u2C56\u2C57\u2C58\u2C59\u2C5A\u2C5B\u2C5C\u2C5D\u2C5E\u2C61\u026B\u1D7D\u027D\u2C68\u2C6A\u2C6C\u2C73\u2C76\u023F\u0240\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CEC\u2CEE\u2CF3\u2D61\u6BCD\u9F9F\u4E28\u4E36\u4E3F\u4E59\u4E85\u4EA0\u4EBA\u513F\u5165\u5182\u5196\u51AB\u51E0\u51F5\u5200\u529B\u52F9\u5315\u531A\u5338\u535C\u5369\u5382\u53B6\u53C8\u53E3\u56D7\u58EB\u5902\u590A\u5915\u5973\u5B50\u5B80\u5BF8\u5C0F\u5C22\u5C38\u5C6E\u5C71\u5DDB\u5DE5\u5DF1\u5DFE\u5E72\u5E7A\u5E7F\u5EF4\u5EFE\u5F0B\u5F13\u5F50\u5F61\u5F73\u5FC3\u6208\u6236\u624B\u652F\u6534\u6587\u6597\u65A4\u65B9\u65E0\u66F0\u6B20\u6B62\u6B79\u6BB3\u6BCB\u6BD4\u6BDB\u6C0F\u6C14\u722A\u7236\u723B\u723F\u7247\u7259\u725B\u72AC\u7384\u7389\u74DC\u74E6\u7518\u751F\u7528\u7530\u758B\u7592\u7676\u767D\u76AE\u76BF\u76EE\u77DB\u77E2\u77F3\u793A\u79B8\u79BE\u7A74\u7ACB\u7AF9\u7C73\u7CF8\u7F36\u7F51\u7F8A\u7FBD\u8001\u800C\u8012\u8033\u807F\u8089\u81E3\u81FC\u820C\u821B\u821F\u826E\u8272\u8278\u864D\u866B\u8840\u884C\u8863\u897E\u898B\u89D2\u8A00\u8C37\u8C46\u8C55\u8C78\u8C9D\u8D64\u8D70\u8DB3\u8EAB\u8ECA\u8F9B\u8FB0\u8FB5\u9091\u9149\u91C6\u91CC\u9577\u9580\u961C\u96B6\u96B9\u96E8\u9751\u975E\u9762\u9769\u97CB\u97ED\u97F3\u9801\u98A8\u98DB\u98DF\u9996\u9999\u99AC\u9AA8\u9AD8\u9ADF\u9B25\u9B2F\u9B32\u9B3C\u9B5A\u9CE5\u9E75\u9E7F\u9EA5\u9EBB\u9EC3\u9ECD\u9ED1\u9EF9\u9EFD\u9F0E\u9F13\u9F20\u9F3B\u9F4A\u9F52\u9F8D\u9F9C\u9FA0.\u3012\u5344\u5345\u1101\u11AA\u11AC\u11AD\u1104\u11B0\u11B1\u11B2\u11B3\u11B4\u11B5\u111A\u1108\u1121\u110A\u110D\u1161\u1162\u1163\u1164\u1165\u1166\u1167\u1168\u1169\u116A\u116B\u116C\u116D\u116E\u116F\u1170\u1171\u1172\u1173\u1174\u1175\u1114\u1115\u11C7\u11C8\u11CC\u11CE\u11D3\u11D7\u11D9\u111C\u11DD\u11DF\u111D\u111E\u1120\u1122\u1123\u1127\u1129\u112B\u112C\u112D\u112E\u112F\u1132\u1136\u1140\u1147\u114C\u11F1\u11F2\u1157\u1158\u1159\u1184\u1185\u1188\u1191\u1192\u1194\u119E\u11A1\u4E0A\u4E2D\u4E0B\u7532\u4E19\u4E01\u5929\u5730\u554F\u5E7C\u7B8F\uC6B0\u79D8\u7537\u9069\u512A\u5370\u6CE8\u9805\u5199\u5DE6\u53F3\u533B\u5B97\u591C\u30C6\u30CC\u30E2\u30E8\u30F0\u30F1\u30F2\uA641\uA643\uA645\uA647\uA649\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA77A\uA77C\u1D79\uA77F\uA781\uA783\uA785\uA787\uA78C\uA791\uA793\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\u026C\u029E\u0287\uAB53\uA7B5\uA7B7\uAB37\uAB52\u13A0\u13A1\u13A2\u13A3\u13A4\u13A5\u13A6\u13A7\u13A8\u13A9\u13AA\u13AB\u13AC\u13AD\u13AE\u13AF\u13B0\u13B1\u13B2\u13B3\u13B4\u13B5\u13B6\u13B7\u13B8\u13B9\u13BA\u13BB\u13BC\u13BD\u13BE\u13BF\u13C0\u13C1\u13C2\u13C3\u13C4\u13C5\u13C6\u13C7\u13C8\u13C9\u13CA\u13CB\u13CC\u13CD\u13CE\u13CF\u13D0\u13D1\u13D2\u13D3\u13D4\u13D5\u13D6\u13D7\u13D8\u13D9\u13DA\u13DB\u13DC\u13DD\u13DE\u13DF\u13E0\u13E1\u13E2\u13E3\u13E4\u13E5\u13E6\u13E7\u13E8\u13E9\u13EA\u13EB\u13EC\u13ED\u13EE\u13EF\u8C48\u66F4\u8CC8\u6ED1\u4E32\u53E5\u5951\u5587\u5948\u61F6\u7669\u7F85\u863F\u87BA\u88F8\u908F\u6A02\u6D1B\u70D9\u73DE\u843D\u916A\u99F1\u4E82\u5375\u6B04\u721B\u862D\u9E1E\u5D50\u6FEB\u85CD\u8964\u62C9\u81D8\u881F\u5ECA\u6717\u6D6A\u72FC\u90CE\u4F86\u51B7\u52DE\u64C4\u6AD3\u7210\u76E7\u8606\u865C\u8DEF\u9732\u9B6F\u9DFA\u788C\u797F\u7DA0\u83C9\u9304\u8AD6\u58DF\u5F04\u7C60\u807E\u7262\u78CA\u8CC2\u96F7\u58D8\u5C62\u6A13\u6DDA\u6F0F\u7D2F\u7E37\u964B\u52D2\u808B\u51DC\u51CC\u7A1C\u7DBE\u83F1\u9675\u8B80\u62CF\u8AFE\u4E39\u5BE7\u6012\u7387\u7570\u5317\u78FB\u4FBF\u5FA9\u4E0D\u6CCC\u6578\u7D22\u53C3\u585E\u7701\u8449\u8AAA\u6BBA\u6C88\u62FE\u82E5\u63A0\u7565\u4EAE\u5169\u51C9\u6881\u7CE7\u826F\u8AD2\u91CF\u52F5\u5442\u5EEC\u65C5\u6FFE\u792A\u95AD\u9A6A\u9E97\u9ECE\u66C6\u6B77\u8F62\u5E74\u6190\u6200\u649A\u6F23\u7149\u7489\u79CA\u7DF4\u806F\u8F26\u84EE\u9023\u934A\u5217\u52A3\u54BD\u70C8\u88C2\u5EC9\u5FF5\u637B\u6BAE\u7C3E\u7375\u4EE4\u56F9\u5DBA\u601C\u73B2\u7469\u7F9A\u8046\u9234\u96F6\u9748\u9818\u4F8B\u79AE\u91B4\u96B8\u60E1\u4E86\u50DA\u5BEE\u5C3F\u6599\u71CE\u7642\u84FC\u907C\u6688\u962E\u5289\u677B\u67F3\u6D41\u6E9C\u7409\u7559\u786B\u7D10\u985E\u622E\u9678\u502B\u5D19\u6DEA\u8F2A\u5F8B\u6144\u6817\u9686\u5229\u540F\u5C65\u6613\u674E\u68A8\u6CE5\u7406\u75E2\u7F79\u88CF\u88E1\u96E2\u533F\u6EBA\u541D\u71D0\u7498\u85FA\u96A3\u9C57\u9E9F\u6797\u6DCB\u81E8\u7B20\u7C92\u72C0\u7099\u8B58\u4EC0\u8336\u523A\u5207\u5EA6\u62D3\u7CD6\u5B85\u6D1E\u66B4\u8F3B\u964D\u5ED3\u5140\u55C0\u585A\u6674\u51DE\u732A\u76CA\u793C\u795E\u7965\u798F\u9756\u7CBE\u8612\u8AF8\u9038\u90FD\u98EF\u98FC\u9928\u9DB4\u90DE\u96B7\u4FAE\u50E7\u514D\u52C9\u52E4\u5351\u559D\u5606\u5668\u5840\u58A8\u5C64\u6094\u6168\u618E\u61F2\u654F\u65E2\u6691\u6885\u6D77\u6E1A\u6F22\u716E\u722B\u7422\u7891\u7949\u7948\u7950\u7956\u798D\u798E\u7A40\u7A81\u7BC0\u7E09\u7E41\u7F72\u8005\u81ED\u8279\u8457\u8910\u8996\u8B01\u8B39\u8CD3\u8D08\u8FB6\u96E3\u97FF\u983B\u6075\u{242EE}\u8218\u4E26\u51B5\u5168\u4F80\u5145\u5180\u52C7\u52FA\u5555\u5599\u55E2\u58B3\u5944\u5954\u5A62\u5B28\u5ED2\u5ED9\u5F69\u5FAD\u60D8\u614E\u6108\u6160\u6234\u63C4\u641C\u6452\u6556\u671B\u6756\u6EDB\u6ECB\u701E\u77A7\u7235\u72AF\u7471\u7506\u753B\u761D\u761F\u76DB\u76F4\u774A\u7740\u78CC\u7AB1\u7C7B\u7D5B\u7F3E\u8352\u83EF\u8779\u8941\u8986\u8ABF\u8ACB\u8AED\u8B8A\u8F38\u9072\u9199\u9276\u967C\u97DB\u980B\u9B12\u{2284A}\u{22844}\u{233D5}\u3B9D\u4018\u4039\u{25249}\u{25CD0}\u{27ED3}\u9F43\u9F8E\u05E2\u05DD\u0671\u067B\u067E\u0680\u067A\u067F\u0679\u06A4\u06A6\u0684\u0683\u0686\u0687\u068D\u068C\u068E\u0688\u0698\u0691\u06A9\u06AF\u06B3\u06B1\u06BA\u06BB\u06C0\u06C1\u06BE\u06D3\u06AD\u06CB\u06C5\u06C9\u3001\u3016\u3017\u2014\u2013_{}\u3010\u3011\u300A\u300B\u300C\u300D\u300E\u300F[]#&*-<>\\$%@\u0621\u0624\u0629\"'^|~\u2985\u2986\u30FB\u30A5\u30E3\xA2\xA3\xAC\xA6\xA5\u20A9\u2502\u2190\u2191\u2192\u2193\u25A0\u25CB\u{10428}\u{10429}\u{1042A}\u{1042B}\u{1042C}\u{1042D}\u{1042E}\u{1042F}\u{10430}\u{10431}\u{10432}\u{10433}\u{10434}\u{10435}\u{10436}\u{10437}\u{10438}\u{10439}\u{1043A}\u{1043B}\u{1043C}\u{1043D}\u{1043E}\u{1043F}\u{10440}\u{10441}\u{10442}\u{10443}\u{10444}\u{10445}\u{10446}\u{10447}\u{10448}\u{10449}\u{1044A}\u{1044B}\u{1044C}\u{1044D}\u{1044E}\u{1044F}\u{104D8}\u{104D9}\u{104DA}\u{104DB}\u{104DC}\u{104DD}\u{104DE}\u{104DF}\u{104E0}\u{104E1}\u{104E2}\u{104E3}\u{104E4}\u{104E5}\u{104E6}\u{104E7}\u{104E8}\u{104E9}\u{104EA}\u{104EB}\u{104EC}\u{104ED}\u{104EE}\u{104EF}\u{104F0}\u{104F1}\u{104F2}\u{104F3}\u{104F4}\u{104F5}\u{104F6}\u{104F7}\u{104F8}\u{104F9}\u{104FA}\u{104FB}\u{10CC0}\u{10CC1}\u{10CC2}\u{10CC3}\u{10CC4}\u{10CC5}\u{10CC6}\u{10CC7}\u{10CC8}\u{10CC9}\u{10CCA}\u{10CCB}\u{10CCC}\u{10CCD}\u{10CCE}\u{10CCF}\u{10CD0}\u{10CD1}\u{10CD2}\u{10CD3}\u{10CD4}\u{10CD5}\u{10CD6}\u{10CD7}\u{10CD8}\u{10CD9}\u{10CDA}\u{10CDB}\u{10CDC}\u{10CDD}\u{10CDE}\u{10CDF}\u{10CE0}\u{10CE1}\u{10CE2}\u{10CE3}\u{10CE4}\u{10CE5}\u{10CE6}\u{10CE7}\u{10CE8}\u{10CE9}\u{10CEA}\u{10CEB}\u{10CEC}\u{10CED}\u{10CEE}\u{10CEF}\u{10CF0}\u{10CF1}\u{10CF2}\u{118C0}\u{118C1}\u{118C2}\u{118C3}\u{118C4}\u{118C5}\u{118C6}\u{118C7}\u{118C8}\u{118C9}\u{118CA}\u{118CB}\u{118CC}\u{118CD}\u{118CE}\u{118CF}\u{118D0}\u{118D1}\u{118D2}\u{118D3}\u{118D4}\u{118D5}\u{118D6}\u{118D7}\u{118D8}\u{118D9}\u{118DA}\u{118DB}\u{118DC}\u{118DD}\u{118DE}\u{118DF}\u0131\u0237\u2207\u2202\u{1E922}\u{1E923}\u{1E924}\u{1E925}\u{1E926}\u{1E927}\u{1E928}\u{1E929}\u{1E92A}\u{1E92B}\u{1E92C}\u{1E92D}\u{1E92E}\u{1E92F}\u{1E930}\u{1E931}\u{1E932}\u{1E933}\u{1E934}\u{1E935}\u{1E936}\u{1E937}\u{1E938}\u{1E939}\u{1E93A}\u{1E93B}\u{1E93C}\u{1E93D}\u{1E93E}\u{1E93F}\u{1E940}\u{1E941}\u{1E942}\u{1E943}\u066E\u06A1\u066F\u5B57\u53CC\u591A\u89E3\u4EA4\u6620\u7121\u524D\u5F8C\u518D\u65B0\u521D\u7D42\u8CA9\u58F0\u5439\u6F14\u6295\u6355\u904A\u6307\u7981\u7A7A\u5408\u6E80\u7533\u5272\u55B6\u914D\u5F97\u53EF\u4E3D\u4E38\u4E41\u{20122}\u4F60\u4FBB\u5002\u507A\u5099\u50CF\u349E\u{2063A}\u5154\u5164\u5177\u{2051C}\u34B9\u5167\u{2054B}\u5197\u51A4\u4ECC\u51AC\u{291DF}\u5203\u34DF\u523B\u5246\u5277\u3515\u5305\u5306\u5349\u535A\u5373\u537D\u537F\u{20A2C}\u7070\u53CA\u53DF\u{20B63}\u53EB\u53F1\u5406\u549E\u5438\u5448\u5468\u54A2\u54F6\u5510\u5553\u5563\u5584\u55AB\u55B3\u55C2\u5716\u5717\u5651\u5674\u58EE\u57CE\u57F4\u580D\u578B\u5832\u5831\u58AC\u{214E4}\u58F2\u58F7\u5906\u5922\u5962\u{216A8}\u{216EA}\u59EC\u5A1B\u5A27\u59D8\u5A66\u36EE\u5B08\u5B3E\u{219C8}\u5BC3\u5BD8\u5BF3\u{21B18}\u5BFF\u5C06\u3781\u5C60\u5CC0\u5C8D\u{21DE4}\u5D43\u{21DE6}\u5D6E\u5D6B\u5D7C\u5DE1\u5DE2\u382F\u5DFD\u5E28\u5E3D\u5E69\u3862\u{22183}\u387C\u5EB0\u5EB3\u5EB6\u{2A392}\u{22331}\u8201\u5F22\u38C7\u{232B8}\u{261DA}\u5F62\u5F6B\u38E3\u5F9A\u5FCD\u5FD7\u5FF9\u6081\u393A\u391C\u{226D4}\u60C7\u6148\u614C\u617A\u61B2\u61A4\u61AF\u61DE\u621B\u625D\u62B1\u62D4\u6350\u{22B0C}\u633D\u62FC\u6368\u6383\u63E4\u{22BF1}\u6422\u63C5\u63A9\u3A2E\u6469\u647E\u649D\u6477\u3A6C\u656C\u{2300A}\u65E3\u66F8\u6649\u3B19\u3B08\u3AE4\u5192\u5195\u6700\u669C\u80AD\u43D9\u6721\u675E\u6753\u{233C3}\u3B49\u67FA\u6785\u6852\u{2346D}\u688E\u681F\u6914\u6942\u69A3\u69EA\u6AA8\u{236A3}\u6ADB\u3C18\u6B21\u{238A7}\u6B54\u3C4E\u6B72\u6B9F\u6BBB\u{23A8D}\u{21D0B}\u{23AFA}\u6C4E\u{23CBC}\u6CBF\u6CCD\u6C67\u6D16\u6D3E\u6D69\u6D78\u6D85\u{23D1E}\u6D34\u6E2F\u6E6E\u3D33\u6EC7\u{23ED1}\u6DF9\u6F6E\u{23F5E}\u{23F8E}\u6FC6\u7039\u701B\u3D96\u704A\u707D\u7077\u70AD\u{20525}\u7145\u{24263}\u719C\u7228\u7250\u{24608}\u7280\u7295\u{24735}\u{24814}\u737A\u738B\u3EAC\u73A5\u3EB8\u7447\u745C\u7485\u74CA\u3F1B\u7524\u{24C36}\u753E\u{24C92}\u{2219F}\u7610\u{24FA1}\u{24FB8}\u{25044}\u3FFC\u4008\u{250F3}\u{250F2}\u{25119}\u{25133}\u771E\u771F\u778B\u4046\u4096\u{2541D}\u784E\u40E3\u{25626}\u{2569A}\u{256C5}\u79EB\u412F\u7A4A\u7A4F\u{2597C}\u{25AA7}\u4202\u{25BAB}\u7BC6\u7BC9\u4227\u{25C80}\u7CD2\u42A0\u7CE8\u7CE3\u7D00\u{25F86}\u7D63\u4301\u7DC7\u7E02\u7E45\u4334\u{26228}\u{26247}\u4359\u{262D9}\u7F7A\u{2633E}\u7F95\u7FFA\u{264DA}\u{26523}\u8060\u{265A8}\u8070\u{2335F}\u43D5\u80B2\u8103\u440B\u813E\u5AB5\u{267A7}\u{267B5}\u{23393}\u{2339C}\u8204\u8F9E\u446B\u8291\u828B\u829D\u52B3\u82B1\u82B3\u82BD\u82E6\u{26B3C}\u831D\u8363\u83AD\u8323\u83BD\u83E7\u8353\u83CA\u83CC\u83DC\u{26C36}\u{26D6B}\u{26CD5}\u452B\u84F1\u84F3\u8516\u{273CA}\u8564\u{26F2C}\u455D\u4561\u{26FB1}\u{270D2}\u456B\u8650\u8667\u8669\u86A9\u8688\u870E\u86E2\u8728\u876B\u8786\u87E1\u8801\u45F9\u8860\u{27667}\u88D7\u88DE\u4635\u88FA\u34BB\u{278AE}\u{27966}\u46BE\u46C7\u8AA0\u{27CA8}\u8CAB\u8CC1\u8D1B\u8D77\u{27F2F}\u{20804}\u8DCB\u8DBC\u8DF0\u{208DE}\u8ED4\u{285D2}\u{285ED}\u9094\u90F1\u9111\u{2872E}\u911B\u9238\u92D7\u92D8\u927C\u93F9\u9415\u{28BFA}\u958B\u4995\u95B7\u{28D77}\u49E6\u96C3\u5DB2\u9723\u{29145}\u{2921A}\u4A6E\u4A76\u97E0\u{2940A}\u4AB2\u{29496}\u9829\u{295B6}\u98E2\u4B33\u9929\u99A7\u99C2\u99FE\u4BCE\u{29B30}\u9C40\u9CFD\u4CCE\u4CED\u9D67\u{2A0CE}\u4CF8\u{2A105}\u{2A20E}\u{2A291}\u4D56\u9EFE\u9F05\u9F0F\u9F16\u{2A600}", mapChar: function(r3) {
          return r3 >= 196608 ? r3 >= 917760 && r3 <= 917999 ? 18874368 : 0 : e2[t2[r3 >> 4]][15 & r3];
        } };
        var e2, t2;
      }.apply(t, [])) || (e.exports = n);
    }, function(e, t, r2) {
      e.exports = [{ constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "resolver", outputs: [{ name: "", type: "address" }], payable: false, type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "owner", outputs: [{ name: "", type: "address" }], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "label", type: "bytes32" }, { name: "owner", type: "address" }], name: "setSubnodeOwner", outputs: [], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "ttl", type: "uint64" }], name: "setTTL", outputs: [], payable: false, type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "ttl", outputs: [{ name: "", type: "uint64" }], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "resolver", type: "address" }], name: "setResolver", outputs: [], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "owner", type: "address" }], name: "setOwner", outputs: [], payable: false, type: "function" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "owner", type: "address" }], name: "Transfer", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: true, name: "label", type: "bytes32" }, { indexed: false, name: "owner", type: "address" }], name: "NewOwner", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "resolver", type: "address" }], name: "NewResolver", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "ttl", type: "uint64" }], name: "NewTTL", type: "event" }, { constant: false, inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }, { internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "resolver", type: "address" }, { internalType: "uint64", name: "ttl", type: "uint64" }], name: "setRecord", outputs: [], payable: false, stateMutability: "nonpayable", type: "function" }, { constant: false, inputs: [{ internalType: "address", name: "operator", type: "address" }, { internalType: "bool", name: "approved", type: "bool" }], name: "setApprovalForAll", outputs: [], payable: false, stateMutability: "nonpayable", type: "function" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: true, internalType: "address", name: "operator", type: "address" }, { indexed: false, internalType: "bool", name: "approved", type: "bool" }], name: "ApprovalForAll", type: "event" }, { constant: true, inputs: [{ internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "operator", type: "address" }], name: "isApprovedForAll", outputs: [{ internalType: "bool", name: "", type: "bool" }], payable: false, stateMutability: "view", type: "function" }, { constant: true, inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }], name: "recordExists", outputs: [{ internalType: "bool", name: "", type: "bool" }], payable: false, stateMutability: "view", type: "function" }, { constant: false, inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }, { internalType: "bytes32", name: "label", type: "bytes32" }, { internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "resolver", type: "address" }, { internalType: "uint64", name: "ttl", type: "uint64" }], name: "setSubnodeRecord", outputs: [], payable: false, stateMutability: "nonpayable", type: "function" }];
    }, function(e, t, r2) {
      e.exports = [{ constant: true, inputs: [{ name: "interfaceID", type: "bytes4" }], name: "supportsInterface", outputs: [{ name: "", type: "bool" }], payable: false, type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }, { name: "contentTypes", type: "uint256" }], name: "ABI", outputs: [{ name: "contentType", type: "uint256" }, { name: "data", type: "bytes" }], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "hash", type: "bytes" }], name: "setMultihash", outputs: [], payable: false, stateMutability: "nonpayable", type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "multihash", outputs: [{ name: "", type: "bytes" }], payable: false, stateMutability: "view", type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "x", type: "bytes32" }, { name: "y", type: "bytes32" }], name: "setPubkey", outputs: [], payable: false, type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "content", outputs: [{ name: "ret", type: "bytes32" }], payable: false, type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "addr", outputs: [{ name: "ret", type: "address" }], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "contentType", type: "uint256" }, { name: "data", type: "bytes" }], name: "setABI", outputs: [], payable: false, type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "name", outputs: [{ name: "ret", type: "string" }], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "name", type: "string" }], name: "setName", outputs: [], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "hash", type: "bytes32" }], name: "setContent", outputs: [], payable: false, type: "function" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "pubkey", outputs: [{ name: "x", type: "bytes32" }, { name: "y", type: "bytes32" }], payable: false, type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "addr", type: "address" }], name: "setAddr", outputs: [], payable: false, type: "function" }, { inputs: [{ name: "ensAddr", type: "address" }], payable: false, type: "constructor" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "a", type: "address" }], name: "AddrChanged", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "hash", type: "bytes32" }], name: "ContentChanged", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "name", type: "string" }], name: "NameChanged", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: true, name: "contentType", type: "uint256" }], name: "ABIChanged", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "x", type: "bytes32" }, { indexed: false, name: "y", type: "bytes32" }], name: "PubkeyChanged", type: "event" }, { anonymous: false, inputs: [{ indexed: true, name: "node", type: "bytes32" }, { indexed: false, name: "hash", type: "bytes" }], name: "ContenthashChanged", type: "event" }, { constant: true, inputs: [{ name: "node", type: "bytes32" }], name: "contenthash", outputs: [{ name: "", type: "bytes" }], payable: false, stateMutability: "view", type: "function" }, { constant: false, inputs: [{ name: "node", type: "bytes32" }, { name: "hash", type: "bytes" }], name: "setContenthash", outputs: [], payable: false, stateMutability: "nonpayable", type: "function" }];
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(63)), o = n(r2(105)), a = r2(78), s2 = r2(188), f2 = r2(12).errors, c = r2(176).interfaceIds;
      function u(e2) {
        this.registry = e2;
      }
      u.prototype.method = function(e2, t2, r3, n2, i2) {
        return { call: this.call.bind({ ensName: e2, methodName: t2, methodArguments: r3, callback: i2, parent: this, outputFormatter: n2 }), send: this.send.bind({ ensName: e2, methodName: t2, methodArguments: r3, callback: i2, parent: this }) };
      }, u.prototype.call = function(e2) {
        var t2 = this, r3 = new a(), n2 = this.parent.prepareArguments(this.ensName, this.methodArguments), s3 = this.outputFormatter || null;
        return this.parent.registry.getResolver(this.ensName).then(function() {
          var a2 = (0, o.default)(i.default.mark(function o2(a3) {
            return i.default.wrap(function(i2) {
              for (; ; )
                switch (i2.prev = i2.next) {
                  case 0:
                    return i2.next = 2, t2.parent.checkInterfaceSupport(a3, t2.methodName);
                  case 2:
                    t2.parent.handleCall(r3, a3.methods[t2.methodName], n2, s3, e2);
                  case 3:
                  case "end":
                    return i2.stop();
                }
            }, o2);
          }));
          return function(e3) {
            return a2.apply(this, arguments);
          };
        }()).catch(function(t3) {
          "function" != typeof e2 ? r3.reject(t3) : e2(t3, null);
        }), r3.eventEmitter;
      }, u.prototype.send = function(e2, t2) {
        var r3 = this, n2 = new a(), s3 = this.parent.prepareArguments(this.ensName, this.methodArguments);
        return this.parent.registry.getResolver(this.ensName).then(function() {
          var a2 = (0, o.default)(i.default.mark(function o2(a3) {
            return i.default.wrap(function(i2) {
              for (; ; )
                switch (i2.prev = i2.next) {
                  case 0:
                    return i2.next = 2, r3.parent.checkInterfaceSupport(a3, r3.methodName);
                  case 2:
                    r3.parent.handleSend(n2, a3.methods[r3.methodName], s3, e2, t2);
                  case 3:
                  case "end":
                    return i2.stop();
                }
            }, o2);
          }));
          return function(e3) {
            return a2.apply(this, arguments);
          };
        }()).catch(function(e3) {
          "function" != typeof t2 ? n2.reject(e3) : t2(e3, null);
        }), n2.eventEmitter;
      }, u.prototype.handleCall = function(e2, t2, r3, n2, i2) {
        return t2.apply(this, r3).call().then(function(t3) {
          n2 && (t3 = n2(t3)), "function" != typeof i2 ? e2.resolve(t3) : i2(t3, t3);
        }).catch(function(t3) {
          "function" != typeof i2 ? e2.reject(t3) : i2(t3, null);
        }), e2;
      }, u.prototype.handleSend = function(e2, t2, r3, n2, i2) {
        return t2.apply(this, r3).send(n2).on("sending", function() {
          e2.eventEmitter.emit("sending");
        }).on("sent", function() {
          e2.eventEmitter.emit("sent");
        }).on("transactionHash", function(t3) {
          e2.eventEmitter.emit("transactionHash", t3);
        }).on("confirmation", function(t3, r4) {
          e2.eventEmitter.emit("confirmation", t3, r4);
        }).on("receipt", function(t3) {
          e2.eventEmitter.emit("receipt", t3), e2.resolve(t3), "function" == typeof i2 && i2(t3, t3);
        }).on("error", function(t3) {
          e2.eventEmitter.emit("error", t3), "function" != typeof i2 ? e2.reject(t3) : i2(t3, null);
        }), e2;
      }, u.prototype.prepareArguments = function(e2, t2) {
        var r3 = s2.hash(e2);
        return t2.length > 0 ? (t2.unshift(r3), t2) : [r3];
      }, u.prototype.checkInterfaceSupport = function() {
        var e2 = (0, o.default)(i.default.mark(function e3(t2, r3) {
          var n2;
          return i.default.wrap(function(e4) {
            for (; ; )
              switch (e4.prev = e4.next) {
                case 0:
                  if (c[r3]) {
                    e4.next = 2;
                    break;
                  }
                  return e4.abrupt("return");
                case 2:
                  return n2 = false, e4.prev = 3, e4.next = 6, t2.methods.supportsInterface(c[r3]).call();
                case 6:
                  n2 = e4.sent, e4.next = 12;
                  break;
                case 9:
                  e4.prev = 9, e4.t0 = e4.catch(3), console.warn('Could not verify interface of resolver contract at "' + t2.options.address + '". ');
                case 12:
                  if (n2) {
                    e4.next = 14;
                    break;
                  }
                  throw f2.ResolverMethodMissingError(t2.options.address, r3);
                case 14:
                case "end":
                  return e4.stop();
              }
          }, e3, null, [[3, 9]]);
        }));
        return function(t2, r3) {
          return e2.apply(this, arguments);
        };
      }(), e.exports = u;
    }, function(e, t, r2) {
      var n = r2(410);
      e.exports = { decode: function(e2) {
        var t2 = null, r3 = null, i = null;
        if (e2 && e2.error)
          return { protocolType: null, decoded: e2.error };
        if (e2)
          try {
            t2 = n.decode(e2);
            var o = n.getCodec(e2);
            "ipfs-ns" === o ? r3 = "ipfs" : "swarm-ns" === o ? r3 = "bzz" : "onion" === o ? r3 = "onion" : "onion3" === o ? r3 = "onion3" : t2 = e2;
          } catch (e3) {
            i = e3.message;
          }
        return { protocolType: r3, decoded: t2, error: i };
      }, encode: function(e2) {
        var t2, r3, i = false;
        if (e2) {
          var o = e2.match(/^(ipfs|bzz|onion|onion3):\/\/(.*)/) || e2.match(/\/(ipfs)\/(.*)/);
          o && (r3 = o[1], t2 = o[2]);
          try {
            if ("ipfs" === r3)
              t2.length >= 4 && (i = "0x" + n.fromIpfs(t2));
            else if ("bzz" === r3)
              t2.length >= 4 && (i = "0x" + n.fromSwarm(t2));
            else if ("onion" === r3)
              16 === t2.length && (i = "0x" + n.encode("onion", t2));
            else {
              if ("onion3" !== r3)
                throw new Error("Could not encode content hash: unsupported content type");
              56 === t2.length && (i = "0x" + n.encode("onion3", t2));
            }
          } catch (e3) {
            throw e3;
          }
        }
        return i;
      } };
    }, function(e, t, r2) {
      var n = r2(411), i = r2(419), o = i.hexStringToBuffer, a = i.profiles, s2 = r2(442).cidV0ToV1Base32;
      e.exports = { helpers: { cidV0ToV1Base32: s2 }, decode: function(e2) {
        var t2 = o(e2), r3 = n.getCodec(t2), i2 = n.rmPrefix(t2), s3 = a[r3];
        return s3 || (s3 = a.default), s3.decode(i2);
      }, fromIpfs: function(e2) {
        return this.encode("ipfs-ns", e2);
      }, fromSwarm: function(e2) {
        return this.encode("swarm-ns", e2);
      }, encode: function(e2, t2) {
        var r3 = a[e2];
        r3 || (r3 = a.default);
        var i2 = r3.encode(t2);
        return n.addPrefix(e2, i2).toString("hex");
      }, getCodec: function(e2) {
        var t2 = o(e2);
        return n.getCodec(t2);
      } };
    }, function(e, t, r2) {
      (function(n) {
        var i = r2(66), o = r2(415), a = r2(416), s2 = r2(189);
        (t = e.exports).addPrefix = function(e2, t2) {
          var r3;
          if (n.isBuffer(e2))
            r3 = s2.varintBufferEncode(e2);
          else {
            if (!a[e2])
              throw new Error("multicodec not recognized");
            r3 = a[e2];
          }
          return n.concat([r3, t2]);
        }, t.rmPrefix = function(e2) {
          return i.decode(e2), e2.slice(i.decode.bytes);
        }, t.getCodec = function(e2) {
          var t2 = i.decode(e2), r3 = o.get(t2);
          if (void 0 === r3)
            throw new Error("Code ".concat(t2, " not found"));
          return r3;
        }, t.getName = function(e2) {
          return o.get(e2);
        }, t.getNumber = function(e2) {
          var t2 = a[e2];
          if (void 0 === t2)
            throw new Error("Codec `" + e2 + "` not found");
          return s2.varintBufferDecode(t2)[0];
        }, t.getCode = function(e2) {
          return i.decode(e2);
        }, t.getCodeVarint = function(e2) {
          var t2 = a[e2];
          if (void 0 === t2)
            throw new Error("Codec `" + e2 + "` not found");
          return t2;
        }, t.getVarint = function(e2) {
          return i.encode(e2);
        };
        var f2 = r2(417);
        Object.assign(t, f2), t.print = r2(418);
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      e.exports = function e2(t2, r3, i) {
        r3 = r3 || [];
        var o = i = i || 0;
        for (; t2 >= n; )
          r3[i++] = 255 & t2 | 128, t2 /= 128;
        for (; -128 & t2; )
          r3[i++] = 255 & t2 | 128, t2 >>>= 7;
        return r3[i] = 0 | t2, e2.bytes = i - o + 1, r3;
      };
      var n = Math.pow(2, 31);
    }, function(e, t, r2) {
      e.exports = function e2(t2, r3) {
        var n, i = 0, o = 0, a = r3 = r3 || 0, s2 = t2.length;
        do {
          if (a >= s2)
            throw e2.bytes = 0, new RangeError("Could not decode varint");
          n = t2[a++], i += o < 28 ? (127 & n) << o : (127 & n) * Math.pow(2, o), o += 7;
        } while (n >= 128);
        return e2.bytes = a - r3, i;
      };
    }, function(e, t, r2) {
      var n = Math.pow(2, 7), i = Math.pow(2, 14), o = Math.pow(2, 21), a = Math.pow(2, 28), s2 = Math.pow(2, 35), f2 = Math.pow(2, 42), c = Math.pow(2, 49), u = Math.pow(2, 56), d = Math.pow(2, 63);
      e.exports = function(e2) {
        return e2 < n ? 1 : e2 < i ? 2 : e2 < o ? 3 : e2 < a ? 4 : e2 < s2 ? 5 : e2 < f2 ? 6 : e2 < c ? 7 : e2 < u ? 8 : e2 < d ? 9 : 10;
      };
    }, function(e, t, r2) {
      var n = r2(82), i = /* @__PURE__ */ new Map();
      for (var o in n) {
        var a = n[o];
        i.set(a, o);
      }
      e.exports = Object.freeze(i);
    }, function(e, t, r2) {
      var n = r2(82), i = r2(189).varintEncode, o = {};
      for (var a in n) {
        var s2 = n[a];
        o[a] = i(s2);
      }
      e.exports = Object.freeze(o);
    }, function(e, t, r2) {
      for (var n = r2(0)(r2(30)), i = r2(82), o = {}, a = 0, s2 = Object.entries(i); a < s2.length; a++) {
        var f2 = (0, n.default)(s2[a], 2), c = f2[0], u = f2[1];
        o[c.toUpperCase().replace(/-/g, "_")] = u;
      }
      e.exports = Object.freeze(o);
    }, function(e, t, r2) {
      for (var n = r2(0)(r2(30)), i = r2(82), o = {}, a = 0, s2 = Object.entries(i); a < s2.length; a++) {
        var f2 = (0, n.default)(s2[a], 2), c = f2[0], u = f2[1];
        void 0 === o[u] && (o[u] = c);
      }
      e.exports = Object.freeze(o);
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(190), i = r2(109), o = function(e3) {
          var t2 = e3.slice(0, 2), r3 = e3.slice(2), n2 = "";
          return n2 = "0x" === t2 ? r3 : e3, i.fromHexString(n2);
        }, a = { swarm: function(e3) {
          var t2 = i.encode(o(e3), "keccak-256");
          return new n(1, "swarm-manifest", t2).buffer;
        }, ipfs: function(e3) {
          var t2 = i.fromB58String(e3);
          return new n(1, "dag-pb", t2).buffer;
        }, utf8: function(t2) {
          return e2.from(t2, "utf8");
        } }, s2 = { hexMultiHash: function(e3) {
          var t2 = new n(e3);
          return i.decode(t2.multihash).digest.toString("hex");
        }, b58MultiHash: function(e3) {
          var t2 = new n(e3);
          return i.toB58String(t2.multihash);
        }, utf8: function(e3) {
          return e3.toString("utf8");
        } }, f2 = { "swarm-ns": { encode: a.swarm, decode: s2.hexMultiHash }, "ipfs-ns": { encode: a.ipfs, decode: s2.b58MultiHash }, "ipns-ns": { encode: a.ipfs, decode: s2.b58MultiHash }, default: { encode: a.utf8, decode: s2.utf8 } };
        t.hexStringToBuffer = o, t.profiles = f2;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(1).Buffer, i = r2(421);
      function o(e2, t2) {
        if (!t2)
          throw new Error("requires an encoded buffer");
        var r3 = a(e2), i2 = n.from(r3.code);
        return function(e3, t3) {
          a(e3).decode(t3.toString());
        }(r3.name, t2), n.concat([i2, t2]);
      }
      function a(e2) {
        var t2;
        if (i.names[e2])
          t2 = i.names[e2];
        else {
          if (!i.codes[e2])
            throw new Error("Unsupported encoding");
          t2 = i.codes[e2];
        }
        if (!t2.isImplemented())
          throw new Error("Base " + e2 + " is not implemented yet");
        return t2;
      }
      (t = e.exports = o).encode = function(e2, t2) {
        var r3 = a(e2);
        return o(r3.name, n.from(r3.encode(t2)));
      }, t.decode = function(e2) {
        n.isBuffer(e2) && (e2 = e2.toString());
        var t2 = e2.substring(0, 1);
        "string" == typeof (e2 = e2.substring(1, e2.length)) && (e2 = n.from(e2));
        var r3 = a(t2);
        return n.from(r3.decode(e2.toString()));
      }, t.isEncoded = function(e2) {
        n.isBuffer(e2) && (e2 = e2.toString());
        if ("[object String]" !== Object.prototype.toString.call(e2))
          return false;
        var t2 = e2.substring(0, 1);
        try {
          return a(t2).name;
        } catch (e3) {
          return false;
        }
      }, t.names = Object.freeze(Object.keys(i.names)), t.codes = Object.freeze(Object.keys(i.codes));
    }, function(e, t, r2) {
      var n = r2(422), i = r2(191), o = r2(423), a = r2(424), s2 = r2(425), f2 = [["base1", "1", "", "1"], ["base2", "0", i, "01"], ["base8", "7", i, "01234567"], ["base10", "9", i, "0123456789"], ["base16", "f", o, "0123456789abcdef"], ["base32", "b", a, "abcdefghijklmnopqrstuvwxyz234567"], ["base32pad", "c", a, "abcdefghijklmnopqrstuvwxyz234567="], ["base32hex", "v", a, "0123456789abcdefghijklmnopqrstuv"], ["base32hexpad", "t", a, "0123456789abcdefghijklmnopqrstuv="], ["base32z", "h", a, "ybndrfg8ejkmcpqxot1uwisza345h769"], ["base58flickr", "Z", i, "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"], ["base58btc", "z", i, "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"], ["base64", "m", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"], ["base64pad", "M", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="], ["base64url", "u", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"], ["base64urlpad", "U", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]], c = f2.reduce(function(e2, t2) {
        return e2[t2[0]] = new n(t2[0], t2[1], t2[2], t2[3]), e2;
      }, {}), u = f2.reduce(function(e2, t2) {
        return e2[t2[1]] = c[t2[0]], e2;
      }, {});
      e.exports = { names: c, codes: u };
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = function() {
        function e2(t2, r3, n2, o2) {
          (0, i.default)(this, e2), this.name = t2, this.code = r3, this.alphabet = o2, n2 && o2 && (this.engine = n2(o2));
        }
        return (0, o.default)(e2, [{ key: "encode", value: function(e3) {
          return this.engine.encode(e3);
        } }, { key: "decode", value: function(e3) {
          return this.engine.decode(e3);
        } }, { key: "isImplemented", value: function() {
          return this.engine;
        } }]), e2;
      }();
      e.exports = a;
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a, s2 = true, f2 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s2 = e3.done, e3;
        }, e: function(e3) {
          f2 = true, a = e3;
        }, f: function() {
          try {
            s2 || null == r3.return || r3.return();
          } finally {
            if (f2)
              throw a;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      var o = r2(1).Buffer;
      e.exports = function(e2) {
        return { encode: function(e3) {
          return "string" == typeof e3 ? o.from(e3).toString("hex") : e3.toString("hex");
        }, decode: function(t2) {
          var r3, i2 = n(t2);
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) {
              var a = r3.value;
              if (e2.indexOf(a) < 0)
                throw new Error("invalid base16 character");
            }
          } catch (e3) {
            i2.e(e3);
          } finally {
            i2.f();
          }
          return o.from(t2, "hex");
        } };
      };
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a, s2 = true, f2 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s2 = e3.done, e3;
        }, e: function(e3) {
          f2 = true, a = e3;
        }, f: function() {
          try {
            s2 || null == r3.return || r3.return();
          } finally {
            if (f2)
              throw a;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      function o(e2, t2) {
        var r3 = e2.byteLength, n2 = new Uint8Array(e2), i2 = t2.indexOf("=") === t2.length - 1;
        i2 && (t2 = t2.substring(0, t2.length - 1));
        for (var o2 = 0, a = 0, s2 = "", f2 = 0; f2 < r3; f2++)
          for (a = a << 8 | n2[f2], o2 += 8; o2 >= 5; )
            s2 += t2[a >>> o2 - 5 & 31], o2 -= 5;
        if (o2 > 0 && (s2 += t2[a << 5 - o2 & 31]), i2)
          for (; s2.length % 8 != 0; )
            s2 += "=";
        return s2;
      }
      e.exports = function(e2) {
        return { encode: function(t2) {
          return o("string" == typeof t2 ? Uint8Array.from(t2) : t2, e2);
        }, decode: function(t2) {
          var r3, i2 = n(t2);
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) {
              var o2 = r3.value;
              if (e2.indexOf(o2) < 0)
                throw new Error("invalid base32 character");
            }
          } catch (e3) {
            i2.e(e3);
          } finally {
            i2.f();
          }
          return function(e3, t3) {
            for (var r4 = (e3 = e3.replace(new RegExp("=", "g"), "")).length, n2 = 0, i3 = 0, o3 = 0, a = new Uint8Array(5 * r4 / 8 | 0), s2 = 0; s2 < r4; s2++)
              i3 = i3 << 5 | t3.indexOf(e3[s2]), (n2 += 5) >= 8 && (a[o3++] = i3 >>> n2 - 8 & 255, n2 -= 8);
            return a.buffer;
          }(t2, e2);
        } };
      };
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a, s2 = true, f2 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s2 = e3.done, e3;
        }, e: function(e3) {
          f2 = true, a = e3;
        }, f: function() {
          try {
            s2 || null == r3.return || r3.return();
          } finally {
            if (f2)
              throw a;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      var o = r2(1).Buffer;
      e.exports = function(e2) {
        var t2 = e2.indexOf("=") > -1, r3 = e2.indexOf("-") > -1 && e2.indexOf("_") > -1;
        return { encode: function(e3) {
          var n2 = "";
          n2 = "string" == typeof e3 ? o.from(e3).toString("base64") : e3.toString("base64"), r3 && (n2 = n2.replace(/\+/g, "-").replace(/\//g, "_"));
          var i2 = n2.indexOf("=");
          return i2 > 0 && !t2 && (n2 = n2.substring(0, i2)), n2;
        }, decode: function(t3) {
          var r4, i2 = n(t3);
          try {
            for (i2.s(); !(r4 = i2.n()).done; ) {
              var a = r4.value;
              if (e2.indexOf(a) < 0)
                throw new Error("invalid base64 character");
            }
          } catch (e3) {
            i2.e(e3);
          } finally {
            i2.f();
          }
          return o.from(t3, "base64");
        } };
      };
    }, function(e, t, r2) {
      t.names = Object.freeze({ identity: 0, sha1: 17, "sha2-256": 18, "sha2-512": 19, "dbl-sha2-256": 86, "sha3-224": 23, "sha3-256": 22, "sha3-384": 21, "sha3-512": 20, "shake-128": 24, "shake-256": 25, "keccak-224": 26, "keccak-256": 27, "keccak-384": 28, "keccak-512": 29, "murmur3-128": 34, "murmur3-32": 35, md4: 212, md5: 213, "blake2b-8": 45569, "blake2b-16": 45570, "blake2b-24": 45571, "blake2b-32": 45572, "blake2b-40": 45573, "blake2b-48": 45574, "blake2b-56": 45575, "blake2b-64": 45576, "blake2b-72": 45577, "blake2b-80": 45578, "blake2b-88": 45579, "blake2b-96": 45580, "blake2b-104": 45581, "blake2b-112": 45582, "blake2b-120": 45583, "blake2b-128": 45584, "blake2b-136": 45585, "blake2b-144": 45586, "blake2b-152": 45587, "blake2b-160": 45588, "blake2b-168": 45589, "blake2b-176": 45590, "blake2b-184": 45591, "blake2b-192": 45592, "blake2b-200": 45593, "blake2b-208": 45594, "blake2b-216": 45595, "blake2b-224": 45596, "blake2b-232": 45597, "blake2b-240": 45598, "blake2b-248": 45599, "blake2b-256": 45600, "blake2b-264": 45601, "blake2b-272": 45602, "blake2b-280": 45603, "blake2b-288": 45604, "blake2b-296": 45605, "blake2b-304": 45606, "blake2b-312": 45607, "blake2b-320": 45608, "blake2b-328": 45609, "blake2b-336": 45610, "blake2b-344": 45611, "blake2b-352": 45612, "blake2b-360": 45613, "blake2b-368": 45614, "blake2b-376": 45615, "blake2b-384": 45616, "blake2b-392": 45617, "blake2b-400": 45618, "blake2b-408": 45619, "blake2b-416": 45620, "blake2b-424": 45621, "blake2b-432": 45622, "blake2b-440": 45623, "blake2b-448": 45624, "blake2b-456": 45625, "blake2b-464": 45626, "blake2b-472": 45627, "blake2b-480": 45628, "blake2b-488": 45629, "blake2b-496": 45630, "blake2b-504": 45631, "blake2b-512": 45632, "blake2s-8": 45633, "blake2s-16": 45634, "blake2s-24": 45635, "blake2s-32": 45636, "blake2s-40": 45637, "blake2s-48": 45638, "blake2s-56": 45639, "blake2s-64": 45640, "blake2s-72": 45641, "blake2s-80": 45642, "blake2s-88": 45643, "blake2s-96": 45644, "blake2s-104": 45645, "blake2s-112": 45646, "blake2s-120": 45647, "blake2s-128": 45648, "blake2s-136": 45649, "blake2s-144": 45650, "blake2s-152": 45651, "blake2s-160": 45652, "blake2s-168": 45653, "blake2s-176": 45654, "blake2s-184": 45655, "blake2s-192": 45656, "blake2s-200": 45657, "blake2s-208": 45658, "blake2s-216": 45659, "blake2s-224": 45660, "blake2s-232": 45661, "blake2s-240": 45662, "blake2s-248": 45663, "blake2s-256": 45664, "Skein256-8": 45825, "Skein256-16": 45826, "Skein256-24": 45827, "Skein256-32": 45828, "Skein256-40": 45829, "Skein256-48": 45830, "Skein256-56": 45831, "Skein256-64": 45832, "Skein256-72": 45833, "Skein256-80": 45834, "Skein256-88": 45835, "Skein256-96": 45836, "Skein256-104": 45837, "Skein256-112": 45838, "Skein256-120": 45839, "Skein256-128": 45840, "Skein256-136": 45841, "Skein256-144": 45842, "Skein256-152": 45843, "Skein256-160": 45844, "Skein256-168": 45845, "Skein256-176": 45846, "Skein256-184": 45847, "Skein256-192": 45848, "Skein256-200": 45849, "Skein256-208": 45850, "Skein256-216": 45851, "Skein256-224": 45852, "Skein256-232": 45853, "Skein256-240": 45854, "Skein256-248": 45855, "Skein256-256": 45856, "Skein512-8": 45857, "Skein512-16": 45858, "Skein512-24": 45859, "Skein512-32": 45860, "Skein512-40": 45861, "Skein512-48": 45862, "Skein512-56": 45863, "Skein512-64": 45864, "Skein512-72": 45865, "Skein512-80": 45866, "Skein512-88": 45867, "Skein512-96": 45868, "Skein512-104": 45869, "Skein512-112": 45870, "Skein512-120": 45871, "Skein512-128": 45872, "Skein512-136": 45873, "Skein512-144": 45874, "Skein512-152": 45875, "Skein512-160": 45876, "Skein512-168": 45877, "Skein512-176": 45878, "Skein512-184": 45879, "Skein512-192": 45880, "Skein512-200": 45881, "Skein512-208": 45882, "Skein512-216": 45883, "Skein512-224": 45884, "Skein512-232": 45885, "Skein512-240": 45886, "Skein512-248": 45887, "Skein512-256": 45888, "Skein512-264": 45889, "Skein512-272": 45890, "Skein512-280": 45891, "Skein512-288": 45892, "Skein512-296": 45893, "Skein512-304": 45894, "Skein512-312": 45895, "Skein512-320": 45896, "Skein512-328": 45897, "Skein512-336": 45898, "Skein512-344": 45899, "Skein512-352": 45900, "Skein512-360": 45901, "Skein512-368": 45902, "Skein512-376": 45903, "Skein512-384": 45904, "Skein512-392": 45905, "Skein512-400": 45906, "Skein512-408": 45907, "Skein512-416": 45908, "Skein512-424": 45909, "Skein512-432": 45910, "Skein512-440": 45911, "Skein512-448": 45912, "Skein512-456": 45913, "Skein512-464": 45914, "Skein512-472": 45915, "Skein512-480": 45916, "Skein512-488": 45917, "Skein512-496": 45918, "Skein512-504": 45919, "Skein512-512": 45920, "Skein1024-8": 45921, "Skein1024-16": 45922, "Skein1024-24": 45923, "Skein1024-32": 45924, "Skein1024-40": 45925, "Skein1024-48": 45926, "Skein1024-56": 45927, "Skein1024-64": 45928, "Skein1024-72": 45929, "Skein1024-80": 45930, "Skein1024-88": 45931, "Skein1024-96": 45932, "Skein1024-104": 45933, "Skein1024-112": 45934, "Skein1024-120": 45935, "Skein1024-128": 45936, "Skein1024-136": 45937, "Skein1024-144": 45938, "Skein1024-152": 45939, "Skein1024-160": 45940, "Skein1024-168": 45941, "Skein1024-176": 45942, "Skein1024-184": 45943, "Skein1024-192": 45944, "Skein1024-200": 45945, "Skein1024-208": 45946, "Skein1024-216": 45947, "Skein1024-224": 45948, "Skein1024-232": 45949, "Skein1024-240": 45950, "Skein1024-248": 45951, "Skein1024-256": 45952, "Skein1024-264": 45953, "Skein1024-272": 45954, "Skein1024-280": 45955, "Skein1024-288": 45956, "Skein1024-296": 45957, "Skein1024-304": 45958, "Skein1024-312": 45959, "Skein1024-320": 45960, "Skein1024-328": 45961, "Skein1024-336": 45962, "Skein1024-344": 45963, "Skein1024-352": 45964, "Skein1024-360": 45965, "Skein1024-368": 45966, "Skein1024-376": 45967, "Skein1024-384": 45968, "Skein1024-392": 45969, "Skein1024-400": 45970, "Skein1024-408": 45971, "Skein1024-416": 45972, "Skein1024-424": 45973, "Skein1024-432": 45974, "Skein1024-440": 45975, "Skein1024-448": 45976, "Skein1024-456": 45977, "Skein1024-464": 45978, "Skein1024-472": 45979, "Skein1024-480": 45980, "Skein1024-488": 45981, "Skein1024-496": 45982, "Skein1024-504": 45983, "Skein1024-512": 45984, "Skein1024-520": 45985, "Skein1024-528": 45986, "Skein1024-536": 45987, "Skein1024-544": 45988, "Skein1024-552": 45989, "Skein1024-560": 45990, "Skein1024-568": 45991, "Skein1024-576": 45992, "Skein1024-584": 45993, "Skein1024-592": 45994, "Skein1024-600": 45995, "Skein1024-608": 45996, "Skein1024-616": 45997, "Skein1024-624": 45998, "Skein1024-632": 45999, "Skein1024-640": 46e3, "Skein1024-648": 46001, "Skein1024-656": 46002, "Skein1024-664": 46003, "Skein1024-672": 46004, "Skein1024-680": 46005, "Skein1024-688": 46006, "Skein1024-696": 46007, "Skein1024-704": 46008, "Skein1024-712": 46009, "Skein1024-720": 46010, "Skein1024-728": 46011, "Skein1024-736": 46012, "Skein1024-744": 46013, "Skein1024-752": 46014, "Skein1024-760": 46015, "Skein1024-768": 46016, "Skein1024-776": 46017, "Skein1024-784": 46018, "Skein1024-792": 46019, "Skein1024-800": 46020, "Skein1024-808": 46021, "Skein1024-816": 46022, "Skein1024-824": 46023, "Skein1024-832": 46024, "Skein1024-840": 46025, "Skein1024-848": 46026, "Skein1024-856": 46027, "Skein1024-864": 46028, "Skein1024-872": 46029, "Skein1024-880": 46030, "Skein1024-888": 46031, "Skein1024-896": 46032, "Skein1024-904": 46033, "Skein1024-912": 46034, "Skein1024-920": 46035, "Skein1024-928": 46036, "Skein1024-936": 46037, "Skein1024-944": 46038, "Skein1024-952": 46039, "Skein1024-960": 46040, "Skein1024-968": 46041, "Skein1024-976": 46042, "Skein1024-984": 46043, "Skein1024-992": 46044, "Skein1024-1000": 46045, "Skein1024-1008": 46046, "Skein1024-1016": 46047, "Skein1024-1024": 46048 }), t.codes = Object.freeze({ 0: "identity", 17: "sha1", 18: "sha2-256", 19: "sha2-512", 86: "dbl-sha2-256", 23: "sha3-224", 22: "sha3-256", 21: "sha3-384", 20: "sha3-512", 24: "shake-128", 25: "shake-256", 26: "keccak-224", 27: "keccak-256", 28: "keccak-384", 29: "keccak-512", 34: "murmur3-128", 35: "murmur3-32", 212: "md4", 213: "md5", 45569: "blake2b-8", 45570: "blake2b-16", 45571: "blake2b-24", 45572: "blake2b-32", 45573: "blake2b-40", 45574: "blake2b-48", 45575: "blake2b-56", 45576: "blake2b-64", 45577: "blake2b-72", 45578: "blake2b-80", 45579: "blake2b-88", 45580: "blake2b-96", 45581: "blake2b-104", 45582: "blake2b-112", 45583: "blake2b-120", 45584: "blake2b-128", 45585: "blake2b-136", 45586: "blake2b-144", 45587: "blake2b-152", 45588: "blake2b-160", 45589: "blake2b-168", 45590: "blake2b-176", 45591: "blake2b-184", 45592: "blake2b-192", 45593: "blake2b-200", 45594: "blake2b-208", 45595: "blake2b-216", 45596: "blake2b-224", 45597: "blake2b-232", 45598: "blake2b-240", 45599: "blake2b-248", 45600: "blake2b-256", 45601: "blake2b-264", 45602: "blake2b-272", 45603: "blake2b-280", 45604: "blake2b-288", 45605: "blake2b-296", 45606: "blake2b-304", 45607: "blake2b-312", 45608: "blake2b-320", 45609: "blake2b-328", 45610: "blake2b-336", 45611: "blake2b-344", 45612: "blake2b-352", 45613: "blake2b-360", 45614: "blake2b-368", 45615: "blake2b-376", 45616: "blake2b-384", 45617: "blake2b-392", 45618: "blake2b-400", 45619: "blake2b-408", 45620: "blake2b-416", 45621: "blake2b-424", 45622: "blake2b-432", 45623: "blake2b-440", 45624: "blake2b-448", 45625: "blake2b-456", 45626: "blake2b-464", 45627: "blake2b-472", 45628: "blake2b-480", 45629: "blake2b-488", 45630: "blake2b-496", 45631: "blake2b-504", 45632: "blake2b-512", 45633: "blake2s-8", 45634: "blake2s-16", 45635: "blake2s-24", 45636: "blake2s-32", 45637: "blake2s-40", 45638: "blake2s-48", 45639: "blake2s-56", 45640: "blake2s-64", 45641: "blake2s-72", 45642: "blake2s-80", 45643: "blake2s-88", 45644: "blake2s-96", 45645: "blake2s-104", 45646: "blake2s-112", 45647: "blake2s-120", 45648: "blake2s-128", 45649: "blake2s-136", 45650: "blake2s-144", 45651: "blake2s-152", 45652: "blake2s-160", 45653: "blake2s-168", 45654: "blake2s-176", 45655: "blake2s-184", 45656: "blake2s-192", 45657: "blake2s-200", 45658: "blake2s-208", 45659: "blake2s-216", 45660: "blake2s-224", 45661: "blake2s-232", 45662: "blake2s-240", 45663: "blake2s-248", 45664: "blake2s-256", 45825: "Skein256-8", 45826: "Skein256-16", 45827: "Skein256-24", 45828: "Skein256-32", 45829: "Skein256-40", 45830: "Skein256-48", 45831: "Skein256-56", 45832: "Skein256-64", 45833: "Skein256-72", 45834: "Skein256-80", 45835: "Skein256-88", 45836: "Skein256-96", 45837: "Skein256-104", 45838: "Skein256-112", 45839: "Skein256-120", 45840: "Skein256-128", 45841: "Skein256-136", 45842: "Skein256-144", 45843: "Skein256-152", 45844: "Skein256-160", 45845: "Skein256-168", 45846: "Skein256-176", 45847: "Skein256-184", 45848: "Skein256-192", 45849: "Skein256-200", 45850: "Skein256-208", 45851: "Skein256-216", 45852: "Skein256-224", 45853: "Skein256-232", 45854: "Skein256-240", 45855: "Skein256-248", 45856: "Skein256-256", 45857: "Skein512-8", 45858: "Skein512-16", 45859: "Skein512-24", 45860: "Skein512-32", 45861: "Skein512-40", 45862: "Skein512-48", 45863: "Skein512-56", 45864: "Skein512-64", 45865: "Skein512-72", 45866: "Skein512-80", 45867: "Skein512-88", 45868: "Skein512-96", 45869: "Skein512-104", 45870: "Skein512-112", 45871: "Skein512-120", 45872: "Skein512-128", 45873: "Skein512-136", 45874: "Skein512-144", 45875: "Skein512-152", 45876: "Skein512-160", 45877: "Skein512-168", 45878: "Skein512-176", 45879: "Skein512-184", 45880: "Skein512-192", 45881: "Skein512-200", 45882: "Skein512-208", 45883: "Skein512-216", 45884: "Skein512-224", 45885: "Skein512-232", 45886: "Skein512-240", 45887: "Skein512-248", 45888: "Skein512-256", 45889: "Skein512-264", 45890: "Skein512-272", 45891: "Skein512-280", 45892: "Skein512-288", 45893: "Skein512-296", 45894: "Skein512-304", 45895: "Skein512-312", 45896: "Skein512-320", 45897: "Skein512-328", 45898: "Skein512-336", 45899: "Skein512-344", 45900: "Skein512-352", 45901: "Skein512-360", 45902: "Skein512-368", 45903: "Skein512-376", 45904: "Skein512-384", 45905: "Skein512-392", 45906: "Skein512-400", 45907: "Skein512-408", 45908: "Skein512-416", 45909: "Skein512-424", 45910: "Skein512-432", 45911: "Skein512-440", 45912: "Skein512-448", 45913: "Skein512-456", 45914: "Skein512-464", 45915: "Skein512-472", 45916: "Skein512-480", 45917: "Skein512-488", 45918: "Skein512-496", 45919: "Skein512-504", 45920: "Skein512-512", 45921: "Skein1024-8", 45922: "Skein1024-16", 45923: "Skein1024-24", 45924: "Skein1024-32", 45925: "Skein1024-40", 45926: "Skein1024-48", 45927: "Skein1024-56", 45928: "Skein1024-64", 45929: "Skein1024-72", 45930: "Skein1024-80", 45931: "Skein1024-88", 45932: "Skein1024-96", 45933: "Skein1024-104", 45934: "Skein1024-112", 45935: "Skein1024-120", 45936: "Skein1024-128", 45937: "Skein1024-136", 45938: "Skein1024-144", 45939: "Skein1024-152", 45940: "Skein1024-160", 45941: "Skein1024-168", 45942: "Skein1024-176", 45943: "Skein1024-184", 45944: "Skein1024-192", 45945: "Skein1024-200", 45946: "Skein1024-208", 45947: "Skein1024-216", 45948: "Skein1024-224", 45949: "Skein1024-232", 45950: "Skein1024-240", 45951: "Skein1024-248", 45952: "Skein1024-256", 45953: "Skein1024-264", 45954: "Skein1024-272", 45955: "Skein1024-280", 45956: "Skein1024-288", 45957: "Skein1024-296", 45958: "Skein1024-304", 45959: "Skein1024-312", 45960: "Skein1024-320", 45961: "Skein1024-328", 45962: "Skein1024-336", 45963: "Skein1024-344", 45964: "Skein1024-352", 45965: "Skein1024-360", 45966: "Skein1024-368", 45967: "Skein1024-376", 45968: "Skein1024-384", 45969: "Skein1024-392", 45970: "Skein1024-400", 45971: "Skein1024-408", 45972: "Skein1024-416", 45973: "Skein1024-424", 45974: "Skein1024-432", 45975: "Skein1024-440", 45976: "Skein1024-448", 45977: "Skein1024-456", 45978: "Skein1024-464", 45979: "Skein1024-472", 45980: "Skein1024-480", 45981: "Skein1024-488", 45982: "Skein1024-496", 45983: "Skein1024-504", 45984: "Skein1024-512", 45985: "Skein1024-520", 45986: "Skein1024-528", 45987: "Skein1024-536", 45988: "Skein1024-544", 45989: "Skein1024-552", 45990: "Skein1024-560", 45991: "Skein1024-568", 45992: "Skein1024-576", 45993: "Skein1024-584", 45994: "Skein1024-592", 45995: "Skein1024-600", 45996: "Skein1024-608", 45997: "Skein1024-616", 45998: "Skein1024-624", 45999: "Skein1024-632", 46e3: "Skein1024-640", 46001: "Skein1024-648", 46002: "Skein1024-656", 46003: "Skein1024-664", 46004: "Skein1024-672", 46005: "Skein1024-680", 46006: "Skein1024-688", 46007: "Skein1024-696", 46008: "Skein1024-704", 46009: "Skein1024-712", 46010: "Skein1024-720", 46011: "Skein1024-728", 46012: "Skein1024-736", 46013: "Skein1024-744", 46014: "Skein1024-752", 46015: "Skein1024-760", 46016: "Skein1024-768", 46017: "Skein1024-776", 46018: "Skein1024-784", 46019: "Skein1024-792", 46020: "Skein1024-800", 46021: "Skein1024-808", 46022: "Skein1024-816", 46023: "Skein1024-824", 46024: "Skein1024-832", 46025: "Skein1024-840", 46026: "Skein1024-848", 46027: "Skein1024-856", 46028: "Skein1024-864", 46029: "Skein1024-872", 46030: "Skein1024-880", 46031: "Skein1024-888", 46032: "Skein1024-896", 46033: "Skein1024-904", 46034: "Skein1024-912", 46035: "Skein1024-920", 46036: "Skein1024-928", 46037: "Skein1024-936", 46038: "Skein1024-944", 46039: "Skein1024-952", 46040: "Skein1024-960", 46041: "Skein1024-968", 46042: "Skein1024-976", 46043: "Skein1024-984", 46044: "Skein1024-992", 46045: "Skein1024-1000", 46046: "Skein1024-1008", 46047: "Skein1024-1016", 46048: "Skein1024-1024" }), t.defaultLengths = Object.freeze({ 17: 20, 18: 32, 19: 64, 86: 32, 23: 28, 22: 32, 21: 48, 20: 64, 24: 32, 25: 64, 26: 28, 27: 32, 28: 48, 29: 64, 34: 32, 45569: 1, 45570: 2, 45571: 3, 45572: 4, 45573: 5, 45574: 6, 45575: 7, 45576: 8, 45577: 9, 45578: 10, 45579: 11, 45580: 12, 45581: 13, 45582: 14, 45583: 15, 45584: 16, 45585: 17, 45586: 18, 45587: 19, 45588: 20, 45589: 21, 45590: 22, 45591: 23, 45592: 24, 45593: 25, 45594: 26, 45595: 27, 45596: 28, 45597: 29, 45598: 30, 45599: 31, 45600: 32, 45601: 33, 45602: 34, 45603: 35, 45604: 36, 45605: 37, 45606: 38, 45607: 39, 45608: 40, 45609: 41, 45610: 42, 45611: 43, 45612: 44, 45613: 45, 45614: 46, 45615: 47, 45616: 48, 45617: 49, 45618: 50, 45619: 51, 45620: 52, 45621: 53, 45622: 54, 45623: 55, 45624: 56, 45625: 57, 45626: 58, 45627: 59, 45628: 60, 45629: 61, 45630: 62, 45631: 63, 45632: 64, 45633: 1, 45634: 2, 45635: 3, 45636: 4, 45637: 5, 45638: 6, 45639: 7, 45640: 8, 45641: 9, 45642: 10, 45643: 11, 45644: 12, 45645: 13, 45646: 14, 45647: 15, 45648: 16, 45649: 17, 45650: 18, 45651: 19, 45652: 20, 45653: 21, 45654: 22, 45655: 23, 45656: 24, 45657: 25, 45658: 26, 45659: 27, 45660: 28, 45661: 29, 45662: 30, 45663: 31, 45664: 32, 45825: 1, 45826: 2, 45827: 3, 45828: 4, 45829: 5, 45830: 6, 45831: 7, 45832: 8, 45833: 9, 45834: 10, 45835: 11, 45836: 12, 45837: 13, 45838: 14, 45839: 15, 45840: 16, 45841: 17, 45842: 18, 45843: 19, 45844: 20, 45845: 21, 45846: 22, 45847: 23, 45848: 24, 45849: 25, 45850: 26, 45851: 27, 45852: 28, 45853: 29, 45854: 30, 45855: 31, 45856: 32, 45857: 1, 45858: 2, 45859: 3, 45860: 4, 45861: 5, 45862: 6, 45863: 7, 45864: 8, 45865: 9, 45866: 10, 45867: 11, 45868: 12, 45869: 13, 45870: 14, 45871: 15, 45872: 16, 45873: 17, 45874: 18, 45875: 19, 45876: 20, 45877: 21, 45878: 22, 45879: 23, 45880: 24, 45881: 25, 45882: 26, 45883: 27, 45884: 28, 45885: 29, 45886: 30, 45887: 31, 45888: 32, 45889: 33, 45890: 34, 45891: 35, 45892: 36, 45893: 37, 45894: 38, 45895: 39, 45896: 40, 45897: 41, 45898: 42, 45899: 43, 45900: 44, 45901: 45, 45902: 46, 45903: 47, 45904: 48, 45905: 49, 45906: 50, 45907: 51, 45908: 52, 45909: 53, 45910: 54, 45911: 55, 45912: 56, 45913: 57, 45914: 58, 45915: 59, 45916: 60, 45917: 61, 45918: 62, 45919: 63, 45920: 64, 45921: 1, 45922: 2, 45923: 3, 45924: 4, 45925: 5, 45926: 6, 45927: 7, 45928: 8, 45929: 9, 45930: 10, 45931: 11, 45932: 12, 45933: 13, 45934: 14, 45935: 15, 45936: 16, 45937: 17, 45938: 18, 45939: 19, 45940: 20, 45941: 21, 45942: 22, 45943: 23, 45944: 24, 45945: 25, 45946: 26, 45947: 27, 45948: 28, 45949: 29, 45950: 30, 45951: 31, 45952: 32, 45953: 33, 45954: 34, 45955: 35, 45956: 36, 45957: 37, 45958: 38, 45959: 39, 45960: 40, 45961: 41, 45962: 42, 45963: 43, 45964: 44, 45965: 45, 45966: 46, 45967: 47, 45968: 48, 45969: 49, 45970: 50, 45971: 51, 45972: 52, 45973: 53, 45974: 54, 45975: 55, 45976: 56, 45977: 57, 45978: 58, 45979: 59, 45980: 60, 45981: 61, 45982: 62, 45983: 63, 45984: 64, 45985: 65, 45986: 66, 45987: 67, 45988: 68, 45989: 69, 45990: 70, 45991: 71, 45992: 72, 45993: 73, 45994: 74, 45995: 75, 45996: 76, 45997: 77, 45998: 78, 45999: 79, 46e3: 80, 46001: 81, 46002: 82, 46003: 83, 46004: 84, 46005: 85, 46006: 86, 46007: 87, 46008: 88, 46009: 89, 46010: 90, 46011: 91, 46012: 92, 46013: 93, 46014: 94, 46015: 95, 46016: 96, 46017: 97, 46018: 98, 46019: 99, 46020: 100, 46021: 101, 46022: 102, 46023: 103, 46024: 104, 46025: 105, 46026: 106, 46027: 107, 46028: 108, 46029: 109, 46030: 110, 46031: 111, 46032: 112, 46033: 113, 46034: 114, 46035: 115, 46036: 116, 46037: 117, 46038: 118, 46039: 119, 46040: 120, 46041: 121, 46042: 122, 46043: 123, 46044: 124, 46045: 125, 46046: 126, 46047: 127, 46048: 128 });
    }, function(e, t, r2) {
      var n = r2(1).Buffer, i = r2(428);
      (t = e.exports = a).encode = function(e2, t2) {
        var r3 = s2(e2);
        return a(r3.name, n.from(r3.encode(t2)));
      }, t.decode = function(e2) {
        n.isBuffer(e2) && (e2 = e2.toString());
        var t2 = e2.substring(0, 1);
        "string" == typeof (e2 = e2.substring(1, e2.length)) && (e2 = n.from(e2));
        var r3 = s2(t2);
        return n.from(r3.decode(e2.toString()));
      }, t.isEncoded = function(e2) {
        n.isBuffer(e2) && (e2 = e2.toString());
        if ("[object String]" !== Object.prototype.toString.call(e2))
          return false;
        var t2 = e2.substring(0, 1);
        try {
          return s2(t2).name;
        } catch (e3) {
          return false;
        }
      }, t.names = Object.freeze(Object.keys(i.names)), t.codes = Object.freeze(Object.keys(i.codes));
      var o = new Error("Unsupported encoding");
      function a(e2, t2) {
        if (!t2)
          throw new Error("requires an encoded buffer");
        var r3 = s2(e2), i2 = n.from(r3.code);
        return function(e3, t3) {
          s2(e3).decode(t3.toString());
        }(r3.name, t2), n.concat([i2, t2]);
      }
      function s2(e2) {
        var t2;
        if (i.names[e2])
          t2 = i.names[e2];
        else {
          if (!i.codes[e2])
            throw o;
          t2 = i.codes[e2];
        }
        if (!t2.isImplemented())
          throw new Error("Base " + e2 + " is not implemented yet");
        return t2;
      }
    }, function(e, t, r2) {
      var n = r2(429), i = r2(191), o = r2(430), a = r2(431), s2 = r2(432), f2 = [["base1", "1", "", "1"], ["base2", "0", i, "01"], ["base8", "7", i, "01234567"], ["base10", "9", i, "0123456789"], ["base16", "f", o, "0123456789abcdef"], ["base32", "b", a, "abcdefghijklmnopqrstuvwxyz234567"], ["base32pad", "c", a, "abcdefghijklmnopqrstuvwxyz234567="], ["base32hex", "v", a, "0123456789abcdefghijklmnopqrstuv"], ["base32hexpad", "t", a, "0123456789abcdefghijklmnopqrstuv="], ["base32z", "h", a, "ybndrfg8ejkmcpqxot1uwisza345h769"], ["base58flickr", "Z", i, "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"], ["base58btc", "z", i, "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"], ["base64", "m", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"], ["base64pad", "M", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="], ["base64url", "u", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"], ["base64urlpad", "U", s2, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]], c = f2.reduce(function(e2, t2) {
        return e2[t2[0]] = new n(t2[0], t2[1], t2[2], t2[3]), e2;
      }, {}), u = f2.reduce(function(e2, t2) {
        return e2[t2[1]] = c[t2[0]], e2;
      }, {});
      e.exports = { names: c, codes: u };
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = function() {
        function e2(t2, r3, n2, o2) {
          (0, i.default)(this, e2), this.name = t2, this.code = r3, this.alphabet = o2, n2 && o2 && (this.engine = n2(o2));
        }
        return (0, o.default)(e2, [{ key: "encode", value: function(e3) {
          return this.engine.encode(e3);
        } }, { key: "decode", value: function(e3) {
          return this.engine.decode(e3);
        } }, { key: "isImplemented", value: function() {
          return this.engine;
        } }]), e2;
      }();
      e.exports = a;
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a, s2 = true, f2 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s2 = e3.done, e3;
        }, e: function(e3) {
          f2 = true, a = e3;
        }, f: function() {
          try {
            s2 || null == r3.return || r3.return();
          } finally {
            if (f2)
              throw a;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      var o = r2(1).Buffer;
      e.exports = function(e2) {
        return { encode: function(e3) {
          return "string" == typeof e3 ? o.from(e3).toString("hex") : e3.toString("hex");
        }, decode: function(t2) {
          var r3, i2 = n(t2);
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) {
              var a = r3.value;
              if (e2.indexOf(a) < 0)
                throw new Error("invalid base16 character");
            }
          } catch (e3) {
            i2.e(e3);
          } finally {
            i2.f();
          }
          return o.from(t2, "hex");
        } };
      };
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a, s2 = true, f2 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s2 = e3.done, e3;
        }, e: function(e3) {
          f2 = true, a = e3;
        }, f: function() {
          try {
            s2 || null == r3.return || r3.return();
          } finally {
            if (f2)
              throw a;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      function o(e2, t2) {
        var r3 = e2.byteLength, n2 = new Uint8Array(e2), i2 = t2.indexOf("=") === t2.length - 1;
        i2 && (t2 = t2.substring(0, t2.length - 1));
        for (var o2 = 0, a = 0, s2 = "", f2 = 0; f2 < r3; f2++)
          for (a = a << 8 | n2[f2], o2 += 8; o2 >= 5; )
            s2 += t2[a >>> o2 - 5 & 31], o2 -= 5;
        if (o2 > 0 && (s2 += t2[a << 5 - o2 & 31]), i2)
          for (; s2.length % 8 != 0; )
            s2 += "=";
        return s2;
      }
      e.exports = function(e2) {
        return { encode: function(t2) {
          return o("string" == typeof t2 ? Uint8Array.from(t2) : t2, e2);
        }, decode: function(t2) {
          var r3, i2 = n(t2);
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) {
              var o2 = r3.value;
              if (e2.indexOf(o2) < 0)
                throw new Error("invalid base32 character");
            }
          } catch (e3) {
            i2.e(e3);
          } finally {
            i2.f();
          }
          return function(e3, t3) {
            for (var r4 = (e3 = e3.replace(new RegExp("=", "g"), "")).length, n2 = 0, i3 = 0, o3 = 0, a = new Uint8Array(5 * r4 / 8 | 0), s2 = 0; s2 < r4; s2++)
              i3 = i3 << 5 | t3.indexOf(e3[s2]), (n2 += 5) >= 8 && (a[o3++] = i3 >>> n2 - 8 & 255, n2 -= 8);
            return a.buffer;
          }(t2, e2);
        } };
      };
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a, s2 = true, f2 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s2 = e3.done, e3;
        }, e: function(e3) {
          f2 = true, a = e3;
        }, f: function() {
          try {
            s2 || null == r3.return || r3.return();
          } finally {
            if (f2)
              throw a;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      var o = r2(1).Buffer;
      e.exports = function(e2) {
        var t2 = e2.indexOf("=") > -1, r3 = e2.indexOf("-") > -1 && e2.indexOf("_") > -1;
        return { encode: function(e3) {
          var n2 = "";
          n2 = "string" == typeof e3 ? o.from(e3).toString("base64") : e3.toString("base64"), r3 && (n2 = n2.replace(/\+/g, "-").replace(/\//g, "_"));
          var i2 = n2.indexOf("=");
          return i2 > 0 && !t2 && (n2 = n2.substring(0, i2)), n2;
        }, decode: function(t3) {
          var r4, i2 = n(t3);
          try {
            for (i2.s(); !(r4 = i2.n()).done; ) {
              var a = r4.value;
              if (e2.indexOf(a) < 0)
                throw new Error("invalid base64 character");
            }
          } catch (e3) {
            i2.e(e3);
          } finally {
            i2.f();
          }
          return o.from(t3, "base64");
        } };
      };
    }, function(e, t, r2) {
      var n = r2(1).Buffer, i = r2(66), o = r2(434), a = r2(435), s2 = r2(192);
      (t = e.exports).addPrefix = function(e2, t2) {
        var r3;
        if (n.isBuffer(e2))
          r3 = s2.varintBufferEncode(e2);
        else {
          if (!a[e2])
            throw new Error("multicodec not recognized");
          r3 = a[e2];
        }
        return n.concat([r3, t2]);
      }, t.rmPrefix = function(e2) {
        return i.decode(e2), e2.slice(i.decode.bytes);
      }, t.getCodec = function(e2) {
        var t2 = i.decode(e2), r3 = o.get(t2);
        if (void 0 === r3)
          throw new Error("Code ".concat(t2, " not found"));
        return r3;
      }, t.getName = function(e2) {
        return o.get(e2);
      }, t.getNumber = function(e2) {
        var t2 = a[e2];
        if (void 0 === t2)
          throw new Error("Codec `" + e2 + "` not found");
        return s2.varintBufferDecode(t2)[0];
      }, t.getCode = function(e2) {
        return i.decode(e2);
      }, t.getCodeVarint = function(e2) {
        var t2 = a[e2];
        if (void 0 === t2)
          throw new Error("Codec `" + e2 + "` not found");
        return t2;
      }, t.getVarint = function(e2) {
        return i.encode(e2);
      };
      var f2 = r2(436);
      Object.assign(t, f2), t.print = r2(437);
    }, function(e, t, r2) {
      var n = r2(67), i = /* @__PURE__ */ new Map();
      for (var o in n) {
        var a = n[o];
        i.set(a, o);
      }
      e.exports = Object.freeze(i);
    }, function(e, t, r2) {
      var n = r2(67), i = r2(192).varintEncode, o = {};
      for (var a in n) {
        var s2 = n[a];
        o[a] = i(s2);
      }
      e.exports = Object.freeze(o);
    }, function(e, t, r2) {
      for (var n = r2(0)(r2(30)), i = r2(67), o = {}, a = 0, s2 = Object.entries(i); a < s2.length; a++) {
        var f2 = (0, n.default)(s2[a], 2), c = f2[0], u = f2[1];
        o[c.toUpperCase().replace(/-/g, "_")] = u;
      }
      e.exports = Object.freeze(o);
    }, function(e, t, r2) {
      for (var n = r2(0)(r2(30)), i = r2(67), o = {}, a = 0, s2 = Object.entries(i); a < s2.length; a++) {
        var f2 = (0, n.default)(s2[a], 2), c = f2[0], u = f2[1];
        void 0 === o[u] && (o[u] = c);
      }
      e.exports = Object.freeze(o);
    }, function(e, t, r2) {
      var n = r2(109), i = r2(1).Buffer, o = { checkCIDComponents: function(e2) {
        if (null == e2)
          return "null values are not valid CIDs";
        if (0 !== e2.version && 1 !== e2.version)
          return "Invalid version, must be a number equal to 1 or 0";
        if ("string" != typeof e2.codec)
          return "codec must be string";
        if (0 === e2.version) {
          if ("dag-pb" !== e2.codec)
            return "codec must be 'dag-pb' for CIDv0";
          if ("base58btc" !== e2.multibaseName)
            return "multibaseName must be 'base58btc' for CIDv0";
        }
        if (!i.isBuffer(e2.multihash))
          return "multihash must be a Buffer";
        try {
          n.validate(e2.multihash);
        } catch (e3) {
          var t2 = e3.message;
          return t2 || (t2 = "Multihash validation failed"), t2;
        }
      } };
      e.exports = o;
    }, function(e, t, r2) {
      var n = r2(0), i = n(r2(440)), o = n(r2(58)), a = n(r2(8)), s2 = n(r2(9)), f2 = n(r2(143)), c = n(r2(14)), u = n(r2(15)), d = n(r2(13));
      function h(e2) {
        var t2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (e3) {
            return false;
          }
        }();
        return function() {
          var r3, n2 = (0, d.default)(e2);
          if (t2) {
            var i2 = (0, d.default)(this).constructor;
            r3 = Reflect.construct(n2, arguments, i2);
          } else
            r3 = n2.apply(this, arguments);
          return (0, u.default)(this, r3);
        };
      }
      e.exports = function(e2, t2) {
        var r3 = t2.className, n2 = t2.symbolName, i2 = Symbol.for(n2), u2 = (0, o.default)({}, r3, function(e3, t3) {
          (0, c.default)(o2, e3);
          var n3 = h(o2);
          function o2() {
            var e4;
            (0, a.default)(this, o2);
            for (var t4 = arguments.length, r4 = new Array(t4), s3 = 0; s3 < t4; s3++)
              r4[s3] = arguments[s3];
            return e4 = n3.call.apply(n3, [this].concat(r4)), Object.defineProperty((0, f2.default)(e4), i2, { value: true }), e4;
          }
          return (0, s2.default)(o2, [{ key: t3, get: function() {
            return r3;
          } }]), o2;
        }(e2, Symbol.toStringTag))[r3];
        return u2["is".concat(r3)] = function(e3) {
          return !(!e3 || !e3[i2]);
        }, u2;
      }, e.exports.proto = function(e2, t2) {
        var r3 = t2.className, n2 = t2.symbolName, a2 = t2.withoutNew, s3 = Symbol.for(n2), f3 = (0, o.default)({}, r3, function() {
          for (var t3 = arguments.length, r4 = new Array(t3), n3 = 0; n3 < t3; n3++)
            r4[n3] = arguments[n3];
          if (a2 && !(this instanceof f3))
            return (0, i.default)(f3, r4);
          var o2 = e2.call.apply(e2, [this].concat(r4)) || this;
          return o2 && !o2[s3] && Object.defineProperty(o2, s3, { value: true }), o2;
        })[r3];
        return f3.prototype = Object.create(e2.prototype), f3.prototype.constructor = f3, Object.defineProperty(f3.prototype, Symbol.toStringTag, { get: function() {
          return r3;
        } }), f3["is".concat(r3)] = function(e3) {
          return !(!e3 || !e3[s3]);
        }, f3;
      };
    }, function(e, t, r2) {
      var n = r2(142), i = r2(441);
      function o(t2, r3, a) {
        return i() ? (e.exports = o = Reflect.construct.bind(), e.exports.__esModule = true, e.exports.default = e.exports) : (e.exports = o = function(e2, t3, r4) {
          var i2 = [null];
          i2.push.apply(i2, t3);
          var o2 = new (Function.bind.apply(e2, i2))();
          return r4 && n(o2, r4.prototype), o2;
        }, e.exports.__esModule = true, e.exports.default = e.exports), o.apply(null, arguments);
      }
      e.exports = o, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      e.exports = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct)
          return false;
        if (Reflect.construct.sham)
          return false;
        if ("function" == typeof Proxy)
          return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (e2) {
          return false;
        }
      }, e.exports.__esModule = true, e.exports.default = e.exports;
    }, function(e, t, r2) {
      var n = r2(190);
      t.cidV0ToV1Base32 = function(e2) {
        var t2 = new n(e2);
        return 0 === t2.version && (t2 = t2.toV1()), t2.toString("base32");
      };
    }, function(e, t, r2) {
      (function(t2, n) {
        var i = r2(0), o = i(r2(186)), a = i(r2(2)), s2 = i(r2(58)), f2 = i(r2(30));
        function c(e2, t3) {
          var r3 = Object.keys(e2);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(e2);
            t3 && (n2 = n2.filter(function(t4) {
              return Object.getOwnPropertyDescriptor(e2, t4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        function u(e2) {
          for (var t3 = 1; t3 < arguments.length; t3++) {
            var r3 = null != arguments[t3] ? arguments[t3] : {};
            t3 % 2 ? c(Object(r3), true).forEach(function(t4) {
              (0, s2.default)(e2, t4, r3[t4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(r3)) : c(Object(r3)).forEach(function(t4) {
              Object.defineProperty(e2, t4, Object.getOwnPropertyDescriptor(r3, t4));
            });
          }
          return e2;
        }
        function d(e2, t3) {
          var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
          if (!r3) {
            if (Array.isArray(e2) || (r3 = function(e3, t4) {
              if (!e3)
                return;
              if ("string" == typeof e3)
                return h(e3, t4);
              var r4 = Object.prototype.toString.call(e3).slice(8, -1);
              "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
              if ("Map" === r4 || "Set" === r4)
                return Array.from(e3);
              if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
                return h(e3, t4);
            }(e2)) || t3 && e2 && "number" == typeof e2.length) {
              r3 && (e2 = r3);
              var n2 = 0, i2 = function() {
              };
              return { s: i2, n: function() {
                return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
              }, e: function(e3) {
                throw e3;
              }, f: i2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var o2, a2 = true, s3 = false;
          return { s: function() {
            r3 = r3.call(e2);
          }, n: function() {
            var e3 = r3.next();
            return a2 = e3.done, e3;
          }, e: function(e3) {
            s3 = true, o2 = e3;
          }, f: function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (s3)
                throw o2;
            }
          } };
        }
        function h(e2, t3) {
          (null == t3 || t3 > e2.length) && (t3 = e2.length);
          for (var r3 = 0, n2 = new Array(t3); r3 < t3; r3++)
            n2[r3] = e2[r3];
          return n2;
        }
        var l = r2(34), p = r2(38), b = r2(444), y = r2(83), v = r2(495), m = r2(496), g = r2(17), w = r2(12), _ = r2(230).TransactionFactory, k = r2(120).default, A = r2(120).Hardfork, S = r2(546), E = function(e2) {
          return null == e2;
        }, x = function(e2) {
          return null != e2;
        }, P = function() {
          var e2 = this;
          l.packageInit(this, arguments), delete this.BatchRequest, delete this.extend;
          var t3 = [new p({ name: "getNetworkId", call: "net_version", params: 0, outputFormatter: parseInt }), new p({ name: "getChainId", call: "eth_chainId", params: 0, outputFormatter: g.hexToNumber }), new p({ name: "getGasPrice", call: "eth_gasPrice", params: 0 }), new p({ name: "getTransactionCount", call: "eth_getTransactionCount", params: 2, inputFormatter: [function(e3) {
            if (g.isAddress(e3))
              return e3;
            throw new Error("Address " + e3 + ' is not a valid address to get the "transactionCount".');
          }, function() {
            return "latest";
          }] }), new p({ name: "getBlockByNumber", call: "eth_getBlockByNumber", params: 2, inputFormatter: [function(e3) {
            return e3 ? g.toHex(e3) : "latest";
          }, function() {
            return false;
          }] })];
          this._ethereumCall = {}, t3.forEach(function(t4) {
            t4.attachToObject(e2._ethereumCall), t4.setRequestManager(e2._requestManager);
          }), this.wallet = new T(this);
        };
        function O(e2, t3) {
          return new Promise(function(r3, n2) {
            try {
              (void 0 === t3.type || t3.type < "0x2") && void 0 !== t3.gasPrice ? r3({ gasPrice: t3.gasPrice }) : "0x2" === t3.type && t3.maxFeePerGas && t3.maxPriorityFeePerGas ? r3({ maxFeePerGas: t3.maxFeePerGas, maxPriorityFeePerGas: t3.maxPriorityFeePerGas }) : Promise.all([e2._ethereumCall.getBlockByNumber(), e2._ethereumCall.getGasPrice()]).then(function(e3) {
                var n3 = (0, f2.default)(e3, 2), i2 = n3[0], o2 = n3[1];
                if ("0x2" === t3.type && i2 && i2.baseFeePerGas) {
                  var a2, s3;
                  t3.gasPrice ? (a2 = t3.gasPrice, s3 = t3.gasPrice, delete t3.gasPrice) : (a2 = t3.maxPriorityFeePerGas || "0x9502F900", s3 = t3.maxFeePerGas || g.toHex(g.toBN(i2.baseFeePerGas).mul(g.toBN(2)).add(g.toBN(a2)))), r3({ maxFeePerGas: s3, maxPriorityFeePerGas: a2 });
                } else {
                  if (t3.maxPriorityFeePerGas || t3.maxFeePerGas)
                    throw Error("Network doesn't support eip-1559");
                  r3({ gasPrice: o2 });
                }
              }).catch(function(e3) {
                n2(e3);
              });
            } catch (e3) {
              n2(e3);
            }
          });
        }
        function T(e2) {
          this._accounts = e2, this.length = 0, this.defaultKeyName = "web3js_wallet";
        }
        P.prototype._addAccountFunctions = function(e2) {
          var t3 = this;
          return e2.signTransaction = function(r3, n2) {
            return t3.signTransaction(r3, e2.privateKey, n2);
          }, e2.sign = function(r3) {
            return t3.sign(r3, e2.privateKey);
          }, e2.encrypt = function(r3, n2) {
            return t3.encrypt(e2.privateKey, r3, n2);
          }, e2;
        }, P.prototype.create = function(e2) {
          return this._addAccountFunctions(b.create(e2 || g.randomHex(32)));
        }, P.prototype.privateKeyToAccount = function(e2, t3) {
          if (e2.startsWith("0x") || (e2 = "0x" + e2), !t3 && 66 !== e2.length)
            throw new Error("Private key must be 32 bytes long");
          return this._addAccountFunctions(b.fromPrivate(e2));
        }, P.prototype.signTransaction = function(e2, t3, r3) {
          var i2 = false, o2 = {}, a2 = !(!e2 || !(e2.chain && e2.hardfork || e2.common));
          if (r3 = r3 || function() {
          }, !e2)
            return i2 = new Error("No transaction object given!"), r3(i2), Promise.reject(i2);
          if (x(e2.common) && E(e2.common.customChain))
            return i2 = new Error("If tx.common is provided it must have tx.common.customChain"), r3(i2), Promise.reject(i2);
          if (x(e2.common) && E(e2.common.customChain.chainId))
            return i2 = new Error("If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId"), r3(i2), Promise.reject(i2);
          if (x(e2.common) && x(e2.common.customChain.chainId) && x(e2.chainId) && e2.chainId !== e2.common.customChain.chainId)
            return i2 = new Error("Chain Id doesnt match in tx.chainId tx.common.customChain.chainId"), r3(i2), Promise.reject(i2);
          function s3(e3) {
            var i3 = function(e4) {
              if (e4.common && e4.chain && e4.hardfork)
                return new Error("Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.");
              if (e4.chain && !e4.hardfork || e4.hardfork && !e4.chain)
                return new Error('When specifying chain and hardfork, both values must be defined. Received "chain": ' + e4.chain + ', "hardfork": ' + e4.hardfork);
              if (!(e4.gas || e4.gasLimit || e4.maxPriorityFeePerGas || e4.maxFeePerGas))
                return new Error('"gas" is missing');
              if (e4.gas && e4.gasPrice) {
                if (e4.gas < 0 || e4.gasPrice < 0)
                  return new Error("Gas or gasPrice is lower than 0");
              } else if (e4.maxPriorityFeePerGas < 0 || e4.maxFeePerGas < 0)
                return new Error("maxPriorityFeePerGas or maxFeePerGas is lower than 0");
              if (e4.nonce < 0 || e4.chainId < 0)
                return new Error("Nonce or chainId is lower than 0");
              return;
            }(e3);
            if (i3)
              return r3(i3), Promise.reject(i3);
            try {
              var s4 = w.formatters.inputCallFormatter(Object.assign({}, e3));
              s4.data = s4.data || "0x", s4.value = s4.value || "0x", s4.gasLimit = s4.gasLimit || s4.gas, "0x1" === s4.type && void 0 === s4.accessList && (s4.accessList = []), a2 ? (s4.common && (o2.common = k.forCustomChain(s4.common.baseChain || "mainnet", { name: s4.common.customChain.name || "custom-network", networkId: s4.common.customChain.networkId, chainId: s4.common.customChain.chainId }, s4.common.hardfork || A.London), delete s4.common), s4.chain && (o2.chain = s4.chain, delete s4.chain), s4.hardfork && (o2.hardfork = s4.hardfork, delete s4.hardfork)) : (o2.common = k.forCustomChain("mainnet", { name: "custom-network", networkId: s4.networkId, chainId: s4.chainId }, s4.hardfork || A.London), delete s4.networkId), t3.startsWith("0x") && (t3 = t3.substring(2));
              var f3 = _.fromTxData(s4, o2).sign(n.from(t3, "hex")), c2 = f3.validate(true);
              if (c2.length > 0) {
                var u2, h2 = "Signer Error: ", l2 = d(c2);
                try {
                  for (l2.s(); !(u2 = l2.n()).done; ) {
                    var p2 = u2.value;
                    h2 += "".concat(h2, " ").concat(p2, ".");
                  }
                } catch (e4) {
                  l2.e(e4);
                } finally {
                  l2.f();
                }
                throw new Error(h2);
              }
              var b2 = "0x" + f3.serialize().toString("hex"), y2 = g.keccak256(b2), v2 = { messageHash: "0x" + n.from(f3.getMessageToSign(true)).toString("hex"), v: "0x" + f3.v.toString("hex"), r: "0x" + f3.r.toString("hex"), s: "0x" + f3.s.toString("hex"), rawTransaction: b2, transactionHash: y2 };
              return r3(null, v2), v2;
            } catch (e4) {
              return r3(e4), Promise.reject(e4);
            }
          }
          return e2.type = function(e3) {
            var t4, r4 = void 0 !== e3.maxFeePerGas || void 0 !== e3.maxPriorityFeePerGas;
            void 0 !== e3.type ? t4 = g.toHex(e3.type) : void 0 === e3.type && r4 && (t4 = "0x2");
            if (void 0 !== e3.gasPrice && ("0x2" === t4 || r4))
              throw Error("eip-1559 transactions don't support gasPrice");
            if (("0x1" === t4 || "0x0" === t4) && r4)
              throw Error("pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
            r4 || e3.common && e3.common.hardfork && e3.common.hardfork.toLowerCase() === A.London || e3.hardfork && e3.hardfork.toLowerCase() === A.London ? t4 = "0x2" : (e3.accessList || e3.common && e3.common.hardfork && e3.common.hardfork.toLowerCase() === A.Berlin || e3.hardfork && e3.hardfork.toLowerCase() === A.Berlin) && (t4 = "0x1");
            return t4;
          }(e2), void 0 !== e2.nonce && void 0 !== e2.chainId && (void 0 !== e2.gasPrice || void 0 !== e2.maxFeePerGas && void 0 !== e2.maxPriorityFeePerGas) && a2 ? Promise.resolve(s3(e2)) : Promise.all([E(e2.common) || E(e2.common.customChain.chainId) ? E(e2.chainId) ? this._ethereumCall.getChainId() : e2.chainId : void 0, E(e2.nonce) ? this._ethereumCall.getTransactionCount(this.privateKeyToAccount(t3).address) : e2.nonce, E(a2) ? this._ethereumCall.getNetworkId() : 1, O(this, e2)]).then(function(t4) {
            var r4 = (0, f2.default)(t4, 4), n2 = r4[0], i3 = r4[1], o3 = r4[2], a3 = r4[3];
            if (E(n2) && E(e2.common) && E(e2.common.customChain.chainId) || E(i3) || E(o3) || E(a3))
              throw new Error(`One of the values "chainId", "networkId", "gasPrice", or "nonce" couldn't be fetched: ` + JSON.stringify(t4));
            return s3(u(u(u({}, e2), E(e2.common) || E(e2.common.customChain.chainId) ? { chainId: n2 } : {}), {}, { nonce: i3, networkId: o3 }, a3));
          });
        }, P.prototype.recoverTransaction = function(e2) {
          var t3 = n.from(e2.slice(2), "hex"), r3 = _.fromSerializedData(t3);
          return g.toChecksumAddress(r3.getSenderAddress().toString("hex"));
        }, P.prototype.hashMessage = function(e2) {
          var t3 = g.isHexStrict(e2) ? e2 : g.utf8ToHex(e2), r3 = g.hexToBytes(t3), i2 = n.from(r3), o2 = "Ethereum Signed Message:\n" + r3.length, a2 = n.from(o2), s3 = n.concat([a2, i2]);
          return S.bufferToHex(S.keccak256(s3));
        }, P.prototype.sign = function(e2, t3) {
          if (t3.startsWith("0x") || (t3 = "0x" + t3), 66 !== t3.length)
            throw new Error("Private key must be 32 bytes long");
          var r3 = this.hashMessage(e2), n2 = b.sign(r3, t3), i2 = b.decodeSignature(n2);
          return { message: e2, messageHash: r3, v: i2[0], r: i2[1], s: i2[2], signature: n2 };
        }, P.prototype.recover = function(e2, t3, r3) {
          var n2 = [].slice.apply(arguments);
          return e2 && "object" === (0, a.default)(e2) ? this.recover(e2.messageHash, b.encodeSignature([e2.v, e2.r, e2.s]), true) : (r3 || (e2 = this.hashMessage(e2)), n2.length >= 4 ? (r3 = "boolean" == typeof (r3 = n2.slice(-1)[0]) && !!r3, this.recover(e2, b.encodeSignature(n2.slice(1, 4)), r3)) : b.recover(e2, t3));
        }, P.prototype.decrypt = function(e2, t3, r3) {
          if ("string" != typeof t3)
            throw new Error("No password given.");
          var i2, s3, f3 = e2 && "object" === (0, a.default)(e2) ? e2 : JSON.parse(r3 ? e2.toLowerCase() : e2);
          if (3 !== f3.version)
            throw new Error("Not a valid V3 wallet");
          if ("scrypt" === f3.crypto.kdf)
            s3 = f3.crypto.kdfparams, i2 = v.syncScrypt(n.from(t3), n.from(s3.salt, "hex"), s3.n, s3.r, s3.p, s3.dklen);
          else {
            if ("pbkdf2" !== f3.crypto.kdf)
              throw new Error("Unsupported key derivation scheme");
            if ("hmac-sha256" !== (s3 = f3.crypto.kdfparams).prf)
              throw new Error("Unsupported parameters to PBKDF2");
            i2 = y.pbkdf2Sync(n.from(t3), n.from(s3.salt, "hex"), s3.c, s3.dklen, "sha256");
          }
          var c2 = n.from(f3.crypto.ciphertext, "hex");
          if (g.sha3(n.from([].concat((0, o.default)(i2.slice(16, 32)), (0, o.default)(c2)))).replace("0x", "") !== f3.crypto.mac)
            throw new Error("Key derivation failed - possibly wrong password");
          var u2 = y.createDecipheriv(f3.crypto.cipher, i2.slice(0, 16), n.from(f3.crypto.cipherparams.iv, "hex")), d2 = "0x" + n.from([].concat((0, o.default)(u2.update(c2)), (0, o.default)(u2.final()))).toString("hex");
          return this.privateKeyToAccount(d2, true);
        }, P.prototype.encrypt = function(e2, t3, r3) {
          var i2, a2 = this.privateKeyToAccount(e2, true), s3 = (r3 = r3 || {}).salt || y.randomBytes(32), f3 = r3.iv || y.randomBytes(16), c2 = r3.kdf || "scrypt", u2 = { dklen: r3.dklen || 32, salt: s3.toString("hex") };
          if ("pbkdf2" === c2)
            u2.c = r3.c || 262144, u2.prf = "hmac-sha256", i2 = y.pbkdf2Sync(n.from(t3), n.from(u2.salt, "hex"), u2.c, u2.dklen, "sha256");
          else {
            if ("scrypt" !== c2)
              throw new Error("Unsupported kdf");
            u2.n = r3.n || 8192, u2.r = r3.r || 8, u2.p = r3.p || 1, i2 = v.syncScrypt(n.from(t3), n.from(u2.salt, "hex"), u2.n, u2.r, u2.p, u2.dklen);
          }
          var d2 = y.createCipheriv(r3.cipher || "aes-128-ctr", i2.slice(0, 16), f3);
          if (!d2)
            throw new Error("Unsupported cipher");
          var h2 = n.from([].concat((0, o.default)(d2.update(n.from(a2.privateKey.replace("0x", ""), "hex"))), (0, o.default)(d2.final()))), l2 = g.sha3(n.from([].concat((0, o.default)(i2.slice(16, 32)), (0, o.default)(h2)))).replace("0x", "");
          return { version: 3, id: m.v4({ random: r3.uuid || y.randomBytes(16) }), address: a2.address.toLowerCase().replace("0x", ""), crypto: { ciphertext: h2.toString("hex"), cipherparams: { iv: f3.toString("hex") }, cipher: r3.cipher || "aes-128-ctr", kdf: c2, kdfparams: u2, mac: l2.toString("hex") } };
        }, T.prototype._findSafeIndex = function(e2) {
          return e2 = e2 || 0, this.hasOwnProperty(e2) ? this._findSafeIndex(e2 + 1) : e2;
        }, T.prototype._currentIndexes = function() {
          return Object.keys(this).map(function(e2) {
            return parseInt(e2);
          }).filter(function(e2) {
            return e2 < 9e20;
          });
        }, T.prototype.create = function(e2, t3) {
          for (var r3 = 0; r3 < e2; ++r3)
            this.add(this._accounts.create(t3).privateKey);
          return this;
        }, T.prototype.add = function(e2) {
          return "string" == typeof e2 && (e2 = this._accounts.privateKeyToAccount(e2)), this[e2.address] ? this[e2.address] : ((e2 = this._accounts.privateKeyToAccount(e2.privateKey)).index = this._findSafeIndex(), this[e2.index] = e2, this[e2.address] = e2, this[e2.address.toLowerCase()] = e2, this.length++, e2);
        }, T.prototype.remove = function(e2) {
          var t3 = this[e2];
          return !(!t3 || !t3.address) && (this[t3.address].privateKey = null, delete this[t3.address], this[t3.address.toLowerCase()] && (this[t3.address.toLowerCase()].privateKey = null, delete this[t3.address.toLowerCase()]), this[t3.index].privateKey = null, delete this[t3.index], this.length--, true);
        }, T.prototype.clear = function() {
          var e2 = this;
          return this._currentIndexes().forEach(function(t3) {
            e2.remove(t3);
          }), this;
        }, T.prototype.encrypt = function(e2, t3) {
          var r3 = this;
          return this._currentIndexes().map(function(n2) {
            return r3[n2].encrypt(e2, t3);
          });
        }, T.prototype.decrypt = function(e2, t3) {
          var r3 = this;
          return e2.forEach(function(e3) {
            var n2 = r3._accounts.decrypt(e3, t3);
            if (!n2)
              throw new Error("Couldn't decrypt accounts. Password wrong?");
            r3.add(n2);
          }), this;
        }, T.prototype.save = function(e2, t3) {
          return localStorage.setItem(t3 || this.defaultKeyName, JSON.stringify(this.encrypt(e2))), true;
        }, T.prototype.load = function(e2, t3) {
          var r3 = localStorage.getItem(t3 || this.defaultKeyName);
          if (r3)
            try {
              r3 = JSON.parse(r3);
            } catch (e3) {
            }
          return this.decrypt(r3 || [], e2);
        }, function(e2) {
          var t3;
          try {
            t3 = self[e2];
            var r3 = "__storage_test__";
            return t3.setItem(r3, r3), t3.removeItem(r3), true;
          } catch (e3) {
            return e3 && (22 === e3.code || 1014 === e3.code || "QuotaExceededError" === e3.name || "NS_ERROR_DOM_QUOTA_REACHED" === e3.name) && t3 && 0 !== t3.length;
          }
        }("localStorage") || (delete T.prototype.save, delete T.prototype.load), e.exports = P;
      }).call(this, r2(7), r2(1).Buffer);
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(0)(r2(30)), i = r2(194), o = r2(492), a = r2(59), s2 = (r2(493), new a.ec("secp256k1")), f2 = r2(494), c = f2.keccak256, u = f2.keccak256s, d = function(e2) {
          for (var t3 = u(e2.slice(2)), r3 = "0x", n2 = 0; n2 < 40; n2++)
            r3 += parseInt(t3[n2 + 2], 16) > 7 ? e2[n2 + 2].toUpperCase() : e2[n2 + 2];
          return r3;
        }, h = function(e2) {
          var r3 = new t2(e2.slice(2), "hex"), n2 = "0x" + s2.keyFromPrivate(r3).getPublic(false, "hex").slice(2), i2 = c(n2);
          return { address: d("0x" + i2.slice(-40)), privateKey: e2 };
        }, l = function(e2) {
          var t3 = (0, n.default)(e2, 3), r3 = t3[0], o2 = t3[1], a2 = t3[2];
          return i.flatten([o2, a2, r3]);
        }, p = function(e2) {
          return [i.slice(64, i.length(e2), e2), i.slice(0, 32, e2), i.slice(32, 64, e2)];
        }, b = function(e2) {
          return function(r3, n2) {
            var a2 = s2.keyFromPrivate(new t2(n2.slice(2), "hex")).sign(new t2(r3.slice(2), "hex"), { canonical: true });
            return l([o.fromString(i.fromNumber(e2 + a2.recoveryParam)), i.pad(32, i.fromNat("0x" + a2.r.toString(16))), i.pad(32, i.fromNat("0x" + a2.s.toString(16)))]);
          };
        }, y = b(27);
        e.exports = { create: function(e2) {
          var t3 = c(i.concat(i.random(32), e2 || i.random(32))), r3 = i.concat(i.concat(i.random(32), t3), i.random(32)), n2 = c(r3);
          return h(n2);
        }, toChecksum: d, fromPrivate: h, sign: y, makeSigner: b, recover: function(e2, r3) {
          var n2 = p(r3), o2 = { v: i.toNumber(n2[0]), r: n2[1].slice(2), s: n2[2].slice(2) }, a2 = "0x" + s2.recoverPubKey(new t2(e2.slice(2), "hex"), o2, o2.v < 2 ? o2.v : 1 - o2.v % 2).encode("hex", false).slice(2), f3 = c(a2);
          return d("0x" + f3.slice(-40));
        }, encodeSignature: l, decodeSignature: p };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = function(e2, t2) {
        for (var r3 = [], n2 = 0; n2 < e2; ++n2)
          r3.push(t2(n2));
        return r3;
      };
      e.exports = { generate: n, replicate: function(e2, t2) {
        return n(e2, function() {
          return t2;
        });
      }, concat: function(e2, t2) {
        return e2.concat(t2);
      }, flatten: function(e2) {
        for (var t2 = [], r3 = 0, n2 = e2.length; r3 < n2; ++r3)
          for (var i = 0, o = e2[r3].length; i < o; ++i)
            t2.push(e2[r3][i]);
        return t2;
      }, chunksOf: function(e2, t2) {
        for (var r3 = [], n2 = 0, i = t2.length; n2 < i; n2 += e2)
          r3.push(t2.slice(n2, n2 + e2));
        return r3;
      } };
    }, function(e, t, r2) {
      var n = r2(3), i = r2(5).Buffer, o = r2(32), a = i.alloc(128);
      function s2(e2, t2) {
        o.call(this, "digest"), "string" == typeof t2 && (t2 = i.from(t2)), this._alg = e2, this._key = t2, t2.length > 64 ? t2 = e2(t2) : t2.length < 64 && (t2 = i.concat([t2, a], 64));
        for (var r3 = this._ipad = i.allocUnsafe(64), n2 = this._opad = i.allocUnsafe(64), s3 = 0; s3 < 64; s3++)
          r3[s3] = 54 ^ t2[s3], n2[s3] = 92 ^ t2[s3];
        this._hash = [r3];
      }
      n(s2, o), s2.prototype._update = function(e2) {
        this._hash.push(e2);
      }, s2.prototype._final = function() {
        var e2 = this._alg(i.concat(this._hash));
        return this._alg(i.concat([this._opad, e2]));
      }, e.exports = s2;
    }, function(e, t, r2) {
      e.exports = r2(197);
    }, function(e, t, r2) {
      (function(t2) {
        var n, i, o = r2(5).Buffer, a = r2(199), s2 = r2(200), f2 = r2(201), c = r2(202), u = t2.crypto && t2.crypto.subtle, d = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" }, h = [];
        function l() {
          return i || (i = t2.process && t2.process.nextTick ? t2.process.nextTick : t2.queueMicrotask ? t2.queueMicrotask : t2.setImmediate ? t2.setImmediate : t2.setTimeout);
        }
        function p(e2, t3, r3, n2, i2) {
          return u.importKey("raw", e2, { name: "PBKDF2" }, false, ["deriveBits"]).then(function(e3) {
            return u.deriveBits({ name: "PBKDF2", salt: t3, iterations: r3, hash: { name: i2 } }, e3, n2 << 3);
          }).then(function(e3) {
            return o.from(e3);
          });
        }
        e.exports = function(e2, r3, i2, b, y, v) {
          "function" == typeof y && (v = y, y = void 0);
          var m = d[(y = y || "sha1").toLowerCase()];
          if (m && "function" == typeof t2.Promise) {
            if (a(i2, b), e2 = c(e2, s2, "Password"), r3 = c(r3, s2, "Salt"), "function" != typeof v)
              throw new Error("No callback provided to pbkdf2");
            !function(e3, t3) {
              e3.then(function(e4) {
                l()(function() {
                  t3(null, e4);
                });
              }, function(e4) {
                l()(function() {
                  t3(e4);
                });
              });
            }(function(e3) {
              if (t2.process && !t2.process.browser)
                return Promise.resolve(false);
              if (!u || !u.importKey || !u.deriveBits)
                return Promise.resolve(false);
              if (void 0 !== h[e3])
                return h[e3];
              var r4 = p(n = n || o.alloc(8), n, 10, 128, e3).then(function() {
                return true;
              }).catch(function() {
                return false;
              });
              return h[e3] = r4, r4;
            }(m).then(function(t3) {
              return t3 ? p(e2, r3, i2, b, m) : f2(e2, r3, i2, b, y);
            }), v);
          } else
            l()(function() {
              var t3;
              try {
                t3 = f2(e2, r3, i2, b, y);
              } catch (e3) {
                return v(e3);
              }
              v(null, t3);
            });
        };
      }).call(this, r2(7));
    }, function(e, t, r2) {
      var n = r2(450), i = r2(111), o = r2(112), a = r2(463), s2 = r2(85);
      function f2(e2, t2, r3) {
        if (e2 = e2.toLowerCase(), o[e2])
          return i.createCipheriv(e2, t2, r3);
        if (a[e2])
          return new n({ key: t2, iv: r3, mode: e2 });
        throw new TypeError("invalid suite type");
      }
      function c(e2, t2, r3) {
        if (e2 = e2.toLowerCase(), o[e2])
          return i.createDecipheriv(e2, t2, r3);
        if (a[e2])
          return new n({ key: t2, iv: r3, mode: e2, decrypt: true });
        throw new TypeError("invalid suite type");
      }
      t.createCipher = t.Cipher = function(e2, t2) {
        var r3, n2;
        if (e2 = e2.toLowerCase(), o[e2])
          r3 = o[e2].key, n2 = o[e2].iv;
        else {
          if (!a[e2])
            throw new TypeError("invalid suite type");
          r3 = 8 * a[e2].key, n2 = a[e2].iv;
        }
        var i2 = s2(t2, false, r3, n2);
        return f2(e2, i2.key, i2.iv);
      }, t.createCipheriv = t.Cipheriv = f2, t.createDecipher = t.Decipher = function(e2, t2) {
        var r3, n2;
        if (e2 = e2.toLowerCase(), o[e2])
          r3 = o[e2].key, n2 = o[e2].iv;
        else {
          if (!a[e2])
            throw new TypeError("invalid suite type");
          r3 = 8 * a[e2].key, n2 = a[e2].iv;
        }
        var i2 = s2(t2, false, r3, n2);
        return c(e2, i2.key, i2.iv);
      }, t.createDecipheriv = t.Decipheriv = c, t.listCiphers = t.getCiphers = function() {
        return Object.keys(a).concat(i.getCiphers());
      };
    }, function(e, t, r2) {
      var n = r2(32), i = r2(451), o = r2(3), a = r2(5).Buffer, s2 = { "des-ede3-cbc": i.CBC.instantiate(i.EDE), "des-ede3": i.EDE, "des-ede-cbc": i.CBC.instantiate(i.EDE), "des-ede": i.EDE, "des-cbc": i.CBC.instantiate(i.DES), "des-ecb": i.DES };
      function f2(e2) {
        n.call(this);
        var t2, r3 = e2.mode.toLowerCase(), i2 = s2[r3];
        t2 = e2.decrypt ? "decrypt" : "encrypt";
        var o2 = e2.key;
        a.isBuffer(o2) || (o2 = a.from(o2)), "des-ede" !== r3 && "des-ede-cbc" !== r3 || (o2 = a.concat([o2, o2.slice(0, 8)]));
        var f3 = e2.iv;
        a.isBuffer(f3) || (f3 = a.from(f3)), this._des = i2.create({ key: o2, iv: f3, type: t2 });
      }
      s2.des = s2["des-cbc"], s2.des3 = s2["des-ede3-cbc"], e.exports = f2, o(f2, n), f2.prototype._update = function(e2) {
        return a.from(this._des.update(e2));
      }, f2.prototype._final = function() {
        return a.from(this._des.final());
      };
    }, function(e, t, r2) {
      t.utils = r2(203), t.Cipher = r2(110), t.DES = r2(204), t.CBC = r2(452), t.EDE = r2(453);
    }, function(e, t, r2) {
      var n = r2(19), i = r2(3), o = {};
      function a(e2) {
        n.equal(e2.length, 8, "Invalid IV length"), this.iv = new Array(8);
        for (var t2 = 0; t2 < this.iv.length; t2++)
          this.iv[t2] = e2[t2];
      }
      t.instantiate = function(e2) {
        function t2(t3) {
          e2.call(this, t3), this._cbcInit();
        }
        i(t2, e2);
        for (var r3 = Object.keys(o), n2 = 0; n2 < r3.length; n2++) {
          var a2 = r3[n2];
          t2.prototype[a2] = o[a2];
        }
        return t2.create = function(e3) {
          return new t2(e3);
        }, t2;
      }, o._cbcInit = function() {
        var e2 = new a(this.options.iv);
        this._cbcState = e2;
      }, o._update = function(e2, t2, r3, n2) {
        var i2 = this._cbcState, o2 = this.constructor.super_.prototype, a2 = i2.iv;
        if ("encrypt" === this.type) {
          for (var s2 = 0; s2 < this.blockSize; s2++)
            a2[s2] ^= e2[t2 + s2];
          o2._update.call(this, a2, 0, r3, n2);
          for (s2 = 0; s2 < this.blockSize; s2++)
            a2[s2] = r3[n2 + s2];
        } else {
          o2._update.call(this, e2, t2, r3, n2);
          for (s2 = 0; s2 < this.blockSize; s2++)
            r3[n2 + s2] ^= a2[s2];
          for (s2 = 0; s2 < this.blockSize; s2++)
            a2[s2] = e2[t2 + s2];
        }
      };
    }, function(e, t, r2) {
      var n = r2(19), i = r2(3), o = r2(110), a = r2(204);
      function s2(e2, t2) {
        n.equal(t2.length, 24, "Invalid key length");
        var r3 = t2.slice(0, 8), i2 = t2.slice(8, 16), o2 = t2.slice(16, 24);
        this.ciphers = "encrypt" === e2 ? [a.create({ type: "encrypt", key: r3 }), a.create({ type: "decrypt", key: i2 }), a.create({ type: "encrypt", key: o2 })] : [a.create({ type: "decrypt", key: o2 }), a.create({ type: "encrypt", key: i2 }), a.create({ type: "decrypt", key: r3 })];
      }
      function f2(e2) {
        o.call(this, e2);
        var t2 = new s2(this.type, this.options.key);
        this._edeState = t2;
      }
      i(f2, o), e.exports = f2, f2.create = function(e2) {
        return new f2(e2);
      }, f2.prototype._update = function(e2, t2, r3, n2) {
        var i2 = this._edeState;
        i2.ciphers[0]._update(e2, t2, r3, n2), i2.ciphers[1]._update(r3, n2, r3, n2), i2.ciphers[2]._update(r3, n2, r3, n2);
      }, f2.prototype._pad = a.prototype._pad, f2.prototype._unpad = a.prototype._unpad;
    }, function(e, t, r2) {
      var n = r2(112), i = r2(208), o = r2(5).Buffer, a = r2(209), s2 = r2(32), f2 = r2(84), c = r2(85);
      function u(e2, t2, r3) {
        s2.call(this), this._cache = new h(), this._cipher = new f2.AES(t2), this._prev = o.from(r3), this._mode = e2, this._autopadding = true;
      }
      r2(3)(u, s2), u.prototype._update = function(e2) {
        var t2, r3;
        this._cache.add(e2);
        for (var n2 = []; t2 = this._cache.get(); )
          r3 = this._mode.encrypt(this, t2), n2.push(r3);
        return o.concat(n2);
      };
      var d = o.alloc(16, 16);
      function h() {
        this.cache = o.allocUnsafe(0);
      }
      function l(e2, t2, r3) {
        var s3 = n[e2.toLowerCase()];
        if (!s3)
          throw new TypeError("invalid suite type");
        if ("string" == typeof t2 && (t2 = o.from(t2)), t2.length !== s3.key / 8)
          throw new TypeError("invalid key length " + t2.length);
        if ("string" == typeof r3 && (r3 = o.from(r3)), "GCM" !== s3.mode && r3.length !== s3.iv)
          throw new TypeError("invalid iv length " + r3.length);
        return "stream" === s3.type ? new a(s3.module, t2, r3) : "auth" === s3.type ? new i(s3.module, t2, r3) : new u(s3.module, t2, r3);
      }
      u.prototype._final = function() {
        var e2 = this._cache.flush();
        if (this._autopadding)
          return e2 = this._mode.encrypt(this, e2), this._cipher.scrub(), e2;
        if (!e2.equals(d))
          throw this._cipher.scrub(), new Error("data not multiple of block length");
      }, u.prototype.setAutoPadding = function(e2) {
        return this._autopadding = !!e2, this;
      }, h.prototype.add = function(e2) {
        this.cache = o.concat([this.cache, e2]);
      }, h.prototype.get = function() {
        if (this.cache.length > 15) {
          var e2 = this.cache.slice(0, 16);
          return this.cache = this.cache.slice(16), e2;
        }
        return null;
      }, h.prototype.flush = function() {
        for (var e2 = 16 - this.cache.length, t2 = o.allocUnsafe(e2), r3 = -1; ++r3 < e2; )
          t2.writeUInt8(e2, r3);
        return o.concat([this.cache, t2]);
      }, t.createCipheriv = l, t.createCipher = function(e2, t2) {
        var r3 = n[e2.toLowerCase()];
        if (!r3)
          throw new TypeError("invalid suite type");
        var i2 = c(t2, false, r3.key, r3.iv);
        return l(e2, i2.key, i2.iv);
      };
    }, function(e, t, r2) {
      t.encrypt = function(e2, t2) {
        return e2._cipher.encryptBlock(t2);
      }, t.decrypt = function(e2, t2) {
        return e2._cipher.decryptBlock(t2);
      };
    }, function(e, t, r2) {
      var n = r2(68);
      t.encrypt = function(e2, t2) {
        var r3 = n(t2, e2._prev);
        return e2._prev = e2._cipher.encryptBlock(r3), e2._prev;
      }, t.decrypt = function(e2, t2) {
        var r3 = e2._prev;
        e2._prev = t2;
        var i = e2._cipher.decryptBlock(t2);
        return n(i, r3);
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = r2(68);
      function o(e2, t2, r3) {
        var o2 = t2.length, a = i(t2, e2._cache);
        return e2._cache = e2._cache.slice(o2), e2._prev = n.concat([e2._prev, r3 ? t2 : a]), a;
      }
      t.encrypt = function(e2, t2, r3) {
        for (var i2, a = n.allocUnsafe(0); t2.length; ) {
          if (0 === e2._cache.length && (e2._cache = e2._cipher.encryptBlock(e2._prev), e2._prev = n.allocUnsafe(0)), !(e2._cache.length <= t2.length)) {
            a = n.concat([a, o(e2, t2, r3)]);
            break;
          }
          i2 = e2._cache.length, a = n.concat([a, o(e2, t2.slice(0, i2), r3)]), t2 = t2.slice(i2);
        }
        return a;
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer;
      function i(e2, t2, r3) {
        var i2 = e2._cipher.encryptBlock(e2._prev)[0] ^ t2;
        return e2._prev = n.concat([e2._prev.slice(1), n.from([r3 ? t2 : i2])]), i2;
      }
      t.encrypt = function(e2, t2, r3) {
        for (var o = t2.length, a = n.allocUnsafe(o), s2 = -1; ++s2 < o; )
          a[s2] = i(e2, t2[s2], r3);
        return a;
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer;
      function i(e2, t2, r3) {
        for (var n2, i2, a = -1, s2 = 0; ++a < 8; )
          n2 = t2 & 1 << 7 - a ? 128 : 0, s2 += (128 & (i2 = e2._cipher.encryptBlock(e2._prev)[0] ^ n2)) >> a % 8, e2._prev = o(e2._prev, r3 ? n2 : i2);
        return s2;
      }
      function o(e2, t2) {
        var r3 = e2.length, i2 = -1, o2 = n.allocUnsafe(e2.length);
        for (e2 = n.concat([e2, n.from([t2])]); ++i2 < r3; )
          o2[i2] = e2[i2] << 1 | e2[i2 + 1] >> 7;
        return o2;
      }
      t.encrypt = function(e2, t2, r3) {
        for (var o2 = t2.length, a = n.allocUnsafe(o2), s2 = -1; ++s2 < o2; )
          a[s2] = i(e2, t2[s2], r3);
        return a;
      };
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(68);
        function i(e3) {
          return e3._prev = e3._cipher.encryptBlock(e3._prev), e3._prev;
        }
        t.encrypt = function(t2, r3) {
          for (; t2._cache.length < r3.length; )
            t2._cache = e2.concat([t2._cache, i(t2)]);
          var o = t2._cache.slice(0, r3.length);
          return t2._cache = t2._cache.slice(r3.length), n(r3, o);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = n.alloc(16, 0);
      function o(e2) {
        var t2 = n.allocUnsafe(16);
        return t2.writeUInt32BE(e2[0] >>> 0, 0), t2.writeUInt32BE(e2[1] >>> 0, 4), t2.writeUInt32BE(e2[2] >>> 0, 8), t2.writeUInt32BE(e2[3] >>> 0, 12), t2;
      }
      function a(e2) {
        this.h = e2, this.state = n.alloc(16, 0), this.cache = n.allocUnsafe(0);
      }
      a.prototype.ghash = function(e2) {
        for (var t2 = -1; ++t2 < e2.length; )
          this.state[t2] ^= e2[t2];
        this._multiply();
      }, a.prototype._multiply = function() {
        for (var e2, t2, r3, n2 = [(e2 = this.h).readUInt32BE(0), e2.readUInt32BE(4), e2.readUInt32BE(8), e2.readUInt32BE(12)], i2 = [0, 0, 0, 0], a2 = -1; ++a2 < 128; ) {
          for (0 != (this.state[~~(a2 / 8)] & 1 << 7 - a2 % 8) && (i2[0] ^= n2[0], i2[1] ^= n2[1], i2[2] ^= n2[2], i2[3] ^= n2[3]), r3 = 0 != (1 & n2[3]), t2 = 3; t2 > 0; t2--)
            n2[t2] = n2[t2] >>> 1 | (1 & n2[t2 - 1]) << 31;
          n2[0] = n2[0] >>> 1, r3 && (n2[0] = n2[0] ^ 225 << 24);
        }
        this.state = o(i2);
      }, a.prototype.update = function(e2) {
        var t2;
        for (this.cache = n.concat([this.cache, e2]); this.cache.length >= 16; )
          t2 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(t2);
      }, a.prototype.final = function(e2, t2) {
        return this.cache.length && this.ghash(n.concat([this.cache, i], 16)), this.ghash(o([0, e2, 0, t2])), this.state;
      }, e.exports = a;
    }, function(e, t, r2) {
      var n = r2(208), i = r2(5).Buffer, o = r2(112), a = r2(209), s2 = r2(32), f2 = r2(84), c = r2(85);
      function u(e2, t2, r3) {
        s2.call(this), this._cache = new d(), this._last = void 0, this._cipher = new f2.AES(t2), this._prev = i.from(r3), this._mode = e2, this._autopadding = true;
      }
      function d() {
        this.cache = i.allocUnsafe(0);
      }
      function h(e2, t2, r3) {
        var s3 = o[e2.toLowerCase()];
        if (!s3)
          throw new TypeError("invalid suite type");
        if ("string" == typeof r3 && (r3 = i.from(r3)), "GCM" !== s3.mode && r3.length !== s3.iv)
          throw new TypeError("invalid iv length " + r3.length);
        if ("string" == typeof t2 && (t2 = i.from(t2)), t2.length !== s3.key / 8)
          throw new TypeError("invalid key length " + t2.length);
        return "stream" === s3.type ? new a(s3.module, t2, r3, true) : "auth" === s3.type ? new n(s3.module, t2, r3, true) : new u(s3.module, t2, r3);
      }
      r2(3)(u, s2), u.prototype._update = function(e2) {
        var t2, r3;
        this._cache.add(e2);
        for (var n2 = []; t2 = this._cache.get(this._autopadding); )
          r3 = this._mode.decrypt(this, t2), n2.push(r3);
        return i.concat(n2);
      }, u.prototype._final = function() {
        var e2 = this._cache.flush();
        if (this._autopadding)
          return function(e3) {
            var t2 = e3[15];
            if (t2 < 1 || t2 > 16)
              throw new Error("unable to decrypt data");
            var r3 = -1;
            for (; ++r3 < t2; )
              if (e3[r3 + (16 - t2)] !== t2)
                throw new Error("unable to decrypt data");
            if (16 === t2)
              return;
            return e3.slice(0, 16 - t2);
          }(this._mode.decrypt(this, e2));
        if (e2)
          throw new Error("data not multiple of block length");
      }, u.prototype.setAutoPadding = function(e2) {
        return this._autopadding = !!e2, this;
      }, d.prototype.add = function(e2) {
        this.cache = i.concat([this.cache, e2]);
      }, d.prototype.get = function(e2) {
        var t2;
        if (e2) {
          if (this.cache.length > 16)
            return t2 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), t2;
        } else if (this.cache.length >= 16)
          return t2 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), t2;
        return null;
      }, d.prototype.flush = function() {
        if (this.cache.length)
          return this.cache;
      }, t.createDecipher = function(e2, t2) {
        var r3 = o[e2.toLowerCase()];
        if (!r3)
          throw new TypeError("invalid suite type");
        var n2 = c(t2, false, r3.key, r3.iv);
        return h(e2, n2.key, n2.iv);
      }, t.createDecipheriv = h;
    }, function(e, t, r2) {
      t["des-ecb"] = { key: 8, iv: 0 }, t["des-cbc"] = t.des = { key: 8, iv: 8 }, t["des-ede3-cbc"] = t.des3 = { key: 24, iv: 8 }, t["des-ede3"] = { key: 24, iv: 0 }, t["des-ede-cbc"] = { key: 16, iv: 8 }, t["des-ede"] = { key: 16, iv: 0 };
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(210), i = r2(465), o = r2(466);
        var a = { binary: true, hex: true, base64: true };
        t.DiffieHellmanGroup = t.createDiffieHellmanGroup = t.getDiffieHellman = function(t2) {
          var r3 = new e2(i[t2].prime, "hex"), n2 = new e2(i[t2].gen, "hex");
          return new o(r3, n2);
        }, t.createDiffieHellman = t.DiffieHellman = function t2(r3, i2, s2, f2) {
          return e2.isBuffer(i2) || void 0 === a[i2] ? t2(r3, "binary", i2, s2) : (i2 = i2 || "binary", f2 = f2 || "binary", s2 = s2 || new e2([2]), e2.isBuffer(s2) || (s2 = new e2(s2, f2)), "number" == typeof r3 ? new o(n(r3, s2), s2, true) : (e2.isBuffer(r3) || (r3 = new e2(r3, i2)), new o(r3, s2, true)));
        };
      }).call(this, r2(1).Buffer);
    }, function(e) {
      e.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(4), i = new (r2(211))(), o = new n(24), a = new n(11), s2 = new n(10), f2 = new n(3), c = new n(7), u = r2(210), d = r2(31);
        function h(e2, r3) {
          return r3 = r3 || "utf8", t2.isBuffer(e2) || (e2 = new t2(e2, r3)), this._pub = new n(e2), this;
        }
        function l(e2, r3) {
          return r3 = r3 || "utf8", t2.isBuffer(e2) || (e2 = new t2(e2, r3)), this._priv = new n(e2), this;
        }
        e.exports = b;
        var p = {};
        function b(e2, t3, r3) {
          this.setGenerator(t3), this.__prime = new n(e2), this._prime = n.mont(this.__prime), this._primeLen = e2.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, r3 ? (this.setPublicKey = h, this.setPrivateKey = l) : this._primeCode = 8;
        }
        function y(e2, r3) {
          var n2 = new t2(e2.toArray());
          return r3 ? n2.toString(r3) : n2;
        }
        Object.defineProperty(b.prototype, "verifyError", { enumerable: true, get: function() {
          return "number" != typeof this._primeCode && (this._primeCode = function(e2, t3) {
            var r3 = t3.toString("hex"), n2 = [r3, e2.toString(16)].join("_");
            if (n2 in p)
              return p[n2];
            var d2, h2 = 0;
            if (e2.isEven() || !u.simpleSieve || !u.fermatTest(e2) || !i.test(e2))
              return h2 += 1, h2 += "02" === r3 || "05" === r3 ? 8 : 4, p[n2] = h2, h2;
            switch (i.test(e2.shrn(1)) || (h2 += 2), r3) {
              case "02":
                e2.mod(o).cmp(a) && (h2 += 8);
                break;
              case "05":
                (d2 = e2.mod(s2)).cmp(f2) && d2.cmp(c) && (h2 += 8);
                break;
              default:
                h2 += 4;
            }
            return p[n2] = h2, h2;
          }(this.__prime, this.__gen)), this._primeCode;
        } }), b.prototype.generateKeys = function() {
          return this._priv || (this._priv = new n(d(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
        }, b.prototype.computeSecret = function(e2) {
          var r3 = (e2 = (e2 = new n(e2)).toRed(this._prime)).redPow(this._priv).fromRed(), i2 = new t2(r3.toArray()), o2 = this.getPrime();
          if (i2.length < o2.length) {
            var a2 = new t2(o2.length - i2.length);
            a2.fill(0), i2 = t2.concat([a2, i2]);
          }
          return i2;
        }, b.prototype.getPublicKey = function(e2) {
          return y(this._pub, e2);
        }, b.prototype.getPrivateKey = function(e2) {
          return y(this._priv, e2);
        }, b.prototype.getPrime = function(e2) {
          return y(this.__prime, e2);
        }, b.prototype.getGenerator = function(e2) {
          return y(this._gen, e2);
        }, b.prototype.setGenerator = function(e2, r3) {
          return r3 = r3 || "utf8", t2.isBuffer(e2) || (e2 = new t2(e2, r3)), this.__gen = e2, this._gen = new n(e2), this;
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = r2(47), o = r2(468), a = r2(3), s2 = r2(476), f2 = r2(486), c = r2(197);
      function u(e2) {
        o.Writable.call(this);
        var t2 = c[e2];
        if (!t2)
          throw new Error("Unknown message digest");
        this._hashType = t2.hash, this._hash = i(t2.hash), this._tag = t2.id, this._signType = t2.sign;
      }
      function d(e2) {
        o.Writable.call(this);
        var t2 = c[e2];
        if (!t2)
          throw new Error("Unknown message digest");
        this._hash = i(t2.hash), this._tag = t2.id, this._signType = t2.sign;
      }
      function h(e2) {
        return new u(e2);
      }
      function l(e2) {
        return new d(e2);
      }
      Object.keys(c).forEach(function(e2) {
        c[e2].id = n.from(c[e2].id, "hex"), c[e2.toLowerCase()] = c[e2];
      }), a(u, o.Writable), u.prototype._write = function(e2, t2, r3) {
        this._hash.update(e2), r3();
      }, u.prototype.update = function(e2, t2) {
        return "string" == typeof e2 && (e2 = n.from(e2, t2)), this._hash.update(e2), this;
      }, u.prototype.sign = function(e2, t2) {
        this.end();
        var r3 = this._hash.digest(), n2 = s2(r3, e2, this._hashType, this._signType, this._tag);
        return t2 ? n2.toString(t2) : n2;
      }, a(d, o.Writable), d.prototype._write = function(e2, t2, r3) {
        this._hash.update(e2), r3();
      }, d.prototype.update = function(e2, t2) {
        return "string" == typeof e2 && (e2 = n.from(e2, t2)), this._hash.update(e2), this;
      }, d.prototype.verify = function(e2, t2, r3) {
        "string" == typeof t2 && (t2 = n.from(t2, r3)), this.end();
        var i2 = this._hash.digest();
        return f2(t2, i2, e2, this._signType, this._tag);
      }, e.exports = { Sign: h, Verify: l, createSign: h, createVerify: l };
    }, function(e, t, r2) {
      (t = e.exports = r2(212)).Stream = t, t.Readable = t, t.Writable = r2(216), t.Duplex = r2(52), t.Transform = r2(217), t.PassThrough = r2(474), t.finished = r2(113), t.pipeline = r2(475);
    }, function(e, t) {
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(e2, t2, r3) {
        return t2 in e2 ? Object.defineProperty(e2, t2, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t2] = r3, e2;
      }
      function o(e2, t2) {
        for (var r3 = 0; r3 < t2.length; r3++) {
          var n2 = t2[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
        }
      }
      var a = r2(1).Buffer, s2 = r2(471).inspect, f2 = s2 && s2.custom || "inspect";
      e.exports = function() {
        function e2() {
          !function(e3, t3) {
            if (!(e3 instanceof t3))
              throw new TypeError("Cannot call a class as a function");
          }(this, e2), this.head = null, this.tail = null, this.length = 0;
        }
        var t2, r3;
        return t2 = e2, (r3 = [{ key: "push", value: function(e3) {
          var t3 = { data: e3, next: null };
          this.length > 0 ? this.tail.next = t3 : this.head = t3, this.tail = t3, ++this.length;
        } }, { key: "unshift", value: function(e3) {
          var t3 = { data: e3, next: this.head };
          0 === this.length && (this.tail = t3), this.head = t3, ++this.length;
        } }, { key: "shift", value: function() {
          if (0 !== this.length) {
            var e3 = this.head.data;
            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e3;
          }
        } }, { key: "clear", value: function() {
          this.head = this.tail = null, this.length = 0;
        } }, { key: "join", value: function(e3) {
          if (0 === this.length)
            return "";
          for (var t3 = this.head, r4 = "" + t3.data; t3 = t3.next; )
            r4 += e3 + t3.data;
          return r4;
        } }, { key: "concat", value: function(e3) {
          if (0 === this.length)
            return a.alloc(0);
          for (var t3, r4, n2, i2 = a.allocUnsafe(e3 >>> 0), o2 = this.head, s3 = 0; o2; )
            t3 = o2.data, r4 = i2, n2 = s3, a.prototype.copy.call(t3, r4, n2), s3 += o2.data.length, o2 = o2.next;
          return i2;
        } }, { key: "consume", value: function(e3, t3) {
          var r4;
          return e3 < this.head.data.length ? (r4 = this.head.data.slice(0, e3), this.head.data = this.head.data.slice(e3)) : r4 = e3 === this.head.data.length ? this.shift() : t3 ? this._getString(e3) : this._getBuffer(e3), r4;
        } }, { key: "first", value: function() {
          return this.head.data;
        } }, { key: "_getString", value: function(e3) {
          var t3 = this.head, r4 = 1, n2 = t3.data;
          for (e3 -= n2.length; t3 = t3.next; ) {
            var i2 = t3.data, o2 = e3 > i2.length ? i2.length : e3;
            if (o2 === i2.length ? n2 += i2 : n2 += i2.slice(0, e3), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++r4, t3.next ? this.head = t3.next : this.head = this.tail = null) : (this.head = t3, t3.data = i2.slice(o2));
              break;
            }
            ++r4;
          }
          return this.length -= r4, n2;
        } }, { key: "_getBuffer", value: function(e3) {
          var t3 = a.allocUnsafe(e3), r4 = this.head, n2 = 1;
          for (r4.data.copy(t3), e3 -= r4.data.length; r4 = r4.next; ) {
            var i2 = r4.data, o2 = e3 > i2.length ? i2.length : e3;
            if (i2.copy(t3, t3.length - e3, 0, o2), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++n2, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = i2.slice(o2));
              break;
            }
            ++n2;
          }
          return this.length -= n2, t3;
        } }, { key: f2, value: function(e3, t3) {
          return s2(this, function(e4) {
            for (var t4 = 1; t4 < arguments.length; t4++) {
              var r4 = null != arguments[t4] ? arguments[t4] : {};
              t4 % 2 ? n(Object(r4), true).forEach(function(t5) {
                i(e4, t5, r4[t5]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r4)) : n(Object(r4)).forEach(function(t5) {
                Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r4, t5));
              });
            }
            return e4;
          }({}, t3, { depth: 0, customInspect: false }));
        } }]) && o(t2.prototype, r3), e2;
      }();
    }, function(e, t) {
    }, function(e, t, r2) {
      (function(t2) {
        var n;
        function i(e2, t3, r3) {
          return t3 in e2 ? Object.defineProperty(e2, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t3] = r3, e2;
        }
        var o = r2(113), a = Symbol("lastResolve"), s2 = Symbol("lastReject"), f2 = Symbol("error"), c = Symbol("ended"), u = Symbol("lastPromise"), d = Symbol("handlePromise"), h = Symbol("stream");
        function l(e2, t3) {
          return { value: e2, done: t3 };
        }
        function p(e2) {
          var t3 = e2[a];
          if (null !== t3) {
            var r3 = e2[h].read();
            null !== r3 && (e2[u] = null, e2[a] = null, e2[s2] = null, t3(l(r3, false)));
          }
        }
        function b(e2) {
          t2.nextTick(p, e2);
        }
        var y = Object.getPrototypeOf(function() {
        }), v = Object.setPrototypeOf((i(n = { get stream() {
          return this[h];
        }, next: function() {
          var e2 = this, r3 = this[f2];
          if (null !== r3)
            return Promise.reject(r3);
          if (this[c])
            return Promise.resolve(l(void 0, true));
          if (this[h].destroyed)
            return new Promise(function(r4, n3) {
              t2.nextTick(function() {
                e2[f2] ? n3(e2[f2]) : r4(l(void 0, true));
              });
            });
          var n2, i2 = this[u];
          if (i2)
            n2 = new Promise(function(e3, t3) {
              return function(r4, n3) {
                e3.then(function() {
                  t3[c] ? r4(l(void 0, true)) : t3[d](r4, n3);
                }, n3);
              };
            }(i2, this));
          else {
            var o2 = this[h].read();
            if (null !== o2)
              return Promise.resolve(l(o2, false));
            n2 = new Promise(this[d]);
          }
          return this[u] = n2, n2;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), i(n, "return", function() {
          var e2 = this;
          return new Promise(function(t3, r3) {
            e2[h].destroy(null, function(e3) {
              e3 ? r3(e3) : t3(l(void 0, true));
            });
          });
        }), n), y);
        e.exports = function(e2) {
          var t3, r3 = Object.create(v, (i(t3 = {}, h, { value: e2, writable: true }), i(t3, a, { value: null, writable: true }), i(t3, s2, { value: null, writable: true }), i(t3, f2, { value: null, writable: true }), i(t3, c, { value: e2._readableState.endEmitted, writable: true }), i(t3, d, { value: function(e3, t4) {
            var n2 = r3[h].read();
            n2 ? (r3[u] = null, r3[a] = null, r3[s2] = null, e3(l(n2, false))) : (r3[a] = e3, r3[s2] = t4);
          }, writable: true }), t3));
          return r3[u] = null, o(e2, function(e3) {
            if (e3 && "ERR_STREAM_PREMATURE_CLOSE" !== e3.code) {
              var t4 = r3[s2];
              return null !== t4 && (r3[u] = null, r3[a] = null, r3[s2] = null, t4(e3)), void (r3[f2] = e3);
            }
            var n2 = r3[a];
            null !== n2 && (r3[u] = null, r3[a] = null, r3[s2] = null, n2(l(void 0, true))), r3[c] = true;
          }), e2.on("readable", b.bind(null, r3)), r3;
        };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      e.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }, function(e, t, r2) {
      e.exports = i;
      var n = r2(217);
      function i(e2) {
        if (!(this instanceof i))
          return new i(e2);
        n.call(this, e2);
      }
      r2(3)(i, n), i.prototype._transform = function(e2, t2, r3) {
        r3(null, e2);
      };
    }, function(e, t, r2) {
      var n;
      var i = r2(51).codes, o = i.ERR_MISSING_ARGS, a = i.ERR_STREAM_DESTROYED;
      function s2(e2) {
        if (e2)
          throw e2;
      }
      function f2(e2, t2, i2, o2) {
        o2 = function(e3) {
          var t3 = false;
          return function() {
            t3 || (t3 = true, e3.apply(void 0, arguments));
          };
        }(o2);
        var s3 = false;
        e2.on("close", function() {
          s3 = true;
        }), void 0 === n && (n = r2(113)), n(e2, { readable: t2, writable: i2 }, function(e3) {
          if (e3)
            return o2(e3);
          s3 = true, o2();
        });
        var f3 = false;
        return function(t3) {
          if (!s3 && !f3)
            return f3 = true, function(e3) {
              return e3.setHeader && "function" == typeof e3.abort;
            }(e2) ? e2.abort() : "function" == typeof e2.destroy ? e2.destroy() : void o2(t3 || new a("pipe"));
        };
      }
      function c(e2) {
        e2();
      }
      function u(e2, t2) {
        return e2.pipe(t2);
      }
      function d(e2) {
        return e2.length ? "function" != typeof e2[e2.length - 1] ? s2 : e2.pop() : s2;
      }
      e.exports = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r3 = 0; r3 < e2; r3++)
          t2[r3] = arguments[r3];
        var n2, i2 = d(t2);
        if (Array.isArray(t2[0]) && (t2 = t2[0]), t2.length < 2)
          throw new o("streams");
        var a2 = t2.map(function(e3, r4) {
          var o2 = r4 < t2.length - 1;
          return f2(e3, o2, r4 > 0, function(e4) {
            n2 || (n2 = e4), e4 && a2.forEach(c), o2 || (a2.forEach(c), i2(n2));
          });
        });
        return t2.reduce(u);
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = r2(195), o = r2(114), a = r2(59).ec, s2 = r2(4), f2 = r2(86), c = r2(223);
      function u(e2, t2, r3, o2) {
        if ((e2 = n.from(e2.toArray())).length < t2.byteLength()) {
          var a2 = n.alloc(t2.byteLength() - e2.length);
          e2 = n.concat([a2, e2]);
        }
        var s3 = r3.length, f3 = function(e3, t3) {
          e3 = (e3 = d(e3, t3)).mod(t3);
          var r4 = n.from(e3.toArray());
          if (r4.length < t3.byteLength()) {
            var i2 = n.alloc(t3.byteLength() - r4.length);
            r4 = n.concat([i2, r4]);
          }
          return r4;
        }(r3, t2), c2 = n.alloc(s3);
        c2.fill(1);
        var u2 = n.alloc(s3);
        return u2 = i(o2, u2).update(c2).update(n.from([0])).update(e2).update(f3).digest(), c2 = i(o2, u2).update(c2).digest(), { k: u2 = i(o2, u2).update(c2).update(n.from([1])).update(e2).update(f3).digest(), v: c2 = i(o2, u2).update(c2).digest() };
      }
      function d(e2, t2) {
        var r3 = new s2(e2), n2 = (e2.length << 3) - t2.bitLength();
        return n2 > 0 && r3.ishrn(n2), r3;
      }
      function h(e2, t2, r3) {
        var o2, a2;
        do {
          for (o2 = n.alloc(0); 8 * o2.length < e2.bitLength(); )
            t2.v = i(r3, t2.k).update(t2.v).digest(), o2 = n.concat([o2, t2.v]);
          a2 = d(o2, e2), t2.k = i(r3, t2.k).update(t2.v).update(n.from([0])).digest(), t2.v = i(r3, t2.k).update(t2.v).digest();
        } while (-1 !== a2.cmp(e2));
        return a2;
      }
      function l(e2, t2, r3, n2) {
        return e2.toRed(s2.mont(r3)).redPow(t2).fromRed().mod(n2);
      }
      e.exports = function(e2, t2, r3, i2, p) {
        var b = f2(t2);
        if (b.curve) {
          if ("ecdsa" !== i2 && "ecdsa/rsa" !== i2)
            throw new Error("wrong private key type");
          return function(e3, t3) {
            var r4 = c[t3.curve.join(".")];
            if (!r4)
              throw new Error("unknown curve " + t3.curve.join("."));
            var i3 = new a(r4).keyFromPrivate(t3.privateKey).sign(e3);
            return n.from(i3.toDER());
          }(e2, b);
        }
        if ("dsa" === b.type) {
          if ("dsa" !== i2)
            throw new Error("wrong private key type");
          return function(e3, t3, r4) {
            var i3, o2 = t3.params.priv_key, a2 = t3.params.p, f3 = t3.params.q, c2 = t3.params.g, p2 = new s2(0), b2 = d(e3, f3).mod(f3), y2 = false, v2 = u(o2, f3, e3, r4);
            for (; false === y2; )
              i3 = h(f3, v2, r4), p2 = l(c2, i3, a2, f3), 0 === (y2 = i3.invm(f3).imul(b2.add(o2.mul(p2))).mod(f3)).cmpn(0) && (y2 = false, p2 = new s2(0));
            return function(e4, t4) {
              e4 = e4.toArray(), t4 = t4.toArray(), 128 & e4[0] && (e4 = [0].concat(e4));
              128 & t4[0] && (t4 = [0].concat(t4));
              var r5 = [48, e4.length + t4.length + 4, 2, e4.length];
              return r5 = r5.concat(e4, [2, t4.length], t4), n.from(r5);
            }(p2, y2);
          }(e2, b, r3);
        }
        if ("rsa" !== i2 && "ecdsa/rsa" !== i2)
          throw new Error("wrong private key type");
        e2 = n.concat([p, e2]);
        for (var y = b.modulus.byteLength(), v = [0, 1]; e2.length + v.length + 1 < y; )
          v.push(255);
        v.push(0);
        for (var m = -1; ++m < e2.length; )
          v.push(e2[m]);
        return o(v, b);
      }, e.exports.getKey = u, e.exports.makeKey = h;
    }, function(e, t, r2) {
      var n = r2(218);
      t.certificate = r2(483);
      var i = n.define("RSAPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
      });
      t.RSAPrivateKey = i;
      var o = n.define("RSAPublicKey", function() {
        this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
      });
      t.RSAPublicKey = o;
      var a = n.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(this.key("algorithm").use(s2), this.key("subjectPublicKey").bitstr());
      });
      t.PublicKey = a;
      var s2 = n.define("AlgorithmIdentifier", function() {
        this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
      }), f2 = n.define("PrivateKeyInfo", function() {
        this.seq().obj(this.key("version").int(), this.key("algorithm").use(s2), this.key("subjectPrivateKey").octstr());
      });
      t.PrivateKey = f2;
      var c = n.define("EncryptedPrivateKeyInfo", function() {
        this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
      });
      t.EncryptedPrivateKey = c;
      var u = n.define("DSAPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
      });
      t.DSAPrivateKey = u, t.DSAparam = n.define("DSAparam", function() {
        this.int();
      });
      var d = n.define("ECPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(h), this.key("publicKey").optional().explicit(1).bitstr());
      });
      t.ECPrivateKey = d;
      var h = n.define("ECParameters", function() {
        this.choice({ namedCurve: this.objid() });
      });
      t.signature = n.define("signature", function() {
        this.seq().obj(this.key("r").int(), this.key("s").int());
      });
    }, function(e, t, r2) {
      var n = r2(219), i = r2(221), o = r2(3);
      function a(e2, t2) {
        this.name = e2, this.body = t2, this.decoders = {}, this.encoders = {};
      }
      t.define = function(e2, t2) {
        return new a(e2, t2);
      }, a.prototype._createNamed = function(e2) {
        var t2 = this.name;
        function r3(e3) {
          this._initNamed(e3, t2);
        }
        return o(r3, e2), r3.prototype._initNamed = function(t3, r4) {
          e2.call(this, t3, r4);
        }, new r3(this);
      }, a.prototype._getDecoder = function(e2) {
        return e2 = e2 || "der", this.decoders.hasOwnProperty(e2) || (this.decoders[e2] = this._createNamed(i[e2])), this.decoders[e2];
      }, a.prototype.decode = function(e2, t2, r3) {
        return this._getDecoder(t2).decode(e2, r3);
      }, a.prototype._getEncoder = function(e2) {
        return e2 = e2 || "der", this.encoders.hasOwnProperty(e2) || (this.encoders[e2] = this._createNamed(n[e2])), this.encoders[e2];
      }, a.prototype.encode = function(e2, t2, r3) {
        return this._getEncoder(t2).encode(e2, r3);
      };
    }, function(e, t, r2) {
      var n = r2(3), i = r2(220);
      function o(e2) {
        i.call(this, e2), this.enc = "pem";
      }
      n(o, i), e.exports = o, o.prototype.encode = function(e2, t2) {
        for (var r3 = i.prototype.encode.call(this, e2).toString("base64"), n2 = ["-----BEGIN " + t2.label + "-----"], o2 = 0; o2 < r3.length; o2 += 64)
          n2.push(r3.slice(o2, o2 + 64));
        return n2.push("-----END " + t2.label + "-----"), n2.join("\n");
      };
    }, function(e, t, r2) {
      var n = r2(3), i = r2(115).Buffer, o = r2(222);
      function a(e2) {
        o.call(this, e2), this.enc = "pem";
      }
      n(a, o), e.exports = a, a.prototype.decode = function(e2, t2) {
        for (var r3 = e2.toString().split(/[\r\n]+/g), n2 = t2.label.toUpperCase(), a2 = /^-----(BEGIN|END) ([^-]+)-----$/, s2 = -1, f2 = -1, c = 0; c < r3.length; c++) {
          var u = r3[c].match(a2);
          if (null !== u && u[2] === n2) {
            if (-1 !== s2) {
              if ("END" !== u[1])
                break;
              f2 = c;
              break;
            }
            if ("BEGIN" !== u[1])
              break;
            s2 = c;
          }
        }
        if (-1 === s2 || -1 === f2)
          throw new Error("PEM section not found for: " + n2);
        var d = r3.slice(s2 + 1, f2).join("");
        d.replace(/[^a-z0-9+/=]+/gi, "");
        var h = i.from(d, "base64");
        return o.prototype.decode.call(this, h, t2);
      };
    }, function(e, t, r2) {
      var n = t;
      n.Reporter = r2(117).Reporter, n.DecoderBuffer = r2(69).DecoderBuffer, n.EncoderBuffer = r2(69).EncoderBuffer, n.Node = r2(116);
    }, function(e, t, r2) {
      var n = t;
      n._reverse = function(e2) {
        var t2 = {};
        return Object.keys(e2).forEach(function(r3) {
          (0 | r3) == r3 && (r3 |= 0);
          var n2 = e2[r3];
          t2[n2] = r3;
        }), t2;
      }, n.der = r2(118);
    }, function(e, t, r2) {
      var n = r2(218), i = n.define("Time", function() {
        this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
      }), o = n.define("AttributeTypeValue", function() {
        this.seq().obj(this.key("type").objid(), this.key("value").any());
      }), a = n.define("AlgorithmIdentifier", function() {
        this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
      }), s2 = n.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
      }), f2 = n.define("RelativeDistinguishedName", function() {
        this.setof(o);
      }), c = n.define("RDNSequence", function() {
        this.seqof(f2);
      }), u = n.define("Name", function() {
        this.choice({ rdnSequence: this.use(c) });
      }), d = n.define("Validity", function() {
        this.seq().obj(this.key("notBefore").use(i), this.key("notAfter").use(i));
      }), h = n.define("Extension", function() {
        this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
      }), l = n.define("TBSCertificate", function() {
        this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(a), this.key("issuer").use(u), this.key("validity").use(d), this.key("subject").use(u), this.key("subjectPublicKeyInfo").use(s2), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(h).optional());
      }), p = n.define("X509Certificate", function() {
        this.seq().obj(this.key("tbsCertificate").use(l), this.key("signatureAlgorithm").use(a), this.key("signatureValue").bitstr());
      });
      e.exports = p;
    }, function(e) {
      e.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');
    }, function(e, t, r2) {
      var n = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, o = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, a = r2(85), s2 = r2(111), f2 = r2(5).Buffer;
      e.exports = function(e2, t2) {
        var r3, c = e2.toString(), u = c.match(n);
        if (u) {
          var d = "aes" + u[1], h = f2.from(u[2], "hex"), l = f2.from(u[3].replace(/[\r\n]/g, ""), "base64"), p = a(t2, h.slice(0, 8), parseInt(u[1], 10)).key, b = [], y = s2.createDecipheriv(d, p, h);
          b.push(y.update(l)), b.push(y.final()), r3 = f2.concat(b);
        } else {
          var v = c.match(o);
          r3 = f2.from(v[2].replace(/[\r\n]/g, ""), "base64");
        }
        return { tag: c.match(i)[1], data: r3 };
      };
    }, function(e, t, r2) {
      var n = r2(5).Buffer, i = r2(4), o = r2(59).ec, a = r2(86), s2 = r2(223);
      function f2(e2, t2) {
        if (e2.cmpn(0) <= 0)
          throw new Error("invalid sig");
        if (e2.cmp(t2) >= t2)
          throw new Error("invalid sig");
      }
      e.exports = function(e2, t2, r3, c, u) {
        var d = a(r3);
        if ("ec" === d.type) {
          if ("ecdsa" !== c && "ecdsa/rsa" !== c)
            throw new Error("wrong public key type");
          return function(e3, t3, r4) {
            var n2 = s2[r4.data.algorithm.curve.join(".")];
            if (!n2)
              throw new Error("unknown curve " + r4.data.algorithm.curve.join("."));
            var i2 = new o(n2), a2 = r4.data.subjectPrivateKey.data;
            return i2.verify(t3, e3, a2);
          }(e2, t2, d);
        }
        if ("dsa" === d.type) {
          if ("dsa" !== c)
            throw new Error("wrong public key type");
          return function(e3, t3, r4) {
            var n2 = r4.data.p, o2 = r4.data.q, s3 = r4.data.g, c2 = r4.data.pub_key, u2 = a.signature.decode(e3, "der"), d2 = u2.s, h2 = u2.r;
            f2(d2, o2), f2(h2, o2);
            var l2 = i.mont(n2), p2 = d2.invm(o2);
            return 0 === s3.toRed(l2).redPow(new i(t3).mul(p2).mod(o2)).fromRed().mul(c2.toRed(l2).redPow(h2.mul(p2).mod(o2)).fromRed()).mod(n2).mod(o2).cmp(h2);
          }(e2, t2, d);
        }
        if ("rsa" !== c && "ecdsa/rsa" !== c)
          throw new Error("wrong public key type");
        t2 = n.concat([u, t2]);
        for (var h = d.modulus.byteLength(), l = [1], p = 0; t2.length + l.length + 2 < h; )
          l.push(255), p++;
        l.push(0);
        for (var b = -1; ++b < t2.length; )
          l.push(t2[b]);
        l = n.from(l);
        var y = i.mont(d.modulus);
        e2 = (e2 = new i(e2).toRed(y)).redPow(new i(d.publicExponent)), e2 = n.from(e2.fromRed().toArray());
        var v = p < 8 ? 1 : 0;
        for (h = Math.min(e2.length, l.length), e2.length !== l.length && (v = 1), b = -1; ++b < h; )
          v |= e2[b] ^ l[b];
        return 0 === v;
      };
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(59), i = r2(4);
        e.exports = function(e2) {
          return new a(e2);
        };
        var o = { secp256k1: { name: "secp256k1", byteLength: 32 }, secp224r1: { name: "p224", byteLength: 28 }, prime256v1: { name: "p256", byteLength: 32 }, prime192v1: { name: "p192", byteLength: 24 }, ed25519: { name: "ed25519", byteLength: 32 }, secp384r1: { name: "p384", byteLength: 48 }, secp521r1: { name: "p521", byteLength: 66 } };
        function a(e2) {
          this.curveType = o[e2], this.curveType || (this.curveType = { name: e2 }), this.curve = new n.ec(this.curveType.name), this.keys = void 0;
        }
        function s2(e2, r3, n2) {
          Array.isArray(e2) || (e2 = e2.toArray());
          var i2 = new t2(e2);
          if (n2 && i2.length < n2) {
            var o2 = new t2(n2 - i2.length);
            o2.fill(0), i2 = t2.concat([o2, i2]);
          }
          return r3 ? i2.toString(r3) : i2;
        }
        o.p224 = o.secp224r1, o.p256 = o.secp256r1 = o.prime256v1, o.p192 = o.secp192r1 = o.prime192v1, o.p384 = o.secp384r1, o.p521 = o.secp521r1, a.prototype.generateKeys = function(e2, t3) {
          return this.keys = this.curve.genKeyPair(), this.getPublicKey(e2, t3);
        }, a.prototype.computeSecret = function(e2, r3, n2) {
          return r3 = r3 || "utf8", t2.isBuffer(e2) || (e2 = new t2(e2, r3)), s2(this.curve.keyFromPublic(e2).getPublic().mul(this.keys.getPrivate()).getX(), n2, this.curveType.byteLength);
        }, a.prototype.getPublicKey = function(e2, t3) {
          var r3 = this.keys.getPublic("compressed" === t3, true);
          return "hybrid" === t3 && (r3[r3.length - 1] % 2 ? r3[0] = 7 : r3[0] = 6), s2(r3, e2);
        }, a.prototype.getPrivateKey = function(e2) {
          return s2(this.keys.getPrivate(), e2);
        }, a.prototype.setPublicKey = function(e2, r3) {
          return r3 = r3 || "utf8", t2.isBuffer(e2) || (e2 = new t2(e2, r3)), this.keys._importPublic(e2), this;
        }, a.prototype.setPrivateKey = function(e2, r3) {
          r3 = r3 || "utf8", t2.isBuffer(e2) || (e2 = new t2(e2, r3));
          var n2 = new i(e2);
          return n2 = n2.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(n2), this;
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      t.publicEncrypt = r2(489), t.privateDecrypt = r2(490), t.privateEncrypt = function(e2, r3) {
        return t.publicEncrypt(e2, r3, true);
      }, t.publicDecrypt = function(e2, r3) {
        return t.privateDecrypt(e2, r3, true);
      };
    }, function(e, t, r2) {
      var n = r2(86), i = r2(31), o = r2(47), a = r2(224), s2 = r2(225), f2 = r2(4), c = r2(226), u = r2(114), d = r2(5).Buffer;
      e.exports = function(e2, t2, r3) {
        var h;
        h = e2.padding ? e2.padding : r3 ? 1 : 4;
        var l, p = n(e2);
        if (4 === h)
          l = function(e3, t3) {
            var r4 = e3.modulus.byteLength(), n2 = t3.length, c2 = o("sha1").update(d.alloc(0)).digest(), u2 = c2.length, h2 = 2 * u2;
            if (n2 > r4 - h2 - 2)
              throw new Error("message too long");
            var l2 = d.alloc(r4 - n2 - h2 - 2), p2 = r4 - u2 - 1, b = i(u2), y = s2(d.concat([c2, l2, d.alloc(1, 1), t3], p2), a(b, p2)), v = s2(b, a(y, u2));
            return new f2(d.concat([d.alloc(1), v, y], r4));
          }(p, t2);
        else if (1 === h)
          l = function(e3, t3, r4) {
            var n2, o2 = t3.length, a2 = e3.modulus.byteLength();
            if (o2 > a2 - 11)
              throw new Error("message too long");
            n2 = r4 ? d.alloc(a2 - o2 - 3, 255) : function(e4) {
              var t4, r5 = d.allocUnsafe(e4), n3 = 0, o3 = i(2 * e4), a3 = 0;
              for (; n3 < e4; )
                a3 === o3.length && (o3 = i(2 * e4), a3 = 0), (t4 = o3[a3++]) && (r5[n3++] = t4);
              return r5;
            }(a2 - o2 - 3);
            return new f2(d.concat([d.from([0, r4 ? 1 : 2]), n2, d.alloc(1), t3], a2));
          }(p, t2, r3);
        else {
          if (3 !== h)
            throw new Error("unknown padding");
          if ((l = new f2(t2)).cmp(p.modulus) >= 0)
            throw new Error("data too long for modulus");
        }
        return r3 ? u(l, p) : c(l, p);
      };
    }, function(e, t, r2) {
      var n = r2(86), i = r2(224), o = r2(225), a = r2(4), s2 = r2(114), f2 = r2(47), c = r2(226), u = r2(5).Buffer;
      e.exports = function(e2, t2, r3) {
        var d;
        d = e2.padding ? e2.padding : r3 ? 1 : 4;
        var h, l = n(e2), p = l.modulus.byteLength();
        if (t2.length > p || new a(t2).cmp(l.modulus) >= 0)
          throw new Error("decryption error");
        h = r3 ? c(new a(t2), l) : s2(t2, l);
        var b = u.alloc(p - h.length);
        if (h = u.concat([b, h], p), 4 === d)
          return function(e3, t3) {
            var r4 = e3.modulus.byteLength(), n2 = f2("sha1").update(u.alloc(0)).digest(), a2 = n2.length;
            if (0 !== t3[0])
              throw new Error("decryption error");
            var s3 = t3.slice(1, a2 + 1), c2 = t3.slice(a2 + 1), d2 = o(s3, i(c2, a2)), h2 = o(c2, i(d2, r4 - a2 - 1));
            if (function(e4, t4) {
              e4 = u.from(e4), t4 = u.from(t4);
              var r5 = 0, n3 = e4.length;
              e4.length !== t4.length && (r5++, n3 = Math.min(e4.length, t4.length));
              var i2 = -1;
              for (; ++i2 < n3; )
                r5 += e4[i2] ^ t4[i2];
              return r5;
            }(n2, h2.slice(0, a2)))
              throw new Error("decryption error");
            var l2 = a2;
            for (; 0 === h2[l2]; )
              l2++;
            if (1 !== h2[l2++])
              throw new Error("decryption error");
            return h2.slice(l2);
          }(l, h);
        if (1 === d)
          return function(e3, t3, r4) {
            var n2 = t3.slice(0, 2), i2 = 2, o2 = 0;
            for (; 0 !== t3[i2++]; )
              if (i2 >= t3.length) {
                o2++;
                break;
              }
            var a2 = t3.slice(2, i2 - 1);
            ("0002" !== n2.toString("hex") && !r4 || "0001" !== n2.toString("hex") && r4) && o2++;
            a2.length < 8 && o2++;
            if (o2)
              throw new Error("decryption error");
            return t3.slice(i2);
          }(0, h, r3);
        if (3 === d)
          return h;
        throw new Error("unknown padding");
      };
    }, function(e, t, r2) {
      (function(e2, n) {
        function i() {
          throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
        }
        var o = r2(5), a = r2(31), s2 = o.Buffer, f2 = o.kMaxLength, c = e2.crypto || e2.msCrypto, u = Math.pow(2, 32) - 1;
        function d(e3, t2) {
          if ("number" != typeof e3 || e3 != e3)
            throw new TypeError("offset must be a number");
          if (e3 > u || e3 < 0)
            throw new TypeError("offset must be a uint32");
          if (e3 > f2 || e3 > t2)
            throw new RangeError("offset out of range");
        }
        function h(e3, t2, r3) {
          if ("number" != typeof e3 || e3 != e3)
            throw new TypeError("size must be a number");
          if (e3 > u || e3 < 0)
            throw new TypeError("size must be a uint32");
          if (e3 + t2 > r3 || e3 > f2)
            throw new RangeError("buffer too small");
        }
        function l(e3, t2, r3, i2) {
          if (n.browser) {
            var o2 = e3.buffer, s3 = new Uint8Array(o2, t2, r3);
            return c.getRandomValues(s3), i2 ? void n.nextTick(function() {
              i2(null, e3);
            }) : e3;
          }
          if (!i2)
            return a(r3).copy(e3, t2), e3;
          a(r3, function(r4, n2) {
            if (r4)
              return i2(r4);
            n2.copy(e3, t2), i2(null, e3);
          });
        }
        c && c.getRandomValues || !n.browser ? (t.randomFill = function(t2, r3, n2, i2) {
          if (!(s2.isBuffer(t2) || t2 instanceof e2.Uint8Array))
            throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
          if ("function" == typeof r3)
            i2 = r3, r3 = 0, n2 = t2.length;
          else if ("function" == typeof n2)
            i2 = n2, n2 = t2.length - r3;
          else if ("function" != typeof i2)
            throw new TypeError('"cb" argument must be a function');
          return d(r3, t2.length), h(n2, r3, t2.length), l(t2, r3, n2, i2);
        }, t.randomFillSync = function(t2, r3, n2) {
          void 0 === r3 && (r3 = 0);
          if (!(s2.isBuffer(t2) || t2 instanceof e2.Uint8Array))
            throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
          d(r3, t2.length), void 0 === n2 && (n2 = t2.length - r3);
          return h(n2, r3, t2.length), l(t2, r3, n2);
        }) : (t.randomFill = i, t.randomFillSync = i);
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      var n = r2(4), i = r2(194), o = function(e2) {
        return new n(e2.slice(2), 16);
      }, a = function(e2) {
        var t2 = "0x" + ("0x" === e2.slice(0, 2) ? new n(e2.slice(2), 16) : new n(e2, 10)).toString("hex");
        return "0x0" === t2 ? "0x" : t2;
      }, s2 = function(e2) {
        return "string" == typeof e2 ? /^0x/.test(e2) ? e2 : "0x" + e2 : "0x" + new n(e2).toString("hex");
      }, f2 = function(e2) {
        return o(e2).toNumber();
      }, c = function(e2) {
        return function(t2, r3) {
          return "0x" + o(t2)[e2](o(r3)).toString("hex");
        };
      }, u = c("add"), d = c("mul"), h = c("div"), l = c("sub");
      e.exports = { toString: function(e2) {
        return o(e2).toString(10);
      }, fromString: a, toNumber: f2, fromNumber: s2, toEther: function(e2) {
        return f2(h(e2, a("10000000000"))) / 1e8;
      }, fromEther: function(e2) {
        return d(s2(Math.floor(1e8 * e2)), a("10000000000"));
      }, toUint256: function(e2) {
        return i.pad(32, e2);
      }, add: u, mul: d, div: h, sub: l };
    }, function(e, t, r2) {
      e.exports = { encode: function(e2) {
        var t2 = function(e3) {
          return (t3 = e3.toString(16)).length % 2 == 0 ? t3 : "0" + t3;
          var t3;
        }, r3 = function(e3, r4) {
          return e3 < 56 ? t2(r4 + e3) : t2(r4 + t2(e3).length / 2 + 55) + t2(e3);
        };
        return "0x" + function e3(t3) {
          if ("string" == typeof t3) {
            var n = t3.slice(2);
            return (2 != n.length || n >= "80" ? r3(n.length / 2, 128) : "") + n;
          }
          var i = t3.map(e3).join("");
          return r3(i.length / 2, 192) + i;
        }(e2);
      }, decode: function(e2) {
        var t2 = 2, r3 = function() {
          if (t2 >= e2.length)
            throw "";
          var r4 = e2.slice(t2, t2 + 2);
          return r4 < "80" ? (t2 += 2, "0x" + r4) : r4 < "c0" ? i() : o();
        }, n = function() {
          var r4 = parseInt(e2.slice(t2, t2 += 2), 16) % 64;
          return r4 < 56 ? r4 : parseInt(e2.slice(t2, t2 += 2 * (r4 - 55)), 16);
        }, i = function() {
          var r4 = n();
          return "0x" + e2.slice(t2, t2 += 2 * r4);
        }, o = function() {
          for (var e3 = 2 * n() + t2, i2 = []; t2 < e3; )
            i2.push(r3());
          return i2;
        };
        try {
          return r3();
        } catch (e3) {
          return [];
        }
      } };
    }, function(e, t, r2) {
      var n = "0123456789abcdef".split(""), i = [1, 256, 65536, 16777216], o = [0, 8, 16, 24], a = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], s2 = function(e2) {
        var t2, r3, n2, i2, o2, s3, f3, c, u, d, h, l, p, b, y, v, m, g, w, _, k, A, S, E, x, P, O, T, B, M, R, I, C, U, j, N, L, D, F, q, z, H, K2, G, W, V, J, Y, X, Q, Z, $, ee, te, re, ne, ie, oe, ae, se, fe, ce, ue;
        for (n2 = 0; n2 < 48; n2 += 2)
          i2 = e2[0] ^ e2[10] ^ e2[20] ^ e2[30] ^ e2[40], o2 = e2[1] ^ e2[11] ^ e2[21] ^ e2[31] ^ e2[41], s3 = e2[2] ^ e2[12] ^ e2[22] ^ e2[32] ^ e2[42], f3 = e2[3] ^ e2[13] ^ e2[23] ^ e2[33] ^ e2[43], c = e2[4] ^ e2[14] ^ e2[24] ^ e2[34] ^ e2[44], u = e2[5] ^ e2[15] ^ e2[25] ^ e2[35] ^ e2[45], d = e2[6] ^ e2[16] ^ e2[26] ^ e2[36] ^ e2[46], h = e2[7] ^ e2[17] ^ e2[27] ^ e2[37] ^ e2[47], t2 = (l = e2[8] ^ e2[18] ^ e2[28] ^ e2[38] ^ e2[48]) ^ (s3 << 1 | f3 >>> 31), r3 = (p = e2[9] ^ e2[19] ^ e2[29] ^ e2[39] ^ e2[49]) ^ (f3 << 1 | s3 >>> 31), e2[0] ^= t2, e2[1] ^= r3, e2[10] ^= t2, e2[11] ^= r3, e2[20] ^= t2, e2[21] ^= r3, e2[30] ^= t2, e2[31] ^= r3, e2[40] ^= t2, e2[41] ^= r3, t2 = i2 ^ (c << 1 | u >>> 31), r3 = o2 ^ (u << 1 | c >>> 31), e2[2] ^= t2, e2[3] ^= r3, e2[12] ^= t2, e2[13] ^= r3, e2[22] ^= t2, e2[23] ^= r3, e2[32] ^= t2, e2[33] ^= r3, e2[42] ^= t2, e2[43] ^= r3, t2 = s3 ^ (d << 1 | h >>> 31), r3 = f3 ^ (h << 1 | d >>> 31), e2[4] ^= t2, e2[5] ^= r3, e2[14] ^= t2, e2[15] ^= r3, e2[24] ^= t2, e2[25] ^= r3, e2[34] ^= t2, e2[35] ^= r3, e2[44] ^= t2, e2[45] ^= r3, t2 = c ^ (l << 1 | p >>> 31), r3 = u ^ (p << 1 | l >>> 31), e2[6] ^= t2, e2[7] ^= r3, e2[16] ^= t2, e2[17] ^= r3, e2[26] ^= t2, e2[27] ^= r3, e2[36] ^= t2, e2[37] ^= r3, e2[46] ^= t2, e2[47] ^= r3, t2 = d ^ (i2 << 1 | o2 >>> 31), r3 = h ^ (o2 << 1 | i2 >>> 31), e2[8] ^= t2, e2[9] ^= r3, e2[18] ^= t2, e2[19] ^= r3, e2[28] ^= t2, e2[29] ^= r3, e2[38] ^= t2, e2[39] ^= r3, e2[48] ^= t2, e2[49] ^= r3, b = e2[0], y = e2[1], V = e2[11] << 4 | e2[10] >>> 28, J = e2[10] << 4 | e2[11] >>> 28, T = e2[20] << 3 | e2[21] >>> 29, B = e2[21] << 3 | e2[20] >>> 29, se = e2[31] << 9 | e2[30] >>> 23, fe = e2[30] << 9 | e2[31] >>> 23, H = e2[40] << 18 | e2[41] >>> 14, K2 = e2[41] << 18 | e2[40] >>> 14, U = e2[2] << 1 | e2[3] >>> 31, j = e2[3] << 1 | e2[2] >>> 31, v = e2[13] << 12 | e2[12] >>> 20, m = e2[12] << 12 | e2[13] >>> 20, Y = e2[22] << 10 | e2[23] >>> 22, X = e2[23] << 10 | e2[22] >>> 22, M = e2[33] << 13 | e2[32] >>> 19, R = e2[32] << 13 | e2[33] >>> 19, ce = e2[42] << 2 | e2[43] >>> 30, ue = e2[43] << 2 | e2[42] >>> 30, te = e2[5] << 30 | e2[4] >>> 2, re = e2[4] << 30 | e2[5] >>> 2, N = e2[14] << 6 | e2[15] >>> 26, L = e2[15] << 6 | e2[14] >>> 26, g = e2[25] << 11 | e2[24] >>> 21, w = e2[24] << 11 | e2[25] >>> 21, Q = e2[34] << 15 | e2[35] >>> 17, Z = e2[35] << 15 | e2[34] >>> 17, I = e2[45] << 29 | e2[44] >>> 3, C = e2[44] << 29 | e2[45] >>> 3, E = e2[6] << 28 | e2[7] >>> 4, x = e2[7] << 28 | e2[6] >>> 4, ne = e2[17] << 23 | e2[16] >>> 9, ie = e2[16] << 23 | e2[17] >>> 9, D = e2[26] << 25 | e2[27] >>> 7, F = e2[27] << 25 | e2[26] >>> 7, _ = e2[36] << 21 | e2[37] >>> 11, k = e2[37] << 21 | e2[36] >>> 11, $ = e2[47] << 24 | e2[46] >>> 8, ee = e2[46] << 24 | e2[47] >>> 8, G = e2[8] << 27 | e2[9] >>> 5, W = e2[9] << 27 | e2[8] >>> 5, P = e2[18] << 20 | e2[19] >>> 12, O = e2[19] << 20 | e2[18] >>> 12, oe = e2[29] << 7 | e2[28] >>> 25, ae = e2[28] << 7 | e2[29] >>> 25, q = e2[38] << 8 | e2[39] >>> 24, z = e2[39] << 8 | e2[38] >>> 24, A = e2[48] << 14 | e2[49] >>> 18, S = e2[49] << 14 | e2[48] >>> 18, e2[0] = b ^ ~v & g, e2[1] = y ^ ~m & w, e2[10] = E ^ ~P & T, e2[11] = x ^ ~O & B, e2[20] = U ^ ~N & D, e2[21] = j ^ ~L & F, e2[30] = G ^ ~V & Y, e2[31] = W ^ ~J & X, e2[40] = te ^ ~ne & oe, e2[41] = re ^ ~ie & ae, e2[2] = v ^ ~g & _, e2[3] = m ^ ~w & k, e2[12] = P ^ ~T & M, e2[13] = O ^ ~B & R, e2[22] = N ^ ~D & q, e2[23] = L ^ ~F & z, e2[32] = V ^ ~Y & Q, e2[33] = J ^ ~X & Z, e2[42] = ne ^ ~oe & se, e2[43] = ie ^ ~ae & fe, e2[4] = g ^ ~_ & A, e2[5] = w ^ ~k & S, e2[14] = T ^ ~M & I, e2[15] = B ^ ~R & C, e2[24] = D ^ ~q & H, e2[25] = F ^ ~z & K2, e2[34] = Y ^ ~Q & $, e2[35] = X ^ ~Z & ee, e2[44] = oe ^ ~se & ce, e2[45] = ae ^ ~fe & ue, e2[6] = _ ^ ~A & b, e2[7] = k ^ ~S & y, e2[16] = M ^ ~I & E, e2[17] = R ^ ~C & x, e2[26] = q ^ ~H & U, e2[27] = z ^ ~K2 & j, e2[36] = Q ^ ~$ & G, e2[37] = Z ^ ~ee & W, e2[46] = se ^ ~ce & te, e2[47] = fe ^ ~ue & re, e2[8] = A ^ ~b & v, e2[9] = S ^ ~y & m, e2[18] = I ^ ~E & P, e2[19] = C ^ ~x & O, e2[28] = H ^ ~U & N, e2[29] = K2 ^ ~j & L, e2[38] = $ ^ ~G & V, e2[39] = ee ^ ~W & J, e2[48] = ce ^ ~te & ne, e2[49] = ue ^ ~re & ie, e2[0] ^= a[n2], e2[1] ^= a[n2 + 1];
      }, f2 = function(e2) {
        return function(t2) {
          var r3;
          if ("0x" === t2.slice(0, 2)) {
            r3 = [];
            for (var a2 = 2, f3 = t2.length; a2 < f3; a2 += 2)
              r3.push(parseInt(t2.slice(a2, a2 + 2), 16));
          } else
            r3 = t2;
          return function(e3, t3) {
            for (var r4, a3 = t3.length, f4 = e3.blocks, c = e3.blockCount << 2, u = e3.blockCount, d = e3.outputBlocks, h = e3.s, l = 0; l < a3; ) {
              if (e3.reset)
                for (e3.reset = false, f4[0] = e3.block, y = 1; y < u + 1; ++y)
                  f4[y] = 0;
              if ("string" != typeof t3)
                for (y = e3.start; l < a3 && y < c; ++l)
                  f4[y >> 2] |= t3[l] << o[3 & y++];
              else
                for (y = e3.start; l < a3 && y < c; ++l)
                  (r4 = t3.charCodeAt(l)) < 128 ? f4[y >> 2] |= r4 << o[3 & y++] : r4 < 2048 ? (f4[y >> 2] |= (192 | r4 >> 6) << o[3 & y++], f4[y >> 2] |= (128 | 63 & r4) << o[3 & y++]) : r4 < 55296 || r4 >= 57344 ? (f4[y >> 2] |= (224 | r4 >> 12) << o[3 & y++], f4[y >> 2] |= (128 | r4 >> 6 & 63) << o[3 & y++], f4[y >> 2] |= (128 | 63 & r4) << o[3 & y++]) : (r4 = 65536 + ((1023 & r4) << 10 | 1023 & t3.charCodeAt(++l)), f4[y >> 2] |= (240 | r4 >> 18) << o[3 & y++], f4[y >> 2] |= (128 | r4 >> 12 & 63) << o[3 & y++], f4[y >> 2] |= (128 | r4 >> 6 & 63) << o[3 & y++], f4[y >> 2] |= (128 | 63 & r4) << o[3 & y++]);
              if (e3.lastByteIndex = y, y >= c) {
                for (e3.start = y - c, e3.block = f4[u], y = 0; y < u; ++y)
                  h[y] ^= f4[y];
                s2(h), e3.reset = true;
              } else
                e3.start = y;
            }
            if (f4[(y = e3.lastByteIndex) >> 2] |= i[3 & y], e3.lastByteIndex === c)
              for (f4[0] = f4[u], y = 1; y < u + 1; ++y)
                f4[y] = 0;
            for (f4[u - 1] |= 2147483648, y = 0; y < u; ++y)
              h[y] ^= f4[y];
            s2(h);
            for (var p, b = "", y = 0, v = 0; v < d; ) {
              for (y = 0; y < u && v < d; ++y, ++v)
                p = h[y], b += n[p >> 4 & 15] + n[15 & p] + n[p >> 12 & 15] + n[p >> 8 & 15] + n[p >> 20 & 15] + n[p >> 16 & 15] + n[p >> 28 & 15] + n[p >> 24 & 15];
              v % u == 0 && (s2(h), y = 0);
            }
            return "0x" + b;
          }(function(e3) {
            return { blocks: [], reset: true, block: 0, start: 0, blockCount: 1600 - (e3 << 1) >> 5, outputBlocks: e3 >> 5, s: (t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [].concat(t3, t3, t3, t3, t3)) };
            var t3;
          }(e2), r3);
        };
      };
      e.exports = { keccak256: f2(256), keccak512: f2(512), keccak256s: f2(256), keccak512s: f2(512) };
    }, function(e, t, r2) {
      (function(t2) {
        !function(r3) {
          function n(e2) {
            var t3 = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]), r4 = 1779033703, n2 = 3144134277, i2 = 1013904242, o2 = 2773480762, a2 = 1359893119, s3 = 2600822924, f3 = 528734635, c2 = 1541459225, u2 = new Uint32Array(64);
            function d2(e3) {
              for (var d3 = 0, h3 = e3.length; h3 >= 64; ) {
                var l3 = r4, p2 = n2, b2 = i2, y2 = o2, v2 = a2, m = s3, g = f3, w = c2, _ = void 0, k = void 0, A = void 0, S = void 0, E = void 0;
                for (k = 0; k < 16; k++)
                  A = d3 + 4 * k, u2[k] = (255 & e3[A]) << 24 | (255 & e3[A + 1]) << 16 | (255 & e3[A + 2]) << 8 | 255 & e3[A + 3];
                for (k = 16; k < 64; k++)
                  S = ((_ = u2[k - 2]) >>> 17 | _ << 15) ^ (_ >>> 19 | _ << 13) ^ _ >>> 10, E = ((_ = u2[k - 15]) >>> 7 | _ << 25) ^ (_ >>> 18 | _ << 14) ^ _ >>> 3, u2[k] = (S + u2[k - 7] | 0) + (E + u2[k - 16] | 0) | 0;
                for (k = 0; k < 64; k++)
                  S = (((v2 >>> 6 | v2 << 26) ^ (v2 >>> 11 | v2 << 21) ^ (v2 >>> 25 | v2 << 7)) + (v2 & m ^ ~v2 & g) | 0) + (w + (t3[k] + u2[k] | 0) | 0) | 0, E = ((l3 >>> 2 | l3 << 30) ^ (l3 >>> 13 | l3 << 19) ^ (l3 >>> 22 | l3 << 10)) + (l3 & p2 ^ l3 & b2 ^ p2 & b2) | 0, w = g, g = m, m = v2, v2 = y2 + S | 0, y2 = b2, b2 = p2, p2 = l3, l3 = S + E | 0;
                r4 = r4 + l3 | 0, n2 = n2 + p2 | 0, i2 = i2 + b2 | 0, o2 = o2 + y2 | 0, a2 = a2 + v2 | 0, s3 = s3 + m | 0, f3 = f3 + g | 0, c2 = c2 + w | 0, d3 += 64, h3 -= 64;
              }
            }
            d2(e2);
            var h2, l2 = e2.length % 64, p = e2.length / 536870912 | 0, b = e2.length << 3, y = l2 < 56 ? 56 : 120, v = e2.slice(e2.length - l2, e2.length);
            for (v.push(128), h2 = l2 + 1; h2 < y; h2++)
              v.push(0);
            return v.push(p >>> 24 & 255), v.push(p >>> 16 & 255), v.push(p >>> 8 & 255), v.push(p >>> 0 & 255), v.push(b >>> 24 & 255), v.push(b >>> 16 & 255), v.push(b >>> 8 & 255), v.push(b >>> 0 & 255), d2(v), [r4 >>> 24 & 255, r4 >>> 16 & 255, r4 >>> 8 & 255, r4 >>> 0 & 255, n2 >>> 24 & 255, n2 >>> 16 & 255, n2 >>> 8 & 255, n2 >>> 0 & 255, i2 >>> 24 & 255, i2 >>> 16 & 255, i2 >>> 8 & 255, i2 >>> 0 & 255, o2 >>> 24 & 255, o2 >>> 16 & 255, o2 >>> 8 & 255, o2 >>> 0 & 255, a2 >>> 24 & 255, a2 >>> 16 & 255, a2 >>> 8 & 255, a2 >>> 0 & 255, s3 >>> 24 & 255, s3 >>> 16 & 255, s3 >>> 8 & 255, s3 >>> 0 & 255, f3 >>> 24 & 255, f3 >>> 16 & 255, f3 >>> 8 & 255, f3 >>> 0 & 255, c2 >>> 24 & 255, c2 >>> 16 & 255, c2 >>> 8 & 255, c2 >>> 0 & 255];
          }
          function i(e2, t3, r4) {
            e2 = e2.length <= 64 ? e2 : n(e2);
            var i2, o2 = 64 + t3.length + 4, a2 = new Array(o2), s3 = new Array(64), f3 = [];
            for (i2 = 0; i2 < 64; i2++)
              a2[i2] = 54;
            for (i2 = 0; i2 < e2.length; i2++)
              a2[i2] ^= e2[i2];
            for (i2 = 0; i2 < t3.length; i2++)
              a2[64 + i2] = t3[i2];
            for (i2 = o2 - 4; i2 < o2; i2++)
              a2[i2] = 0;
            for (i2 = 0; i2 < 64; i2++)
              s3[i2] = 92;
            for (i2 = 0; i2 < e2.length; i2++)
              s3[i2] ^= e2[i2];
            function c2() {
              for (var e3 = o2 - 1; e3 >= o2 - 4; e3--) {
                if (a2[e3]++, a2[e3] <= 255)
                  return;
                a2[e3] = 0;
              }
            }
            for (; r4 >= 32; )
              c2(), f3 = f3.concat(n(s3.concat(n(a2)))), r4 -= 32;
            return r4 > 0 && (c2(), f3 = f3.concat(n(s3.concat(n(a2))).slice(0, r4))), f3;
          }
          function o(e2, t3, r4, n2, i2) {
            var o2;
            for (c(e2, 16 * (2 * r4 - 1), i2, 0, 16), o2 = 0; o2 < 2 * r4; o2++)
              f2(e2, 16 * o2, i2, 16), s2(i2, n2), c(i2, 0, e2, t3 + 16 * o2, 16);
            for (o2 = 0; o2 < r4; o2++)
              c(e2, t3 + 2 * o2 * 16, e2, 16 * o2, 16);
            for (o2 = 0; o2 < r4; o2++)
              c(e2, t3 + 16 * (2 * o2 + 1), e2, 16 * (o2 + r4), 16);
          }
          function a(e2, t3) {
            return e2 << t3 | e2 >>> 32 - t3;
          }
          function s2(e2, t3) {
            c(e2, 0, t3, 0, 16);
            for (var r4 = 8; r4 > 0; r4 -= 2)
              t3[4] ^= a(t3[0] + t3[12], 7), t3[8] ^= a(t3[4] + t3[0], 9), t3[12] ^= a(t3[8] + t3[4], 13), t3[0] ^= a(t3[12] + t3[8], 18), t3[9] ^= a(t3[5] + t3[1], 7), t3[13] ^= a(t3[9] + t3[5], 9), t3[1] ^= a(t3[13] + t3[9], 13), t3[5] ^= a(t3[1] + t3[13], 18), t3[14] ^= a(t3[10] + t3[6], 7), t3[2] ^= a(t3[14] + t3[10], 9), t3[6] ^= a(t3[2] + t3[14], 13), t3[10] ^= a(t3[6] + t3[2], 18), t3[3] ^= a(t3[15] + t3[11], 7), t3[7] ^= a(t3[3] + t3[15], 9), t3[11] ^= a(t3[7] + t3[3], 13), t3[15] ^= a(t3[11] + t3[7], 18), t3[1] ^= a(t3[0] + t3[3], 7), t3[2] ^= a(t3[1] + t3[0], 9), t3[3] ^= a(t3[2] + t3[1], 13), t3[0] ^= a(t3[3] + t3[2], 18), t3[6] ^= a(t3[5] + t3[4], 7), t3[7] ^= a(t3[6] + t3[5], 9), t3[4] ^= a(t3[7] + t3[6], 13), t3[5] ^= a(t3[4] + t3[7], 18), t3[11] ^= a(t3[10] + t3[9], 7), t3[8] ^= a(t3[11] + t3[10], 9), t3[9] ^= a(t3[8] + t3[11], 13), t3[10] ^= a(t3[9] + t3[8], 18), t3[12] ^= a(t3[15] + t3[14], 7), t3[13] ^= a(t3[12] + t3[15], 9), t3[14] ^= a(t3[13] + t3[12], 13), t3[15] ^= a(t3[14] + t3[13], 18);
            for (var n2 = 0; n2 < 16; ++n2)
              e2[n2] += t3[n2];
          }
          function f2(e2, t3, r4, n2) {
            for (var i2 = 0; i2 < n2; i2++)
              r4[i2] ^= e2[t3 + i2];
          }
          function c(e2, t3, r4, n2, i2) {
            for (; i2--; )
              r4[n2++] = e2[t3++];
          }
          function u(e2) {
            if (!e2 || "number" != typeof e2.length)
              return false;
            for (var t3 = 0; t3 < e2.length; t3++) {
              var r4 = e2[t3];
              if ("number" != typeof r4 || r4 % 1 || r4 < 0 || r4 >= 256)
                return false;
            }
            return true;
          }
          function d(e2, t3) {
            if ("number" != typeof e2 || e2 % 1)
              throw new Error("invalid " + t3);
            return e2;
          }
          function h(e2, r4, n2, a2, s3, h2, l2) {
            if (n2 = d(n2, "N"), a2 = d(a2, "r"), s3 = d(s3, "p"), h2 = d(h2, "dkLen"), 0 === n2 || 0 != (n2 & n2 - 1))
              throw new Error("N must be power of 2");
            if (n2 > 2147483647 / 128 / a2)
              throw new Error("N too large");
            if (a2 > 2147483647 / 128 / s3)
              throw new Error("r too large");
            if (!u(e2))
              throw new Error("password must be an array or buffer");
            if (e2 = Array.prototype.slice.call(e2), !u(r4))
              throw new Error("salt must be an array or buffer");
            r4 = Array.prototype.slice.call(r4);
            for (var p = i(e2, r4, 128 * s3 * a2), b = new Uint32Array(32 * s3 * a2), y = 0; y < b.length; y++) {
              var v = 4 * y;
              b[y] = (255 & p[v + 3]) << 24 | (255 & p[v + 2]) << 16 | (255 & p[v + 1]) << 8 | (255 & p[v + 0]) << 0;
            }
            var m, g, w = new Uint32Array(64 * a2), _ = new Uint32Array(32 * a2 * n2), k = 32 * a2, A = new Uint32Array(16), S = new Uint32Array(16), E = s3 * n2 * 2, x = 0, P = null, O = false, T = 0, B = 0, M = l2 ? parseInt(1e3 / a2) : 4294967295, R = void 0 !== t2 ? t2 : setTimeout, I = function t3() {
              if (O)
                return l2(new Error("cancelled"), x / E);
              var r5;
              switch (T) {
                case 0:
                  c(b, g = 32 * B * a2, w, 0, k), T = 1, m = 0;
                case 1:
                  (r5 = n2 - m) > M && (r5 = M);
                  for (var u2 = 0; u2 < r5; u2++)
                    c(w, 0, _, (m + u2) * k, k), o(w, k, a2, A, S);
                  if (m += r5, x += r5, l2) {
                    var d2 = parseInt(1e3 * x / E);
                    if (d2 !== P) {
                      if (O = l2(null, x / E))
                        break;
                      P = d2;
                    }
                  }
                  if (m < n2)
                    break;
                  m = 0, T = 2;
                case 2:
                  (r5 = n2 - m) > M && (r5 = M);
                  for (var y2 = 0; y2 < r5; y2++) {
                    var v2 = w[16 * (2 * a2 - 1)] & n2 - 1;
                    f2(_, v2 * k, w, k), o(w, k, a2, A, S);
                  }
                  if (m += r5, x += r5, l2) {
                    var I2 = parseInt(1e3 * x / E);
                    if (I2 !== P) {
                      if (O = l2(null, x / E))
                        break;
                      P = I2;
                    }
                  }
                  if (m < n2)
                    break;
                  if (c(w, 0, b, g, k), ++B < s3) {
                    T = 0;
                    break;
                  }
                  p = [];
                  for (var C2 = 0; C2 < b.length; C2++)
                    p.push(b[C2] >> 0 & 255), p.push(b[C2] >> 8 & 255), p.push(b[C2] >> 16 & 255), p.push(b[C2] >> 24 & 255);
                  var U = i(e2, p, h2);
                  return l2 && l2(null, 1, U), U;
              }
              l2 && R(t3);
            };
            if (!l2)
              for (; ; ) {
                var C = I();
                if (null != C)
                  return C;
              }
            I();
          }
          var l = { scrypt: function(e2, t3, r4, n2, i2, o2, a2) {
            return new Promise(function(s3, f3) {
              var c2 = 0;
              a2 && a2(0), h(e2, t3, r4, n2, i2, o2, function(e3, t4, r5) {
                if (e3)
                  f3(e3);
                else if (r5)
                  a2 && 1 !== c2 && a2(1), s3(new Uint8Array(r5));
                else if (a2 && t4 !== c2)
                  return c2 = t4, a2(t4);
              });
            });
          }, syncScrypt: function(e2, t3, r4, n2, i2, o2) {
            return new Uint8Array(h(e2, t3, r4, n2, i2, o2));
          } };
          e.exports = l;
        }();
      }).call(this, r2(164).setImmediate);
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "NIL", { enumerable: true, get: function() {
        return f2.default;
      } }), Object.defineProperty(t, "parse", { enumerable: true, get: function() {
        return h.default;
      } }), Object.defineProperty(t, "stringify", { enumerable: true, get: function() {
        return d.default;
      } }), Object.defineProperty(t, "v1", { enumerable: true, get: function() {
        return i.default;
      } }), Object.defineProperty(t, "v3", { enumerable: true, get: function() {
        return o.default;
      } }), Object.defineProperty(t, "v4", { enumerable: true, get: function() {
        return a.default;
      } }), Object.defineProperty(t, "v5", { enumerable: true, get: function() {
        return s2.default;
      } }), Object.defineProperty(t, "validate", { enumerable: true, get: function() {
        return u.default;
      } }), Object.defineProperty(t, "version", { enumerable: true, get: function() {
        return c.default;
      } });
      var i = n(r2(497)), o = n(r2(499)), a = n(r2(501)), s2 = n(r2(503)), f2 = n(r2(505)), c = n(r2(506)), u = n(r2(88)), d = n(r2(87)), h = n(r2(229));
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var i, o, a = n(r2(227)), s2 = r2(87), f2 = 0, c = 0;
      var u = function(e2, t2, r3) {
        var n2 = t2 && r3 || 0, u2 = t2 || new Array(16), d = (e2 = e2 || {}).node || i, h = void 0 !== e2.clockseq ? e2.clockseq : o;
        if (null == d || null == h) {
          var l = e2.random || (e2.rng || a.default)();
          null == d && (d = i = [1 | l[0], l[1], l[2], l[3], l[4], l[5]]), null == h && (h = o = 16383 & (l[6] << 8 | l[7]));
        }
        var p = void 0 !== e2.msecs ? e2.msecs : Date.now(), b = void 0 !== e2.nsecs ? e2.nsecs : c + 1, y = p - f2 + (b - c) / 1e4;
        if (y < 0 && void 0 === e2.clockseq && (h = h + 1 & 16383), (y < 0 || p > f2) && void 0 === e2.nsecs && (b = 0), b >= 1e4)
          throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
        f2 = p, c = b, o = h;
        var v = (1e4 * (268435455 & (p += 122192928e5)) + b) % 4294967296;
        u2[n2++] = v >>> 24 & 255, u2[n2++] = v >>> 16 & 255, u2[n2++] = v >>> 8 & 255, u2[n2++] = 255 & v;
        var m = p / 4294967296 * 1e4 & 268435455;
        u2[n2++] = m >>> 8 & 255, u2[n2++] = 255 & m, u2[n2++] = m >>> 24 & 15 | 16, u2[n2++] = m >>> 16 & 255, u2[n2++] = h >>> 8 | 128, u2[n2++] = 255 & h;
        for (var g = 0; g < 6; ++g)
          u2[n2 + g] = d[g];
        return t2 || (0, s2.unsafeStringify)(u2);
      };
      t.default = u;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      t.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var i = n(r2(228)), o = n(r2(500)), a = (0, i.default)("v3", 48, o.default);
      t.default = a;
    }, function(e, t, r2) {
      function n(e2) {
        return 14 + (e2 + 64 >>> 9 << 4) + 1;
      }
      function i(e2, t2) {
        var r3 = (65535 & e2) + (65535 & t2);
        return (e2 >> 16) + (t2 >> 16) + (r3 >> 16) << 16 | 65535 & r3;
      }
      function o(e2, t2, r3, n2, o2, a2) {
        return i((s3 = i(i(t2, e2), i(n2, a2))) << (f3 = o2) | s3 >>> 32 - f3, r3);
        var s3, f3;
      }
      function a(e2, t2, r3, n2, i2, a2, s3) {
        return o(t2 & r3 | ~t2 & n2, e2, t2, i2, a2, s3);
      }
      function s2(e2, t2, r3, n2, i2, a2, s3) {
        return o(t2 & n2 | r3 & ~n2, e2, t2, i2, a2, s3);
      }
      function f2(e2, t2, r3, n2, i2, a2, s3) {
        return o(t2 ^ r3 ^ n2, e2, t2, i2, a2, s3);
      }
      function c(e2, t2, r3, n2, i2, a2, s3) {
        return o(r3 ^ (t2 | ~n2), e2, t2, i2, a2, s3);
      }
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var u = function(e2) {
        if ("string" == typeof e2) {
          var t2 = unescape(encodeURIComponent(e2));
          e2 = new Uint8Array(t2.length);
          for (var r3 = 0; r3 < t2.length; ++r3)
            e2[r3] = t2.charCodeAt(r3);
        }
        return function(e3) {
          for (var t3 = [], r4 = 32 * e3.length, n2 = 0; n2 < r4; n2 += 8) {
            var i2 = e3[n2 >> 5] >>> n2 % 32 & 255, o2 = parseInt("0123456789abcdef".charAt(i2 >>> 4 & 15) + "0123456789abcdef".charAt(15 & i2), 16);
            t3.push(o2);
          }
          return t3;
        }(function(e3, t3) {
          e3[t3 >> 5] |= 128 << t3 % 32, e3[n(t3) - 1] = t3;
          for (var r4 = 1732584193, o2 = -271733879, u2 = -1732584194, d = 271733878, h = 0; h < e3.length; h += 16) {
            var l = r4, p = o2, b = u2, y = d;
            r4 = a(r4, o2, u2, d, e3[h], 7, -680876936), d = a(d, r4, o2, u2, e3[h + 1], 12, -389564586), u2 = a(u2, d, r4, o2, e3[h + 2], 17, 606105819), o2 = a(o2, u2, d, r4, e3[h + 3], 22, -1044525330), r4 = a(r4, o2, u2, d, e3[h + 4], 7, -176418897), d = a(d, r4, o2, u2, e3[h + 5], 12, 1200080426), u2 = a(u2, d, r4, o2, e3[h + 6], 17, -1473231341), o2 = a(o2, u2, d, r4, e3[h + 7], 22, -45705983), r4 = a(r4, o2, u2, d, e3[h + 8], 7, 1770035416), d = a(d, r4, o2, u2, e3[h + 9], 12, -1958414417), u2 = a(u2, d, r4, o2, e3[h + 10], 17, -42063), o2 = a(o2, u2, d, r4, e3[h + 11], 22, -1990404162), r4 = a(r4, o2, u2, d, e3[h + 12], 7, 1804603682), d = a(d, r4, o2, u2, e3[h + 13], 12, -40341101), u2 = a(u2, d, r4, o2, e3[h + 14], 17, -1502002290), o2 = a(o2, u2, d, r4, e3[h + 15], 22, 1236535329), r4 = s2(r4, o2, u2, d, e3[h + 1], 5, -165796510), d = s2(d, r4, o2, u2, e3[h + 6], 9, -1069501632), u2 = s2(u2, d, r4, o2, e3[h + 11], 14, 643717713), o2 = s2(o2, u2, d, r4, e3[h], 20, -373897302), r4 = s2(r4, o2, u2, d, e3[h + 5], 5, -701558691), d = s2(d, r4, o2, u2, e3[h + 10], 9, 38016083), u2 = s2(u2, d, r4, o2, e3[h + 15], 14, -660478335), o2 = s2(o2, u2, d, r4, e3[h + 4], 20, -405537848), r4 = s2(r4, o2, u2, d, e3[h + 9], 5, 568446438), d = s2(d, r4, o2, u2, e3[h + 14], 9, -1019803690), u2 = s2(u2, d, r4, o2, e3[h + 3], 14, -187363961), o2 = s2(o2, u2, d, r4, e3[h + 8], 20, 1163531501), r4 = s2(r4, o2, u2, d, e3[h + 13], 5, -1444681467), d = s2(d, r4, o2, u2, e3[h + 2], 9, -51403784), u2 = s2(u2, d, r4, o2, e3[h + 7], 14, 1735328473), o2 = s2(o2, u2, d, r4, e3[h + 12], 20, -1926607734), r4 = f2(r4, o2, u2, d, e3[h + 5], 4, -378558), d = f2(d, r4, o2, u2, e3[h + 8], 11, -2022574463), u2 = f2(u2, d, r4, o2, e3[h + 11], 16, 1839030562), o2 = f2(o2, u2, d, r4, e3[h + 14], 23, -35309556), r4 = f2(r4, o2, u2, d, e3[h + 1], 4, -1530992060), d = f2(d, r4, o2, u2, e3[h + 4], 11, 1272893353), u2 = f2(u2, d, r4, o2, e3[h + 7], 16, -155497632), o2 = f2(o2, u2, d, r4, e3[h + 10], 23, -1094730640), r4 = f2(r4, o2, u2, d, e3[h + 13], 4, 681279174), d = f2(d, r4, o2, u2, e3[h], 11, -358537222), u2 = f2(u2, d, r4, o2, e3[h + 3], 16, -722521979), o2 = f2(o2, u2, d, r4, e3[h + 6], 23, 76029189), r4 = f2(r4, o2, u2, d, e3[h + 9], 4, -640364487), d = f2(d, r4, o2, u2, e3[h + 12], 11, -421815835), u2 = f2(u2, d, r4, o2, e3[h + 15], 16, 530742520), o2 = f2(o2, u2, d, r4, e3[h + 2], 23, -995338651), r4 = c(r4, o2, u2, d, e3[h], 6, -198630844), d = c(d, r4, o2, u2, e3[h + 7], 10, 1126891415), u2 = c(u2, d, r4, o2, e3[h + 14], 15, -1416354905), o2 = c(o2, u2, d, r4, e3[h + 5], 21, -57434055), r4 = c(r4, o2, u2, d, e3[h + 12], 6, 1700485571), d = c(d, r4, o2, u2, e3[h + 3], 10, -1894986606), u2 = c(u2, d, r4, o2, e3[h + 10], 15, -1051523), o2 = c(o2, u2, d, r4, e3[h + 1], 21, -2054922799), r4 = c(r4, o2, u2, d, e3[h + 8], 6, 1873313359), d = c(d, r4, o2, u2, e3[h + 15], 10, -30611744), u2 = c(u2, d, r4, o2, e3[h + 6], 15, -1560198380), o2 = c(o2, u2, d, r4, e3[h + 13], 21, 1309151649), r4 = c(r4, o2, u2, d, e3[h + 4], 6, -145523070), d = c(d, r4, o2, u2, e3[h + 11], 10, -1120210379), u2 = c(u2, d, r4, o2, e3[h + 2], 15, 718787259), o2 = c(o2, u2, d, r4, e3[h + 9], 21, -343485551), r4 = i(r4, l), o2 = i(o2, p), u2 = i(u2, b), d = i(d, y);
          }
          return [r4, o2, u2, d];
        }(function(e3) {
          if (0 === e3.length)
            return [];
          for (var t3 = 8 * e3.length, r4 = new Uint32Array(n(t3)), i2 = 0; i2 < t3; i2 += 8)
            r4[i2 >> 5] |= (255 & e3[i2 / 8]) << i2 % 32;
          return r4;
        }(e2), 8 * e2.length));
      };
      t.default = u;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var i = n(r2(502)), o = n(r2(227)), a = r2(87);
      var s2 = function(e2, t2, r3) {
        if (i.default.randomUUID && !t2 && !e2)
          return i.default.randomUUID();
        var n2 = (e2 = e2 || {}).random || (e2.rng || o.default)();
        if (n2[6] = 15 & n2[6] | 64, n2[8] = 63 & n2[8] | 128, t2) {
          r3 = r3 || 0;
          for (var s3 = 0; s3 < 16; ++s3)
            t2[r3 + s3] = n2[s3];
          return t2;
        }
        return (0, a.unsafeStringify)(n2);
      };
      t.default = s2;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var n = { randomUUID: "undefined" != typeof crypto && crypto.randomUUID && crypto.randomUUID.bind(crypto) };
      t.default = n;
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var i = n(r2(228)), o = n(r2(504)), a = (0, i.default)("v5", 80, o.default);
      t.default = a;
    }, function(e, t, r2) {
      function n(e2, t2, r3, n2) {
        switch (e2) {
          case 0:
            return t2 & r3 ^ ~t2 & n2;
          case 1:
            return t2 ^ r3 ^ n2;
          case 2:
            return t2 & r3 ^ t2 & n2 ^ r3 & n2;
          case 3:
            return t2 ^ r3 ^ n2;
        }
      }
      function i(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var o = function(e2) {
        var t2 = [1518500249, 1859775393, 2400959708, 3395469782], r3 = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
        if ("string" == typeof e2) {
          var o2 = unescape(encodeURIComponent(e2));
          e2 = [];
          for (var a = 0; a < o2.length; ++a)
            e2.push(o2.charCodeAt(a));
        } else
          Array.isArray(e2) || (e2 = Array.prototype.slice.call(e2));
        e2.push(128);
        for (var s2 = e2.length / 4 + 2, f2 = Math.ceil(s2 / 16), c = new Array(f2), u = 0; u < f2; ++u) {
          for (var d = new Uint32Array(16), h = 0; h < 16; ++h)
            d[h] = e2[64 * u + 4 * h] << 24 | e2[64 * u + 4 * h + 1] << 16 | e2[64 * u + 4 * h + 2] << 8 | e2[64 * u + 4 * h + 3];
          c[u] = d;
        }
        c[f2 - 1][14] = 8 * (e2.length - 1) / Math.pow(2, 32), c[f2 - 1][14] = Math.floor(c[f2 - 1][14]), c[f2 - 1][15] = 8 * (e2.length - 1) & 4294967295;
        for (var l = 0; l < f2; ++l) {
          for (var p = new Uint32Array(80), b = 0; b < 16; ++b)
            p[b] = c[l][b];
          for (var y = 16; y < 80; ++y)
            p[y] = i(p[y - 3] ^ p[y - 8] ^ p[y - 14] ^ p[y - 16], 1);
          for (var v = r3[0], m = r3[1], g = r3[2], w = r3[3], _ = r3[4], k = 0; k < 80; ++k) {
            var A = Math.floor(k / 20), S = i(v, 5) + n(A, m, g, w) + _ + t2[A] + p[k] >>> 0;
            _ = w, w = g, g = i(m, 30) >>> 0, m = v, v = S;
          }
          r3[0] = r3[0] + v >>> 0, r3[1] = r3[1] + m >>> 0, r3[2] = r3[2] + g >>> 0, r3[3] = r3[3] + w >>> 0, r3[4] = r3[4] + _ >>> 0;
        }
        return [r3[0] >> 24 & 255, r3[0] >> 16 & 255, r3[0] >> 8 & 255, 255 & r3[0], r3[1] >> 24 & 255, r3[1] >> 16 & 255, r3[1] >> 8 & 255, 255 & r3[1], r3[2] >> 24 & 255, r3[2] >> 16 & 255, r3[2] >> 8 & 255, 255 & r3[2], r3[3] >> 24 & 255, r3[3] >> 16 & 255, r3[3] >> 8 & 255, 255 & r3[3], r3[4] >> 24 & 255, r3[4] >> 16 & 255, r3[4] >> 8 & 255, 255 & r3[4]];
      };
      t.default = o;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      t.default = "00000000-0000-0000-0000-000000000000";
    }, function(e, t, r2) {
      var n = r2(0);
      Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var i = n(r2(88));
      var o = function(e2) {
        if (!(0, i.default)(e2))
          throw TypeError("Invalid UUID");
        return parseInt(e2.slice(14, 15), 16);
      };
      t.default = o;
    }, function(e, t, r2) {
      (function(e2) {
        var n, i = (n = function(e3, t2) {
          return (n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t3) {
            e4.__proto__ = t3;
          } || function(e4, t3) {
            for (var r3 in t3)
              Object.prototype.hasOwnProperty.call(t3, r3) && (e4[r3] = t3[r3]);
          })(e3, t2);
        }, function(e3, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
          function r3() {
            this.constructor = e3;
          }
          n(e3, t2), e3.prototype = null === t2 ? Object.create(t2) : (r3.prototype = t2.prototype, new r3());
        }), o = function() {
          return (o = Object.assign || function(e3) {
            for (var t2, r3 = 1, n2 = arguments.length; r3 < n2; r3++)
              for (var i2 in t2 = arguments[r3])
                Object.prototype.hasOwnProperty.call(t2, i2) && (e3[i2] = t2[i2]);
            return e3;
          }).apply(this, arguments);
        }, a = function(e3, t2) {
          var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
          if (!r3)
            return e3;
          var n2, i2, o2 = r3.call(e3), a2 = [];
          try {
            for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
              a2.push(n2.value);
          } catch (e4) {
            i2 = { error: e4 };
          } finally {
            try {
              n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (i2)
                throw i2.error;
            }
          }
          return a2;
        };
        Object.defineProperty(t, "__esModule", { value: true });
        var s2 = r2(27), f2 = r2(53), c = r2(119), u = function(t2) {
          function r3(e3, r4) {
            var n2;
            void 0 === r4 && (r4 = {});
            var i2 = t2.call(this, o(o({}, e3), { type: 0 })) || this;
            if (i2.common = i2._validateTxV(i2.v, r4.common), i2.gasPrice = new s2.BN((0, s2.toBuffer)("" === e3.gasPrice ? "0x" : e3.gasPrice)), i2._validateCannotExceedMaxInteger({ gasPrice: i2.gasPrice }), i2.common.gteHardfork("spuriousDragon"))
              if (i2.isSigned()) {
                var a2 = i2.v, c2 = i2.common.chainIdBN().muln(2);
                (a2.eq(c2.addn(35)) || a2.eq(c2.addn(36))) && i2.activeCapabilities.push(f2.Capability.EIP155ReplayProtection);
              } else
                i2.activeCapabilities.push(f2.Capability.EIP155ReplayProtection);
            return (null === (n2 = null == r4 ? void 0 : r4.freeze) || void 0 === n2 || n2) && Object.freeze(i2), i2;
          }
          return i(r3, t2), r3.fromTxData = function(e3, t3) {
            return void 0 === t3 && (t3 = {}), new r3(e3, t3);
          }, r3.fromSerializedTx = function(e3, t3) {
            void 0 === t3 && (t3 = {});
            var r4 = s2.rlp.decode(e3);
            if (!Array.isArray(r4))
              throw new Error("Invalid serialized tx input. Must be array");
            return this.fromValuesArray(r4, t3);
          }, r3.fromRlpSerializedTx = function(e3, t3) {
            return void 0 === t3 && (t3 = {}), r3.fromSerializedTx(e3, t3);
          }, r3.fromValuesArray = function(e3, t3) {
            if (void 0 === t3 && (t3 = {}), 6 !== e3.length && 9 !== e3.length)
              throw new Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");
            var n2 = a(e3, 9);
            return new r3({ nonce: n2[0], gasPrice: n2[1], gasLimit: n2[2], to: n2[3], value: n2[4], data: n2[5], v: n2[6], r: n2[7], s: n2[8] }, t3);
          }, r3.prototype.raw = function() {
            return [(0, s2.bnToUnpaddedBuffer)(this.nonce), (0, s2.bnToUnpaddedBuffer)(this.gasPrice), (0, s2.bnToUnpaddedBuffer)(this.gasLimit), void 0 !== this.to ? this.to.buf : e2.from([]), (0, s2.bnToUnpaddedBuffer)(this.value), this.data, void 0 !== this.v ? (0, s2.bnToUnpaddedBuffer)(this.v) : e2.from([]), void 0 !== this.r ? (0, s2.bnToUnpaddedBuffer)(this.r) : e2.from([]), void 0 !== this.s ? (0, s2.bnToUnpaddedBuffer)(this.s) : e2.from([])];
          }, r3.prototype.serialize = function() {
            return s2.rlp.encode(this.raw());
          }, r3.prototype._getMessageToSign = function() {
            var t3 = [(0, s2.bnToUnpaddedBuffer)(this.nonce), (0, s2.bnToUnpaddedBuffer)(this.gasPrice), (0, s2.bnToUnpaddedBuffer)(this.gasLimit), void 0 !== this.to ? this.to.buf : e2.from([]), (0, s2.bnToUnpaddedBuffer)(this.value), this.data];
            return this.supports(f2.Capability.EIP155ReplayProtection) && (t3.push((0, s2.toBuffer)(this.common.chainIdBN())), t3.push((0, s2.unpadBuffer)((0, s2.toBuffer)(0))), t3.push((0, s2.unpadBuffer)((0, s2.toBuffer)(0)))), t3;
          }, r3.prototype.getMessageToSign = function(e3) {
            void 0 === e3 && (e3 = true);
            var t3 = this._getMessageToSign();
            return e3 ? (0, s2.rlphash)(t3) : t3;
          }, r3.prototype.getUpfrontCost = function() {
            return this.gasLimit.mul(this.gasPrice).add(this.value);
          }, r3.prototype.hash = function() {
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = (0, s2.rlphash)(this.raw())), this.cache.hash) : (0, s2.rlphash)(this.raw());
          }, r3.prototype.getMessageToVerifySignature = function() {
            if (!this.isSigned())
              throw Error("This transaction is not signed");
            var e3 = this._getMessageToSign();
            return (0, s2.rlphash)(e3);
          }, r3.prototype.getSenderPublicKey = function() {
            var e3, t3 = this.getMessageToVerifySignature();
            if (this.common.gteHardfork("homestead") && (null === (e3 = this.s) || void 0 === e3 ? void 0 : e3.gt(f2.N_DIV_2)))
              throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
            var r4 = this.v, n2 = this.r, i2 = this.s;
            try {
              return (0, s2.ecrecover)(t3, r4, (0, s2.bnToUnpaddedBuffer)(n2), (0, s2.bnToUnpaddedBuffer)(i2), this.supports(f2.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : void 0);
            } catch (e4) {
              throw new Error("Invalid Signature");
            }
          }, r3.prototype._processSignature = function(e3, t3, n2) {
            var i2 = new s2.BN(e3);
            this.supports(f2.Capability.EIP155ReplayProtection) && i2.iadd(this.common.chainIdBN().muln(2).addn(8));
            var o2 = { common: this.common };
            return r3.fromTxData({ nonce: this.nonce, gasPrice: this.gasPrice, gasLimit: this.gasLimit, to: this.to, value: this.value, data: this.data, v: i2, r: new s2.BN(t3), s: new s2.BN(n2) }, o2);
          }, r3.prototype.toJSON = function() {
            return { nonce: (0, s2.bnToHex)(this.nonce), gasPrice: (0, s2.bnToHex)(this.gasPrice), gasLimit: (0, s2.bnToHex)(this.gasLimit), to: void 0 !== this.to ? this.to.toString() : void 0, value: (0, s2.bnToHex)(this.value), data: "0x" + this.data.toString("hex"), v: void 0 !== this.v ? (0, s2.bnToHex)(this.v) : void 0, r: void 0 !== this.r ? (0, s2.bnToHex)(this.r) : void 0, s: void 0 !== this.s ? (0, s2.bnToHex)(this.s) : void 0 };
          }, r3.prototype._validateTxV = function(e3, t3) {
            var r4;
            if (void 0 !== e3 && !e3.eqn(0) && (!t3 || t3.gteHardfork("spuriousDragon")) && !e3.eqn(27) && !e3.eqn(28))
              if (t3) {
                var n2 = t3.chainIdBN().muln(2);
                if (!(e3.eq(n2.addn(35)) || e3.eq(n2.addn(36))))
                  throw new Error("Incompatible EIP155-based V " + e3.toString() + " and chain id " + t3.chainIdBN().toString() + ". See the Common parameter of the Transaction constructor to set the chain id.");
              } else {
                var i2 = void 0;
                i2 = e3.subn(35).isEven() ? 35 : 36, r4 = e3.subn(i2).divn(2);
              }
            return this._getCommon(t3, r4);
          }, r3.prototype._unsignedTxImplementsEIP155 = function() {
            return this.common.gteHardfork("spuriousDragon");
          }, r3.prototype._signedTxImplementsEIP155 = function() {
            if (!this.isSigned())
              throw Error("This transaction is not signed");
            var e3 = this.common.gteHardfork("spuriousDragon"), t3 = this.v, r4 = this.common.chainIdBN().muln(2);
            return (t3.eq(r4.addn(35)) || t3.eq(r4.addn(36))) && e3;
          }, r3;
        }(c.BaseTransaction);
        t.default = u;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        var n, i, o = r2(0)(r2(2));
        i = function(e3) {
          e3.version = "1.2.2";
          var t2 = function() {
            for (var e4 = 0, t3 = new Array(256), r4 = 0; 256 != r4; ++r4)
              e4 = 1 & (e4 = 1 & (e4 = 1 & (e4 = 1 & (e4 = 1 & (e4 = 1 & (e4 = 1 & (e4 = 1 & (e4 = r4) ? -306674912 ^ e4 >>> 1 : e4 >>> 1) ? -306674912 ^ e4 >>> 1 : e4 >>> 1) ? -306674912 ^ e4 >>> 1 : e4 >>> 1) ? -306674912 ^ e4 >>> 1 : e4 >>> 1) ? -306674912 ^ e4 >>> 1 : e4 >>> 1) ? -306674912 ^ e4 >>> 1 : e4 >>> 1) ? -306674912 ^ e4 >>> 1 : e4 >>> 1) ? -306674912 ^ e4 >>> 1 : e4 >>> 1, t3[r4] = e4;
            return "undefined" != typeof Int32Array ? new Int32Array(t3) : t3;
          }(), r3 = function(e4) {
            var t3 = 0, r4 = 0, n3 = 0, i3 = "undefined" != typeof Int32Array ? new Int32Array(4096) : new Array(4096);
            for (n3 = 0; 256 != n3; ++n3)
              i3[n3] = e4[n3];
            for (n3 = 0; 256 != n3; ++n3)
              for (r4 = e4[n3], t3 = 256 + n3; t3 < 4096; t3 += 256)
                r4 = i3[t3] = r4 >>> 8 ^ e4[255 & r4];
            var o3 = [];
            for (n3 = 1; 16 != n3; ++n3)
              o3[n3 - 1] = "undefined" != typeof Int32Array ? i3.subarray(256 * n3, 256 * n3 + 256) : i3.slice(256 * n3, 256 * n3 + 256);
            return o3;
          }(t2), n2 = r3[0], i2 = r3[1], o2 = r3[2], a = r3[3], s2 = r3[4], f2 = r3[5], c = r3[6], u = r3[7], d = r3[8], h = r3[9], l = r3[10], p = r3[11], b = r3[12], y = r3[13], v = r3[14];
          e3.table = t2, e3.bstr = function(e4, r4) {
            for (var n3 = -1 ^ r4, i3 = 0, o3 = e4.length; i3 < o3; )
              n3 = n3 >>> 8 ^ t2[255 & (n3 ^ e4.charCodeAt(i3++))];
            return ~n3;
          }, e3.buf = function(e4, r4) {
            for (var m = -1 ^ r4, g = e4.length - 15, w = 0; w < g; )
              m = v[e4[w++] ^ 255 & m] ^ y[e4[w++] ^ m >> 8 & 255] ^ b[e4[w++] ^ m >> 16 & 255] ^ p[e4[w++] ^ m >>> 24] ^ l[e4[w++]] ^ h[e4[w++]] ^ d[e4[w++]] ^ u[e4[w++]] ^ c[e4[w++]] ^ f2[e4[w++]] ^ s2[e4[w++]] ^ a[e4[w++]] ^ o2[e4[w++]] ^ i2[e4[w++]] ^ n2[e4[w++]] ^ t2[e4[w++]];
            for (g += 15; w < g; )
              m = m >>> 8 ^ t2[255 & (m ^ e4[w++])];
            return ~m;
          }, e3.str = function(e4, r4) {
            for (var n3 = -1 ^ r4, i3 = 0, o3 = e4.length, a2 = 0, s3 = 0; i3 < o3; )
              (a2 = e4.charCodeAt(i3++)) < 128 ? n3 = n3 >>> 8 ^ t2[255 & (n3 ^ a2)] : a2 < 2048 ? n3 = (n3 = n3 >>> 8 ^ t2[255 & (n3 ^ (192 | a2 >> 6 & 31))]) >>> 8 ^ t2[255 & (n3 ^ (128 | 63 & a2))] : a2 >= 55296 && a2 < 57344 ? (a2 = 64 + (1023 & a2), s3 = 1023 & e4.charCodeAt(i3++), n3 = (n3 = (n3 = (n3 = n3 >>> 8 ^ t2[255 & (n3 ^ (240 | a2 >> 8 & 7))]) >>> 8 ^ t2[255 & (n3 ^ (128 | a2 >> 2 & 63))]) >>> 8 ^ t2[255 & (n3 ^ (128 | s3 >> 6 & 15 | (3 & a2) << 4))]) >>> 8 ^ t2[255 & (n3 ^ (128 | 63 & s3))]) : n3 = (n3 = (n3 = n3 >>> 8 ^ t2[255 & (n3 ^ (224 | a2 >> 12 & 15))]) >>> 8 ^ t2[255 & (n3 ^ (128 | a2 >> 6 & 63))]) >>> 8 ^ t2[255 & (n3 ^ (128 | 63 & a2))];
            return ~n3;
          };
        }, "undefined" == typeof DO_NOT_EXPORT_CRC ? "object" === (0, o.default)(t) ? i(t) : void 0 === (n = function() {
          var e3 = {};
          return i(e3), e3;
        }.call(t, r2, t, e2)) || (e2.exports = n) : i({});
      }).call(this, r2(35)(e));
    }, function(e, t, r2) {
      var n = function(e2) {
        var t2 = "function" == typeof Symbol && Symbol.iterator, r3 = t2 && e2[t2], n2 = 0;
        if (r3)
          return r3.call(e2);
        if (e2 && "number" == typeof e2.length)
          return { next: function() {
            return e2 && n2 >= e2.length && (e2 = void 0), { value: e2 && e2[n2++], done: !e2 };
          } };
        throw new TypeError(t2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }, i = function(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      };
      Object.defineProperty(t, "__esModule", { value: true }), t.chains = t._getInitializedChains = void 0;
      var o = i(r2(510)), a = i(r2(511)), s2 = i(r2(512)), f2 = i(r2(513)), c = i(r2(514));
      function u(e2) {
        var t2, r3, i2 = { 1: "mainnet", 3: "ropsten", 4: "rinkeby", 42: "kovan", 5: "goerli" }, u2 = { mainnet: o.default, ropsten: a.default, rinkeby: s2.default, kovan: f2.default, goerli: c.default };
        if (e2)
          try {
            for (var d = n(e2), h = d.next(); !h.done; h = d.next()) {
              var l = h.value, p = l.name;
              i2[l.chainId.toString()] = p, u2[p] = l;
            }
          } catch (e3) {
            t2 = { error: e3 };
          } finally {
            try {
              h && !h.done && (r3 = d.return) && r3.call(d);
            } finally {
              if (t2)
                throw t2.error;
            }
          }
        return u2.names = i2, u2;
      }
      t._getInitializedChains = u, t.chains = u();
    }, function(e) {
      e.exports = JSON.parse('{"name":"mainnet","chainId":1,"networkId":1,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"The Ethereum main chain","url":"https://ethstats.net/","genesis":{"hash":"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3","timestamp":null,"gasLimit":5000,"difficulty":17179869184,"nonce":"0x0000000000000042","extraData":"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa","stateRoot":"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xfc64ec04"},{"name":"homestead","block":1150000,"forkHash":"0x97c2c34c"},{"name":"dao","block":1920000,"forkHash":"0x91d1f948"},{"name":"tangerineWhistle","block":2463000,"forkHash":"0x7a64da13"},{"name":"spuriousDragon","block":2675000,"forkHash":"0x3edd5b10"},{"name":"byzantium","block":4370000,"forkHash":"0xa00bc324"},{"name":"constantinople","block":7280000,"forkHash":"0x668db0af"},{"name":"petersburg","block":7280000,"forkHash":"0x668db0af"},{"name":"istanbul","block":9069000,"forkHash":"0x879d6e30"},{"name":"muirGlacier","block":9200000,"forkHash":"0xe029e991"},{"name":"berlin","block":12244000,"forkHash":"0x0eb440f6"},{"name":"london","block":12965000,"forkHash":"0xb715077d"},{"name":"merge","block":null,"forkash":null},{"name":"shanghai","block":null,"forkash":null}],"bootstrapNodes":[{"ip":"18.138.108.67","port":30303,"id":"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666","location":"ap-southeast-1-001","comment":"bootnode-aws-ap-southeast-1-001"},{"ip":"3.209.45.79","port":30303,"id":"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de","location":"us-east-1-001","comment":"bootnode-aws-us-east-1-001"},{"ip":"34.255.23.113","port":30303,"id":"ca6de62fce278f96aea6ec5a2daadb877e51651247cb96ee310a318def462913b653963c155a0ef6c7d50048bba6e6cea881130857413d9f50a621546b590758","location":"eu-west-1-001","comment":"bootnode-aws-eu-west-1-001"},{"ip":"35.158.244.151","port":30303,"id":"279944d8dcd428dffaa7436f25ca0ca43ae19e7bcf94a8fb7d1641651f92d121e972ac2e8f381414b80cc8e5555811c2ec6e1a99bb009b3f53c4c69923e11bd8","location":"eu-central-1-001","comment":"bootnode-aws-eu-central-1-001"},{"ip":"52.187.207.27","port":30303,"id":"8499da03c47d637b20eee24eec3c356c9a2e6148d6fe25ca195c7949ab8ec2c03e3556126b0d7ed644675e78c4318b08691b7b57de10e5f0d40d05b09238fa0a","location":"australiaeast-001","comment":"bootnode-azure-australiaeast-001"},{"ip":"191.234.162.198","port":30303,"id":"103858bdb88756c71f15e9b5e09b56dc1be52f0a5021d46301dbbfb7e130029cc9d0d6f73f693bc29b665770fff7da4d34f3c6379fe12721b5d7a0bcb5ca1fc1","location":"brazilsouth-001","comment":"bootnode-azure-brazilsouth-001"},{"ip":"52.231.165.108","port":30303,"id":"715171f50508aba88aecd1250af392a45a330af91d7b90701c436b618c86aaa1589c9184561907bebbb56439b8f8787bc01f49a7c77276c58c1b09822d75e8e8","location":"koreasouth-001","comment":"bootnode-azure-koreasouth-001"},{"ip":"104.42.217.25","port":30303,"id":"5d6d7cd20d6da4bb83a1d28cadb5d409b64edf314c0335df658c1a54e32c7c4a7ab7823d57c39b6a757556e68ff1df17c748b698544a55cb488b52479a92b60f","location":"westus-001","comment":"bootnode-azure-westus-001"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"]}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"ropsten","chainId":3,"networkId":3,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"PoW test network","url":"https://github.com/ethereum/ropsten","genesis":{"hash":"0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d","timestamp":null,"gasLimit":16777216,"difficulty":1048576,"nonce":"0x0000000000000042","extraData":"0x3535353535353535353535353535353535353535353535353535353535353535","stateRoot":"0x217b0bbcfb72e2d57e28f33cb361b9983513177755dc3f33ce3e7022ed62b77b"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x30c7ddbc"},{"name":"homestead","block":0,"forkHash":"0x30c7ddbc"},{"name":"tangerineWhistle","block":0,"forkHash":"0x30c7ddbc"},{"name":"spuriousDragon","block":10,"forkHash":"0x63760190"},{"name":"byzantium","block":1700000,"forkHash":"0x3ea159c7"},{"name":"constantinople","block":4230000,"forkHash":"0x97b544f3"},{"name":"petersburg","block":4939394,"forkHash":"0xd6e2149b"},{"name":"istanbul","block":6485846,"forkHash":"0x4bc66396"},{"name":"muirGlacier","block":7117117,"forkHash":"0x6727ef90"},{"name":"berlin","block":9812189,"forkHash":"0xa157d377"},{"name":"london","block":10499401,"forkHash":"0x7119b6b3"},{"name":"merge","block":null,"forkash":null},{"name":"shanghai","block":null,"forkash":null}],"bootstrapNodes":[{"ip":"52.176.7.10","port":30303,"id":"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606","location":"","comment":"US-Azure geth"},{"ip":"52.176.100.77","port":30303,"id":"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c","location":"","comment":"US-Azure parity"},{"ip":"52.232.243.152","port":30303,"id":"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f","location":"","comment":"Parity"},{"ip":"192.81.208.223","port":30303,"id":"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09","location":"","comment":"@gpip"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.ropsten.ethdisco.net"]}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"rinkeby","chainId":4,"networkId":4,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"PoA test network","url":"https://www.rinkeby.io","genesis":{"hash":"0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177","timestamp":"0x58ee40ba","gasLimit":4700000,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x53580584816f617295ea26c0e17641e0120cab2f0a8ffb53a866fd53aa8e8c2d"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x3b8e0691"},{"name":"homestead","block":1,"forkHash":"0x60949295"},{"name":"tangerineWhistle","block":2,"forkHash":"0x8bde40dd"},{"name":"spuriousDragon","block":3,"forkHash":"0xcb3a64bb"},{"name":"byzantium","block":1035301,"forkHash":"0x8d748b57"},{"name":"constantinople","block":3660663,"forkHash":"0xe49cab14"},{"name":"petersburg","block":4321234,"forkHash":"0xafec6b27"},{"name":"istanbul","block":5435345,"forkHash":"0xcbdb8838"},{"name":"berlin","block":8290928,"forkHash":"0x6910c8bd"},{"name":"london","block":8897988,"forkHash":"0x8e29f2f3"},{"name":"merge","block":null,"forkash":null},{"name":"shanghai","block":null,"forkash":null}],"bootstrapNodes":[{"ip":"52.169.42.101","port":30303,"id":"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf","location":"","comment":"IE"},{"ip":"52.3.158.184","port":30303,"id":"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8","location":"","comment":"INFURA"},{"ip":"159.89.28.211","port":30303,"id":"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6","location":"","comment":"AKASHA"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.rinkeby.ethdisco.net"]}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"kovan","chainId":42,"networkId":42,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"aura","aura":{}},"comment":"Parity PoA test network","url":"https://kovan-testnet.github.io/website/","genesis":{"hash":"0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9","timestamp":null,"gasLimit":6000000,"difficulty":131072,"nonce":"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","extraData":"0x","stateRoot":"0x2480155b48a1cea17d67dbfdfaafe821c1d19cdd478c5358e8ec56dec24502b2"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x010ffe56"},{"name":"homestead","block":0,"forkHash":"0x010ffe56"},{"name":"tangerineWhistle","block":0,"forkHash":"0x010ffe56"},{"name":"spuriousDragon","block":0,"forkHash":"0x010ffe56"},{"name":"byzantium","block":5067000,"forkHash":"0x7f83c620"},{"name":"constantinople","block":9200000,"forkHash":"0xa94e3dc4"},{"name":"petersburg","block":10255201,"forkHash":"0x186874aa"},{"name":"istanbul","block":14111141,"forkHash":"0x7f6599a6"},{"name":"berlin","block":null,"forkHash":null},{"name":"london","block":null,"forkHash":null},{"name":"merge","block":null,"forkash":null},{"name":"shanghai","block":null,"forkash":null}],"bootstrapNodes":[{"ip":"116.203.116.241","port":30303,"id":"16898006ba2cd4fa8bf9a3dfe32684c178fa861df144bfc21fe800dc4838a03e342056951fa9fd533dcb0be1219e306106442ff2cf1f7e9f8faa5f2fc1a3aa45","location":"","comment":"1"},{"ip":"3.217.96.11","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"2"},{"ip":"108.61.170.124","port":30303,"id":"740e1c8ea64e71762c71a463a04e2046070a0c9394fcab5891d41301dc473c0cff00ebab5a9bc87fbcb610ab98ac18225ff897bc8b7b38def5975d5ceb0a7d7c","location":"","comment":"3"},{"ip":"157.230.31.163","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"4"}]}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"goerli","chainId":5,"networkId":5,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"Cross-client PoA test network","url":"https://github.com/goerli/testnet","genesis":{"hash":"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a","timestamp":"0x5c51a607","gasLimit":10485760,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xa3f5ab08"},{"name":"homestead","block":0,"forkHash":"0xa3f5ab08"},{"name":"tangerineWhistle","block":0,"forkHash":"0xa3f5ab08"},{"name":"spuriousDragon","block":0,"forkHash":"0xa3f5ab08"},{"name":"byzantium","block":0,"forkHash":"0xa3f5ab08"},{"name":"constantinople","block":0,"forkHash":"0xa3f5ab08"},{"name":"petersburg","block":0,"forkHash":"0xa3f5ab08"},{"name":"istanbul","block":1561651,"forkHash":"0xc25efa5c"},{"name":"berlin","block":4460644,"forkHash":"0x757a1c47"},{"name":"london","block":5062605,"forkHash":"0xb8c6299d"},{"name":"merge","block":null,"forkash":null},{"name":"shanghai","block":null,"forkash":null}],"bootstrapNodes":[{"ip":"51.141.78.53","port":30303,"id":"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a","location":"","comment":"Upstream bootnode 1"},{"ip":"13.93.54.137","port":30303,"id":"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b","location":"","comment":"Upstream bootnode 2"},{"ip":"94.237.54.114","port":30313,"id":"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291","location":"","comment":"Upstream bootnode 3"},{"ip":"18.218.250.66","port":30313,"id":"b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949","location":"","comment":"Upstream bootnode 4"},{"ip":"3.11.147.67","port":30303,"id":"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91","location":"","comment":"Ethereum Foundation bootnode"},{"ip":"51.15.116.226","port":30303,"id":"a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":30303,"id":"807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":40303,"id":"a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd","location":"","comment":"Goerli Initiative bootnode"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"]}');
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.hardforks = void 0, t.hardforks = [["chainstart", r2(516)], ["homestead", r2(517)], ["dao", r2(518)], ["tangerineWhistle", r2(519)], ["spuriousDragon", r2(520)], ["byzantium", r2(521)], ["constantinople", r2(522)], ["petersburg", r2(523)], ["istanbul", r2(524)], ["muirGlacier", r2(525)], ["berlin", r2(526)], ["london", r2(527)], ["shanghai", r2(528)], ["merge", r2(529)]];
    }, function(e) {
      e.exports = JSON.parse(`{"name":"chainstart","comment":"Start of the Ethereum main chain","url":"","status":"","gasConfig":{"minGasLimit":{"v":5000,"d":"Minimum the gas limit may ever be"},"gasLimitBoundDivisor":{"v":1024,"d":"The bound divisor of the gas limit, used in update calculations"},"maxRefundQuotient":{"v":2,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"base":{"v":2,"d":"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},"tierStep":{"v":[0,2,3,5,8,10,20],"d":"Once per operation, for a selection of them"},"exp":{"v":10,"d":"Base fee of the EXP opcode"},"expByte":{"v":10,"d":"Times ceil(log256(exponent)) for the EXP instruction"},"sha3":{"v":30,"d":"Base fee of the SHA3 opcode"},"sha3Word":{"v":6,"d":"Once per word of the SHA3 operation's data"},"sload":{"v":50,"d":"Base fee of the SLOAD opcode"},"sstoreSet":{"v":20000,"d":"Once per SSTORE operation if the zeroness changes from zero"},"sstoreReset":{"v":5000,"d":"Once per SSTORE operation if the zeroness does not change from zero"},"sstoreRefund":{"v":15000,"d":"Once per SSTORE operation if the zeroness changes to zero"},"jumpdest":{"v":1,"d":"Base fee of the JUMPDEST opcode"},"log":{"v":375,"d":"Base fee of the LOG opcode"},"logData":{"v":8,"d":"Per byte in a LOG* operation's data"},"logTopic":{"v":375,"d":"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},"create":{"v":32000,"d":"Base fee of the CREATE opcode"},"call":{"v":40,"d":"Base fee of the CALL opcode"},"callStipend":{"v":2300,"d":"Free gas given at beginning of call"},"callValueTransfer":{"v":9000,"d":"Paid for CALL when the value transfor is non-zero"},"callNewAccount":{"v":25000,"d":"Paid for CALL when the destination address didn't exist prior"},"selfdestructRefund":{"v":24000,"d":"Refunded following a selfdestruct operation"},"memory":{"v":3,"d":"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},"quadCoeffDiv":{"v":512,"d":"Divisor for the quadratic particle of the memory cost equation"},"createData":{"v":200,"d":""},"tx":{"v":21000,"d":"Per transaction. NOTE: Not payable on data of calls between transactions"},"txCreation":{"v":32000,"d":"The cost of creating a contract via tx"},"txDataZero":{"v":4,"d":"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},"txDataNonZero":{"v":68,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"copy":{"v":3,"d":"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},"ecRecover":{"v":3000,"d":""},"sha256":{"v":60,"d":""},"sha256Word":{"v":12,"d":""},"ripemd160":{"v":600,"d":""},"ripemd160Word":{"v":120,"d":""},"identity":{"v":15,"d":""},"identityWord":{"v":3,"d":""},"stop":{"v":0,"d":"Base fee of the STOP opcode"},"add":{"v":3,"d":"Base fee of the ADD opcode"},"mul":{"v":5,"d":"Base fee of the MUL opcode"},"sub":{"v":3,"d":"Base fee of the SUB opcode"},"div":{"v":5,"d":"Base fee of the DIV opcode"},"sdiv":{"v":5,"d":"Base fee of the SDIV opcode"},"mod":{"v":5,"d":"Base fee of the MOD opcode"},"smod":{"v":5,"d":"Base fee of the SMOD opcode"},"addmod":{"v":8,"d":"Base fee of the ADDMOD opcode"},"mulmod":{"v":8,"d":"Base fee of the MULMOD opcode"},"signextend":{"v":5,"d":"Base fee of the SIGNEXTEND opcode"},"lt":{"v":3,"d":"Base fee of the LT opcode"},"gt":{"v":3,"d":"Base fee of the GT opcode"},"slt":{"v":3,"d":"Base fee of the SLT opcode"},"sgt":{"v":3,"d":"Base fee of the SGT opcode"},"eq":{"v":3,"d":"Base fee of the EQ opcode"},"iszero":{"v":3,"d":"Base fee of the ISZERO opcode"},"and":{"v":3,"d":"Base fee of the AND opcode"},"or":{"v":3,"d":"Base fee of the OR opcode"},"xor":{"v":3,"d":"Base fee of the XOR opcode"},"not":{"v":3,"d":"Base fee of the NOT opcode"},"byte":{"v":3,"d":"Base fee of the BYTE opcode"},"address":{"v":2,"d":"Base fee of the ADDRESS opcode"},"balance":{"v":20,"d":"Base fee of the BALANCE opcode"},"origin":{"v":2,"d":"Base fee of the ORIGIN opcode"},"caller":{"v":2,"d":"Base fee of the CALLER opcode"},"callvalue":{"v":2,"d":"Base fee of the CALLVALUE opcode"},"calldataload":{"v":3,"d":"Base fee of the CALLDATALOAD opcode"},"calldatasize":{"v":2,"d":"Base fee of the CALLDATASIZE opcode"},"calldatacopy":{"v":3,"d":"Base fee of the CALLDATACOPY opcode"},"codesize":{"v":2,"d":"Base fee of the CODESIZE opcode"},"codecopy":{"v":3,"d":"Base fee of the CODECOPY opcode"},"gasprice":{"v":2,"d":"Base fee of the GASPRICE opcode"},"extcodesize":{"v":20,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":20,"d":"Base fee of the EXTCODECOPY opcode"},"blockhash":{"v":20,"d":"Base fee of the BLOCKHASH opcode"},"coinbase":{"v":2,"d":"Base fee of the COINBASE opcode"},"timestamp":{"v":2,"d":"Base fee of the TIMESTAMP opcode"},"number":{"v":2,"d":"Base fee of the NUMBER opcode"},"difficulty":{"v":2,"d":"Base fee of the DIFFICULTY opcode"},"gaslimit":{"v":2,"d":"Base fee of the GASLIMIT opcode"},"pop":{"v":2,"d":"Base fee of the POP opcode"},"mload":{"v":3,"d":"Base fee of the MLOAD opcode"},"mstore":{"v":3,"d":"Base fee of the MSTORE opcode"},"mstore8":{"v":3,"d":"Base fee of the MSTORE8 opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"},"jump":{"v":8,"d":"Base fee of the JUMP opcode"},"jumpi":{"v":10,"d":"Base fee of the JUMPI opcode"},"pc":{"v":2,"d":"Base fee of the PC opcode"},"msize":{"v":2,"d":"Base fee of the MSIZE opcode"},"gas":{"v":2,"d":"Base fee of the GAS opcode"},"push":{"v":3,"d":"Base fee of the PUSH opcode"},"dup":{"v":3,"d":"Base fee of the DUP opcode"},"swap":{"v":3,"d":"Base fee of the SWAP opcode"},"callcode":{"v":40,"d":"Base fee of the CALLCODE opcode"},"return":{"v":0,"d":"Base fee of the RETURN opcode"},"invalid":{"v":0,"d":"Base fee of the INVALID opcode"},"selfdestruct":{"v":0,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{"stackLimit":{"v":1024,"d":"Maximum size of VM stack allowed"},"callCreateDepth":{"v":1024,"d":"Maximum depth of call/create stack"},"maxExtraDataSize":{"v":32,"d":"Maximum size extra data may be after Genesis"}},"pow":{"minimumDifficulty":{"v":131072,"d":"The minimum that the difficulty may ever be"},"difficultyBoundDivisor":{"v":2048,"d":"The bound divisor of the difficulty, used in the update calculations"},"durationLimit":{"v":13,"d":"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},"epochDuration":{"v":30000,"d":"Duration between proof-of-work epochs"},"timebombPeriod":{"v":100000,"d":"Exponential difficulty timebomb period"},"minerReward":{"v":"5000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":0,"d":"the amount of blocks to delay the difficulty bomb with"}}}`);
    }, function(e) {
      e.exports = JSON.parse('{"name":"homestead","comment":"Homestead hardfork with protocol and network changes","url":"https://eips.ethereum.org/EIPS/eip-606","status":"Final","gasConfig":{},"gasPrices":{"delegatecall":{"v":40,"d":"Base fee of the DELEGATECALL opcode"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"dao","comment":"DAO rescue hardfork","url":"https://eips.ethereum.org/EIPS/eip-779","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"tangerineWhistle","comment":"Hardfork with gas cost changes for IO-heavy operations","url":"https://eips.ethereum.org/EIPS/eip-608","status":"Final","gasConfig":{},"gasPrices":{"sload":{"v":200,"d":"Once per SLOAD operation"},"call":{"v":700,"d":"Once per CALL operation & message call transaction"},"extcodesize":{"v":700,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":700,"d":"Base fee of the EXTCODECOPY opcode"},"balance":{"v":400,"d":"Base fee of the BALANCE opcode"},"delegatecall":{"v":700,"d":"Base fee of the DELEGATECALL opcode"},"callcode":{"v":700,"d":"Base fee of the CALLCODE opcode"},"selfdestruct":{"v":5000,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"spuriousDragon","comment":"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit","url":"https://eips.ethereum.org/EIPS/eip-607","status":"Final","gasConfig":{},"gasPrices":{"expByte":{"v":50,"d":"Times ceil(log256(exponent)) for the EXP instruction"}},"vm":{"maxCodeSize":{"v":24576,"d":"Maximum length of contract code"}},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"byzantium","comment":"Hardfork with new precompiles, instructions and other protocol changes","url":"https://eips.ethereum.org/EIPS/eip-609","status":"Final","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":20,"d":"Gquaddivisor from modexp precompile for gas calculation"},"ecAdd":{"v":500,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":40000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":100000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":80000,"d":"Gas costs regarding curve pairing precompile input length"},"revert":{"v":0,"d":"Base fee of the REVERT opcode"},"staticcall":{"v":700,"d":"Base fee of the STATICCALL opcode"},"returndatasize":{"v":2,"d":"Base fee of the RETURNDATASIZE opcode"},"returndatacopy":{"v":3,"d":"Base fee of the RETURNDATACOPY opcode"}},"vm":{},"pow":{"minerReward":{"v":"3000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":3000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');
    }, function(e) {
      e.exports = JSON.parse(`{"name":"constantinople","comment":"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)","url":"https://eips.ethereum.org/EIPS/eip-1013","status":"Final","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":200,"d":"Once per SSTORE operation if the value doesn't change"},"netSstoreInitGas":{"v":20000,"d":"Once per SSTORE operation from clean zero"},"netSstoreCleanGas":{"v":5000,"d":"Once per SSTORE operation from clean non-zero"},"netSstoreDirtyGas":{"v":200,"d":"Once per SSTORE operation from dirty"},"netSstoreClearRefund":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"netSstoreResetRefund":{"v":4800,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"netSstoreResetClearRefund":{"v":19800,"d":"Once per SSTORE operation for resetting to the original zero value"},"shl":{"v":3,"d":"Base fee of the SHL opcode"},"shr":{"v":3,"d":"Base fee of the SHR opcode"},"sar":{"v":3,"d":"Base fee of the SAR opcode"},"extcodehash":{"v":400,"d":"Base fee of the EXTCODEHASH opcode"},"create2":{"v":32000,"d":"Base fee of the CREATE2 opcode"}},"vm":{},"pow":{"minerReward":{"v":"2000000000000000000","d":"The amount a miner gets rewarded for mining a block"},"difficultyBombDelay":{"v":5000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}`);
    }, function(e) {
      e.exports = JSON.parse('{"name":"petersburg","comment":"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople","url":"https://eips.ethereum.org/EIPS/eip-1716","status":"Draft","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreInitGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreCleanGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreDirtyGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreClearRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetClearRefund":{"v":null,"d":"Removed along EIP-1283"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse(`{"name":"istanbul","comment":"HF targeted for December 2019 following the Constantinople/Petersburg HF","url":"https://eips.ethereum.org/EIPS/eip-1679","status":"Draft","gasConfig":{},"gasPrices":{"blake2Round":{"v":1,"d":"Gas cost per round for the Blake2 F precompile"},"ecAdd":{"v":150,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":6000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":45000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":34000,"d":"Gas costs regarding curve pairing precompile input length"},"txDataNonZero":{"v":16,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"sstoreSentryGasEIP2200":{"v":2300,"d":"Minimum gas required to be present for an SSTORE call, not consumed"},"sstoreNoopGasEIP2200":{"v":800,"d":"Once per SSTORE operation if the value doesn't change"},"sstoreDirtyGasEIP2200":{"v":800,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitGasEIP2200":{"v":20000,"d":"Once per SSTORE operation from clean zero to non-zero"},"sstoreInitRefundEIP2200":{"v":19200,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanGasEIP2200":{"v":5000,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreCleanRefundEIP2200":{"v":4200,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"sstoreClearRefundEIP2200":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"balance":{"v":700,"d":"Base fee of the BALANCE opcode"},"extcodehash":{"v":700,"d":"Base fee of the EXTCODEHASH opcode"},"chainid":{"v":2,"d":"Base fee of the CHAINID opcode"},"selfbalance":{"v":5,"d":"Base fee of the SELFBALANCE opcode"},"sload":{"v":800,"d":"Base fee of the SLOAD opcode"}},"vm":{},"pow":{}}`);
    }, function(e) {
      e.exports = JSON.parse('{"name":"muirGlacier","comment":"HF to delay the difficulty bomb","url":"https://eips.ethereum.org/EIPS/eip-2384","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"berlin","comment":"HF targeted for July 2020 following the Muir Glacier HF","url":"https://eips.ethereum.org/EIPS/eip-2070","status":"Draft","eips":[2565,2929,2718,2930]}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"london","comment":"HF targeted for July 2021 following the Berlin fork","url":"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md","status":"Draft","eips":[1559,3198,3529,3541]}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"shanghai","comment":"Next feature hardfork after the London HF","url":"https://github.com/ethereum/pm/issues/356","status":"Pre-Draft","eips":[]}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"merge","comment":"Hardfork to upgrade the consensus mechanism to Proof-of-Stake","url":"https://github.com/ethereum/pm/issues/361","status":"pre-Draft","consensus":{"type":"pos","algorithm":"casper","casper":{}},"eips":[3675]}');
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true }), t.EIPs = void 0, t.EIPs = { 1559: r2(531), 2315: r2(532), 2537: r2(533), 2565: r2(534), 2718: r2(535), 2929: r2(536), 2930: r2(537), 3198: r2(538), 3529: r2(539), 3541: r2(540), 3554: r2(541), 3675: r2(542) };
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-1559","number":1559,"comment":"Fee market change for ETH 1.0 chain","url":"https://eips.ethereum.org/EIPS/eip-1559","status":"Review","minimumHardfork":"berlin","requiredEIPs":[2930],"gasConfig":{"baseFeeMaxChangeDenominator":{"v":8,"d":"Maximum base fee change denominator"},"elasticityMultiplier":{"v":2,"d":"Maximum block gas target elasticity"},"initialBaseFee":{"v":1000000000,"d":"Initial base fee on first EIP1559 block"}},"gasPrices":{},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-2315","number":2315,"comment":"Simple subroutines for the EVM","url":"https://eips.ethereum.org/EIPS/eip-2315","status":"Draft","minimumHardfork":"istanbul","gasConfig":{},"gasPrices":{"beginsub":{"v":2,"d":"Base fee of the BEGINSUB opcode"},"returnsub":{"v":5,"d":"Base fee of the RETURNSUB opcode"},"jumpsub":{"v":10,"d":"Base fee of the JUMPSUB opcode"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-2537","number":2537,"comment":"BLS12-381 precompiles","url":"https://eips.ethereum.org/EIPS/eip-2537","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"Bls12381G1AddGas":{"v":600,"d":"Gas cost of a single BLS12-381 G1 addition precompile-call"},"Bls12381G1MulGas":{"v":12000,"d":"Gas cost of a single BLS12-381 G1 multiplication precompile-call"},"Bls12381G2AddGas":{"v":4500,"d":"Gas cost of a single BLS12-381 G2 addition precompile-call"},"Bls12381G2MulGas":{"v":55000,"d":"Gas cost of a single BLS12-381 G2 multiplication precompile-call"},"Bls12381PairingBaseGas":{"v":115000,"d":"Base gas cost of BLS12-381 pairing check"},"Bls12381PairingPerPairGas":{"v":23000,"d":"Per-pair gas cost of BLS12-381 pairing check"},"Bls12381MapG1Gas":{"v":5500,"d":"Gas cost of BLS12-381 map field element to G1"},"Bls12381MapG2Gas":{"v":110000,"d":"Gas cost of BLS12-381 map field element to G2"},"Bls12381MultiExpGasDiscount":{"v":[[1,1200],[2,888],[3,764],[4,641],[5,594],[6,547],[7,500],[8,453],[9,438],[10,423],[11,408],[12,394],[13,379],[14,364],[15,349],[16,334],[17,330],[18,326],[19,322],[20,318],[21,314],[22,310],[23,306],[24,302],[25,298],[26,294],[27,289],[28,285],[29,281],[30,277],[31,273],[32,269],[33,268],[34,266],[35,265],[36,263],[37,262],[38,260],[39,259],[40,257],[41,256],[42,254],[43,253],[44,251],[45,250],[46,248],[47,247],[48,245],[49,244],[50,242],[51,241],[52,239],[53,238],[54,236],[55,235],[56,233],[57,232],[58,231],[59,229],[60,228],[61,226],[62,225],[63,223],[64,222],[65,221],[66,220],[67,219],[68,219],[69,218],[70,217],[71,216],[72,216],[73,215],[74,214],[75,213],[76,213],[77,212],[78,211],[79,211],[80,210],[81,209],[82,208],[83,208],[84,207],[85,206],[86,205],[87,205],[88,204],[89,203],[90,202],[91,202],[92,201],[93,200],[94,199],[95,199],[96,198],[97,197],[98,196],[99,196],[100,195],[101,194],[102,193],[103,193],[104,192],[105,191],[106,191],[107,190],[108,189],[109,188],[110,188],[111,187],[112,186],[113,185],[114,185],[115,184],[116,183],[117,182],[118,182],[119,181],[120,180],[121,179],[122,179],[123,178],[124,177],[125,176],[126,176],[127,175],[128,174]],"d":"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-2565","number":2565,"comment":"ModExp gas cost","url":"https://eips.ethereum.org/EIPS/eip-2565","status":"Last call","minimumHardfork":"byzantium","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":3,"d":"Gquaddivisor from modexp precompile for gas calculation"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-2718","comment":"Typed Transaction Envelope","url":"https://eips.ethereum.org/EIPS/eip-2718","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse(`{"name":"EIP-2929","comment":"Gas cost increases for state access opcodes","url":"https://eips.ethereum.org/EIPS/eip-2929","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"coldsload":{"v":2100,"d":"Gas cost of the first read of storage from a given location (per transaction)"},"coldaccountaccess":{"v":2600,"d":"Gas cost of the first read of a given address (per transaction)"},"warmstorageread":{"v":100,"d":"Gas cost of reading storage locations which have already loaded 'cold'"},"sstoreCleanGasEIP2200":{"v":2900,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreNoopGasEIP2200":{"v":100,"d":"Once per SSTORE operation if the value doesn't change"},"sstoreDirtyGasEIP2200":{"v":100,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitRefundEIP2200":{"v":19900,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanRefundEIP2200":{"v":4900,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"call":{"v":0,"d":"Base fee of the CALL opcode"},"callcode":{"v":0,"d":"Base fee of the CALLCODE opcode"},"delegatecall":{"v":0,"d":"Base fee of the DELEGATECALL opcode"},"staticcall":{"v":0,"d":"Base fee of the STATICCALL opcode"},"balance":{"v":0,"d":"Base fee of the BALANCE opcode"},"extcodesize":{"v":0,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":0,"d":"Base fee of the EXTCODECOPY opcode"},"extcodehash":{"v":0,"d":"Base fee of the EXTCODEHASH opcode"},"sload":{"v":0,"d":"Base fee of the SLOAD opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"}},"vm":{},"pow":{}}`);
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-2930","comment":"Optional access lists","url":"https://eips.ethereum.org/EIPS/eip-2930","status":"Draft","minimumHardfork":"istanbul","requiredEIPs":[2718,2929],"gasConfig":{},"gasPrices":{"accessListStorageKeyCost":{"v":1900,"d":"Gas cost per storage key in an Access List transaction"},"accessListAddressCost":{"v":2400,"d":"Gas cost per storage key in an Access List transaction"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-3198","number":3198,"comment":"BASEFEE opcode","url":"https://eips.ethereum.org/EIPS/eip-3198","status":"Review","minimumHardfork":"london","gasConfig":{},"gasPrices":{"basefee":{"v":2,"d":"Gas cost of the BASEFEE opcode"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-3529","comment":"Reduction in refunds","url":"https://eips.ethereum.org/EIPS/eip-3529","status":"Draft","minimumHardfork":"berlin","requiredEIPs":[2929],"gasConfig":{"maxRefundQuotient":{"v":5,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"selfdestructRefund":{"v":0,"d":"Refunded following a selfdestruct operation"},"sstoreClearRefundEIP2200":{"v":4800,"d":"Once per SSTORE operation for clearing an originally existing storage slot"}},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-3541","comment":"Reject new contracts starting with the 0xEF byte","url":"https://eips.ethereum.org/EIPS/eip-3541","status":"Draft","minimumHardfork":"berlin","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-3554","comment":"Reduction in refunds","url":"Difficulty Bomb Delay to December 1st 2021","status":"Draft","minimumHardfork":"muirGlacier","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9500000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');
    }, function(e) {
      e.exports = JSON.parse('{"name":"EIP-3675","number":3675,"comment":"Upgrade consensus to Proof-of-Stake","url":"https://eips.ethereum.org/EIPS/eip-3675","status":"Draft","minimumHardfork":"london","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');
    }, function(e, t, r2) {
      (function(e2) {
        var n, i = (n = function(e3, t2) {
          return (n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t3) {
            e4.__proto__ = t3;
          } || function(e4, t3) {
            for (var r3 in t3)
              Object.prototype.hasOwnProperty.call(t3, r3) && (e4[r3] = t3[r3]);
          })(e3, t2);
        }, function(e3, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
          function r3() {
            this.constructor = e3;
          }
          n(e3, t2), e3.prototype = null === t2 ? Object.create(t2) : (r3.prototype = t2.prototype, new r3());
        }), o = function() {
          return (o = Object.assign || function(e3) {
            for (var t2, r3 = 1, n2 = arguments.length; r3 < n2; r3++)
              for (var i2 in t2 = arguments[r3])
                Object.prototype.hasOwnProperty.call(t2, i2) && (e3[i2] = t2[i2]);
            return e3;
          }).apply(this, arguments);
        }, a = function(e3, t2) {
          var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
          if (!r3)
            return e3;
          var n2, i2, o2 = r3.call(e3), a2 = [];
          try {
            for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
              a2.push(n2.value);
          } catch (e4) {
            i2 = { error: e4 };
          } finally {
            try {
              n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (i2)
                throw i2.error;
            }
          }
          return a2;
        };
        Object.defineProperty(t, "__esModule", { value: true });
        var s2 = r2(27), f2 = r2(119), c = r2(53), u = r2(231), d = e2.from(1 .toString(16).padStart(2, "0"), "hex"), h = function(t2) {
          function r3(e3, r4) {
            var n2, i2;
            void 0 === r4 && (r4 = {});
            var a2 = t2.call(this, o(o({}, e3), { type: 1 })) || this;
            a2.DEFAULT_HARDFORK = "berlin";
            var f3 = e3.chainId, d2 = e3.accessList, h2 = e3.gasPrice;
            if (a2.common = a2._getCommon(r4.common, f3), a2.chainId = a2.common.chainIdBN(), !a2.common.isActivatedEIP(2930))
              throw new Error("EIP-2930 not enabled on Common");
            a2.activeCapabilities = a2.activeCapabilities.concat([2718, 2930]);
            var l = u.AccessLists.getAccessListData(null != d2 ? d2 : []);
            if (a2.accessList = l.accessList, a2.AccessListJSON = l.AccessListJSON, u.AccessLists.verifyAccessList(a2.accessList), a2.gasPrice = new s2.BN((0, s2.toBuffer)("" === h2 ? "0x" : h2)), a2._validateCannotExceedMaxInteger({ gasPrice: a2.gasPrice }), a2.v && !a2.v.eqn(0) && !a2.v.eqn(1))
              throw new Error("The y-parity of the transaction should either be 0 or 1");
            if (a2.common.gteHardfork("homestead") && (null === (n2 = a2.s) || void 0 === n2 ? void 0 : n2.gt(c.N_DIV_2)))
              throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
            return (null === (i2 = null == r4 ? void 0 : r4.freeze) || void 0 === i2 || i2) && Object.freeze(a2), a2;
          }
          return i(r3, t2), Object.defineProperty(r3.prototype, "senderR", { get: function() {
            return this.r;
          }, enumerable: false, configurable: true }), Object.defineProperty(r3.prototype, "senderS", { get: function() {
            return this.s;
          }, enumerable: false, configurable: true }), Object.defineProperty(r3.prototype, "yParity", { get: function() {
            return this.v;
          }, enumerable: false, configurable: true }), r3.fromTxData = function(e3, t3) {
            return void 0 === t3 && (t3 = {}), new r3(e3, t3);
          }, r3.fromSerializedTx = function(e3, t3) {
            if (void 0 === t3 && (t3 = {}), !e3.slice(0, 1).equals(d))
              throw new Error("Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: 1, received: " + e3.slice(0, 1).toString("hex"));
            var n2 = s2.rlp.decode(e3.slice(1));
            if (!Array.isArray(n2))
              throw new Error("Invalid serialized tx input: must be array");
            return r3.fromValuesArray(n2, t3);
          }, r3.fromRlpSerializedTx = function(e3, t3) {
            return void 0 === t3 && (t3 = {}), r3.fromSerializedTx(e3, t3);
          }, r3.fromValuesArray = function(e3, t3) {
            if (void 0 === t3 && (t3 = {}), 8 !== e3.length && 11 !== e3.length)
              throw new Error("Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).");
            var n2 = a(e3, 11), i2 = n2[0], o2 = n2[1], f3 = n2[2], c2 = n2[3], u2 = n2[4], d2 = n2[5], h2 = n2[6], l = n2[7], p = n2[8], b = n2[9], y = n2[10];
            return new r3({ chainId: new s2.BN(i2), nonce: o2, gasPrice: f3, gasLimit: c2, to: u2, value: d2, data: h2, accessList: null != l ? l : [], v: void 0 !== p ? new s2.BN(p) : void 0, r: b, s: y }, t3);
          }, r3.prototype.getDataFee = function() {
            var e3 = t2.prototype.getDataFee.call(this);
            return e3.iaddn(u.AccessLists.getDataFeeEIP2930(this.accessList, this.common)), e3;
          }, r3.prototype.getUpfrontCost = function() {
            return this.gasLimit.mul(this.gasPrice).add(this.value);
          }, r3.prototype.raw = function() {
            return [(0, s2.bnToUnpaddedBuffer)(this.chainId), (0, s2.bnToUnpaddedBuffer)(this.nonce), (0, s2.bnToUnpaddedBuffer)(this.gasPrice), (0, s2.bnToUnpaddedBuffer)(this.gasLimit), void 0 !== this.to ? this.to.buf : e2.from([]), (0, s2.bnToUnpaddedBuffer)(this.value), this.data, this.accessList, void 0 !== this.v ? (0, s2.bnToUnpaddedBuffer)(this.v) : e2.from([]), void 0 !== this.r ? (0, s2.bnToUnpaddedBuffer)(this.r) : e2.from([]), void 0 !== this.s ? (0, s2.bnToUnpaddedBuffer)(this.s) : e2.from([])];
          }, r3.prototype.serialize = function() {
            var t3 = this.raw();
            return e2.concat([d, s2.rlp.encode(t3)]);
          }, r3.prototype.getMessageToSign = function(t3) {
            void 0 === t3 && (t3 = true);
            var r4 = this.raw().slice(0, 8), n2 = e2.concat([d, s2.rlp.encode(r4)]);
            return t3 ? (0, s2.keccak256)(n2) : n2;
          }, r3.prototype.hash = function() {
            if (!this.isSigned())
              throw new Error("Cannot call hash method if transaction is not signed");
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = (0, s2.keccak256)(this.serialize())), this.cache.hash) : (0, s2.keccak256)(this.serialize());
          }, r3.prototype.getMessageToVerifySignature = function() {
            return this.getMessageToSign();
          }, r3.prototype.getSenderPublicKey = function() {
            var e3;
            if (!this.isSigned())
              throw new Error("Cannot call this method if transaction is not signed");
            var t3 = this.getMessageToVerifySignature();
            if (this.common.gteHardfork("homestead") && (null === (e3 = this.s) || void 0 === e3 ? void 0 : e3.gt(c.N_DIV_2)))
              throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
            var r4 = this.yParity, n2 = this.r, i2 = this.s;
            try {
              return (0, s2.ecrecover)(t3, r4.addn(27), (0, s2.bnToUnpaddedBuffer)(n2), (0, s2.bnToUnpaddedBuffer)(i2));
            } catch (e4) {
              throw new Error("Invalid Signature");
            }
          }, r3.prototype._processSignature = function(e3, t3, n2) {
            var i2 = { common: this.common };
            return r3.fromTxData({ chainId: this.chainId, nonce: this.nonce, gasPrice: this.gasPrice, gasLimit: this.gasLimit, to: this.to, value: this.value, data: this.data, accessList: this.accessList, v: new s2.BN(e3 - 27), r: new s2.BN(t3), s: new s2.BN(n2) }, i2);
          }, r3.prototype.toJSON = function() {
            var e3 = u.AccessLists.getAccessListJSON(this.accessList);
            return { chainId: (0, s2.bnToHex)(this.chainId), nonce: (0, s2.bnToHex)(this.nonce), gasPrice: (0, s2.bnToHex)(this.gasPrice), gasLimit: (0, s2.bnToHex)(this.gasLimit), to: void 0 !== this.to ? this.to.toString() : void 0, value: (0, s2.bnToHex)(this.value), data: "0x" + this.data.toString("hex"), accessList: e3, v: void 0 !== this.v ? (0, s2.bnToHex)(this.v) : void 0, r: void 0 !== this.r ? (0, s2.bnToHex)(this.r) : void 0, s: void 0 !== this.s ? (0, s2.bnToHex)(this.s) : void 0 };
          }, r3;
        }(f2.BaseTransaction);
        t.default = h;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true });
        var n = r2(27), i = r2(230), o = function() {
          function t2() {
          }
          return t2.fromTxData = function(e3, t3) {
            if (void 0 === t3 && (t3 = {}), "type" in e3 && void 0 !== e3.type) {
              var r3 = new n.BN((0, n.toBuffer)(e3.type)).toNumber();
              if (0 === r3)
                return i.Transaction.fromTxData(e3, t3);
              if (1 === r3)
                return i.AccessListEIP2930Transaction.fromTxData(e3, t3);
              if (2 === r3)
                return i.FeeMarketEIP1559Transaction.fromTxData(e3, t3);
              throw new Error("Tx instantiation with type " + r3 + " not supported");
            }
            return i.Transaction.fromTxData(e3, t3);
          }, t2.fromSerializedData = function(e3, t3) {
            if (void 0 === t3 && (t3 = {}), e3[0] <= 127) {
              var r3 = void 0;
              switch (e3[0]) {
                case 1:
                  r3 = 2930;
                  break;
                case 2:
                  r3 = 1559;
                  break;
                default:
                  throw new Error("TypedTransaction with ID " + e3[0] + " unknown");
              }
              return 1559 === r3 ? i.FeeMarketEIP1559Transaction.fromSerializedTx(e3, t3) : i.AccessListEIP2930Transaction.fromSerializedTx(e3, t3);
            }
            return i.Transaction.fromSerializedTx(e3, t3);
          }, t2.fromBlockBodyData = function(t3, r3) {
            if (void 0 === r3 && (r3 = {}), e2.isBuffer(t3))
              return this.fromSerializedData(t3, r3);
            if (Array.isArray(t3))
              return i.Transaction.fromValuesArray(t3, r3);
            throw new Error("Cannot decode transaction: unknown type input");
          }, t2.getTransactionClass = function(e3, t3) {
            if (void 0 === e3 && (e3 = 0), 0 == e3 || e3 >= 128 && e3 <= 255)
              return i.Transaction;
            switch (e3) {
              case 1:
                return i.AccessListEIP2930Transaction;
              case 2:
                return i.FeeMarketEIP1559Transaction;
              default:
                throw new Error("TypedTransaction with ID " + e3 + " unknown");
            }
          }, t2;
        }();
        t.default = o;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        var n, i = (n = function(e3, t2) {
          return (n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t3) {
            e4.__proto__ = t3;
          } || function(e4, t3) {
            for (var r3 in t3)
              Object.prototype.hasOwnProperty.call(t3, r3) && (e4[r3] = t3[r3]);
          })(e3, t2);
        }, function(e3, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Class extends value " + String(t2) + " is not a constructor or null");
          function r3() {
            this.constructor = e3;
          }
          n(e3, t2), e3.prototype = null === t2 ? Object.create(t2) : (r3.prototype = t2.prototype, new r3());
        }), o = function() {
          return (o = Object.assign || function(e3) {
            for (var t2, r3 = 1, n2 = arguments.length; r3 < n2; r3++)
              for (var i2 in t2 = arguments[r3])
                Object.prototype.hasOwnProperty.call(t2, i2) && (e3[i2] = t2[i2]);
            return e3;
          }).apply(this, arguments);
        }, a = function(e3, t2) {
          var r3 = "function" == typeof Symbol && e3[Symbol.iterator];
          if (!r3)
            return e3;
          var n2, i2, o2 = r3.call(e3), a2 = [];
          try {
            for (; (void 0 === t2 || t2-- > 0) && !(n2 = o2.next()).done; )
              a2.push(n2.value);
          } catch (e4) {
            i2 = { error: e4 };
          } finally {
            try {
              n2 && !n2.done && (r3 = o2.return) && r3.call(o2);
            } finally {
              if (i2)
                throw i2.error;
            }
          }
          return a2;
        };
        Object.defineProperty(t, "__esModule", { value: true });
        var s2 = r2(27), f2 = r2(119), c = r2(53), u = r2(231), d = e2.from(2 .toString(16).padStart(2, "0"), "hex"), h = function(t2) {
          function r3(e3, r4) {
            var n2, i2;
            void 0 === r4 && (r4 = {});
            var a2 = t2.call(this, o(o({}, e3), { type: 2 })) || this;
            a2.DEFAULT_HARDFORK = "london";
            var f3 = e3.chainId, d2 = e3.accessList, h2 = e3.maxFeePerGas, l = e3.maxPriorityFeePerGas;
            if (a2.common = a2._getCommon(r4.common, f3), a2.chainId = a2.common.chainIdBN(), !a2.common.isActivatedEIP(1559))
              throw new Error("EIP-1559 not enabled on Common");
            a2.activeCapabilities = a2.activeCapabilities.concat([1559, 2718, 2930]);
            var p = u.AccessLists.getAccessListData(null != d2 ? d2 : []);
            if (a2.accessList = p.accessList, a2.AccessListJSON = p.AccessListJSON, u.AccessLists.verifyAccessList(a2.accessList), a2.maxFeePerGas = new s2.BN((0, s2.toBuffer)("" === h2 ? "0x" : h2)), a2.maxPriorityFeePerGas = new s2.BN((0, s2.toBuffer)("" === l ? "0x" : l)), a2._validateCannotExceedMaxInteger({ maxFeePerGas: a2.maxFeePerGas, maxPriorityFeePerGas: a2.maxPriorityFeePerGas }, 256), a2.maxFeePerGas.lt(a2.maxPriorityFeePerGas))
              throw new Error("maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)");
            if (a2.v && !a2.v.eqn(0) && !a2.v.eqn(1))
              throw new Error("The y-parity of the transaction should either be 0 or 1");
            if (a2.common.gteHardfork("homestead") && (null === (n2 = a2.s) || void 0 === n2 ? void 0 : n2.gt(c.N_DIV_2)))
              throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
            return (null === (i2 = null == r4 ? void 0 : r4.freeze) || void 0 === i2 || i2) && Object.freeze(a2), a2;
          }
          return i(r3, t2), Object.defineProperty(r3.prototype, "senderR", { get: function() {
            return this.r;
          }, enumerable: false, configurable: true }), Object.defineProperty(r3.prototype, "senderS", { get: function() {
            return this.s;
          }, enumerable: false, configurable: true }), Object.defineProperty(r3.prototype, "yParity", { get: function() {
            return this.v;
          }, enumerable: false, configurable: true }), r3.fromTxData = function(e3, t3) {
            return void 0 === t3 && (t3 = {}), new r3(e3, t3);
          }, r3.fromSerializedTx = function(e3, t3) {
            if (void 0 === t3 && (t3 = {}), !e3.slice(0, 1).equals(d))
              throw new Error("Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: 2, received: " + e3.slice(0, 1).toString("hex"));
            var n2 = s2.rlp.decode(e3.slice(1));
            if (!Array.isArray(n2))
              throw new Error("Invalid serialized tx input: must be array");
            return r3.fromValuesArray(n2, t3);
          }, r3.fromRlpSerializedTx = function(e3, t3) {
            return void 0 === t3 && (t3 = {}), r3.fromSerializedTx(e3, t3);
          }, r3.fromValuesArray = function(e3, t3) {
            if (void 0 === t3 && (t3 = {}), 9 !== e3.length && 12 !== e3.length)
              throw new Error("Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).");
            var n2 = a(e3, 12), i2 = n2[0], o2 = n2[1], f3 = n2[2], c2 = n2[3], u2 = n2[4], d2 = n2[5], h2 = n2[6], l = n2[7], p = n2[8], b = n2[9], y = n2[10], v = n2[11];
            return new r3({ chainId: new s2.BN(i2), nonce: o2, maxPriorityFeePerGas: f3, maxFeePerGas: c2, gasLimit: u2, to: d2, value: h2, data: l, accessList: null != p ? p : [], v: void 0 !== b ? new s2.BN(b) : void 0, r: y, s: v }, t3);
          }, r3.prototype.getDataFee = function() {
            var e3 = t2.prototype.getDataFee.call(this);
            return e3.iaddn(u.AccessLists.getDataFeeEIP2930(this.accessList, this.common)), e3;
          }, r3.prototype.getUpfrontCost = function(e3) {
            void 0 === e3 && (e3 = new s2.BN(0));
            var t3 = s2.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(e3)).add(e3);
            return this.gasLimit.mul(t3).add(this.value);
          }, r3.prototype.raw = function() {
            return [(0, s2.bnToUnpaddedBuffer)(this.chainId), (0, s2.bnToUnpaddedBuffer)(this.nonce), (0, s2.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas), (0, s2.bnToUnpaddedBuffer)(this.maxFeePerGas), (0, s2.bnToUnpaddedBuffer)(this.gasLimit), void 0 !== this.to ? this.to.buf : e2.from([]), (0, s2.bnToUnpaddedBuffer)(this.value), this.data, this.accessList, void 0 !== this.v ? (0, s2.bnToUnpaddedBuffer)(this.v) : e2.from([]), void 0 !== this.r ? (0, s2.bnToUnpaddedBuffer)(this.r) : e2.from([]), void 0 !== this.s ? (0, s2.bnToUnpaddedBuffer)(this.s) : e2.from([])];
          }, r3.prototype.serialize = function() {
            var t3 = this.raw();
            return e2.concat([d, s2.rlp.encode(t3)]);
          }, r3.prototype.getMessageToSign = function(t3) {
            void 0 === t3 && (t3 = true);
            var r4 = this.raw().slice(0, 9), n2 = e2.concat([d, s2.rlp.encode(r4)]);
            return t3 ? (0, s2.keccak256)(n2) : n2;
          }, r3.prototype.hash = function() {
            if (!this.isSigned())
              throw new Error("Cannot call hash method if transaction is not signed");
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = (0, s2.keccak256)(this.serialize())), this.cache.hash) : (0, s2.keccak256)(this.serialize());
          }, r3.prototype.getMessageToVerifySignature = function() {
            return this.getMessageToSign();
          }, r3.prototype.getSenderPublicKey = function() {
            var e3;
            if (!this.isSigned())
              throw new Error("Cannot call this method if transaction is not signed");
            var t3 = this.getMessageToVerifySignature();
            if (this.common.gteHardfork("homestead") && (null === (e3 = this.s) || void 0 === e3 ? void 0 : e3.gt(c.N_DIV_2)))
              throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
            var r4 = this.v, n2 = this.r, i2 = this.s;
            try {
              return (0, s2.ecrecover)(t3, r4.addn(27), (0, s2.bnToUnpaddedBuffer)(n2), (0, s2.bnToUnpaddedBuffer)(i2));
            } catch (e4) {
              throw new Error("Invalid Signature");
            }
          }, r3.prototype._processSignature = function(e3, t3, n2) {
            var i2 = { common: this.common };
            return r3.fromTxData({ chainId: this.chainId, nonce: this.nonce, maxPriorityFeePerGas: this.maxPriorityFeePerGas, maxFeePerGas: this.maxFeePerGas, gasLimit: this.gasLimit, to: this.to, value: this.value, data: this.data, accessList: this.accessList, v: new s2.BN(e3 - 27), r: new s2.BN(t3), s: new s2.BN(n2) }, i2);
          }, r3.prototype.toJSON = function() {
            var e3 = u.AccessLists.getAccessListJSON(this.accessList);
            return { chainId: (0, s2.bnToHex)(this.chainId), nonce: (0, s2.bnToHex)(this.nonce), maxPriorityFeePerGas: (0, s2.bnToHex)(this.maxPriorityFeePerGas), maxFeePerGas: (0, s2.bnToHex)(this.maxFeePerGas), gasLimit: (0, s2.bnToHex)(this.gasLimit), to: void 0 !== this.to ? this.to.toString() : void 0, value: (0, s2.bnToHex)(this.value), data: "0x" + this.data.toString("hex"), accessList: e3, v: void 0 !== this.v ? (0, s2.bnToHex)(this.v) : void 0, r: void 0 !== this.r ? (0, s2.bnToHex)(this.r) : void 0, s: void 0 !== this.s ? (0, s2.bnToHex)(this.s) : void 0 };
          }, r3;
        }(f2.BaseTransaction);
        t.default = h;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = Object.create ? function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3);
        var i2 = Object.getOwnPropertyDescriptor(t2, r3);
        i2 && !("get" in i2 ? !t2.__esModule : i2.writable || i2.configurable) || (i2 = { enumerable: true, get: function() {
          return t2[r3];
        } }), Object.defineProperty(e2, n2, i2);
      } : function(e2, t2, r3, n2) {
        void 0 === n2 && (n2 = r3), e2[n2] = t2[r3];
      }, i = function(e2, t2) {
        for (var r3 in e2)
          "default" === r3 || Object.prototype.hasOwnProperty.call(t2, r3) || n(t2, e2, r3);
      };
      Object.defineProperty(t, "__esModule", { value: true }), t.isHexString = t.getKeys = t.fromAscii = t.fromUtf8 = t.toAscii = t.arrayContainsArray = t.getBinarySize = t.padToEven = t.stripHexPrefix = t.isHexPrefixed = void 0, i(r2(232), t), i(r2(233), t), i(r2(597), t), i(r2(123), t), i(r2(598), t), i(r2(42), t), i(r2(599), t), i(r2(29), t), i(r2(126), t);
      var o = r2(54);
      Object.defineProperty(t, "isHexPrefixed", { enumerable: true, get: function() {
        return o.isHexPrefixed;
      } }), Object.defineProperty(t, "stripHexPrefix", { enumerable: true, get: function() {
        return o.stripHexPrefix;
      } }), Object.defineProperty(t, "padToEven", { enumerable: true, get: function() {
        return o.padToEven;
      } }), Object.defineProperty(t, "getBinarySize", { enumerable: true, get: function() {
        return o.getBinarySize;
      } }), Object.defineProperty(t, "arrayContainsArray", { enumerable: true, get: function() {
        return o.arrayContainsArray;
      } }), Object.defineProperty(t, "toAscii", { enumerable: true, get: function() {
        return o.toAscii;
      } }), Object.defineProperty(t, "fromUtf8", { enumerable: true, get: function() {
        return o.fromUtf8;
      } }), Object.defineProperty(t, "fromAscii", { enumerable: true, get: function() {
        return o.fromAscii;
      } }), Object.defineProperty(t, "getKeys", { enumerable: true, get: function() {
        return o.getKeys;
      } }), Object.defineProperty(t, "isHexString", { enumerable: true, get: function() {
        return o.isHexString;
      } });
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.getLength = t.decode = t.encode = void 0;
        var i = n(r2(4));
        function o(e3, t2) {
          if ("0" === e3[0] && "0" === e3[1])
            throw new Error("invalid RLP: extra zeros");
          return parseInt(e3, t2);
        }
        function a(t2, r3) {
          if (t2 < 56)
            return e2.from([t2 + r3]);
          var n2 = f2(t2), i2 = f2(r3 + 55 + n2.length / 2);
          return e2.from(i2 + n2, "hex");
        }
        function s2(e3) {
          return "0x" === e3.slice(0, 2);
        }
        function f2(e3) {
          if (e3 < 0)
            throw new Error("Invalid integer as argument, must be unsigned!");
          var t2 = e3.toString(16);
          return t2.length % 2 ? "0" + t2 : t2;
        }
        function c(t2) {
          if (!e2.isBuffer(t2)) {
            if ("string" == typeof t2)
              return s2(t2) ? e2.from((n2 = "string" != typeof (o2 = t2) ? o2 : s2(o2) ? o2.slice(2) : o2).length % 2 ? "0" + n2 : n2, "hex") : e2.from(t2);
            if ("number" == typeof t2 || "bigint" == typeof t2)
              return t2 ? (r3 = f2(t2), e2.from(r3, "hex")) : e2.from([]);
            if (null == t2)
              return e2.from([]);
            if (t2 instanceof Uint8Array)
              return e2.from(t2);
            if (i.default.isBN(t2))
              return e2.from(t2.toArray());
            throw new Error("invalid type");
          }
          var r3, n2, o2;
          return t2;
        }
        t.encode = function t2(r3) {
          if (Array.isArray(r3)) {
            for (var n2 = [], i2 = 0; i2 < r3.length; i2++)
              n2.push(t2(r3[i2]));
            var o2 = e2.concat(n2);
            return e2.concat([a(o2.length, 192), o2]);
          }
          var s3 = c(r3);
          return 1 === s3.length && s3[0] < 128 ? s3 : e2.concat([a(s3.length, 128), s3]);
        }, t.decode = function(t2, r3) {
          if (void 0 === r3 && (r3 = false), !t2 || 0 === t2.length)
            return e2.from([]);
          var n2 = function t3(r4) {
            var n3, i2, a2, s3, f3, c2 = [], u = r4[0];
            if (u <= 127)
              return { data: r4.slice(0, 1), remainder: r4.slice(1) };
            if (u <= 183) {
              if (n3 = u - 127, a2 = 128 === u ? e2.from([]) : r4.slice(1, n3), 2 === n3 && a2[0] < 128)
                throw new Error("invalid rlp encoding: byte must be less 0x80");
              return { data: a2, remainder: r4.slice(n3) };
            }
            if (u <= 191) {
              if (i2 = u - 182, r4.length - 1 < i2)
                throw new Error("invalid RLP: not enough bytes for string length");
              if ((n3 = o(r4.slice(1, i2).toString("hex"), 16)) <= 55)
                throw new Error("invalid RLP: expected string length to be greater than 55");
              if ((a2 = r4.slice(i2, n3 + i2)).length < n3)
                throw new Error("invalid RLP: not enough bytes for string");
              return { data: a2, remainder: r4.slice(n3 + i2) };
            }
            if (u <= 247) {
              for (n3 = u - 191, s3 = r4.slice(1, n3); s3.length; )
                f3 = t3(s3), c2.push(f3.data), s3 = f3.remainder;
              return { data: c2, remainder: r4.slice(n3) };
            }
            i2 = u - 246, n3 = o(r4.slice(1, i2).toString("hex"), 16);
            var d = i2 + n3;
            if (d > r4.length)
              throw new Error("invalid rlp: total length is larger than the data");
            if (0 === (s3 = r4.slice(i2, d)).length)
              throw new Error("invalid rlp, List has a invalid length");
            for (; s3.length; )
              f3 = t3(s3), c2.push(f3.data), s3 = f3.remainder;
            return { data: c2, remainder: r4.slice(d) };
          }(c(t2));
          if (r3)
            return n2;
          if (0 !== n2.remainder.length)
            throw new Error("invalid remainder");
          return n2.data;
        }, t.getLength = function(t2) {
          if (!t2 || 0 === t2.length)
            return e2.from([]);
          var r3 = c(t2), n2 = r3[0];
          if (n2 <= 127)
            return r3.length;
          if (n2 <= 183)
            return n2 - 127;
          if (n2 <= 191)
            return n2 - 182;
          if (n2 <= 247)
            return n2 - 191;
          var i2 = n2 - 246;
          return i2 + o(r3.slice(1, i2).toString("hex"), 16);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
        if (!r3) {
          if (Array.isArray(e2) || (r3 = function(e3, t3) {
            if (!e3)
              return;
            if ("string" == typeof e3)
              return i(e3, t3);
            var r4 = Object.prototype.toString.call(e3).slice(8, -1);
            "Object" === r4 && e3.constructor && (r4 = e3.constructor.name);
            if ("Map" === r4 || "Set" === r4)
              return Array.from(e3);
            if ("Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4))
              return i(e3, t3);
          }(e2)) || t2 && e2 && "number" == typeof e2.length) {
            r3 && (e2 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
            }, e: function(e3) {
              throw e3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s3 = true, f3 = false;
        return { s: function() {
          r3 = r3.call(e2);
        }, n: function() {
          var e3 = r3.next();
          return s3 = e3.done, e3;
        }, e: function(e3) {
          f3 = true, a2 = e3;
        }, f: function() {
          try {
            s3 || null == r3.return || r3.return();
          } finally {
            if (f3)
              throw a2;
          }
        } };
      }
      function i(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var r3 = 0, n2 = new Array(t2); r3 < t2; r3++)
          n2[r3] = e2[r3];
        return n2;
      }
      var o = "Impossible case. Please create issue.", a = "The tweak was out of range or the resulted private key is invalid", s2 = "The tweak was out of range or equal to zero", f2 = "Unknow error on context randomization", c = "Private Key is invalid", u = "Public Key could not be parsed", d = "Public Key serialization error", h = "The sum of the public keys is not valid", l = "Signature could not be parsed", p = "The nonce generation function failed, or the private key was invalid", b = "Public key could not be recover", y = "Scalar was invalid (zero or overflow)";
      function v(e2, t2) {
        if (!e2)
          throw new Error(t2);
      }
      function m(e2, t2, r3) {
        if (v(t2 instanceof Uint8Array, "Expected ".concat(e2, " to be an Uint8Array")), void 0 !== r3)
          if (Array.isArray(r3)) {
            var n2 = r3.join(", "), i2 = "Expected ".concat(e2, " to be an Uint8Array with length [").concat(n2, "]");
            v(r3.includes(t2.length), i2);
          } else {
            var o2 = "Expected ".concat(e2, " to be an Uint8Array with length ").concat(r3);
            v(t2.length === r3, o2);
          }
      }
      function g(e2) {
        v("Boolean" === _(e2), "Expected compressed to be a Boolean");
      }
      function w() {
        var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : function(e3) {
          return new Uint8Array(e3);
        }, t2 = arguments.length > 1 ? arguments[1] : void 0;
        return "function" == typeof e2 && (e2 = e2(t2)), m("output", e2, t2), e2;
      }
      function _(e2) {
        return Object.prototype.toString.call(e2).slice(8, -1);
      }
      e.exports = function(e2) {
        return { contextRandomize: function(t2) {
          switch (v(null === t2 || t2 instanceof Uint8Array, "Expected seed to be an Uint8Array or null"), null !== t2 && m("seed", t2, 32), e2.contextRandomize(t2)) {
            case 1:
              throw new Error(f2);
          }
        }, privateKeyVerify: function(t2) {
          return m("private key", t2, 32), 0 === e2.privateKeyVerify(t2);
        }, privateKeyNegate: function(t2) {
          switch (m("private key", t2, 32), e2.privateKeyNegate(t2)) {
            case 0:
              return t2;
            case 1:
              throw new Error(o);
          }
        }, privateKeyTweakAdd: function(t2, r3) {
          switch (m("private key", t2, 32), m("tweak", r3, 32), e2.privateKeyTweakAdd(t2, r3)) {
            case 0:
              return t2;
            case 1:
              throw new Error(a);
          }
        }, privateKeyTweakMul: function(t2, r3) {
          switch (m("private key", t2, 32), m("tweak", r3, 32), e2.privateKeyTweakMul(t2, r3)) {
            case 0:
              return t2;
            case 1:
              throw new Error(s2);
          }
        }, publicKeyVerify: function(t2) {
          return m("public key", t2, [33, 65]), 0 === e2.publicKeyVerify(t2);
        }, publicKeyCreate: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = arguments.length > 2 ? arguments[2] : void 0;
          switch (m("private key", t2, 32), g(r3), n2 = w(n2, r3 ? 33 : 65), e2.publicKeyCreate(n2, t2)) {
            case 0:
              return n2;
            case 1:
              throw new Error(c);
            case 2:
              throw new Error(d);
          }
        }, publicKeyConvert: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = arguments.length > 2 ? arguments[2] : void 0;
          switch (m("public key", t2, [33, 65]), g(r3), n2 = w(n2, r3 ? 33 : 65), e2.publicKeyConvert(n2, t2)) {
            case 0:
              return n2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(d);
          }
        }, publicKeyNegate: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = arguments.length > 2 ? arguments[2] : void 0;
          switch (m("public key", t2, [33, 65]), g(r3), n2 = w(n2, r3 ? 33 : 65), e2.publicKeyNegate(n2, t2)) {
            case 0:
              return n2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(o);
            case 3:
              throw new Error(d);
          }
        }, publicKeyCombine: function(t2) {
          var r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i2 = arguments.length > 2 ? arguments[2] : void 0;
          v(Array.isArray(t2), "Expected public keys to be an Array"), v(t2.length > 0, "Expected public keys array will have more than zero items");
          var o2, a2 = n(t2);
          try {
            for (a2.s(); !(o2 = a2.n()).done; ) {
              var s3 = o2.value;
              m("public key", s3, [33, 65]);
            }
          } catch (e3) {
            a2.e(e3);
          } finally {
            a2.f();
          }
          switch (g(r3), i2 = w(i2, r3 ? 33 : 65), e2.publicKeyCombine(i2, t2)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(h);
            case 3:
              throw new Error(d);
          }
        }, publicKeyTweakAdd: function(t2, r3) {
          var n2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], i2 = arguments.length > 3 ? arguments[3] : void 0;
          switch (m("public key", t2, [33, 65]), m("tweak", r3, 32), g(n2), i2 = w(i2, n2 ? 33 : 65), e2.publicKeyTweakAdd(i2, t2, r3)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(a);
          }
        }, publicKeyTweakMul: function(t2, r3) {
          var n2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], i2 = arguments.length > 3 ? arguments[3] : void 0;
          switch (m("public key", t2, [33, 65]), m("tweak", r3, 32), g(n2), i2 = w(i2, n2 ? 33 : 65), e2.publicKeyTweakMul(i2, t2, r3)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(s2);
          }
        }, signatureNormalize: function(t2) {
          switch (m("signature", t2, 64), e2.signatureNormalize(t2)) {
            case 0:
              return t2;
            case 1:
              throw new Error(l);
          }
        }, signatureExport: function(t2, r3) {
          m("signature", t2, 64);
          var n2 = { output: r3 = w(r3, 72), outputlen: 72 };
          switch (e2.signatureExport(n2, t2)) {
            case 0:
              return r3.slice(0, n2.outputlen);
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(o);
          }
        }, signatureImport: function(t2, r3) {
          switch (m("signature", t2), r3 = w(r3, 64), e2.signatureImport(r3, t2)) {
            case 0:
              return r3;
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(o);
          }
        }, ecdsaSign: function(t2, r3) {
          var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = arguments.length > 3 ? arguments[3] : void 0;
          m("message", t2, 32), m("private key", r3, 32), v("Object" === _(n2), "Expected options to be an Object"), void 0 !== n2.data && m("options.data", n2.data), void 0 !== n2.noncefn && v("Function" === _(n2.noncefn), "Expected options.noncefn to be a Function");
          var a2 = { signature: i2 = w(i2, 64), recid: null };
          switch (e2.ecdsaSign(a2, t2, r3, n2.data, n2.noncefn)) {
            case 0:
              return a2;
            case 1:
              throw new Error(p);
            case 2:
              throw new Error(o);
          }
        }, ecdsaVerify: function(t2, r3, n2) {
          switch (m("signature", t2, 64), m("message", r3, 32), m("public key", n2, [33, 65]), e2.ecdsaVerify(t2, r3, n2)) {
            case 0:
              return true;
            case 3:
              return false;
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(u);
          }
        }, ecdsaRecover: function(t2, r3, n2) {
          var i2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], a2 = arguments.length > 4 ? arguments[4] : void 0;
          switch (m("signature", t2, 64), v("Number" === _(r3) && r3 >= 0 && r3 <= 3, "Expected recovery id to be a Number within interval [0, 3]"), m("message", n2, 32), g(i2), a2 = w(a2, i2 ? 33 : 65), e2.ecdsaRecover(a2, t2, r3, n2)) {
            case 0:
              return a2;
            case 1:
              throw new Error(l);
            case 2:
              throw new Error(b);
            case 3:
              throw new Error(o);
          }
        }, ecdh: function(t2, r3) {
          var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = arguments.length > 3 ? arguments[3] : void 0;
          switch (m("public key", t2, [33, 65]), m("private key", r3, 32), v("Object" === _(n2), "Expected options to be an Object"), void 0 !== n2.data && m("options.data", n2.data), void 0 !== n2.hashfn ? (v("Function" === _(n2.hashfn), "Expected options.hashfn to be a Function"), void 0 !== n2.xbuf && m("options.xbuf", n2.xbuf, 32), void 0 !== n2.ybuf && m("options.ybuf", n2.ybuf, 32), m("output", i2)) : i2 = w(i2, 32), e2.ecdh(i2, t2, r3, n2.data, n2.hashfn, n2.xbuf, n2.ybuf)) {
            case 0:
              return i2;
            case 1:
              throw new Error(u);
            case 2:
              throw new Error(y);
          }
        } };
      };
    }, function(e, t, r2) {
      var n = new (r2(550)).ec("secp256k1"), i = n.curve, o = i.n.constructor;
      function a(e2) {
        var t2 = e2[0];
        switch (t2) {
          case 2:
          case 3:
            return 33 !== e2.length ? null : function(e3, t3) {
              var r3 = new o(t3);
              if (r3.cmp(i.p) >= 0)
                return null;
              var a2 = (r3 = r3.toRed(i.red)).redSqr().redIMul(r3).redIAdd(i.b).redSqrt();
              return 3 === e3 !== a2.isOdd() && (a2 = a2.redNeg()), n.keyPair({ pub: { x: r3, y: a2 } });
            }(t2, e2.subarray(1, 33));
          case 4:
          case 6:
          case 7:
            return 65 !== e2.length ? null : function(e3, t3, r3) {
              var a2 = new o(t3), s3 = new o(r3);
              if (a2.cmp(i.p) >= 0 || s3.cmp(i.p) >= 0)
                return null;
              if (a2 = a2.toRed(i.red), s3 = s3.toRed(i.red), (6 === e3 || 7 === e3) && s3.isOdd() !== (7 === e3))
                return null;
              var f2 = a2.redSqr().redIMul(a2);
              return s3.redSqr().redISub(f2.redIAdd(i.b)).isZero() ? n.keyPair({ pub: { x: a2, y: s3 } }) : null;
            }(t2, e2.subarray(1, 33), e2.subarray(33, 65));
          default:
            return null;
        }
      }
      function s2(e2, t2) {
        for (var r3 = t2.encode(null, 33 === e2.length), n2 = 0; n2 < e2.length; ++n2)
          e2[n2] = r3[n2];
      }
      e.exports = { contextRandomize: function() {
        return 0;
      }, privateKeyVerify: function(e2) {
        var t2 = new o(e2);
        return t2.cmp(i.n) < 0 && !t2.isZero() ? 0 : 1;
      }, privateKeyNegate: function(e2) {
        var t2 = new o(e2), r3 = i.n.sub(t2).umod(i.n).toArrayLike(Uint8Array, "be", 32);
        return e2.set(r3), 0;
      }, privateKeyTweakAdd: function(e2, t2) {
        var r3 = new o(t2);
        if (r3.cmp(i.n) >= 0)
          return 1;
        if (r3.iadd(new o(e2)), r3.cmp(i.n) >= 0 && r3.isub(i.n), r3.isZero())
          return 1;
        var n2 = r3.toArrayLike(Uint8Array, "be", 32);
        return e2.set(n2), 0;
      }, privateKeyTweakMul: function(e2, t2) {
        var r3 = new o(t2);
        if (r3.cmp(i.n) >= 0 || r3.isZero())
          return 1;
        r3.imul(new o(e2)), r3.cmp(i.n) >= 0 && (r3 = r3.umod(i.n));
        var n2 = r3.toArrayLike(Uint8Array, "be", 32);
        return e2.set(n2), 0;
      }, publicKeyVerify: function(e2) {
        return null === a(e2) ? 1 : 0;
      }, publicKeyCreate: function(e2, t2) {
        var r3 = new o(t2);
        return r3.cmp(i.n) >= 0 || r3.isZero() ? 1 : (s2(e2, n.keyFromPrivate(t2).getPublic()), 0);
      }, publicKeyConvert: function(e2, t2) {
        var r3 = a(t2);
        return null === r3 ? 1 : (s2(e2, r3.getPublic()), 0);
      }, publicKeyNegate: function(e2, t2) {
        var r3 = a(t2);
        if (null === r3)
          return 1;
        var n2 = r3.getPublic();
        return n2.y = n2.y.redNeg(), s2(e2, n2), 0;
      }, publicKeyCombine: function(e2, t2) {
        for (var r3 = new Array(t2.length), n2 = 0; n2 < t2.length; ++n2)
          if (r3[n2] = a(t2[n2]), null === r3[n2])
            return 1;
        for (var i2 = r3[0].getPublic(), o2 = 1; o2 < r3.length; ++o2)
          i2 = i2.add(r3[o2].pub);
        return i2.isInfinity() ? 2 : (s2(e2, i2), 0);
      }, publicKeyTweakAdd: function(e2, t2, r3) {
        var n2 = a(t2);
        if (null === n2)
          return 1;
        if ((r3 = new o(r3)).cmp(i.n) >= 0)
          return 2;
        var f2 = n2.getPublic().add(i.g.mul(r3));
        return f2.isInfinity() ? 2 : (s2(e2, f2), 0);
      }, publicKeyTweakMul: function(e2, t2, r3) {
        var n2 = a(t2);
        return null === n2 ? 1 : (r3 = new o(r3)).cmp(i.n) >= 0 || r3.isZero() ? 2 : (s2(e2, n2.getPublic().mul(r3)), 0);
      }, signatureNormalize: function(e2) {
        var t2 = new o(e2.subarray(0, 32)), r3 = new o(e2.subarray(32, 64));
        return t2.cmp(i.n) >= 0 || r3.cmp(i.n) >= 0 ? 1 : (1 === r3.cmp(n.nh) && e2.set(i.n.sub(r3).toArrayLike(Uint8Array, "be", 32), 32), 0);
      }, signatureExport: function(e2, t2) {
        var r3 = t2.subarray(0, 32), n2 = t2.subarray(32, 64);
        if (new o(r3).cmp(i.n) >= 0)
          return 1;
        if (new o(n2).cmp(i.n) >= 0)
          return 1;
        var a2 = e2.output, s3 = a2.subarray(4, 37);
        s3[0] = 0, s3.set(r3, 1);
        for (var f2 = 33, c = 0; f2 > 1 && 0 === s3[c] && !(128 & s3[c + 1]); --f2, ++c)
          ;
        if (128 & (s3 = s3.subarray(c))[0])
          return 1;
        if (f2 > 1 && 0 === s3[0] && !(128 & s3[1]))
          return 1;
        var u = a2.subarray(39, 72);
        u[0] = 0, u.set(n2, 1);
        for (var d = 33, h = 0; d > 1 && 0 === u[h] && !(128 & u[h + 1]); --d, ++h)
          ;
        return 128 & (u = u.subarray(h))[0] || d > 1 && 0 === u[0] && !(128 & u[1]) ? 1 : (e2.outputlen = 6 + f2 + d, a2[0] = 48, a2[1] = e2.outputlen - 2, a2[2] = 2, a2[3] = s3.length, a2.set(s3, 4), a2[4 + f2] = 2, a2[5 + f2] = u.length, a2.set(u, 6 + f2), 0);
      }, signatureImport: function(e2, t2) {
        if (t2.length < 8)
          return 1;
        if (t2.length > 72)
          return 1;
        if (48 !== t2[0])
          return 1;
        if (t2[1] !== t2.length - 2)
          return 1;
        if (2 !== t2[2])
          return 1;
        var r3 = t2[3];
        if (0 === r3)
          return 1;
        if (5 + r3 >= t2.length)
          return 1;
        if (2 !== t2[4 + r3])
          return 1;
        var n2 = t2[5 + r3];
        if (0 === n2)
          return 1;
        if (6 + r3 + n2 !== t2.length)
          return 1;
        if (128 & t2[4])
          return 1;
        if (r3 > 1 && 0 === t2[4] && !(128 & t2[5]))
          return 1;
        if (128 & t2[r3 + 6])
          return 1;
        if (n2 > 1 && 0 === t2[r3 + 6] && !(128 & t2[r3 + 7]))
          return 1;
        var a2 = t2.subarray(4, 4 + r3);
        if (33 === a2.length && 0 === a2[0] && (a2 = a2.subarray(1)), a2.length > 32)
          return 1;
        var s3 = t2.subarray(6 + r3);
        if (33 === s3.length && 0 === s3[0] && (s3 = s3.slice(1)), s3.length > 32)
          throw new Error("S length is too long");
        var f2 = new o(a2);
        f2.cmp(i.n) >= 0 && (f2 = new o(0));
        var c = new o(t2.subarray(6 + r3));
        return c.cmp(i.n) >= 0 && (c = new o(0)), e2.set(f2.toArrayLike(Uint8Array, "be", 32), 0), e2.set(c.toArrayLike(Uint8Array, "be", 32), 32), 0;
      }, ecdsaSign: function(e2, t2, r3, a2, s3) {
        if (s3) {
          var f2 = s3;
          s3 = function(e3) {
            var n2 = f2(t2, r3, null, a2, e3);
            if (!(n2 instanceof Uint8Array && 32 === n2.length))
              throw new Error("This is the way");
            return new o(n2);
          };
        }
        var c, u = new o(r3);
        if (u.cmp(i.n) >= 0 || u.isZero())
          return 1;
        try {
          c = n.sign(t2, r3, { canonical: true, k: s3, pers: a2 });
        } catch (e3) {
          return 1;
        }
        return e2.signature.set(c.r.toArrayLike(Uint8Array, "be", 32), 0), e2.signature.set(c.s.toArrayLike(Uint8Array, "be", 32), 32), e2.recid = c.recoveryParam, 0;
      }, ecdsaVerify: function(e2, t2, r3) {
        var s3 = { r: e2.subarray(0, 32), s: e2.subarray(32, 64) }, f2 = new o(s3.r), c = new o(s3.s);
        if (f2.cmp(i.n) >= 0 || c.cmp(i.n) >= 0)
          return 1;
        if (1 === c.cmp(n.nh) || f2.isZero() || c.isZero())
          return 3;
        var u = a(r3);
        if (null === u)
          return 2;
        var d = u.getPublic();
        return n.verify(t2, s3, d) ? 0 : 3;
      }, ecdsaRecover: function(e2, t2, r3, a2) {
        var f2, c = { r: t2.slice(0, 32), s: t2.slice(32, 64) }, u = new o(c.r), d = new o(c.s);
        if (u.cmp(i.n) >= 0 || d.cmp(i.n) >= 0)
          return 1;
        if (u.isZero() || d.isZero())
          return 2;
        try {
          f2 = n.recoverPubKey(a2, c, r3);
        } catch (e3) {
          return 2;
        }
        return s2(e2, f2), 0;
      }, ecdh: function(e2, t2, r3, s3, f2, c, u) {
        var d = a(t2);
        if (null === d)
          return 1;
        var h = new o(r3);
        if (h.cmp(i.n) >= 0 || h.isZero())
          return 2;
        var l = d.getPublic().mul(h);
        if (void 0 === f2)
          for (var p = l.encode(null, true), b = n.hash().update(p).digest(), y = 0; y < 32; ++y)
            e2[y] = b[y];
        else {
          c || (c = new Uint8Array(32));
          for (var v = l.getX().toArray("be", 32), m = 0; m < 32; ++m)
            c[m] = v[m];
          u || (u = new Uint8Array(32));
          for (var g = l.getY().toArray("be", 32), w = 0; w < 32; ++w)
            u[w] = g[w];
          var _ = f2(c, u, s3);
          if (!(_ instanceof Uint8Array && _.length === e2.length))
            return 2;
          e2.set(_);
        }
        return 0;
      } };
    }, function(e, t, r2) {
      var n = t;
      n.version = r2(551).version, n.utils = r2(22), n.rand = r2(237), n.curve = r2(238), n.curves = r2(121), n.ec = r2(563), n.eddsa = r2(567);
    }, function(e) {
      e.exports = JSON.parse('{"_args":[["elliptic@6.5.4","/Users/user1/Desktop/office/web3/deployments/1.8.1/web3.js/packages/web3-eth-accounts"]],"_from":"elliptic@6.5.4","_id":"elliptic@6.5.4","_inBundle":false,"_integrity":"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"elliptic@6.5.4","name":"elliptic","escapedName":"elliptic","rawSpec":"6.5.4","saveSpec":null,"fetchSpec":"6.5.4"},"_requiredBy":["/ethereumjs-util/secp256k1"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz","_spec":"6.5.4","_where":"/Users/user1/Desktop/office/web3/deployments/1.8.1/web3.js/packages/web3-eth-accounts","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"},"description":"EC cryptography","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.5.4"}');
    }, function(e, t) {
    }, function(e, t, r2) {
      var n = r2(22), i = r2(4), o = r2(10), a = r2(89), s2 = n.assert;
      function f2(e2) {
        a.call(this, "short", e2), this.a = new i(e2.a, 16).toRed(this.red), this.b = new i(e2.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e2), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
      }
      function c(e2, t2, r3, n2) {
        a.BasePoint.call(this, e2, "affine"), null === t2 && null === r3 ? (this.x = null, this.y = null, this.inf = true) : (this.x = new i(t2, 16), this.y = new i(r3, 16), n2 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
      }
      function u(e2, t2, r3, n2) {
        a.BasePoint.call(this, e2, "jacobian"), null === t2 && null === r3 && null === n2 ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(t2, 16), this.y = new i(r3, 16), this.z = new i(n2, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
      }
      o(f2, a), e.exports = f2, f2.prototype._getEndomorphism = function(e2) {
        if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
          var t2, r3;
          if (e2.beta)
            t2 = new i(e2.beta, 16).toRed(this.red);
          else {
            var n2 = this._getEndoRoots(this.p);
            t2 = (t2 = n2[0].cmp(n2[1]) < 0 ? n2[0] : n2[1]).toRed(this.red);
          }
          if (e2.lambda)
            r3 = new i(e2.lambda, 16);
          else {
            var o2 = this._getEndoRoots(this.n);
            0 === this.g.mul(o2[0]).x.cmp(this.g.x.redMul(t2)) ? r3 = o2[0] : (r3 = o2[1], s2(0 === this.g.mul(r3).x.cmp(this.g.x.redMul(t2))));
          }
          return { beta: t2, lambda: r3, basis: e2.basis ? e2.basis.map(function(e3) {
            return { a: new i(e3.a, 16), b: new i(e3.b, 16) };
          }) : this._getEndoBasis(r3) };
        }
      }, f2.prototype._getEndoRoots = function(e2) {
        var t2 = e2 === this.p ? this.red : i.mont(e2), r3 = new i(2).toRed(t2).redInvm(), n2 = r3.redNeg(), o2 = new i(3).toRed(t2).redNeg().redSqrt().redMul(r3);
        return [n2.redAdd(o2).fromRed(), n2.redSub(o2).fromRed()];
      }, f2.prototype._getEndoBasis = function(e2) {
        for (var t2, r3, n2, o2, a2, s3, f3, c2, u2, d = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h = e2, l = this.n.clone(), p = new i(1), b = new i(0), y = new i(0), v = new i(1), m = 0; 0 !== h.cmpn(0); ) {
          var g = l.div(h);
          c2 = l.sub(g.mul(h)), u2 = y.sub(g.mul(p));
          var w = v.sub(g.mul(b));
          if (!n2 && c2.cmp(d) < 0)
            t2 = f3.neg(), r3 = p, n2 = c2.neg(), o2 = u2;
          else if (n2 && 2 == ++m)
            break;
          f3 = c2, l = h, h = c2, y = p, p = u2, v = b, b = w;
        }
        a2 = c2.neg(), s3 = u2;
        var _ = n2.sqr().add(o2.sqr());
        return a2.sqr().add(s3.sqr()).cmp(_) >= 0 && (a2 = t2, s3 = r3), n2.negative && (n2 = n2.neg(), o2 = o2.neg()), a2.negative && (a2 = a2.neg(), s3 = s3.neg()), [{ a: n2, b: o2 }, { a: a2, b: s3 }];
      }, f2.prototype._endoSplit = function(e2) {
        var t2 = this.endo.basis, r3 = t2[0], n2 = t2[1], i2 = n2.b.mul(e2).divRound(this.n), o2 = r3.b.neg().mul(e2).divRound(this.n), a2 = i2.mul(r3.a), s3 = o2.mul(n2.a), f3 = i2.mul(r3.b), c2 = o2.mul(n2.b);
        return { k1: e2.sub(a2).sub(s3), k2: f3.add(c2).neg() };
      }, f2.prototype.pointFromX = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r3 = e2.redSqr().redMul(e2).redIAdd(e2.redMul(this.a)).redIAdd(this.b), n2 = r3.redSqrt();
        if (0 !== n2.redSqr().redSub(r3).cmp(this.zero))
          throw new Error("invalid point");
        var o2 = n2.fromRed().isOdd();
        return (t2 && !o2 || !t2 && o2) && (n2 = n2.redNeg()), this.point(e2, n2);
      }, f2.prototype.validate = function(e2) {
        if (e2.inf)
          return true;
        var t2 = e2.x, r3 = e2.y, n2 = this.a.redMul(t2), i2 = t2.redSqr().redMul(t2).redIAdd(n2).redIAdd(this.b);
        return 0 === r3.redSqr().redISub(i2).cmpn(0);
      }, f2.prototype._endoWnafMulAdd = function(e2, t2, r3) {
        for (var n2 = this._endoWnafT1, i2 = this._endoWnafT2, o2 = 0; o2 < e2.length; o2++) {
          var a2 = this._endoSplit(t2[o2]), s3 = e2[o2], f3 = s3._getBeta();
          a2.k1.negative && (a2.k1.ineg(), s3 = s3.neg(true)), a2.k2.negative && (a2.k2.ineg(), f3 = f3.neg(true)), n2[2 * o2] = s3, n2[2 * o2 + 1] = f3, i2[2 * o2] = a2.k1, i2[2 * o2 + 1] = a2.k2;
        }
        for (var c2 = this._wnafMulAdd(1, n2, i2, 2 * o2, r3), u2 = 0; u2 < 2 * o2; u2++)
          n2[u2] = null, i2[u2] = null;
        return c2;
      }, o(c, a.BasePoint), f2.prototype.point = function(e2, t2, r3) {
        return new c(this, e2, t2, r3);
      }, f2.prototype.pointFromJSON = function(e2, t2) {
        return c.fromJSON(this, e2, t2);
      }, c.prototype._getBeta = function() {
        if (this.curve.endo) {
          var e2 = this.precomputed;
          if (e2 && e2.beta)
            return e2.beta;
          var t2 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
          if (e2) {
            var r3 = this.curve, n2 = function(e3) {
              return r3.point(e3.x.redMul(r3.endo.beta), e3.y);
            };
            e2.beta = t2, t2.precomputed = { beta: null, naf: e2.naf && { wnd: e2.naf.wnd, points: e2.naf.points.map(n2) }, doubles: e2.doubles && { step: e2.doubles.step, points: e2.doubles.points.map(n2) } };
          }
          return t2;
        }
      }, c.prototype.toJSON = function() {
        return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
      }, c.fromJSON = function(e2, t2, r3) {
        "string" == typeof t2 && (t2 = JSON.parse(t2));
        var n2 = e2.point(t2[0], t2[1], r3);
        if (!t2[2])
          return n2;
        function i2(t3) {
          return e2.point(t3[0], t3[1], r3);
        }
        var o2 = t2[2];
        return n2.precomputed = { beta: null, doubles: o2.doubles && { step: o2.doubles.step, points: [n2].concat(o2.doubles.points.map(i2)) }, naf: o2.naf && { wnd: o2.naf.wnd, points: [n2].concat(o2.naf.points.map(i2)) } }, n2;
      }, c.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
      }, c.prototype.isInfinity = function() {
        return this.inf;
      }, c.prototype.add = function(e2) {
        if (this.inf)
          return e2;
        if (e2.inf)
          return this;
        if (this.eq(e2))
          return this.dbl();
        if (this.neg().eq(e2))
          return this.curve.point(null, null);
        if (0 === this.x.cmp(e2.x))
          return this.curve.point(null, null);
        var t2 = this.y.redSub(e2.y);
        0 !== t2.cmpn(0) && (t2 = t2.redMul(this.x.redSub(e2.x).redInvm()));
        var r3 = t2.redSqr().redISub(this.x).redISub(e2.x), n2 = t2.redMul(this.x.redSub(r3)).redISub(this.y);
        return this.curve.point(r3, n2);
      }, c.prototype.dbl = function() {
        if (this.inf)
          return this;
        var e2 = this.y.redAdd(this.y);
        if (0 === e2.cmpn(0))
          return this.curve.point(null, null);
        var t2 = this.curve.a, r3 = this.x.redSqr(), n2 = e2.redInvm(), i2 = r3.redAdd(r3).redIAdd(r3).redIAdd(t2).redMul(n2), o2 = i2.redSqr().redISub(this.x.redAdd(this.x)), a2 = i2.redMul(this.x.redSub(o2)).redISub(this.y);
        return this.curve.point(o2, a2);
      }, c.prototype.getX = function() {
        return this.x.fromRed();
      }, c.prototype.getY = function() {
        return this.y.fromRed();
      }, c.prototype.mul = function(e2) {
        return e2 = new i(e2, 16), this.isInfinity() ? this : this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e2]) : this.curve._wnafMul(this, e2);
      }, c.prototype.mulAdd = function(e2, t2, r3) {
        var n2 = [this, t2], i2 = [e2, r3];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2) : this.curve._wnafMulAdd(1, n2, i2, 2);
      }, c.prototype.jmulAdd = function(e2, t2, r3) {
        var n2 = [this, t2], i2 = [e2, r3];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2, true) : this.curve._wnafMulAdd(1, n2, i2, 2, true);
      }, c.prototype.eq = function(e2) {
        return this === e2 || this.inf === e2.inf && (this.inf || 0 === this.x.cmp(e2.x) && 0 === this.y.cmp(e2.y));
      }, c.prototype.neg = function(e2) {
        if (this.inf)
          return this;
        var t2 = this.curve.point(this.x, this.y.redNeg());
        if (e2 && this.precomputed) {
          var r3 = this.precomputed, n2 = function(e3) {
            return e3.neg();
          };
          t2.precomputed = { naf: r3.naf && { wnd: r3.naf.wnd, points: r3.naf.points.map(n2) }, doubles: r3.doubles && { step: r3.doubles.step, points: r3.doubles.points.map(n2) } };
        }
        return t2;
      }, c.prototype.toJ = function() {
        return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
      }, o(u, a.BasePoint), f2.prototype.jpoint = function(e2, t2, r3) {
        return new u(this, e2, t2, r3);
      }, u.prototype.toP = function() {
        if (this.isInfinity())
          return this.curve.point(null, null);
        var e2 = this.z.redInvm(), t2 = e2.redSqr(), r3 = this.x.redMul(t2), n2 = this.y.redMul(t2).redMul(e2);
        return this.curve.point(r3, n2);
      }, u.prototype.neg = function() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      }, u.prototype.add = function(e2) {
        if (this.isInfinity())
          return e2;
        if (e2.isInfinity())
          return this;
        var t2 = e2.z.redSqr(), r3 = this.z.redSqr(), n2 = this.x.redMul(t2), i2 = e2.x.redMul(r3), o2 = this.y.redMul(t2.redMul(e2.z)), a2 = e2.y.redMul(r3.redMul(this.z)), s3 = n2.redSub(i2), f3 = o2.redSub(a2);
        if (0 === s3.cmpn(0))
          return 0 !== f3.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
        var c2 = s3.redSqr(), u2 = c2.redMul(s3), d = n2.redMul(c2), h = f3.redSqr().redIAdd(u2).redISub(d).redISub(d), l = f3.redMul(d.redISub(h)).redISub(o2.redMul(u2)), p = this.z.redMul(e2.z).redMul(s3);
        return this.curve.jpoint(h, l, p);
      }, u.prototype.mixedAdd = function(e2) {
        if (this.isInfinity())
          return e2.toJ();
        if (e2.isInfinity())
          return this;
        var t2 = this.z.redSqr(), r3 = this.x, n2 = e2.x.redMul(t2), i2 = this.y, o2 = e2.y.redMul(t2).redMul(this.z), a2 = r3.redSub(n2), s3 = i2.redSub(o2);
        if (0 === a2.cmpn(0))
          return 0 !== s3.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
        var f3 = a2.redSqr(), c2 = f3.redMul(a2), u2 = r3.redMul(f3), d = s3.redSqr().redIAdd(c2).redISub(u2).redISub(u2), h = s3.redMul(u2.redISub(d)).redISub(i2.redMul(c2)), l = this.z.redMul(a2);
        return this.curve.jpoint(d, h, l);
      }, u.prototype.dblp = function(e2) {
        if (0 === e2)
          return this;
        if (this.isInfinity())
          return this;
        if (!e2)
          return this.dbl();
        var t2;
        if (this.curve.zeroA || this.curve.threeA) {
          var r3 = this;
          for (t2 = 0; t2 < e2; t2++)
            r3 = r3.dbl();
          return r3;
        }
        var n2 = this.curve.a, i2 = this.curve.tinv, o2 = this.x, a2 = this.y, s3 = this.z, f3 = s3.redSqr().redSqr(), c2 = a2.redAdd(a2);
        for (t2 = 0; t2 < e2; t2++) {
          var u2 = o2.redSqr(), d = c2.redSqr(), h = d.redSqr(), l = u2.redAdd(u2).redIAdd(u2).redIAdd(n2.redMul(f3)), p = o2.redMul(d), b = l.redSqr().redISub(p.redAdd(p)), y = p.redISub(b), v = l.redMul(y);
          v = v.redIAdd(v).redISub(h);
          var m = c2.redMul(s3);
          t2 + 1 < e2 && (f3 = f3.redMul(h)), o2 = b, s3 = m, c2 = v;
        }
        return this.curve.jpoint(o2, c2.redMul(i2), s3);
      }, u.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
      }, u.prototype._zeroDbl = function() {
        var e2, t2, r3;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
          a2 = a2.redIAdd(a2);
          var s3 = n2.redAdd(n2).redIAdd(n2), f3 = s3.redSqr().redISub(a2).redISub(a2), c2 = o2.redIAdd(o2);
          c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), e2 = f3, t2 = s3.redMul(a2.redISub(f3)).redISub(c2), r3 = this.y.redAdd(this.y);
        } else {
          var u2 = this.x.redSqr(), d = this.y.redSqr(), h = d.redSqr(), l = this.x.redAdd(d).redSqr().redISub(u2).redISub(h);
          l = l.redIAdd(l);
          var p = u2.redAdd(u2).redIAdd(u2), b = p.redSqr(), y = h.redIAdd(h);
          y = (y = y.redIAdd(y)).redIAdd(y), e2 = b.redISub(l).redISub(l), t2 = p.redMul(l.redISub(e2)).redISub(y), r3 = (r3 = this.y.redMul(this.z)).redIAdd(r3);
        }
        return this.curve.jpoint(e2, t2, r3);
      }, u.prototype._threeDbl = function() {
        var e2, t2, r3;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
          a2 = a2.redIAdd(a2);
          var s3 = n2.redAdd(n2).redIAdd(n2).redIAdd(this.curve.a), f3 = s3.redSqr().redISub(a2).redISub(a2);
          e2 = f3;
          var c2 = o2.redIAdd(o2);
          c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), t2 = s3.redMul(a2.redISub(f3)).redISub(c2), r3 = this.y.redAdd(this.y);
        } else {
          var u2 = this.z.redSqr(), d = this.y.redSqr(), h = this.x.redMul(d), l = this.x.redSub(u2).redMul(this.x.redAdd(u2));
          l = l.redAdd(l).redIAdd(l);
          var p = h.redIAdd(h), b = (p = p.redIAdd(p)).redAdd(p);
          e2 = l.redSqr().redISub(b), r3 = this.y.redAdd(this.z).redSqr().redISub(d).redISub(u2);
          var y = d.redSqr();
          y = (y = (y = y.redIAdd(y)).redIAdd(y)).redIAdd(y), t2 = l.redMul(p.redISub(e2)).redISub(y);
        }
        return this.curve.jpoint(e2, t2, r3);
      }, u.prototype._dbl = function() {
        var e2 = this.curve.a, t2 = this.x, r3 = this.y, n2 = this.z, i2 = n2.redSqr().redSqr(), o2 = t2.redSqr(), a2 = r3.redSqr(), s3 = o2.redAdd(o2).redIAdd(o2).redIAdd(e2.redMul(i2)), f3 = t2.redAdd(t2), c2 = (f3 = f3.redIAdd(f3)).redMul(a2), u2 = s3.redSqr().redISub(c2.redAdd(c2)), d = c2.redISub(u2), h = a2.redSqr();
        h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
        var l = s3.redMul(d).redISub(h), p = r3.redAdd(r3).redMul(n2);
        return this.curve.jpoint(u2, l, p);
      }, u.prototype.trpl = function() {
        if (!this.curve.zeroA)
          return this.dbl().add(this);
        var e2 = this.x.redSqr(), t2 = this.y.redSqr(), r3 = this.z.redSqr(), n2 = t2.redSqr(), i2 = e2.redAdd(e2).redIAdd(e2), o2 = i2.redSqr(), a2 = this.x.redAdd(t2).redSqr().redISub(e2).redISub(n2), s3 = (a2 = (a2 = (a2 = a2.redIAdd(a2)).redAdd(a2).redIAdd(a2)).redISub(o2)).redSqr(), f3 = n2.redIAdd(n2);
        f3 = (f3 = (f3 = f3.redIAdd(f3)).redIAdd(f3)).redIAdd(f3);
        var c2 = i2.redIAdd(a2).redSqr().redISub(o2).redISub(s3).redISub(f3), u2 = t2.redMul(c2);
        u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2);
        var d = this.x.redMul(s3).redISub(u2);
        d = (d = d.redIAdd(d)).redIAdd(d);
        var h = this.y.redMul(c2.redMul(f3.redISub(c2)).redISub(a2.redMul(s3)));
        h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
        var l = this.z.redAdd(a2).redSqr().redISub(r3).redISub(s3);
        return this.curve.jpoint(d, h, l);
      }, u.prototype.mul = function(e2, t2) {
        return e2 = new i(e2, t2), this.curve._wnafMul(this, e2);
      }, u.prototype.eq = function(e2) {
        if ("affine" === e2.type)
          return this.eq(e2.toJ());
        if (this === e2)
          return true;
        var t2 = this.z.redSqr(), r3 = e2.z.redSqr();
        if (0 !== this.x.redMul(r3).redISub(e2.x.redMul(t2)).cmpn(0))
          return false;
        var n2 = t2.redMul(this.z), i2 = r3.redMul(e2.z);
        return 0 === this.y.redMul(i2).redISub(e2.y.redMul(n2)).cmpn(0);
      }, u.prototype.eqXToP = function(e2) {
        var t2 = this.z.redSqr(), r3 = e2.toRed(this.curve.red).redMul(t2);
        if (0 === this.x.cmp(r3))
          return true;
        for (var n2 = e2.clone(), i2 = this.curve.redN.redMul(t2); ; ) {
          if (n2.iadd(this.curve.n), n2.cmp(this.curve.p) >= 0)
            return false;
          if (r3.redIAdd(i2), 0 === this.x.cmp(r3))
            return true;
        }
      }, u.prototype.inspect = function() {
        return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
      }, u.prototype.isInfinity = function() {
        return 0 === this.z.cmpn(0);
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(10), o = r2(89), a = r2(22);
      function s2(e2) {
        o.call(this, "mont", e2), this.a = new n(e2.a, 16).toRed(this.red), this.b = new n(e2.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
      }
      function f2(e2, t2, r3) {
        o.BasePoint.call(this, e2, "projective"), null === t2 && null === r3 ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(t2, 16), this.z = new n(r3, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      i(s2, o), e.exports = s2, s2.prototype.validate = function(e2) {
        var t2 = e2.normalize().x, r3 = t2.redSqr(), n2 = r3.redMul(t2).redAdd(r3.redMul(this.a)).redAdd(t2);
        return 0 === n2.redSqrt().redSqr().cmp(n2);
      }, i(f2, o.BasePoint), s2.prototype.decodePoint = function(e2, t2) {
        return this.point(a.toArray(e2, t2), 1);
      }, s2.prototype.point = function(e2, t2) {
        return new f2(this, e2, t2);
      }, s2.prototype.pointFromJSON = function(e2) {
        return f2.fromJSON(this, e2);
      }, f2.prototype.precompute = function() {
      }, f2.prototype._encode = function() {
        return this.getX().toArray("be", this.curve.p.byteLength());
      }, f2.fromJSON = function(e2, t2) {
        return new f2(e2, t2[0], t2[1] || e2.one);
      }, f2.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, f2.prototype.isInfinity = function() {
        return 0 === this.z.cmpn(0);
      }, f2.prototype.dbl = function() {
        var e2 = this.x.redAdd(this.z).redSqr(), t2 = this.x.redSub(this.z).redSqr(), r3 = e2.redSub(t2), n2 = e2.redMul(t2), i2 = r3.redMul(t2.redAdd(this.curve.a24.redMul(r3)));
        return this.curve.point(n2, i2);
      }, f2.prototype.add = function() {
        throw new Error("Not supported on Montgomery curve");
      }, f2.prototype.diffAdd = function(e2, t2) {
        var r3 = this.x.redAdd(this.z), n2 = this.x.redSub(this.z), i2 = e2.x.redAdd(e2.z), o2 = e2.x.redSub(e2.z).redMul(r3), a2 = i2.redMul(n2), s3 = t2.z.redMul(o2.redAdd(a2).redSqr()), f3 = t2.x.redMul(o2.redISub(a2).redSqr());
        return this.curve.point(s3, f3);
      }, f2.prototype.mul = function(e2) {
        for (var t2 = e2.clone(), r3 = this, n2 = this.curve.point(null, null), i2 = []; 0 !== t2.cmpn(0); t2.iushrn(1))
          i2.push(t2.andln(1));
        for (var o2 = i2.length - 1; o2 >= 0; o2--)
          0 === i2[o2] ? (r3 = r3.diffAdd(n2, this), n2 = n2.dbl()) : (n2 = r3.diffAdd(n2, this), r3 = r3.dbl());
        return n2;
      }, f2.prototype.mulAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, f2.prototype.jumlAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, f2.prototype.eq = function(e2) {
        return 0 === this.getX().cmp(e2.getX());
      }, f2.prototype.normalize = function() {
        return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
      }, f2.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      };
    }, function(e, t, r2) {
      var n = r2(22), i = r2(4), o = r2(10), a = r2(89), s2 = n.assert;
      function f2(e2) {
        this.twisted = 1 != (0 | e2.a), this.mOneA = this.twisted && -1 == (0 | e2.a), this.extended = this.mOneA, a.call(this, "edwards", e2), this.a = new i(e2.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(e2.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(e2.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), s2(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | e2.c);
      }
      function c(e2, t2, r3, n2, o2) {
        a.BasePoint.call(this, e2, "projective"), null === t2 && null === r3 && null === n2 ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new i(t2, 16), this.y = new i(r3, 16), this.z = n2 ? new i(n2, 16) : this.curve.one, this.t = o2 && new i(o2, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      o(f2, a), e.exports = f2, f2.prototype._mulA = function(e2) {
        return this.mOneA ? e2.redNeg() : this.a.redMul(e2);
      }, f2.prototype._mulC = function(e2) {
        return this.oneC ? e2 : this.c.redMul(e2);
      }, f2.prototype.jpoint = function(e2, t2, r3, n2) {
        return this.point(e2, t2, r3, n2);
      }, f2.prototype.pointFromX = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r3 = e2.redSqr(), n2 = this.c2.redSub(this.a.redMul(r3)), o2 = this.one.redSub(this.c2.redMul(this.d).redMul(r3)), a2 = n2.redMul(o2.redInvm()), s3 = a2.redSqrt();
        if (0 !== s3.redSqr().redSub(a2).cmp(this.zero))
          throw new Error("invalid point");
        var f3 = s3.fromRed().isOdd();
        return (t2 && !f3 || !t2 && f3) && (s3 = s3.redNeg()), this.point(e2, s3);
      }, f2.prototype.pointFromY = function(e2, t2) {
        (e2 = new i(e2, 16)).red || (e2 = e2.toRed(this.red));
        var r3 = e2.redSqr(), n2 = r3.redSub(this.c2), o2 = r3.redMul(this.d).redMul(this.c2).redSub(this.a), a2 = n2.redMul(o2.redInvm());
        if (0 === a2.cmp(this.zero)) {
          if (t2)
            throw new Error("invalid point");
          return this.point(this.zero, e2);
        }
        var s3 = a2.redSqrt();
        if (0 !== s3.redSqr().redSub(a2).cmp(this.zero))
          throw new Error("invalid point");
        return s3.fromRed().isOdd() !== t2 && (s3 = s3.redNeg()), this.point(s3, e2);
      }, f2.prototype.validate = function(e2) {
        if (e2.isInfinity())
          return true;
        e2.normalize();
        var t2 = e2.x.redSqr(), r3 = e2.y.redSqr(), n2 = t2.redMul(this.a).redAdd(r3), i2 = this.c2.redMul(this.one.redAdd(this.d.redMul(t2).redMul(r3)));
        return 0 === n2.cmp(i2);
      }, o(c, a.BasePoint), f2.prototype.pointFromJSON = function(e2) {
        return c.fromJSON(this, e2);
      }, f2.prototype.point = function(e2, t2, r3, n2) {
        return new c(this, e2, t2, r3, n2);
      }, c.fromJSON = function(e2, t2) {
        return new c(e2, t2[0], t2[1], t2[2]);
      }, c.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, c.prototype.isInfinity = function() {
        return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
      }, c.prototype._extDbl = function() {
        var e2 = this.x.redSqr(), t2 = this.y.redSqr(), r3 = this.z.redSqr();
        r3 = r3.redIAdd(r3);
        var n2 = this.curve._mulA(e2), i2 = this.x.redAdd(this.y).redSqr().redISub(e2).redISub(t2), o2 = n2.redAdd(t2), a2 = o2.redSub(r3), s3 = n2.redSub(t2), f3 = i2.redMul(a2), c2 = o2.redMul(s3), u = i2.redMul(s3), d = a2.redMul(o2);
        return this.curve.point(f3, c2, d, u);
      }, c.prototype._projDbl = function() {
        var e2, t2, r3, n2, i2, o2, a2 = this.x.redAdd(this.y).redSqr(), s3 = this.x.redSqr(), f3 = this.y.redSqr();
        if (this.curve.twisted) {
          var c2 = (n2 = this.curve._mulA(s3)).redAdd(f3);
          this.zOne ? (e2 = a2.redSub(s3).redSub(f3).redMul(c2.redSub(this.curve.two)), t2 = c2.redMul(n2.redSub(f3)), r3 = c2.redSqr().redSub(c2).redSub(c2)) : (i2 = this.z.redSqr(), o2 = c2.redSub(i2).redISub(i2), e2 = a2.redSub(s3).redISub(f3).redMul(o2), t2 = c2.redMul(n2.redSub(f3)), r3 = c2.redMul(o2));
        } else
          n2 = s3.redAdd(f3), i2 = this.curve._mulC(this.z).redSqr(), o2 = n2.redSub(i2).redSub(i2), e2 = this.curve._mulC(a2.redISub(n2)).redMul(o2), t2 = this.curve._mulC(n2).redMul(s3.redISub(f3)), r3 = n2.redMul(o2);
        return this.curve.point(e2, t2, r3);
      }, c.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
      }, c.prototype._extAdd = function(e2) {
        var t2 = this.y.redSub(this.x).redMul(e2.y.redSub(e2.x)), r3 = this.y.redAdd(this.x).redMul(e2.y.redAdd(e2.x)), n2 = this.t.redMul(this.curve.dd).redMul(e2.t), i2 = this.z.redMul(e2.z.redAdd(e2.z)), o2 = r3.redSub(t2), a2 = i2.redSub(n2), s3 = i2.redAdd(n2), f3 = r3.redAdd(t2), c2 = o2.redMul(a2), u = s3.redMul(f3), d = o2.redMul(f3), h = a2.redMul(s3);
        return this.curve.point(c2, u, h, d);
      }, c.prototype._projAdd = function(e2) {
        var t2, r3, n2 = this.z.redMul(e2.z), i2 = n2.redSqr(), o2 = this.x.redMul(e2.x), a2 = this.y.redMul(e2.y), s3 = this.curve.d.redMul(o2).redMul(a2), f3 = i2.redSub(s3), c2 = i2.redAdd(s3), u = this.x.redAdd(this.y).redMul(e2.x.redAdd(e2.y)).redISub(o2).redISub(a2), d = n2.redMul(f3).redMul(u);
        return this.curve.twisted ? (t2 = n2.redMul(c2).redMul(a2.redSub(this.curve._mulA(o2))), r3 = f3.redMul(c2)) : (t2 = n2.redMul(c2).redMul(a2.redSub(o2)), r3 = this.curve._mulC(f3).redMul(c2)), this.curve.point(d, t2, r3);
      }, c.prototype.add = function(e2) {
        return this.isInfinity() ? e2 : e2.isInfinity() ? this : this.curve.extended ? this._extAdd(e2) : this._projAdd(e2);
      }, c.prototype.mul = function(e2) {
        return this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve._wnafMul(this, e2);
      }, c.prototype.mulAdd = function(e2, t2, r3) {
        return this.curve._wnafMulAdd(1, [this, t2], [e2, r3], 2, false);
      }, c.prototype.jmulAdd = function(e2, t2, r3) {
        return this.curve._wnafMulAdd(1, [this, t2], [e2, r3], 2, true);
      }, c.prototype.normalize = function() {
        if (this.zOne)
          return this;
        var e2 = this.z.redInvm();
        return this.x = this.x.redMul(e2), this.y = this.y.redMul(e2), this.t && (this.t = this.t.redMul(e2)), this.z = this.curve.one, this.zOne = true, this;
      }, c.prototype.neg = function() {
        return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
      }, c.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      }, c.prototype.getY = function() {
        return this.normalize(), this.y.fromRed();
      }, c.prototype.eq = function(e2) {
        return this === e2 || 0 === this.getX().cmp(e2.getX()) && 0 === this.getY().cmp(e2.getY());
      }, c.prototype.eqXToP = function(e2) {
        var t2 = e2.toRed(this.curve.red).redMul(this.z);
        if (0 === this.x.cmp(t2))
          return true;
        for (var r3 = e2.clone(), n2 = this.curve.redN.redMul(this.z); ; ) {
          if (r3.iadd(this.curve.n), r3.cmp(this.curve.p) >= 0)
            return false;
          if (t2.redIAdd(n2), 0 === this.x.cmp(t2))
            return true;
        }
      }, c.prototype.toP = c.prototype.normalize, c.prototype.mixedAdd = c.prototype.add;
    }, function(e, t, r2) {
      t.sha1 = r2(557), t.sha224 = r2(558), t.sha256 = r2(240), t.sha384 = r2(559), t.sha512 = r2(241);
    }, function(e, t, r2) {
      var n = r2(26), i = r2(70), o = r2(239), a = n.rotl32, s2 = n.sum32, f2 = n.sum32_5, c = o.ft_1, u = i.BlockHash, d = [1518500249, 1859775393, 2400959708, 3395469782];
      function h() {
        if (!(this instanceof h))
          return new h();
        u.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
      }
      n.inherits(h, u), e.exports = h, h.blockSize = 512, h.outSize = 160, h.hmacStrength = 80, h.padLength = 64, h.prototype._update = function(e2, t2) {
        for (var r3 = this.W, n2 = 0; n2 < 16; n2++)
          r3[n2] = e2[t2 + n2];
        for (; n2 < r3.length; n2++)
          r3[n2] = a(r3[n2 - 3] ^ r3[n2 - 8] ^ r3[n2 - 14] ^ r3[n2 - 16], 1);
        var i2 = this.h[0], o2 = this.h[1], u2 = this.h[2], h2 = this.h[3], l = this.h[4];
        for (n2 = 0; n2 < r3.length; n2++) {
          var p = ~~(n2 / 20), b = f2(a(i2, 5), c(p, o2, u2, h2), l, r3[n2], d[p]);
          l = h2, h2 = u2, u2 = a(o2, 30), o2 = i2, i2 = b;
        }
        this.h[0] = s2(this.h[0], i2), this.h[1] = s2(this.h[1], o2), this.h[2] = s2(this.h[2], u2), this.h[3] = s2(this.h[3], h2), this.h[4] = s2(this.h[4], l);
      }, h.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, function(e, t, r2) {
      var n = r2(26), i = r2(240);
      function o() {
        if (!(this instanceof o))
          return new o();
        i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
      }
      n.inherits(o, i), e.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
      };
    }, function(e, t, r2) {
      var n = r2(26), i = r2(241);
      function o() {
        if (!(this instanceof o))
          return new o();
        i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
      }
      n.inherits(o, i), e.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
      };
    }, function(e, t, r2) {
      var n = r2(26), i = r2(70), o = n.rotl32, a = n.sum32, s2 = n.sum32_3, f2 = n.sum32_4, c = i.BlockHash;
      function u() {
        if (!(this instanceof u))
          return new u();
        c.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
      }
      function d(e2, t2, r3, n2) {
        return e2 <= 15 ? t2 ^ r3 ^ n2 : e2 <= 31 ? t2 & r3 | ~t2 & n2 : e2 <= 47 ? (t2 | ~r3) ^ n2 : e2 <= 63 ? t2 & n2 | r3 & ~n2 : t2 ^ (r3 | ~n2);
      }
      function h(e2) {
        return e2 <= 15 ? 0 : e2 <= 31 ? 1518500249 : e2 <= 47 ? 1859775393 : e2 <= 63 ? 2400959708 : 2840853838;
      }
      function l(e2) {
        return e2 <= 15 ? 1352829926 : e2 <= 31 ? 1548603684 : e2 <= 47 ? 1836072691 : e2 <= 63 ? 2053994217 : 0;
      }
      n.inherits(u, c), t.ripemd160 = u, u.blockSize = 512, u.outSize = 160, u.hmacStrength = 192, u.padLength = 64, u.prototype._update = function(e2, t2) {
        for (var r3 = this.h[0], n2 = this.h[1], i2 = this.h[2], c2 = this.h[3], u2 = this.h[4], m = r3, g = n2, w = i2, _ = c2, k = u2, A = 0; A < 80; A++) {
          var S = a(o(f2(r3, d(A, n2, i2, c2), e2[p[A] + t2], h(A)), y[A]), u2);
          r3 = u2, u2 = c2, c2 = o(i2, 10), i2 = n2, n2 = S, S = a(o(f2(m, d(79 - A, g, w, _), e2[b[A] + t2], l(A)), v[A]), k), m = k, k = _, _ = o(w, 10), w = g, g = S;
        }
        S = s2(this.h[1], i2, _), this.h[1] = s2(this.h[2], c2, k), this.h[2] = s2(this.h[3], u2, m), this.h[3] = s2(this.h[4], r3, g), this.h[4] = s2(this.h[0], n2, w), this.h[0] = S;
      }, u.prototype._digest = function(e2) {
        return "hex" === e2 ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
      };
      var p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], b = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], y = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], v = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
    }, function(e, t, r2) {
      var n = r2(26), i = r2(41);
      function o(e2, t2, r3) {
        if (!(this instanceof o))
          return new o(e2, t2, r3);
        this.Hash = e2, this.blockSize = e2.blockSize / 8, this.outSize = e2.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(t2, r3));
      }
      e.exports = o, o.prototype._init = function(e2) {
        e2.length > this.blockSize && (e2 = new this.Hash().update(e2).digest()), i(e2.length <= this.blockSize);
        for (var t2 = e2.length; t2 < this.blockSize; t2++)
          e2.push(0);
        for (t2 = 0; t2 < e2.length; t2++)
          e2[t2] ^= 54;
        for (this.inner = new this.Hash().update(e2), t2 = 0; t2 < e2.length; t2++)
          e2[t2] ^= 106;
        this.outer = new this.Hash().update(e2);
      }, o.prototype.update = function(e2, t2) {
        return this.inner.update(e2, t2), this;
      }, o.prototype.digest = function(e2) {
        return this.outer.update(this.inner.digest()), this.outer.digest(e2);
      };
    }, function(e, t, r2) {
      e.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(4), o = r2(564), a = r2(22), s2 = r2(121), f2 = r2(237), c = a.assert, u = r2(565), d = r2(566);
      function h(e2) {
        if (!(this instanceof h))
          return new h(e2);
        "string" == typeof e2 && (c(Object.prototype.hasOwnProperty.call(s2, e2), "Unknown curve " + e2), e2 = s2[e2]), e2 instanceof s2.PresetCurve && (e2 = { curve: e2 }), this.curve = e2.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e2.curve.g, this.g.precompute(e2.curve.n.bitLength() + 1), this.hash = e2.hash || e2.curve.hash;
      }
      e.exports = h, h.prototype.keyPair = function(e2) {
        return new u(this, e2);
      }, h.prototype.keyFromPrivate = function(e2, t2) {
        return u.fromPrivate(this, e2, t2);
      }, h.prototype.keyFromPublic = function(e2, t2) {
        return u.fromPublic(this, e2, t2);
      }, h.prototype.genKeyPair = function(e2) {
        e2 || (e2 = {});
        for (var t2 = new o({ hash: this.hash, pers: e2.pers, persEnc: e2.persEnc || "utf8", entropy: e2.entropy || f2(this.hash.hmacStrength), entropyEnc: e2.entropy && e2.entropyEnc || "utf8", nonce: this.n.toArray() }), r3 = this.n.byteLength(), n2 = this.n.sub(new i(2)); ; ) {
          var a2 = new i(t2.generate(r3));
          if (!(a2.cmp(n2) > 0))
            return a2.iaddn(1), this.keyFromPrivate(a2);
        }
      }, h.prototype._truncateToN = function(e2, t2) {
        var r3 = 8 * e2.byteLength() - this.n.bitLength();
        return r3 > 0 && (e2 = e2.ushrn(r3)), !t2 && e2.cmp(this.n) >= 0 ? e2.sub(this.n) : e2;
      }, h.prototype.sign = function(e2, t2, r3, a2) {
        "object" === (0, n.default)(r3) && (a2 = r3, r3 = null), a2 || (a2 = {}), t2 = this.keyFromPrivate(t2, r3), e2 = this._truncateToN(new i(e2, 16));
        for (var s3 = this.n.byteLength(), f3 = t2.getPrivate().toArray("be", s3), c2 = e2.toArray("be", s3), u2 = new o({ hash: this.hash, entropy: f3, nonce: c2, pers: a2.pers, persEnc: a2.persEnc || "utf8" }), h2 = this.n.sub(new i(1)), l = 0; ; l++) {
          var p = a2.k ? a2.k(l) : new i(u2.generate(this.n.byteLength()));
          if (!((p = this._truncateToN(p, true)).cmpn(1) <= 0 || p.cmp(h2) >= 0)) {
            var b = this.g.mul(p);
            if (!b.isInfinity()) {
              var y = b.getX(), v = y.umod(this.n);
              if (0 !== v.cmpn(0)) {
                var m = p.invm(this.n).mul(v.mul(t2.getPrivate()).iadd(e2));
                if (0 !== (m = m.umod(this.n)).cmpn(0)) {
                  var g = (b.getY().isOdd() ? 1 : 0) | (0 !== y.cmp(v) ? 2 : 0);
                  return a2.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m), g ^= 1), new d({ r: v, s: m, recoveryParam: g });
                }
              }
            }
          }
        }
      }, h.prototype.verify = function(e2, t2, r3, n2) {
        e2 = this._truncateToN(new i(e2, 16)), r3 = this.keyFromPublic(r3, n2);
        var o2 = (t2 = new d(t2, "hex")).r, a2 = t2.s;
        if (o2.cmpn(1) < 0 || o2.cmp(this.n) >= 0)
          return false;
        if (a2.cmpn(1) < 0 || a2.cmp(this.n) >= 0)
          return false;
        var s3, f3 = a2.invm(this.n), c2 = f3.mul(e2).umod(this.n), u2 = f3.mul(o2).umod(this.n);
        return this.curve._maxwellTrick ? !(s3 = this.g.jmulAdd(c2, r3.getPublic(), u2)).isInfinity() && s3.eqXToP(o2) : !(s3 = this.g.mulAdd(c2, r3.getPublic(), u2)).isInfinity() && 0 === s3.getX().umod(this.n).cmp(o2);
      }, h.prototype.recoverPubKey = function(e2, t2, r3, n2) {
        c((3 & r3) === r3, "The recovery param is more than two bits"), t2 = new d(t2, n2);
        var o2 = this.n, a2 = new i(e2), s3 = t2.r, f3 = t2.s, u2 = 1 & r3, h2 = r3 >> 1;
        if (s3.cmp(this.curve.p.umod(this.curve.n)) >= 0 && h2)
          throw new Error("Unable to find sencond key candinate");
        s3 = h2 ? this.curve.pointFromX(s3.add(this.curve.n), u2) : this.curve.pointFromX(s3, u2);
        var l = t2.r.invm(o2), p = o2.sub(a2).mul(l).umod(o2), b = f3.mul(l).umod(o2);
        return this.g.mulAdd(p, s3, b);
      }, h.prototype.getKeyRecoveryParam = function(e2, t2, r3, n2) {
        if (null !== (t2 = new d(t2, n2)).recoveryParam)
          return t2.recoveryParam;
        for (var i2 = 0; i2 < 4; i2++) {
          var o2;
          try {
            o2 = this.recoverPubKey(e2, t2, i2);
          } catch (e3) {
            continue;
          }
          if (o2.eq(r3))
            return i2;
        }
        throw new Error("Unable to find valid recovery factor");
      };
    }, function(e, t, r2) {
      var n = r2(122), i = r2(236), o = r2(41);
      function a(e2) {
        if (!(this instanceof a))
          return new a(e2);
        this.hash = e2.hash, this.predResist = !!e2.predResist, this.outLen = this.hash.outSize, this.minEntropy = e2.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
        var t2 = i.toArray(e2.entropy, e2.entropyEnc || "hex"), r3 = i.toArray(e2.nonce, e2.nonceEnc || "hex"), n2 = i.toArray(e2.pers, e2.persEnc || "hex");
        o(t2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t2, r3, n2);
      }
      e.exports = a, a.prototype._init = function(e2, t2, r3) {
        var n2 = e2.concat(t2).concat(r3);
        this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
        for (var i2 = 0; i2 < this.V.length; i2++)
          this.K[i2] = 0, this.V[i2] = 1;
        this._update(n2), this._reseed = 1, this.reseedInterval = 281474976710656;
      }, a.prototype._hmac = function() {
        return new n.hmac(this.hash, this.K);
      }, a.prototype._update = function(e2) {
        var t2 = this._hmac().update(this.V).update([0]);
        e2 && (t2 = t2.update(e2)), this.K = t2.digest(), this.V = this._hmac().update(this.V).digest(), e2 && (this.K = this._hmac().update(this.V).update([1]).update(e2).digest(), this.V = this._hmac().update(this.V).digest());
      }, a.prototype.reseed = function(e2, t2, r3, n2) {
        "string" != typeof t2 && (n2 = r3, r3 = t2, t2 = null), e2 = i.toArray(e2, t2), r3 = i.toArray(r3, n2), o(e2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e2.concat(r3 || [])), this._reseed = 1;
      }, a.prototype.generate = function(e2, t2, r3, n2) {
        if (this._reseed > this.reseedInterval)
          throw new Error("Reseed is required");
        "string" != typeof t2 && (n2 = r3, r3 = t2, t2 = null), r3 && (r3 = i.toArray(r3, n2 || "hex"), this._update(r3));
        for (var o2 = []; o2.length < e2; )
          this.V = this._hmac().update(this.V).digest(), o2 = o2.concat(this.V);
        var a2 = o2.slice(0, e2);
        return this._update(r3), this._reseed++, i.encode(a2, t2);
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(22).assert;
      function o(e2, t2) {
        this.ec = e2, this.priv = null, this.pub = null, t2.priv && this._importPrivate(t2.priv, t2.privEnc), t2.pub && this._importPublic(t2.pub, t2.pubEnc);
      }
      e.exports = o, o.fromPublic = function(e2, t2, r3) {
        return t2 instanceof o ? t2 : new o(e2, { pub: t2, pubEnc: r3 });
      }, o.fromPrivate = function(e2, t2, r3) {
        return t2 instanceof o ? t2 : new o(e2, { priv: t2, privEnc: r3 });
      }, o.prototype.validate = function() {
        var e2 = this.getPublic();
        return e2.isInfinity() ? { result: false, reason: "Invalid public key" } : e2.validate() ? e2.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
      }, o.prototype.getPublic = function(e2, t2) {
        return "string" == typeof e2 && (t2 = e2, e2 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t2 ? this.pub.encode(t2, e2) : this.pub;
      }, o.prototype.getPrivate = function(e2) {
        return "hex" === e2 ? this.priv.toString(16, 2) : this.priv;
      }, o.prototype._importPrivate = function(e2, t2) {
        this.priv = new n(e2, t2 || 16), this.priv = this.priv.umod(this.ec.curve.n);
      }, o.prototype._importPublic = function(e2, t2) {
        if (e2.x || e2.y)
          return "mont" === this.ec.curve.type ? i(e2.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(e2.x && e2.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(e2.x, e2.y));
        this.pub = this.ec.curve.decodePoint(e2, t2);
      }, o.prototype.derive = function(e2) {
        return e2.validate() || i(e2.validate(), "public point not validated"), e2.mul(this.priv).getX();
      }, o.prototype.sign = function(e2, t2, r3) {
        return this.ec.sign(e2, this, t2, r3);
      }, o.prototype.verify = function(e2, t2) {
        return this.ec.verify(e2, t2, this);
      }, o.prototype.inspect = function() {
        return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
      };
    }, function(e, t, r2) {
      var n = r2(4), i = r2(22), o = i.assert;
      function a(e2, t2) {
        if (e2 instanceof a)
          return e2;
        this._importDER(e2, t2) || (o(e2.r && e2.s, "Signature without r or s"), this.r = new n(e2.r, 16), this.s = new n(e2.s, 16), void 0 === e2.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e2.recoveryParam);
      }
      function s2() {
        this.place = 0;
      }
      function f2(e2, t2) {
        var r3 = e2[t2.place++];
        if (!(128 & r3))
          return r3;
        var n2 = 15 & r3;
        if (0 === n2 || n2 > 4)
          return false;
        for (var i2 = 0, o2 = 0, a2 = t2.place; o2 < n2; o2++, a2++)
          i2 <<= 8, i2 |= e2[a2], i2 >>>= 0;
        return !(i2 <= 127) && (t2.place = a2, i2);
      }
      function c(e2) {
        for (var t2 = 0, r3 = e2.length - 1; !e2[t2] && !(128 & e2[t2 + 1]) && t2 < r3; )
          t2++;
        return 0 === t2 ? e2 : e2.slice(t2);
      }
      function u(e2, t2) {
        if (t2 < 128)
          e2.push(t2);
        else {
          var r3 = 1 + (Math.log(t2) / Math.LN2 >>> 3);
          for (e2.push(128 | r3); --r3; )
            e2.push(t2 >>> (r3 << 3) & 255);
          e2.push(t2);
        }
      }
      e.exports = a, a.prototype._importDER = function(e2, t2) {
        e2 = i.toArray(e2, t2);
        var r3 = new s2();
        if (48 !== e2[r3.place++])
          return false;
        var o2 = f2(e2, r3);
        if (false === o2)
          return false;
        if (o2 + r3.place !== e2.length)
          return false;
        if (2 !== e2[r3.place++])
          return false;
        var a2 = f2(e2, r3);
        if (false === a2)
          return false;
        var c2 = e2.slice(r3.place, a2 + r3.place);
        if (r3.place += a2, 2 !== e2[r3.place++])
          return false;
        var u2 = f2(e2, r3);
        if (false === u2)
          return false;
        if (e2.length !== u2 + r3.place)
          return false;
        var d = e2.slice(r3.place, u2 + r3.place);
        if (0 === c2[0]) {
          if (!(128 & c2[1]))
            return false;
          c2 = c2.slice(1);
        }
        if (0 === d[0]) {
          if (!(128 & d[1]))
            return false;
          d = d.slice(1);
        }
        return this.r = new n(c2), this.s = new n(d), this.recoveryParam = null, true;
      }, a.prototype.toDER = function(e2) {
        var t2 = this.r.toArray(), r3 = this.s.toArray();
        for (128 & t2[0] && (t2 = [0].concat(t2)), 128 & r3[0] && (r3 = [0].concat(r3)), t2 = c(t2), r3 = c(r3); !(r3[0] || 128 & r3[1]); )
          r3 = r3.slice(1);
        var n2 = [2];
        u(n2, t2.length), (n2 = n2.concat(t2)).push(2), u(n2, r3.length);
        var o2 = n2.concat(r3), a2 = [48];
        return u(a2, o2.length), a2 = a2.concat(o2), i.encode(a2, e2);
      };
    }, function(e, t, r2) {
      var n = r2(122), i = r2(121), o = r2(22), a = o.assert, s2 = o.parseBytes, f2 = r2(568), c = r2(569);
      function u(e2) {
        if (a("ed25519" === e2, "only tested with ed25519 so far"), !(this instanceof u))
          return new u(e2);
        e2 = i[e2].curve, this.curve = e2, this.g = e2.g, this.g.precompute(e2.n.bitLength() + 1), this.pointClass = e2.point().constructor, this.encodingLength = Math.ceil(e2.n.bitLength() / 8), this.hash = n.sha512;
      }
      e.exports = u, u.prototype.sign = function(e2, t2) {
        e2 = s2(e2);
        var r3 = this.keyFromSecret(t2), n2 = this.hashInt(r3.messagePrefix(), e2), i2 = this.g.mul(n2), o2 = this.encodePoint(i2), a2 = this.hashInt(o2, r3.pubBytes(), e2).mul(r3.priv()), f3 = n2.add(a2).umod(this.curve.n);
        return this.makeSignature({ R: i2, S: f3, Rencoded: o2 });
      }, u.prototype.verify = function(e2, t2, r3) {
        e2 = s2(e2), t2 = this.makeSignature(t2);
        var n2 = this.keyFromPublic(r3), i2 = this.hashInt(t2.Rencoded(), n2.pubBytes(), e2), o2 = this.g.mul(t2.S());
        return t2.R().add(n2.pub().mul(i2)).eq(o2);
      }, u.prototype.hashInt = function() {
        for (var e2 = this.hash(), t2 = 0; t2 < arguments.length; t2++)
          e2.update(arguments[t2]);
        return o.intFromLE(e2.digest()).umod(this.curve.n);
      }, u.prototype.keyFromPublic = function(e2) {
        return f2.fromPublic(this, e2);
      }, u.prototype.keyFromSecret = function(e2) {
        return f2.fromSecret(this, e2);
      }, u.prototype.makeSignature = function(e2) {
        return e2 instanceof c ? e2 : new c(this, e2);
      }, u.prototype.encodePoint = function(e2) {
        var t2 = e2.getY().toArray("le", this.encodingLength);
        return t2[this.encodingLength - 1] |= e2.getX().isOdd() ? 128 : 0, t2;
      }, u.prototype.decodePoint = function(e2) {
        var t2 = (e2 = o.parseBytes(e2)).length - 1, r3 = e2.slice(0, t2).concat(-129 & e2[t2]), n2 = 0 != (128 & e2[t2]), i2 = o.intFromLE(r3);
        return this.curve.pointFromY(i2, n2);
      }, u.prototype.encodeInt = function(e2) {
        return e2.toArray("le", this.encodingLength);
      }, u.prototype.decodeInt = function(e2) {
        return o.intFromLE(e2);
      }, u.prototype.isPoint = function(e2) {
        return e2 instanceof this.pointClass;
      };
    }, function(e, t, r2) {
      var n = r2(22), i = n.assert, o = n.parseBytes, a = n.cachedProperty;
      function s2(e2, t2) {
        this.eddsa = e2, this._secret = o(t2.secret), e2.isPoint(t2.pub) ? this._pub = t2.pub : this._pubBytes = o(t2.pub);
      }
      s2.fromPublic = function(e2, t2) {
        return t2 instanceof s2 ? t2 : new s2(e2, { pub: t2 });
      }, s2.fromSecret = function(e2, t2) {
        return t2 instanceof s2 ? t2 : new s2(e2, { secret: t2 });
      }, s2.prototype.secret = function() {
        return this._secret;
      }, a(s2, "pubBytes", function() {
        return this.eddsa.encodePoint(this.pub());
      }), a(s2, "pub", function() {
        return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
      }), a(s2, "privBytes", function() {
        var e2 = this.eddsa, t2 = this.hash(), r3 = e2.encodingLength - 1, n2 = t2.slice(0, e2.encodingLength);
        return n2[0] &= 248, n2[r3] &= 127, n2[r3] |= 64, n2;
      }), a(s2, "priv", function() {
        return this.eddsa.decodeInt(this.privBytes());
      }), a(s2, "hash", function() {
        return this.eddsa.hash().update(this.secret()).digest();
      }), a(s2, "messagePrefix", function() {
        return this.hash().slice(this.eddsa.encodingLength);
      }), s2.prototype.sign = function(e2) {
        return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(e2, this);
      }, s2.prototype.verify = function(e2, t2) {
        return this.eddsa.verify(e2, t2, this);
      }, s2.prototype.getSecret = function(e2) {
        return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), e2);
      }, s2.prototype.getPublic = function(e2) {
        return n.encode(this.pubBytes(), e2);
      }, e.exports = s2;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(4), o = r2(22), a = o.assert, s2 = o.cachedProperty, f2 = o.parseBytes;
      function c(e2, t2) {
        this.eddsa = e2, "object" !== (0, n.default)(t2) && (t2 = f2(t2)), Array.isArray(t2) && (t2 = { R: t2.slice(0, e2.encodingLength), S: t2.slice(e2.encodingLength) }), a(t2.R && t2.S, "Signature without R or S"), e2.isPoint(t2.R) && (this._R = t2.R), t2.S instanceof i && (this._S = t2.S), this._Rencoded = Array.isArray(t2.R) ? t2.R : t2.Rencoded, this._Sencoded = Array.isArray(t2.S) ? t2.S : t2.Sencoded;
      }
      s2(c, "S", function() {
        return this.eddsa.decodeInt(this.Sencoded());
      }), s2(c, "R", function() {
        return this.eddsa.decodePoint(this.Rencoded());
      }), s2(c, "Rencoded", function() {
        return this.eddsa.encodePoint(this.R());
      }), s2(c, "Sencoded", function() {
        return this.eddsa.encodeInt(this.S());
      }), c.prototype.toBytes = function() {
        return this.Rencoded().concat(this.Sencoded());
      }, c.prototype.toHex = function() {
        return o.encode(this.toBytes(), "hex").toUpperCase();
      }, e.exports = c;
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true });
      var n = r2(571);
      t.getRandomBytes = function(e2) {
        return new Promise(function(t2, r3) {
          n(e2, function(e3, n2) {
            e3 ? r3(e3) : t2(n2);
          });
        });
      }, t.getRandomBytesSync = function(e2) {
        return n(e2);
      };
    }, function(e, t, r2) {
      (function(t2, n) {
        var i = r2(24).Buffer, o = t2.crypto || t2.msCrypto;
        o && o.getRandomValues ? e.exports = function(e2, t3) {
          if (e2 > 4294967295)
            throw new RangeError("requested too many random bytes");
          var r3 = i.allocUnsafe(e2);
          if (e2 > 0)
            if (e2 > 65536)
              for (var a = 0; a < e2; a += 65536)
                o.getRandomValues(r3.slice(a, a + 65536));
            else
              o.getRandomValues(r3);
          if ("function" == typeof t3)
            return n.nextTick(function() {
              t3(null, r3);
            });
          return r3;
        } : e.exports = function() {
          throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
        };
      }).call(this, r2(7), r2(6));
    }, function(e, t, r2) {
      Object.defineProperty(t, "__esModule", { value: true });
      var n = r2(573), i = r2(574);
      t.keccak224 = n.createHashFunction(function() {
        return i("keccak224");
      }), t.keccak256 = n.createHashFunction(function() {
        return i("keccak256");
      }), t.keccak384 = n.createHashFunction(function() {
        return i("keccak384");
      }), t.keccak512 = n.createHashFunction(function() {
        return i("keccak512");
      });
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.createHashFunction = function(t2) {
          return function(r3) {
            var n = t2();
            return n.update(r3), e2.from(n.digest());
          };
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      e.exports = r2(575)(r2(586));
    }, function(e, t, r2) {
      var n = r2(576), i = r2(585);
      e.exports = function(e2) {
        var t2 = n(e2), r3 = i(e2);
        return function(e3, n2) {
          switch ("string" == typeof e3 ? e3.toLowerCase() : e3) {
            case "keccak224":
              return new t2(1152, 448, null, 224, n2);
            case "keccak256":
              return new t2(1088, 512, null, 256, n2);
            case "keccak384":
              return new t2(832, 768, null, 384, n2);
            case "keccak512":
              return new t2(576, 1024, null, 512, n2);
            case "sha3-224":
              return new t2(1152, 448, 6, 224, n2);
            case "sha3-256":
              return new t2(1088, 512, 6, 256, n2);
            case "sha3-384":
              return new t2(832, 768, 6, 384, n2);
            case "sha3-512":
              return new t2(576, 1024, 6, 512, n2);
            case "shake128":
              return new r3(1344, 256, 31, n2);
            case "shake256":
              return new r3(1088, 512, 31, n2);
            default:
              throw new Error("Invald algorithm: " + e3);
          }
        };
      };
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13));
        function c(e2) {
          var t3 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (e3) {
              return false;
            }
          }();
          return function() {
            var r3, n2 = (0, f2.default)(e2);
            if (t3) {
              var i2 = (0, f2.default)(this).constructor;
              r3 = Reflect.construct(n2, arguments, i2);
            } else
              r3 = n2.apply(this, arguments);
            return (0, s2.default)(this, r3);
          };
        }
        var u = r2(124).Transform;
        e.exports = function(e2) {
          return function(r3) {
            (0, a.default)(s3, r3);
            var n2 = c(s3);
            function s3(t3, r4, o2, a2, f3) {
              var c2;
              return (0, i.default)(this, s3), (c2 = n2.call(this, f3))._rate = t3, c2._capacity = r4, c2._delimitedSuffix = o2, c2._hashBitLength = a2, c2._options = f3, c2._state = new e2(), c2._state.initialize(t3, r4), c2._finalized = false, c2;
            }
            return (0, o.default)(s3, [{ key: "_transform", value: function(e3, t3, r4) {
              var n3 = null;
              try {
                this.update(e3, t3);
              } catch (e4) {
                n3 = e4;
              }
              r4(n3);
            } }, { key: "_flush", value: function(e3) {
              var t3 = null;
              try {
                this.push(this.digest());
              } catch (e4) {
                t3 = e4;
              }
              e3(t3);
            } }, { key: "update", value: function(e3, r4) {
              if (!t2.isBuffer(e3) && "string" != typeof e3)
                throw new TypeError("Data must be a string or a buffer");
              if (this._finalized)
                throw new Error("Digest already called");
              return t2.isBuffer(e3) || (e3 = t2.from(e3, r4)), this._state.absorb(e3), this;
            } }, { key: "digest", value: function(e3) {
              if (this._finalized)
                throw new Error("Digest already called");
              this._finalized = true, this._delimitedSuffix && this._state.absorbLastFewBits(this._delimitedSuffix);
              var t3 = this._state.squeeze(this._hashBitLength / 8);
              return void 0 !== e3 && (t3 = t3.toString(e3)), this._resetState(), t3;
            } }, { key: "_resetState", value: function() {
              return this._state.initialize(this._rate, this._capacity), this;
            } }, { key: "_clone", value: function() {
              var e3 = new s3(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);
              return this._state.copy(e3._state), e3._finalized = this._finalized, e3;
            } }]), s3;
          }(u);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t) {
    }, function(e, t, r2) {
      function n(e2, t2) {
        var r3 = Object.keys(e2);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(e2);
          t2 && (n2 = n2.filter(function(t3) {
            return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(e2, t2, r3) {
        return t2 in e2 ? Object.defineProperty(e2, t2, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t2] = r3, e2;
      }
      function o(e2, t2) {
        for (var r3 = 0; r3 < t2.length; r3++) {
          var n2 = t2[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
        }
      }
      var a = r2(1).Buffer, s2 = r2(579).inspect, f2 = s2 && s2.custom || "inspect";
      e.exports = function() {
        function e2() {
          !function(e3, t3) {
            if (!(e3 instanceof t3))
              throw new TypeError("Cannot call a class as a function");
          }(this, e2), this.head = null, this.tail = null, this.length = 0;
        }
        var t2, r3;
        return t2 = e2, (r3 = [{ key: "push", value: function(e3) {
          var t3 = { data: e3, next: null };
          this.length > 0 ? this.tail.next = t3 : this.head = t3, this.tail = t3, ++this.length;
        } }, { key: "unshift", value: function(e3) {
          var t3 = { data: e3, next: this.head };
          0 === this.length && (this.tail = t3), this.head = t3, ++this.length;
        } }, { key: "shift", value: function() {
          if (0 !== this.length) {
            var e3 = this.head.data;
            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e3;
          }
        } }, { key: "clear", value: function() {
          this.head = this.tail = null, this.length = 0;
        } }, { key: "join", value: function(e3) {
          if (0 === this.length)
            return "";
          for (var t3 = this.head, r4 = "" + t3.data; t3 = t3.next; )
            r4 += e3 + t3.data;
          return r4;
        } }, { key: "concat", value: function(e3) {
          if (0 === this.length)
            return a.alloc(0);
          for (var t3, r4, n2, i2 = a.allocUnsafe(e3 >>> 0), o2 = this.head, s3 = 0; o2; )
            t3 = o2.data, r4 = i2, n2 = s3, a.prototype.copy.call(t3, r4, n2), s3 += o2.data.length, o2 = o2.next;
          return i2;
        } }, { key: "consume", value: function(e3, t3) {
          var r4;
          return e3 < this.head.data.length ? (r4 = this.head.data.slice(0, e3), this.head.data = this.head.data.slice(e3)) : r4 = e3 === this.head.data.length ? this.shift() : t3 ? this._getString(e3) : this._getBuffer(e3), r4;
        } }, { key: "first", value: function() {
          return this.head.data;
        } }, { key: "_getString", value: function(e3) {
          var t3 = this.head, r4 = 1, n2 = t3.data;
          for (e3 -= n2.length; t3 = t3.next; ) {
            var i2 = t3.data, o2 = e3 > i2.length ? i2.length : e3;
            if (o2 === i2.length ? n2 += i2 : n2 += i2.slice(0, e3), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++r4, t3.next ? this.head = t3.next : this.head = this.tail = null) : (this.head = t3, t3.data = i2.slice(o2));
              break;
            }
            ++r4;
          }
          return this.length -= r4, n2;
        } }, { key: "_getBuffer", value: function(e3) {
          var t3 = a.allocUnsafe(e3), r4 = this.head, n2 = 1;
          for (r4.data.copy(t3), e3 -= r4.data.length; r4 = r4.next; ) {
            var i2 = r4.data, o2 = e3 > i2.length ? i2.length : e3;
            if (i2.copy(t3, t3.length - e3, 0, o2), 0 == (e3 -= o2)) {
              o2 === i2.length ? (++n2, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = i2.slice(o2));
              break;
            }
            ++n2;
          }
          return this.length -= n2, t3;
        } }, { key: f2, value: function(e3, t3) {
          return s2(this, function(e4) {
            for (var t4 = 1; t4 < arguments.length; t4++) {
              var r4 = null != arguments[t4] ? arguments[t4] : {};
              t4 % 2 ? n(Object(r4), true).forEach(function(t5) {
                i(e4, t5, r4[t5]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r4)) : n(Object(r4)).forEach(function(t5) {
                Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(r4, t5));
              });
            }
            return e4;
          }({}, t3, { depth: 0, customInspect: false }));
        } }]) && o(t2.prototype, r3), e2;
      }();
    }, function(e, t) {
    }, function(e, t, r2) {
      (function(t2) {
        function r3(e2) {
          try {
            if (!t2.localStorage)
              return false;
          } catch (e3) {
            return false;
          }
          var r4 = t2.localStorage[e2];
          return null != r4 && "true" === String(r4).toLowerCase();
        }
        e.exports = function(e2, t3) {
          if (r3("noDeprecation"))
            return e2;
          var n = false;
          return function() {
            if (!n) {
              if (r3("throwDeprecation"))
                throw new Error(t3);
              r3("traceDeprecation") ? console.trace(t3) : console.warn(t3), n = true;
            }
            return e2.apply(this, arguments);
          };
        };
      }).call(this, r2(7));
    }, function(e, t, r2) {
      (function(t2) {
        var n;
        function i(e2, t3, r3) {
          return t3 in e2 ? Object.defineProperty(e2, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e2[t3] = r3, e2;
        }
        var o = r2(125), a = Symbol("lastResolve"), s2 = Symbol("lastReject"), f2 = Symbol("error"), c = Symbol("ended"), u = Symbol("lastPromise"), d = Symbol("handlePromise"), h = Symbol("stream");
        function l(e2, t3) {
          return { value: e2, done: t3 };
        }
        function p(e2) {
          var t3 = e2[a];
          if (null !== t3) {
            var r3 = e2[h].read();
            null !== r3 && (e2[u] = null, e2[a] = null, e2[s2] = null, t3(l(r3, false)));
          }
        }
        function b(e2) {
          t2.nextTick(p, e2);
        }
        var y = Object.getPrototypeOf(function() {
        }), v = Object.setPrototypeOf((i(n = { get stream() {
          return this[h];
        }, next: function() {
          var e2 = this, r3 = this[f2];
          if (null !== r3)
            return Promise.reject(r3);
          if (this[c])
            return Promise.resolve(l(void 0, true));
          if (this[h].destroyed)
            return new Promise(function(r4, n3) {
              t2.nextTick(function() {
                e2[f2] ? n3(e2[f2]) : r4(l(void 0, true));
              });
            });
          var n2, i2 = this[u];
          if (i2)
            n2 = new Promise(function(e3, t3) {
              return function(r4, n3) {
                e3.then(function() {
                  t3[c] ? r4(l(void 0, true)) : t3[d](r4, n3);
                }, n3);
              };
            }(i2, this));
          else {
            var o2 = this[h].read();
            if (null !== o2)
              return Promise.resolve(l(o2, false));
            n2 = new Promise(this[d]);
          }
          return this[u] = n2, n2;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), i(n, "return", function() {
          var e2 = this;
          return new Promise(function(t3, r3) {
            e2[h].destroy(null, function(e3) {
              e3 ? r3(e3) : t3(l(void 0, true));
            });
          });
        }), n), y);
        e.exports = function(e2) {
          var t3, r3 = Object.create(v, (i(t3 = {}, h, { value: e2, writable: true }), i(t3, a, { value: null, writable: true }), i(t3, s2, { value: null, writable: true }), i(t3, f2, { value: null, writable: true }), i(t3, c, { value: e2._readableState.endEmitted, writable: true }), i(t3, d, { value: function(e3, t4) {
            var n2 = r3[h].read();
            n2 ? (r3[u] = null, r3[a] = null, r3[s2] = null, e3(l(n2, false))) : (r3[a] = e3, r3[s2] = t4);
          }, writable: true }), t3));
          return r3[u] = null, o(e2, function(e3) {
            if (e3 && "ERR_STREAM_PREMATURE_CLOSE" !== e3.code) {
              var t4 = r3[s2];
              return null !== t4 && (r3[u] = null, r3[a] = null, r3[s2] = null, t4(e3)), void (r3[f2] = e3);
            }
            var n2 = r3[a];
            null !== n2 && (r3[u] = null, r3[a] = null, r3[s2] = null, n2(l(void 0, true))), r3[c] = true;
          }), e2.on("readable", b.bind(null, r3)), r3;
        };
      }).call(this, r2(6));
    }, function(e, t, r2) {
      e.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }, function(e, t, r2) {
      e.exports = i;
      var n = r2(247);
      function i(e2) {
        if (!(this instanceof i))
          return new i(e2);
        n.call(this, e2);
      }
      r2(10)(i, n), i.prototype._transform = function(e2, t2, r3) {
        r3(null, e2);
      };
    }, function(e, t, r2) {
      var n;
      var i = r2(55).codes, o = i.ERR_MISSING_ARGS, a = i.ERR_STREAM_DESTROYED;
      function s2(e2) {
        if (e2)
          throw e2;
      }
      function f2(e2, t2, i2, o2) {
        o2 = function(e3) {
          var t3 = false;
          return function() {
            t3 || (t3 = true, e3.apply(void 0, arguments));
          };
        }(o2);
        var s3 = false;
        e2.on("close", function() {
          s3 = true;
        }), void 0 === n && (n = r2(125)), n(e2, { readable: t2, writable: i2 }, function(e3) {
          if (e3)
            return o2(e3);
          s3 = true, o2();
        });
        var f3 = false;
        return function(t3) {
          if (!s3 && !f3)
            return f3 = true, function(e3) {
              return e3.setHeader && "function" == typeof e3.abort;
            }(e2) ? e2.abort() : "function" == typeof e2.destroy ? e2.destroy() : void o2(t3 || new a("pipe"));
        };
      }
      function c(e2) {
        e2();
      }
      function u(e2, t2) {
        return e2.pipe(t2);
      }
      function d(e2) {
        return e2.length ? "function" != typeof e2[e2.length - 1] ? s2 : e2.pop() : s2;
      }
      e.exports = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r3 = 0; r3 < e2; r3++)
          t2[r3] = arguments[r3];
        var n2, i2 = d(t2);
        if (Array.isArray(t2[0]) && (t2 = t2[0]), t2.length < 2)
          throw new o("streams");
        var a2 = t2.map(function(e3, r4) {
          var o2 = r4 < t2.length - 1;
          return f2(e3, o2, r4 > 0, function(e4) {
            n2 || (n2 = e4), e4 && a2.forEach(c), o2 || (a2.forEach(c), i2(n2));
          });
        });
        return t2.reduce(u);
      };
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(0), i = n(r2(8)), o = n(r2(9)), a = n(r2(14)), s2 = n(r2(15)), f2 = n(r2(13));
        function c(e2) {
          var t3 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (e3) {
              return false;
            }
          }();
          return function() {
            var r3, n2 = (0, f2.default)(e2);
            if (t3) {
              var i2 = (0, f2.default)(this).constructor;
              r3 = Reflect.construct(n2, arguments, i2);
            } else
              r3 = n2.apply(this, arguments);
            return (0, s2.default)(this, r3);
          };
        }
        var u = r2(124).Transform;
        e.exports = function(e2) {
          return function(r3) {
            (0, a.default)(s3, r3);
            var n2 = c(s3);
            function s3(t3, r4, o2, a2) {
              var f3;
              return (0, i.default)(this, s3), (f3 = n2.call(this, a2))._rate = t3, f3._capacity = r4, f3._delimitedSuffix = o2, f3._options = a2, f3._state = new e2(), f3._state.initialize(t3, r4), f3._finalized = false, f3;
            }
            return (0, o.default)(s3, [{ key: "_transform", value: function(e3, t3, r4) {
              var n3 = null;
              try {
                this.update(e3, t3);
              } catch (e4) {
                n3 = e4;
              }
              r4(n3);
            } }, { key: "_flush", value: function() {
            } }, { key: "_read", value: function(e3) {
              this.push(this.squeeze(e3));
            } }, { key: "update", value: function(e3, r4) {
              if (!t2.isBuffer(e3) && "string" != typeof e3)
                throw new TypeError("Data must be a string or a buffer");
              if (this._finalized)
                throw new Error("Squeeze already called");
              return t2.isBuffer(e3) || (e3 = t2.from(e3, r4)), this._state.absorb(e3), this;
            } }, { key: "squeeze", value: function(e3, t3) {
              this._finalized || (this._finalized = true, this._state.absorbLastFewBits(this._delimitedSuffix));
              var r4 = this._state.squeeze(e3);
              return void 0 !== t3 && (r4 = r4.toString(t3)), r4;
            } }, { key: "_resetState", value: function() {
              return this._state.initialize(this._rate, this._capacity), this;
            } }, { key: "_clone", value: function() {
              var e3 = new s3(this._rate, this._capacity, this._delimitedSuffix, this._options);
              return this._state.copy(e3._state), e3._finalized = this._finalized, e3;
            } }]), s3;
          }(u);
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(t2) {
        var n = r2(587);
        function i() {
          this.state = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this.blockSize = null, this.count = 0, this.squeezing = false;
        }
        i.prototype.initialize = function(e2, t3) {
          for (var r3 = 0; r3 < 50; ++r3)
            this.state[r3] = 0;
          this.blockSize = e2 / 8, this.count = 0, this.squeezing = false;
        }, i.prototype.absorb = function(e2) {
          for (var t3 = 0; t3 < e2.length; ++t3)
            this.state[~~(this.count / 4)] ^= e2[t3] << this.count % 4 * 8, this.count += 1, this.count === this.blockSize && (n.p1600(this.state), this.count = 0);
        }, i.prototype.absorbLastFewBits = function(e2) {
          this.state[~~(this.count / 4)] ^= e2 << this.count % 4 * 8, 0 != (128 & e2) && this.count === this.blockSize - 1 && n.p1600(this.state), this.state[~~((this.blockSize - 1) / 4)] ^= 128 << (this.blockSize - 1) % 4 * 8, n.p1600(this.state), this.count = 0, this.squeezing = true;
        }, i.prototype.squeeze = function(e2) {
          this.squeezing || this.absorbLastFewBits(1);
          for (var r3 = t2.alloc(e2), i2 = 0; i2 < e2; ++i2)
            r3[i2] = this.state[~~(this.count / 4)] >>> this.count % 4 * 8 & 255, this.count += 1, this.count === this.blockSize && (n.p1600(this.state), this.count = 0);
          return r3;
        }, i.prototype.copy = function(e2) {
          for (var t3 = 0; t3 < 50; ++t3)
            e2.state[t3] = this.state[t3];
          e2.blockSize = this.blockSize, e2.count = this.count, e2.squeezing = this.squeezing;
        }, e.exports = i;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      var n = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
      t.p1600 = function(e2) {
        for (var t2 = 0; t2 < 24; ++t2) {
          var r3 = e2[0] ^ e2[10] ^ e2[20] ^ e2[30] ^ e2[40], i = e2[1] ^ e2[11] ^ e2[21] ^ e2[31] ^ e2[41], o = e2[2] ^ e2[12] ^ e2[22] ^ e2[32] ^ e2[42], a = e2[3] ^ e2[13] ^ e2[23] ^ e2[33] ^ e2[43], s2 = e2[4] ^ e2[14] ^ e2[24] ^ e2[34] ^ e2[44], f2 = e2[5] ^ e2[15] ^ e2[25] ^ e2[35] ^ e2[45], c = e2[6] ^ e2[16] ^ e2[26] ^ e2[36] ^ e2[46], u = e2[7] ^ e2[17] ^ e2[27] ^ e2[37] ^ e2[47], d = e2[8] ^ e2[18] ^ e2[28] ^ e2[38] ^ e2[48], h = e2[9] ^ e2[19] ^ e2[29] ^ e2[39] ^ e2[49], l = d ^ (o << 1 | a >>> 31), p = h ^ (a << 1 | o >>> 31), b = e2[0] ^ l, y = e2[1] ^ p, v = e2[10] ^ l, m = e2[11] ^ p, g = e2[20] ^ l, w = e2[21] ^ p, _ = e2[30] ^ l, k = e2[31] ^ p, A = e2[40] ^ l, S = e2[41] ^ p;
          l = r3 ^ (s2 << 1 | f2 >>> 31), p = i ^ (f2 << 1 | s2 >>> 31);
          var E = e2[2] ^ l, x = e2[3] ^ p, P = e2[12] ^ l, O = e2[13] ^ p, T = e2[22] ^ l, B = e2[23] ^ p, M = e2[32] ^ l, R = e2[33] ^ p, I = e2[42] ^ l, C = e2[43] ^ p;
          l = o ^ (c << 1 | u >>> 31), p = a ^ (u << 1 | c >>> 31);
          var U = e2[4] ^ l, j = e2[5] ^ p, N = e2[14] ^ l, L = e2[15] ^ p, D = e2[24] ^ l, F = e2[25] ^ p, q = e2[34] ^ l, z = e2[35] ^ p, H = e2[44] ^ l, K2 = e2[45] ^ p;
          l = s2 ^ (d << 1 | h >>> 31), p = f2 ^ (h << 1 | d >>> 31);
          var G = e2[6] ^ l, W = e2[7] ^ p, V = e2[16] ^ l, J = e2[17] ^ p, Y = e2[26] ^ l, X = e2[27] ^ p, Q = e2[36] ^ l, Z = e2[37] ^ p, $ = e2[46] ^ l, ee = e2[47] ^ p;
          l = c ^ (r3 << 1 | i >>> 31), p = u ^ (i << 1 | r3 >>> 31);
          var te = e2[8] ^ l, re = e2[9] ^ p, ne = e2[18] ^ l, ie = e2[19] ^ p, oe = e2[28] ^ l, ae = e2[29] ^ p, se = e2[38] ^ l, fe = e2[39] ^ p, ce = e2[48] ^ l, ue = e2[49] ^ p, de = b, he = y, le = m << 4 | v >>> 28, pe = v << 4 | m >>> 28, be = g << 3 | w >>> 29, ye = w << 3 | g >>> 29, ve = k << 9 | _ >>> 23, me = _ << 9 | k >>> 23, ge = A << 18 | S >>> 14, we = S << 18 | A >>> 14, _e = E << 1 | x >>> 31, ke = x << 1 | E >>> 31, Ae = O << 12 | P >>> 20, Se = P << 12 | O >>> 20, Ee = T << 10 | B >>> 22, xe = B << 10 | T >>> 22, Pe = R << 13 | M >>> 19, Oe = M << 13 | R >>> 19, Te = I << 2 | C >>> 30, Be = C << 2 | I >>> 30, Me = j << 30 | U >>> 2, Re = U << 30 | j >>> 2, Ie = N << 6 | L >>> 26, Ce = L << 6 | N >>> 26, Ue = F << 11 | D >>> 21, je = D << 11 | F >>> 21, Ne = q << 15 | z >>> 17, Le = z << 15 | q >>> 17, De = K2 << 29 | H >>> 3, Fe = H << 29 | K2 >>> 3, qe = G << 28 | W >>> 4, ze = W << 28 | G >>> 4, He = J << 23 | V >>> 9, Ke = V << 23 | J >>> 9, Ge = Y << 25 | X >>> 7, We = X << 25 | Y >>> 7, Ve = Q << 21 | Z >>> 11, Je = Z << 21 | Q >>> 11, Ye = ee << 24 | $ >>> 8, Xe = $ << 24 | ee >>> 8, Qe = te << 27 | re >>> 5, Ze = re << 27 | te >>> 5, $e = ne << 20 | ie >>> 12, et = ie << 20 | ne >>> 12, tt = ae << 7 | oe >>> 25, rt = oe << 7 | ae >>> 25, nt = se << 8 | fe >>> 24, it = fe << 8 | se >>> 24, ot = ce << 14 | ue >>> 18, at = ue << 14 | ce >>> 18;
          e2[0] = de ^ ~Ae & Ue, e2[1] = he ^ ~Se & je, e2[10] = qe ^ ~$e & be, e2[11] = ze ^ ~et & ye, e2[20] = _e ^ ~Ie & Ge, e2[21] = ke ^ ~Ce & We, e2[30] = Qe ^ ~le & Ee, e2[31] = Ze ^ ~pe & xe, e2[40] = Me ^ ~He & tt, e2[41] = Re ^ ~Ke & rt, e2[2] = Ae ^ ~Ue & Ve, e2[3] = Se ^ ~je & Je, e2[12] = $e ^ ~be & Pe, e2[13] = et ^ ~ye & Oe, e2[22] = Ie ^ ~Ge & nt, e2[23] = Ce ^ ~We & it, e2[32] = le ^ ~Ee & Ne, e2[33] = pe ^ ~xe & Le, e2[42] = He ^ ~tt & ve, e2[43] = Ke ^ ~rt & me, e2[4] = Ue ^ ~Ve & ot, e2[5] = je ^ ~Je & at, e2[14] = be ^ ~Pe & De, e2[15] = ye ^ ~Oe & Fe, e2[24] = Ge ^ ~nt & ge, e2[25] = We ^ ~it & we, e2[34] = Ee ^ ~Ne & Ye, e2[35] = xe ^ ~Le & Xe, e2[44] = tt ^ ~ve & Te, e2[45] = rt ^ ~me & Be, e2[6] = Ve ^ ~ot & de, e2[7] = Je ^ ~at & he, e2[16] = Pe ^ ~De & qe, e2[17] = Oe ^ ~Fe & ze, e2[26] = nt ^ ~ge & _e, e2[27] = it ^ ~we & ke, e2[36] = Ne ^ ~Ye & Qe, e2[37] = Le ^ ~Xe & Ze, e2[46] = ve ^ ~Te & Me, e2[47] = me ^ ~Be & Re, e2[8] = ot ^ ~de & Ae, e2[9] = at ^ ~he & Se, e2[18] = De ^ ~qe & $e, e2[19] = Fe ^ ~ze & et, e2[28] = ge ^ ~_e & Ie, e2[29] = we ^ ~ke & Ce, e2[38] = Ye ^ ~Qe & le, e2[39] = Xe ^ ~Ze & pe, e2[48] = Te ^ ~Me & He, e2[49] = Be ^ ~Re & Ke, e2[0] ^= n[2 * t2], e2[1] ^= n[2 * t2 + 1];
        }
      };
    }, function(e, t, r2) {
      var n = r2(10), i = r2(589), o = r2(590), a = r2(591), s2 = r2(596);
      function f2(e2) {
        s2.call(this, "digest"), this._hash = e2;
      }
      n(f2, s2), f2.prototype._update = function(e2) {
        this._hash.update(e2);
      }, f2.prototype._final = function() {
        return this._hash.digest();
      }, e.exports = function(e2) {
        return "md5" === (e2 = e2.toLowerCase()) ? new i() : "rmd160" === e2 || "ripemd160" === e2 ? new o() : new f2(a(e2));
      };
    }, function(e, t, r2) {
      var n = r2(10), i = r2(248), o = r2(24).Buffer, a = new Array(16);
      function s2() {
        i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
      }
      function f2(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }
      function c(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (t2 & r3 | ~t2 & n2) + i2 + o2 | 0, a2) + t2 | 0;
      }
      function u(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (t2 & n2 | r3 & ~n2) + i2 + o2 | 0, a2) + t2 | 0;
      }
      function d(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (t2 ^ r3 ^ n2) + i2 + o2 | 0, a2) + t2 | 0;
      }
      function h(e2, t2, r3, n2, i2, o2, a2) {
        return f2(e2 + (r3 ^ (t2 | ~n2)) + i2 + o2 | 0, a2) + t2 | 0;
      }
      n(s2, i), s2.prototype._update = function() {
        for (var e2 = a, t2 = 0; t2 < 16; ++t2)
          e2[t2] = this._block.readInt32LE(4 * t2);
        var r3 = this._a, n2 = this._b, i2 = this._c, o2 = this._d;
        r3 = c(r3, n2, i2, o2, e2[0], 3614090360, 7), o2 = c(o2, r3, n2, i2, e2[1], 3905402710, 12), i2 = c(i2, o2, r3, n2, e2[2], 606105819, 17), n2 = c(n2, i2, o2, r3, e2[3], 3250441966, 22), r3 = c(r3, n2, i2, o2, e2[4], 4118548399, 7), o2 = c(o2, r3, n2, i2, e2[5], 1200080426, 12), i2 = c(i2, o2, r3, n2, e2[6], 2821735955, 17), n2 = c(n2, i2, o2, r3, e2[7], 4249261313, 22), r3 = c(r3, n2, i2, o2, e2[8], 1770035416, 7), o2 = c(o2, r3, n2, i2, e2[9], 2336552879, 12), i2 = c(i2, o2, r3, n2, e2[10], 4294925233, 17), n2 = c(n2, i2, o2, r3, e2[11], 2304563134, 22), r3 = c(r3, n2, i2, o2, e2[12], 1804603682, 7), o2 = c(o2, r3, n2, i2, e2[13], 4254626195, 12), i2 = c(i2, o2, r3, n2, e2[14], 2792965006, 17), r3 = u(r3, n2 = c(n2, i2, o2, r3, e2[15], 1236535329, 22), i2, o2, e2[1], 4129170786, 5), o2 = u(o2, r3, n2, i2, e2[6], 3225465664, 9), i2 = u(i2, o2, r3, n2, e2[11], 643717713, 14), n2 = u(n2, i2, o2, r3, e2[0], 3921069994, 20), r3 = u(r3, n2, i2, o2, e2[5], 3593408605, 5), o2 = u(o2, r3, n2, i2, e2[10], 38016083, 9), i2 = u(i2, o2, r3, n2, e2[15], 3634488961, 14), n2 = u(n2, i2, o2, r3, e2[4], 3889429448, 20), r3 = u(r3, n2, i2, o2, e2[9], 568446438, 5), o2 = u(o2, r3, n2, i2, e2[14], 3275163606, 9), i2 = u(i2, o2, r3, n2, e2[3], 4107603335, 14), n2 = u(n2, i2, o2, r3, e2[8], 1163531501, 20), r3 = u(r3, n2, i2, o2, e2[13], 2850285829, 5), o2 = u(o2, r3, n2, i2, e2[2], 4243563512, 9), i2 = u(i2, o2, r3, n2, e2[7], 1735328473, 14), r3 = d(r3, n2 = u(n2, i2, o2, r3, e2[12], 2368359562, 20), i2, o2, e2[5], 4294588738, 4), o2 = d(o2, r3, n2, i2, e2[8], 2272392833, 11), i2 = d(i2, o2, r3, n2, e2[11], 1839030562, 16), n2 = d(n2, i2, o2, r3, e2[14], 4259657740, 23), r3 = d(r3, n2, i2, o2, e2[1], 2763975236, 4), o2 = d(o2, r3, n2, i2, e2[4], 1272893353, 11), i2 = d(i2, o2, r3, n2, e2[7], 4139469664, 16), n2 = d(n2, i2, o2, r3, e2[10], 3200236656, 23), r3 = d(r3, n2, i2, o2, e2[13], 681279174, 4), o2 = d(o2, r3, n2, i2, e2[0], 3936430074, 11), i2 = d(i2, o2, r3, n2, e2[3], 3572445317, 16), n2 = d(n2, i2, o2, r3, e2[6], 76029189, 23), r3 = d(r3, n2, i2, o2, e2[9], 3654602809, 4), o2 = d(o2, r3, n2, i2, e2[12], 3873151461, 11), i2 = d(i2, o2, r3, n2, e2[15], 530742520, 16), r3 = h(r3, n2 = d(n2, i2, o2, r3, e2[2], 3299628645, 23), i2, o2, e2[0], 4096336452, 6), o2 = h(o2, r3, n2, i2, e2[7], 1126891415, 10), i2 = h(i2, o2, r3, n2, e2[14], 2878612391, 15), n2 = h(n2, i2, o2, r3, e2[5], 4237533241, 21), r3 = h(r3, n2, i2, o2, e2[12], 1700485571, 6), o2 = h(o2, r3, n2, i2, e2[3], 2399980690, 10), i2 = h(i2, o2, r3, n2, e2[10], 4293915773, 15), n2 = h(n2, i2, o2, r3, e2[1], 2240044497, 21), r3 = h(r3, n2, i2, o2, e2[8], 1873313359, 6), o2 = h(o2, r3, n2, i2, e2[15], 4264355552, 10), i2 = h(i2, o2, r3, n2, e2[6], 2734768916, 15), n2 = h(n2, i2, o2, r3, e2[13], 1309151649, 21), r3 = h(r3, n2, i2, o2, e2[4], 4149444226, 6), o2 = h(o2, r3, n2, i2, e2[11], 3174756917, 10), i2 = h(i2, o2, r3, n2, e2[2], 718787259, 15), n2 = h(n2, i2, o2, r3, e2[9], 3951481745, 21), this._a = this._a + r3 | 0, this._b = this._b + n2 | 0, this._c = this._c + i2 | 0, this._d = this._d + o2 | 0;
      }, s2.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var e2 = o.allocUnsafe(16);
        return e2.writeInt32LE(this._a, 0), e2.writeInt32LE(this._b, 4), e2.writeInt32LE(this._c, 8), e2.writeInt32LE(this._d, 12), e2;
      }, e.exports = s2;
    }, function(e, t, r2) {
      var n = r2(1).Buffer, i = r2(10), o = r2(248), a = new Array(16), s2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], f2 = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], c = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], u = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], d = [0, 1518500249, 1859775393, 2400959708, 2840853838], h = [1352829926, 1548603684, 1836072691, 2053994217, 0];
      function l() {
        o.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
      }
      function p(e2, t2) {
        return e2 << t2 | e2 >>> 32 - t2;
      }
      function b(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 ^ r3 ^ n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function y(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 & r3 | ~t2 & n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function v(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + ((t2 | ~r3) ^ n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function m(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 & n2 | r3 & ~n2) + o2 + a2 | 0, s3) + i2 | 0;
      }
      function g(e2, t2, r3, n2, i2, o2, a2, s3) {
        return p(e2 + (t2 ^ (r3 | ~n2)) + o2 + a2 | 0, s3) + i2 | 0;
      }
      i(l, o), l.prototype._update = function() {
        for (var e2 = a, t2 = 0; t2 < 16; ++t2)
          e2[t2] = this._block.readInt32LE(4 * t2);
        for (var r3 = 0 | this._a, n2 = 0 | this._b, i2 = 0 | this._c, o2 = 0 | this._d, l2 = 0 | this._e, w = 0 | this._a, _ = 0 | this._b, k = 0 | this._c, A = 0 | this._d, S = 0 | this._e, E = 0; E < 80; E += 1) {
          var x, P;
          E < 16 ? (x = b(r3, n2, i2, o2, l2, e2[s2[E]], d[0], c[E]), P = g(w, _, k, A, S, e2[f2[E]], h[0], u[E])) : E < 32 ? (x = y(r3, n2, i2, o2, l2, e2[s2[E]], d[1], c[E]), P = m(w, _, k, A, S, e2[f2[E]], h[1], u[E])) : E < 48 ? (x = v(r3, n2, i2, o2, l2, e2[s2[E]], d[2], c[E]), P = v(w, _, k, A, S, e2[f2[E]], h[2], u[E])) : E < 64 ? (x = m(r3, n2, i2, o2, l2, e2[s2[E]], d[3], c[E]), P = y(w, _, k, A, S, e2[f2[E]], h[3], u[E])) : (x = g(r3, n2, i2, o2, l2, e2[s2[E]], d[4], c[E]), P = b(w, _, k, A, S, e2[f2[E]], h[4], u[E])), r3 = l2, l2 = o2, o2 = p(i2, 10), i2 = n2, n2 = x, w = S, S = A, A = p(k, 10), k = _, _ = P;
        }
        var O = this._b + i2 + A | 0;
        this._b = this._c + o2 + S | 0, this._c = this._d + l2 + w | 0, this._d = this._e + r3 + _ | 0, this._e = this._a + n2 + k | 0, this._a = O;
      }, l.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var e2 = n.alloc ? n.alloc(20) : new n(20);
        return e2.writeInt32LE(this._a, 0), e2.writeInt32LE(this._b, 4), e2.writeInt32LE(this._c, 8), e2.writeInt32LE(this._d, 12), e2.writeInt32LE(this._e, 16), e2;
      }, e.exports = l;
    }, function(e, t, r2) {
      var n = e.exports = function(e2) {
        e2 = e2.toLowerCase();
        var t2 = n[e2];
        if (!t2)
          throw new Error(e2 + " is not supported (we accept pull requests)");
        return new t2();
      };
      n.sha = r2(592), n.sha1 = r2(593), n.sha224 = r2(594), n.sha256 = r2(249), n.sha384 = r2(595), n.sha512 = r2(250);
    }, function(e, t, r2) {
      var n = r2(10), i = r2(57), o = r2(24).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s2 = new Array(80);
      function f2() {
        this.init(), this._w = s2, i.call(this, 64, 56);
      }
      function c(e2) {
        return e2 << 30 | e2 >>> 2;
      }
      function u(e2, t2, r3, n2) {
        return 0 === e2 ? t2 & r3 | ~t2 & n2 : 2 === e2 ? t2 & r3 | t2 & n2 | r3 & n2 : t2 ^ r3 ^ n2;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      }, f2.prototype._update = function(e2) {
        for (var t2, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s3 = 0 | this._d, f3 = 0 | this._e, d = 0; d < 16; ++d)
          r3[d] = e2.readInt32BE(4 * d);
        for (; d < 80; ++d)
          r3[d] = r3[d - 3] ^ r3[d - 8] ^ r3[d - 14] ^ r3[d - 16];
        for (var h = 0; h < 80; ++h) {
          var l = ~~(h / 20), p = 0 | ((t2 = n2) << 5 | t2 >>> 27) + u(l, i2, o2, s3) + f3 + r3[h] + a[l];
          f3 = s3, s3 = o2, o2 = c(i2), i2 = n2, n2 = p;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s3 + this._d | 0, this._e = f3 + this._e | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(20);
        return e2.writeInt32BE(0 | this._a, 0), e2.writeInt32BE(0 | this._b, 4), e2.writeInt32BE(0 | this._c, 8), e2.writeInt32BE(0 | this._d, 12), e2.writeInt32BE(0 | this._e, 16), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(10), i = r2(57), o = r2(24).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s2 = new Array(80);
      function f2() {
        this.init(), this._w = s2, i.call(this, 64, 56);
      }
      function c(e2) {
        return e2 << 5 | e2 >>> 27;
      }
      function u(e2) {
        return e2 << 30 | e2 >>> 2;
      }
      function d(e2, t2, r3, n2) {
        return 0 === e2 ? t2 & r3 | ~t2 & n2 : 2 === e2 ? t2 & r3 | t2 & n2 | r3 & n2 : t2 ^ r3 ^ n2;
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      }, f2.prototype._update = function(e2) {
        for (var t2, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s3 = 0 | this._d, f3 = 0 | this._e, h = 0; h < 16; ++h)
          r3[h] = e2.readInt32BE(4 * h);
        for (; h < 80; ++h)
          r3[h] = (t2 = r3[h - 3] ^ r3[h - 8] ^ r3[h - 14] ^ r3[h - 16]) << 1 | t2 >>> 31;
        for (var l = 0; l < 80; ++l) {
          var p = ~~(l / 20), b = c(n2) + d(p, i2, o2, s3) + f3 + r3[l] + a[p] | 0;
          f3 = s3, s3 = o2, o2 = u(i2), i2 = n2, n2 = b;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s3 + this._d | 0, this._e = f3 + this._e | 0;
      }, f2.prototype._hash = function() {
        var e2 = o.allocUnsafe(20);
        return e2.writeInt32BE(0 | this._a, 0), e2.writeInt32BE(0 | this._b, 4), e2.writeInt32BE(0 | this._c, 8), e2.writeInt32BE(0 | this._d, 12), e2.writeInt32BE(0 | this._e, 16), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(10), i = r2(249), o = r2(57), a = r2(24).Buffer, s2 = new Array(64);
      function f2() {
        this.init(), this._w = s2, o.call(this, 64, 56);
      }
      n(f2, i), f2.prototype.init = function() {
        return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
      }, f2.prototype._hash = function() {
        var e2 = a.allocUnsafe(28);
        return e2.writeInt32BE(this._a, 0), e2.writeInt32BE(this._b, 4), e2.writeInt32BE(this._c, 8), e2.writeInt32BE(this._d, 12), e2.writeInt32BE(this._e, 16), e2.writeInt32BE(this._f, 20), e2.writeInt32BE(this._g, 24), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(10), i = r2(250), o = r2(57), a = r2(24).Buffer, s2 = new Array(160);
      function f2() {
        this.init(), this._w = s2, o.call(this, 128, 112);
      }
      n(f2, i), f2.prototype.init = function() {
        return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
      }, f2.prototype._hash = function() {
        var e2 = a.allocUnsafe(48);
        function t2(t3, r3, n2) {
          e2.writeInt32BE(t3, n2), e2.writeInt32BE(r3, n2 + 4);
        }
        return t2(this._ah, this._al, 0), t2(this._bh, this._bl, 8), t2(this._ch, this._cl, 16), t2(this._dh, this._dl, 24), t2(this._eh, this._el, 32), t2(this._fh, this._fl, 40), e2;
      }, e.exports = f2;
    }, function(e, t, r2) {
      var n = r2(24).Buffer, i = r2(160).Transform, o = r2(21).StringDecoder;
      function a(e2) {
        i.call(this), this.hashMode = "string" == typeof e2, this.hashMode ? this[e2] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
      }
      r2(10)(a, i), a.prototype.update = function(e2, t2, r3) {
        "string" == typeof e2 && (e2 = n.from(e2, t2));
        var i2 = this._update(e2);
        return this.hashMode ? this : (r3 && (i2 = this._toString(i2, r3)), i2);
      }, a.prototype.setAutoPadding = function() {
      }, a.prototype.getAuthTag = function() {
        throw new Error("trying to get auth tag in unsupported state");
      }, a.prototype.setAuthTag = function() {
        throw new Error("trying to set auth tag in unsupported state");
      }, a.prototype.setAAD = function() {
        throw new Error("trying to set aad in unsupported state");
      }, a.prototype._transform = function(e2, t2, r3) {
        var n2;
        try {
          this.hashMode ? this._update(e2) : this.push(this._update(e2));
        } catch (e3) {
          n2 = e3;
        } finally {
          r3(n2);
        }
      }, a.prototype._flush = function(e2) {
        var t2;
        try {
          this.push(this.__final());
        } catch (e3) {
          t2 = e3;
        }
        e2(t2);
      }, a.prototype._finalOrDigest = function(e2) {
        var t2 = this.__final() || n.alloc(0);
        return e2 && (t2 = this._toString(t2, e2, true)), t2;
      }, a.prototype._toString = function(e2, t2, r3) {
        if (this._decoder || (this._decoder = new o(t2), this._encoding = t2), this._encoding !== t2)
          throw new Error("can't switch encodings");
        var n2 = this._decoder.write(e2);
        return r3 && (n2 += this._decoder.end()), n2;
      }, e.exports = a;
    }, function(e, t, r2) {
      (function(e2) {
        var n = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.Address = void 0;
        var i = n(r2(43)), o = r2(29), a = r2(42), s2 = r2(233), f2 = function() {
          function t2(e3) {
            (0, i.default)(20 === e3.length, "Invalid address length"), this.buf = e3;
          }
          return t2.zero = function() {
            return new t2((0, a.zeros)(20));
          }, t2.fromString = function(e3) {
            return (0, i.default)((0, s2.isValidAddress)(e3), "Invalid address"), new t2((0, a.toBuffer)(e3));
          }, t2.fromPublicKey = function(r3) {
            return (0, i.default)(e2.isBuffer(r3), "Public key should be Buffer"), new t2((0, s2.pubToAddress)(r3));
          }, t2.fromPrivateKey = function(r3) {
            return (0, i.default)(e2.isBuffer(r3), "Private key should be Buffer"), new t2((0, s2.privateToAddress)(r3));
          }, t2.generate = function(r3, n2) {
            return (0, i.default)(o.BN.isBN(n2)), new t2((0, s2.generateAddress)(r3.buf, n2.toArrayLike(e2)));
          }, t2.generate2 = function(r3, n2, o2) {
            return (0, i.default)(e2.isBuffer(n2)), (0, i.default)(e2.isBuffer(o2)), new t2((0, s2.generateAddress2)(r3.buf, n2, o2));
          }, t2.prototype.equals = function(e3) {
            return this.buf.equals(e3.buf);
          }, t2.prototype.isZero = function() {
            return this.equals(t2.zero());
          }, t2.prototype.isPrecompileOrSystemAddress = function() {
            var e3 = new o.BN(this.buf), t3 = new o.BN(0), r3 = new o.BN("ffff", "hex");
            return e3.gte(t3) && e3.lte(r3);
          }, t2.prototype.toString = function() {
            return "0x" + this.buf.toString("hex");
          }, t2.prototype.toBuffer = function() {
            return e2.from(this.buf);
          }, t2;
        }();
        t.Address = f2;
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        Object.defineProperty(t, "__esModule", { value: true }), t.hashPersonalMessage = t.isValidSignature = t.fromRpcSig = t.toCompactSig = t.toRpcSig = t.ecrecover = t.ecsign = void 0;
        var n = r2(234), i = r2(29), o = r2(42), a = r2(123), s2 = r2(90), f2 = r2(126);
        function c(e3, t2) {
          var r3 = (0, f2.toType)(e3, f2.TypeOutput.BN);
          if (r3.eqn(0) || r3.eqn(1))
            return (0, f2.toType)(e3, f2.TypeOutput.BN);
          if (!t2)
            return r3.subn(27);
          var n2 = (0, f2.toType)(t2, f2.TypeOutput.BN);
          return r3.sub(n2.muln(2).addn(35));
        }
        function u(e3) {
          var t2 = new i.BN(e3);
          return t2.eqn(0) || t2.eqn(1);
        }
        t.ecsign = function(t2, r3, i2) {
          var o2 = (0, n.ecdsaSign)(t2, r3), a2 = o2.signature, s3 = o2.recid, c2 = e2.from(a2.slice(0, 32)), u2 = e2.from(a2.slice(32, 64));
          if (!i2 || "number" == typeof i2) {
            if (i2 && !Number.isSafeInteger(i2))
              throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
            return { r: c2, s: u2, v: i2 ? s3 + (2 * i2 + 35) : s3 + 27 };
          }
          return { r: c2, s: u2, v: (0, f2.toType)(i2, f2.TypeOutput.BN).muln(2).addn(35).addn(s3).toArrayLike(e2) };
        };
        t.ecrecover = function(t2, r3, i2, a2, s3) {
          var f3 = e2.concat([(0, o.setLengthLeft)(i2, 32), (0, o.setLengthLeft)(a2, 32)], 64), d = c(r3, s3);
          if (!u(d))
            throw new Error("Invalid signature v value");
          var h = (0, n.ecdsaRecover)(f3, d.toNumber(), t2);
          return e2.from((0, n.publicKeyConvert)(h, false).slice(1));
        };
        t.toRpcSig = function(t2, r3, n2, i2) {
          if (!u(c(t2, i2)))
            throw new Error("Invalid signature v value");
          return (0, o.bufferToHex)(e2.concat([(0, o.setLengthLeft)(r3, 32), (0, o.setLengthLeft)(n2, 32), (0, o.toBuffer)(t2)]));
        };
        t.toCompactSig = function(t2, r3, n2, i2) {
          if (!u(c(t2, i2)))
            throw new Error("Invalid signature v value");
          var a2 = (0, f2.toType)(t2, f2.TypeOutput.Number), s3 = n2;
          return (a2 > 28 && a2 % 2 == 1 || 1 === a2 || 28 === a2) && ((s3 = e2.from(n2))[0] |= 128), (0, o.bufferToHex)(e2.concat([(0, o.setLengthLeft)(r3, 32), (0, o.setLengthLeft)(s3, 32)]));
        };
        t.fromRpcSig = function(e3) {
          var t2, r3, n2, i2 = (0, o.toBuffer)(e3);
          if (i2.length >= 65)
            t2 = i2.slice(0, 32), r3 = i2.slice(32, 64), n2 = (0, o.bufferToInt)(i2.slice(64));
          else {
            if (64 !== i2.length)
              throw new Error("Invalid signature length");
            t2 = i2.slice(0, 32), r3 = i2.slice(32, 64), n2 = (0, o.bufferToInt)(i2.slice(32, 33)) >> 7, r3[0] &= 127;
          }
          return n2 < 27 && (n2 += 27), { v: n2, r: t2, s: r3 };
        };
        t.isValidSignature = function(e3, t2, r3, n2, o2) {
          void 0 === n2 && (n2 = true);
          var a2 = new i.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16), s3 = new i.BN("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", 16);
          if (32 !== t2.length || 32 !== r3.length)
            return false;
          if (!u(c(e3, o2)))
            return false;
          var f3 = new i.BN(t2), d = new i.BN(r3);
          return !(f3.isZero() || f3.gt(s3) || d.isZero() || d.gt(s3)) && (!n2 || 1 !== d.cmp(a2));
        };
        t.hashPersonalMessage = function(t2) {
          (0, s2.assertIsBuffer)(t2);
          var r3 = e2.from("Ethereum Signed Message:\n".concat(t2.length), "utf-8");
          return (0, a.keccak)(e2.concat([r3, t2]));
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      (function(e2) {
        var n = r2(0)(r2(2)), i = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t, "__esModule", { value: true }), t.defineProperties = void 0;
        var o = i(r2(43)), a = r2(54), s2 = r2(29), f2 = r2(42);
        t.defineProperties = function(t2, r3, i2) {
          if (t2.raw = [], t2._fields = [], t2.toJSON = function(e3) {
            if (void 0 === e3 && (e3 = false), e3) {
              var r4 = {};
              return t2._fields.forEach(function(e4) {
                r4[e4] = "0x".concat(t2[e4].toString("hex"));
              }), r4;
            }
            return (0, f2.baToJSON)(t2.raw);
          }, t2.serialize = function() {
            return s2.rlp.encode(t2.raw);
          }, r3.forEach(function(r4, n2) {
            function i3() {
              return t2.raw[n2];
            }
            function a2(i4) {
              "00" !== (i4 = (0, f2.toBuffer)(i4)).toString("hex") || r4.allowZero || (i4 = e2.allocUnsafe(0)), r4.allowLess && r4.length ? (i4 = (0, f2.unpadBuffer)(i4), (0, o.default)(r4.length >= i4.length, "The field ".concat(r4.name, " must not have more ").concat(r4.length, " bytes"))) : r4.allowZero && 0 === i4.length || !r4.length || (0, o.default)(r4.length === i4.length, "The field ".concat(r4.name, " must have byte length of ").concat(r4.length)), t2.raw[n2] = i4;
            }
            t2._fields.push(r4.name), Object.defineProperty(t2, r4.name, { enumerable: true, configurable: true, get: i3, set: a2 }), r4.default && (t2[r4.name] = r4.default), r4.alias && Object.defineProperty(t2, r4.alias, { enumerable: false, configurable: true, set: a2, get: i3 });
          }), i2)
            if ("string" == typeof i2 && (i2 = e2.from((0, a.stripHexPrefix)(i2), "hex")), e2.isBuffer(i2) && (i2 = s2.rlp.decode(i2)), Array.isArray(i2)) {
              if (i2.length > t2._fields.length)
                throw new Error("wrong number of fields in data");
              i2.forEach(function(e3, r4) {
                t2[t2._fields[r4]] = (0, f2.toBuffer)(e3);
              });
            } else {
              if ("object" !== (0, n.default)(i2))
                throw new Error("invalid data");
              var c = Object.keys(i2);
              r3.forEach(function(e3) {
                -1 !== c.indexOf(e3.name) && (t2[e3.name] = i2[e3.name]), -1 !== c.indexOf(e3.alias) && (t2[e3.alias] = i2[e3.alias]);
              });
            }
        };
      }).call(this, r2(1).Buffer);
    }, function(e, t, r2) {
      e.exports = function(e2) {
        var t2, r3 = this;
        return this.net.getId().then(function(e3) {
          return t2 = e3, r3.getBlock(0);
        }).then(function(r4) {
          var n = "private";
          return "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3" === r4.hash && 1 === t2 && (n = "main"), "0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d" === r4.hash && 3 === t2 && (n = "ropsten"), "0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177" === r4.hash && 4 === t2 && (n = "rinkeby"), "0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a" === r4.hash && 5 === t2 && (n = "goerli"), "0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9" === r4.hash && 42 === t2 && (n = "kovan"), "function" == typeof e2 && e2(null, n), n;
        }).catch(function(t3) {
          if ("function" != typeof e2)
            throw t3;
          e2(t3);
        });
      };
    }, function(e, t, r2) {
      var n = r2(34), i = r2(79).subscriptions, o = r2(38), a = r2(81), s2 = function() {
        var e2 = this;
        n.packageInit(this, arguments);
        var t2 = this.setRequestManager;
        this.setRequestManager = function(r4) {
          return t2(r4), e2.net.setRequestManager(r4), true;
        };
        var r3 = this.setProvider;
        this.setProvider = function() {
          r3.apply(e2, arguments), e2.setRequestManager(e2._requestManager);
        }, this.net = new a(this), [new i({ name: "subscribe", type: "shh", subscriptions: { messages: { params: 1 } } }), new o({ name: "getVersion", call: "shh_version", params: 0 }), new o({ name: "getInfo", call: "shh_info", params: 0 }), new o({ name: "setMaxMessageSize", call: "shh_setMaxMessageSize", params: 1 }), new o({ name: "setMinPoW", call: "shh_setMinPoW", params: 1 }), new o({ name: "markTrustedPeer", call: "shh_markTrustedPeer", params: 1 }), new o({ name: "newKeyPair", call: "shh_newKeyPair", params: 0 }), new o({ name: "addPrivateKey", call: "shh_addPrivateKey", params: 1 }), new o({ name: "deleteKeyPair", call: "shh_deleteKeyPair", params: 1 }), new o({ name: "hasKeyPair", call: "shh_hasKeyPair", params: 1 }), new o({ name: "getPublicKey", call: "shh_getPublicKey", params: 1 }), new o({ name: "getPrivateKey", call: "shh_getPrivateKey", params: 1 }), new o({ name: "newSymKey", call: "shh_newSymKey", params: 0 }), new o({ name: "addSymKey", call: "shh_addSymKey", params: 1 }), new o({ name: "generateSymKeyFromPassword", call: "shh_generateSymKeyFromPassword", params: 1 }), new o({ name: "hasSymKey", call: "shh_hasSymKey", params: 1 }), new o({ name: "getSymKey", call: "shh_getSymKey", params: 1 }), new o({ name: "deleteSymKey", call: "shh_deleteSymKey", params: 1 }), new o({ name: "newMessageFilter", call: "shh_newMessageFilter", params: 1 }), new o({ name: "getFilterMessages", call: "shh_getFilterMessages", params: 1 }), new o({ name: "deleteMessageFilter", call: "shh_deleteMessageFilter", params: 1 }), new o({ name: "post", call: "shh_post", params: 1, inputFormatter: [null] }), new o({ name: "unsubscribe", call: "shh_unsubscribe", params: 1 })].forEach(function(t3) {
          t3.attachToObject(e2), t3.setRequestManager(e2._requestManager);
        });
      };
      s2.prototype.clearSubscriptions = function() {
        this._requestManager.clearSubscriptions();
      }, n.addProviders(s2), e.exports = s2;
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(603), o = function e2(t2) {
        this.givenProvider = e2.givenProvider, t2 && t2._requestManager && (t2 = t2.currentProvider), "undefined" != typeof document && (this.pick = i.pick), this.setProvider(t2);
      };
      o.givenProvider = null, "undefined" != typeof ethereum && ethereum.bzz && (o.givenProvider = ethereum.bzz), o.prototype.setProvider = function(e2) {
        if (e2 && "object" === (0, n.default)(e2) && "string" == typeof e2.bzz && (e2 = e2.bzz), "string" != typeof e2) {
          this.currentProvider = null;
          var t2 = new Error("No provider set, please set one using bzz.setProvider().");
          return this.download = this.upload = this.isAvailable = function() {
            throw t2;
          }, false;
        }
        return this.currentProvider = e2, this.download = i.at(e2).download, this.upload = i.at(e2).upload, this.isAvailable = i.at(e2).isAvailable, true;
      }, e.exports = o;
    }, function(e, t, r2) {
      var n = function() {
        throw "This swarm.js function isn't available on the browser.";
      }, i = { readFile: n }, o = { download: n, safeDownloadArchived: n, directoryTree: n }, a = { platform: n, arch: n }, s2 = { join: n, slice: n }, f2 = { spawn: n }, c = { lookup: n }, u = r2(604), d = r2(251), h = r2(617), l = r2(619), p = r2(620);
      e.exports = p({ fs: i, files: o, os: a, path: s2, child_process: f2, defaultArchives: {}, mimetype: c, request: u, downloadUrl: null, bytes: d, hash: h, pick: l });
    }, function(e, t, r2) {
      var n = r2(605), i = r2(608), o = r2(92), a = r2(609), s2 = r2(610), f2 = function() {
      };
      e.exports = function(e2, t2, r3) {
        if (!e2 || "string" != typeof e2)
          throw new TypeError("must specify a URL");
        "function" == typeof t2 && (r3 = t2, t2 = {});
        if (r3 && "function" != typeof r3)
          throw new TypeError("expected cb to be undefined or a function");
        r3 = r3 || f2;
        var c = (t2 = t2 || {}).json ? "json" : "text", u = (t2 = o({ responseType: c }, t2)).headers || {}, d = (t2.method || "GET").toUpperCase(), h = t2.query;
        h && ("string" != typeof h && (h = n.stringify(h)), e2 = i(e2, h));
        "json" === t2.responseType && a(u, "Accept", "application/json");
        t2.json && "GET" !== d && "HEAD" !== d && (a(u, "Content-Type", "application/json"), t2.body = JSON.stringify(t2.body));
        return t2.method = d, t2.url = e2, t2.headers = u, delete t2.query, delete t2.json, s2(t2, r3);
      };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = r2(606), o = r2(92), a = r2(607);
      function s2(e2, t2) {
        return t2.encode ? t2.strict ? i(e2) : encodeURIComponent(e2) : e2;
      }
      function f2(e2) {
        var t2 = e2.indexOf("?");
        return -1 === t2 ? "" : e2.slice(t2 + 1);
      }
      function c(e2, t2) {
        var r3 = function(e3) {
          var t3;
          switch (e3.arrayFormat) {
            case "index":
              return function(e4, r4, n2) {
                t3 = /\[(\d*)\]$/.exec(e4), e4 = e4.replace(/\[\d*\]$/, ""), t3 ? (void 0 === n2[e4] && (n2[e4] = {}), n2[e4][t3[1]] = r4) : n2[e4] = r4;
              };
            case "bracket":
              return function(e4, r4, n2) {
                t3 = /(\[\])$/.exec(e4), e4 = e4.replace(/\[\]$/, ""), t3 ? void 0 !== n2[e4] ? n2[e4] = [].concat(n2[e4], r4) : n2[e4] = [r4] : n2[e4] = r4;
              };
            default:
              return function(e4, t4, r4) {
                void 0 !== r4[e4] ? r4[e4] = [].concat(r4[e4], t4) : r4[e4] = t4;
              };
          }
        }(t2 = o({ arrayFormat: "none" }, t2)), i2 = /* @__PURE__ */ Object.create(null);
        return "string" != typeof e2 ? i2 : (e2 = e2.trim().replace(/^[?#&]/, "")) ? (e2.split("&").forEach(function(e3) {
          var t3 = e3.replace(/\+/g, " ").split("="), n2 = t3.shift(), o2 = t3.length > 0 ? t3.join("=") : void 0;
          o2 = void 0 === o2 ? null : a(o2), r3(a(n2), o2, i2);
        }), Object.keys(i2).sort().reduce(function(e3, t3) {
          var r4 = i2[t3];
          return Boolean(r4) && "object" === (0, n.default)(r4) && !Array.isArray(r4) ? e3[t3] = function e4(t4) {
            return Array.isArray(t4) ? t4.sort() : "object" === (0, n.default)(t4) ? e4(Object.keys(t4)).sort(function(e5, t5) {
              return Number(e5) - Number(t5);
            }).map(function(e5) {
              return t4[e5];
            }) : t4;
          }(r4) : e3[t3] = r4, e3;
        }, /* @__PURE__ */ Object.create(null))) : i2;
      }
      t.extract = f2, t.parse = c, t.stringify = function(e2, t2) {
        false === (t2 = o({ encode: true, strict: true, arrayFormat: "none" }, t2)).sort && (t2.sort = function() {
        });
        var r3 = function(e3) {
          switch (e3.arrayFormat) {
            case "index":
              return function(t3, r4, n2) {
                return null === r4 ? [s2(t3, e3), "[", n2, "]"].join("") : [s2(t3, e3), "[", s2(n2, e3), "]=", s2(r4, e3)].join("");
              };
            case "bracket":
              return function(t3, r4) {
                return null === r4 ? s2(t3, e3) : [s2(t3, e3), "[]=", s2(r4, e3)].join("");
              };
            default:
              return function(t3, r4) {
                return null === r4 ? s2(t3, e3) : [s2(t3, e3), "=", s2(r4, e3)].join("");
              };
          }
        }(t2);
        return e2 ? Object.keys(e2).sort(t2.sort).map(function(n2) {
          var i2 = e2[n2];
          if (void 0 === i2)
            return "";
          if (null === i2)
            return s2(n2, t2);
          if (Array.isArray(i2)) {
            var o2 = [];
            return i2.slice().forEach(function(e3) {
              void 0 !== e3 && o2.push(r3(n2, e3, o2.length));
            }), o2.join("&");
          }
          return s2(n2, t2) + "=" + s2(i2, t2);
        }).filter(function(e3) {
          return e3.length > 0;
        }).join("&") : "";
      }, t.parseUrl = function(e2, t2) {
        return { url: e2.split("?")[0] || "", query: c(f2(e2), t2) };
      };
    }, function(e, t, r2) {
      e.exports = function(e2) {
        return encodeURIComponent(e2).replace(/[!'()*]/g, function(e3) {
          return "%" + e3.charCodeAt(0).toString(16).toUpperCase();
        });
      };
    }, function(e, t, r2) {
      var n = r2(0)(r2(2)), i = new RegExp("%[a-f0-9]{2}", "gi"), o = new RegExp("(%[a-f0-9]{2})+", "gi");
      function a(e2, t2) {
        try {
          return decodeURIComponent(e2.join(""));
        } catch (e3) {
        }
        if (1 === e2.length)
          return e2;
        t2 = t2 || 1;
        var r3 = e2.slice(0, t2), n2 = e2.slice(t2);
        return Array.prototype.concat.call([], a(r3), a(n2));
      }
      function s2(e2) {
        try {
          return decodeURIComponent(e2);
        } catch (n2) {
          for (var t2 = e2.match(i), r3 = 1; r3 < t2.length; r3++)
            t2 = (e2 = a(t2, r3).join("")).match(i);
          return e2;
        }
      }
      e.exports = function(e2) {
        if ("string" != typeof e2)
          throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + (0, n.default)(e2) + "`");
        try {
          return e2 = e2.replace(/\+/g, " "), decodeURIComponent(e2);
        } catch (t2) {
          return function(e3) {
            for (var t3 = { "%FE%FF": "\uFFFD\uFFFD", "%FF%FE": "\uFFFD\uFFFD" }, r3 = o.exec(e3); r3; ) {
              try {
                t3[r3[0]] = decodeURIComponent(r3[0]);
              } catch (e4) {
                var n2 = s2(r3[0]);
                n2 !== r3[0] && (t3[r3[0]] = n2);
              }
              r3 = o.exec(e3);
            }
            t3["%C2"] = "\uFFFD";
            for (var i2 = Object.keys(t3), a2 = 0; a2 < i2.length; a2++) {
              var f2 = i2[a2];
              e3 = e3.replace(new RegExp(f2, "g"), t3[f2]);
            }
            return e3;
          }(e2);
        }
      };
    }, function(e, t, r2) {
      e.exports = function(e2, t2) {
        if (t2) {
          t2 = (t2 = t2.trim().replace(/^(\?|#|&)/, "")) ? "?" + t2 : t2;
          var r3 = e2.split(/[\?\#]/)[0];
          t2 && /\:\/\/[^\/]*$/.test(r3) && (r3 += "/");
          var n = e2.match(/(\#.*)$/);
          e2 = r3 + t2, n && (e2 += n[0]);
        }
        return e2;
      };
    }, function(e, t, r2) {
      e.exports = function(e2, t2, r3) {
        var n = t2.toLowerCase();
        e2[t2] || e2[n] || (e2[t2] = r3);
      };
    }, function(e, t, r2) {
      var n = r2(611), i = r2(615), o = function() {
      };
      e.exports = function(e2, t2) {
        delete e2.uri;
        var r3 = false;
        "json" === e2.responseType && (e2.responseType = "text", r3 = true);
        var a = n(e2, function(n2, a2, s3) {
          if (r3 && !n2)
            try {
              var f2 = a2.rawRequest.responseText;
              s3 = JSON.parse(f2);
            } catch (e3) {
              n2 = e3;
            }
          a2 = i(e2, a2), t2(n2, n2 ? null : s3, a2), t2 = o;
        }), s2 = a.onabort;
        return a.onabort = function() {
          var e3 = s2.apply(a, Array.prototype.slice.call(arguments));
          return t2(new Error("XHR Aborted")), t2 = o, e3;
        }, a;
      };
    }, function(e, t, r2) {
      var n = r2(612), i = r2(613), o = r2(614), a = r2(172);
      function s2(e2, t2, r3) {
        var n2 = e2;
        return i(t2) ? (r3 = t2, "string" == typeof e2 && (n2 = { uri: e2 })) : n2 = a(t2, { uri: e2 }), n2.callback = r3, n2;
      }
      function f2(e2, t2, r3) {
        return c(t2 = s2(e2, t2, r3));
      }
      function c(e2) {
        if (void 0 === e2.callback)
          throw new Error("callback argument missing");
        var t2 = false, r3 = function(r4, n3, i3) {
          t2 || (t2 = true, e2.callback(r4, n3, i3));
        };
        function n2() {
          var e3 = void 0;
          if (e3 = u.response ? u.response : u.responseText || function(e4) {
            try {
              if ("document" === e4.responseType)
                return e4.responseXML;
              var t3 = e4.responseXML && "parsererror" === e4.responseXML.documentElement.nodeName;
              if ("" === e4.responseType && !t3)
                return e4.responseXML;
            } catch (e5) {
            }
            return null;
          }(u), v)
            try {
              e3 = JSON.parse(e3);
            } catch (e4) {
            }
          return e3;
        }
        function i2(e3) {
          return clearTimeout(d), e3 instanceof Error || (e3 = new Error("" + (e3 || "Unknown XMLHttpRequest Error"))), e3.statusCode = 0, r3(e3, m);
        }
        function a2() {
          if (!c2) {
            var t3;
            clearTimeout(d), t3 = e2.useXDR && void 0 === u.status ? 200 : 1223 === u.status ? 204 : u.status;
            var i3 = m, a3 = null;
            return 0 !== t3 ? (i3 = { body: n2(), statusCode: t3, method: l, headers: {}, url: h, rawRequest: u }, u.getAllResponseHeaders && (i3.headers = o(u.getAllResponseHeaders()))) : a3 = new Error("Internal XMLHttpRequest Error"), r3(a3, i3, i3.body);
          }
        }
        var s3, c2, u = e2.xhr || null;
        u || (u = e2.cors || e2.useXDR ? new f2.XDomainRequest() : new f2.XMLHttpRequest());
        var d, h = u.url = e2.uri || e2.url, l = u.method = e2.method || "GET", p = e2.body || e2.data, b = u.headers = e2.headers || {}, y = !!e2.sync, v = false, m = { body: void 0, headers: {}, statusCode: 0, method: l, url: h, rawRequest: u };
        if ("json" in e2 && false !== e2.json && (v = true, b.accept || b.Accept || (b.Accept = "application/json"), "GET" !== l && "HEAD" !== l && (b["content-type"] || b["Content-Type"] || (b["Content-Type"] = "application/json"), p = JSON.stringify(true === e2.json ? p : e2.json))), u.onreadystatechange = function() {
          4 === u.readyState && setTimeout(a2, 0);
        }, u.onload = a2, u.onerror = i2, u.onprogress = function() {
        }, u.onabort = function() {
          c2 = true;
        }, u.ontimeout = i2, u.open(l, h, !y, e2.username, e2.password), y || (u.withCredentials = !!e2.withCredentials), !y && e2.timeout > 0 && (d = setTimeout(function() {
          if (!c2) {
            c2 = true, u.abort("timeout");
            var e3 = new Error("XMLHttpRequest timeout");
            e3.code = "ETIMEDOUT", i2(e3);
          }
        }, e2.timeout)), u.setRequestHeader)
          for (s3 in b)
            b.hasOwnProperty(s3) && u.setRequestHeader(s3, b[s3]);
        else if (e2.headers && !function(e3) {
          for (var t3 in e3)
            if (e3.hasOwnProperty(t3))
              return false;
          return true;
        }(e2.headers))
          throw new Error("Headers cannot be set on an XDomainRequest object");
        return "responseType" in e2 && (u.responseType = e2.responseType), "beforeSend" in e2 && "function" == typeof e2.beforeSend && e2.beforeSend(u), u.send(p || null), u;
      }
      e.exports = f2, e.exports.default = f2, f2.XMLHttpRequest = n.XMLHttpRequest || function() {
      }, f2.XDomainRequest = "withCredentials" in new f2.XMLHttpRequest() ? f2.XMLHttpRequest : n.XDomainRequest, function(e2, t2) {
        for (var r3 = 0; r3 < e2.length; r3++)
          t2(e2[r3]);
      }(["get", "put", "post", "patch", "head", "delete"], function(e2) {
        f2["delete" === e2 ? "del" : e2] = function(t2, r3, n2) {
          return (r3 = s2(t2, r3, n2)).method = e2.toUpperCase(), c(r3);
        };
      });
    }, function(e, t, r2) {
      (function(t2) {
        var r3;
        r3 = "undefined" != typeof window ? window : void 0 !== t2 ? t2 : "undefined" != typeof self ? self : {}, e.exports = r3;
      }).call(this, r2(7));
    }, function(e, t, r2) {
      e.exports = function(e2) {
        if (!e2)
          return false;
        var t2 = n.call(e2);
        return "[object Function]" === t2 || "function" == typeof e2 && "[object RegExp]" !== t2 || "undefined" != typeof window && (e2 === window.setTimeout || e2 === window.alert || e2 === window.confirm || e2 === window.prompt);
      };
      var n = Object.prototype.toString;
    }, function(e, t, r2) {
      var n = function(e2) {
        return e2.replace(/^\s+|\s+$/g, "");
      };
      e.exports = function(e2) {
        if (!e2)
          return {};
        for (var t2, r3 = {}, i = n(e2).split("\n"), o = 0; o < i.length; o++) {
          var a = i[o], s2 = a.indexOf(":"), f2 = n(a.slice(0, s2)).toLowerCase(), c = n(a.slice(s2 + 1));
          void 0 === r3[f2] ? r3[f2] = c : (t2 = r3[f2], "[object Array]" === Object.prototype.toString.call(t2) ? r3[f2].push(c) : r3[f2] = [r3[f2], c]);
        }
        return r3;
      };
    }, function(e, t, r2) {
      e.exports = function(e2, t2) {
        return t2 ? { statusCode: t2.statusCode, headers: t2.headers, method: e2.method, url: e2.url, rawRequest: t2.rawRequest ? t2.rawRequest : t2 } : null;
      };
    }, function(e, t, r2) {
      var n = function(e2, t2) {
        for (var r3 = [], n2 = 0; n2 < e2; ++n2)
          r3.push(t2(n2));
        return r3;
      };
      e.exports = { generate: n, replicate: function(e2, t2) {
        return n(e2, function() {
          return t2;
        });
      }, concat: function(e2, t2) {
        return e2.concat(t2);
      }, flatten: function(e2) {
        for (var t2 = [], r3 = 0, n2 = e2.length; r3 < n2; ++r3)
          for (var i = 0, o = e2[r3].length; i < o; ++i)
            t2.push(e2[r3][i]);
        return t2;
      }, chunksOf: function(e2, t2) {
        for (var r3 = [], n2 = 0, i = t2.length; n2 < i; n2 += e2)
          r3.push(t2.slice(n2, n2 + e2));
        return r3;
      } };
    }, function(e, t, r2) {
      var n = r2(618).keccak256, i = r2(251), o = function(e2, t2) {
        var r3 = i.reverse(i.pad(6, i.fromNumber(e2))), o2 = i.flatten([r3, "0x0000", t2]);
        return n(o2).slice(2);
      };
      e.exports = function e2(t2) {
        "string" == typeof t2 && "0x" !== t2.slice(0, 2) ? t2 = i.fromString(t2) : "string" != typeof t2 && void 0 !== t2.length && (t2 = i.fromUint8Array(t2));
        var r3 = i.length(t2);
        if (r3 <= 4096)
          return o(r3, t2);
        for (var n2 = 4096; 128 * n2 < r3; )
          n2 *= 128;
        for (var a = [], s2 = 0; s2 < r3; s2 += n2) {
          var f2 = n2 < r3 - s2 ? n2 : r3 - s2;
          a.push(e2(i.slice(t2, s2, s2 + f2)));
        }
        return o(r3, i.flatten(a));
      };
    }, function(e, t, r2) {
      var n = "0123456789abcdef".split(""), i = [1, 256, 65536, 16777216], o = [0, 8, 16, 24], a = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], s2 = function(e2) {
        var t2, r3, n2, i2, o2, s3, f3, c, u, d, h, l, p, b, y, v, m, g, w, _, k, A, S, E, x, P, O, T, B, M, R, I, C, U, j, N, L, D, F, q, z, H, K2, G, W, V, J, Y, X, Q, Z, $, ee, te, re, ne, ie, oe, ae, se, fe, ce, ue;
        for (n2 = 0; n2 < 48; n2 += 2)
          i2 = e2[0] ^ e2[10] ^ e2[20] ^ e2[30] ^ e2[40], o2 = e2[1] ^ e2[11] ^ e2[21] ^ e2[31] ^ e2[41], s3 = e2[2] ^ e2[12] ^ e2[22] ^ e2[32] ^ e2[42], f3 = e2[3] ^ e2[13] ^ e2[23] ^ e2[33] ^ e2[43], c = e2[4] ^ e2[14] ^ e2[24] ^ e2[34] ^ e2[44], u = e2[5] ^ e2[15] ^ e2[25] ^ e2[35] ^ e2[45], d = e2[6] ^ e2[16] ^ e2[26] ^ e2[36] ^ e2[46], h = e2[7] ^ e2[17] ^ e2[27] ^ e2[37] ^ e2[47], t2 = (l = e2[8] ^ e2[18] ^ e2[28] ^ e2[38] ^ e2[48]) ^ (s3 << 1 | f3 >>> 31), r3 = (p = e2[9] ^ e2[19] ^ e2[29] ^ e2[39] ^ e2[49]) ^ (f3 << 1 | s3 >>> 31), e2[0] ^= t2, e2[1] ^= r3, e2[10] ^= t2, e2[11] ^= r3, e2[20] ^= t2, e2[21] ^= r3, e2[30] ^= t2, e2[31] ^= r3, e2[40] ^= t2, e2[41] ^= r3, t2 = i2 ^ (c << 1 | u >>> 31), r3 = o2 ^ (u << 1 | c >>> 31), e2[2] ^= t2, e2[3] ^= r3, e2[12] ^= t2, e2[13] ^= r3, e2[22] ^= t2, e2[23] ^= r3, e2[32] ^= t2, e2[33] ^= r3, e2[42] ^= t2, e2[43] ^= r3, t2 = s3 ^ (d << 1 | h >>> 31), r3 = f3 ^ (h << 1 | d >>> 31), e2[4] ^= t2, e2[5] ^= r3, e2[14] ^= t2, e2[15] ^= r3, e2[24] ^= t2, e2[25] ^= r3, e2[34] ^= t2, e2[35] ^= r3, e2[44] ^= t2, e2[45] ^= r3, t2 = c ^ (l << 1 | p >>> 31), r3 = u ^ (p << 1 | l >>> 31), e2[6] ^= t2, e2[7] ^= r3, e2[16] ^= t2, e2[17] ^= r3, e2[26] ^= t2, e2[27] ^= r3, e2[36] ^= t2, e2[37] ^= r3, e2[46] ^= t2, e2[47] ^= r3, t2 = d ^ (i2 << 1 | o2 >>> 31), r3 = h ^ (o2 << 1 | i2 >>> 31), e2[8] ^= t2, e2[9] ^= r3, e2[18] ^= t2, e2[19] ^= r3, e2[28] ^= t2, e2[29] ^= r3, e2[38] ^= t2, e2[39] ^= r3, e2[48] ^= t2, e2[49] ^= r3, b = e2[0], y = e2[1], V = e2[11] << 4 | e2[10] >>> 28, J = e2[10] << 4 | e2[11] >>> 28, T = e2[20] << 3 | e2[21] >>> 29, B = e2[21] << 3 | e2[20] >>> 29, se = e2[31] << 9 | e2[30] >>> 23, fe = e2[30] << 9 | e2[31] >>> 23, H = e2[40] << 18 | e2[41] >>> 14, K2 = e2[41] << 18 | e2[40] >>> 14, U = e2[2] << 1 | e2[3] >>> 31, j = e2[3] << 1 | e2[2] >>> 31, v = e2[13] << 12 | e2[12] >>> 20, m = e2[12] << 12 | e2[13] >>> 20, Y = e2[22] << 10 | e2[23] >>> 22, X = e2[23] << 10 | e2[22] >>> 22, M = e2[33] << 13 | e2[32] >>> 19, R = e2[32] << 13 | e2[33] >>> 19, ce = e2[42] << 2 | e2[43] >>> 30, ue = e2[43] << 2 | e2[42] >>> 30, te = e2[5] << 30 | e2[4] >>> 2, re = e2[4] << 30 | e2[5] >>> 2, N = e2[14] << 6 | e2[15] >>> 26, L = e2[15] << 6 | e2[14] >>> 26, g = e2[25] << 11 | e2[24] >>> 21, w = e2[24] << 11 | e2[25] >>> 21, Q = e2[34] << 15 | e2[35] >>> 17, Z = e2[35] << 15 | e2[34] >>> 17, I = e2[45] << 29 | e2[44] >>> 3, C = e2[44] << 29 | e2[45] >>> 3, E = e2[6] << 28 | e2[7] >>> 4, x = e2[7] << 28 | e2[6] >>> 4, ne = e2[17] << 23 | e2[16] >>> 9, ie = e2[16] << 23 | e2[17] >>> 9, D = e2[26] << 25 | e2[27] >>> 7, F = e2[27] << 25 | e2[26] >>> 7, _ = e2[36] << 21 | e2[37] >>> 11, k = e2[37] << 21 | e2[36] >>> 11, $ = e2[47] << 24 | e2[46] >>> 8, ee = e2[46] << 24 | e2[47] >>> 8, G = e2[8] << 27 | e2[9] >>> 5, W = e2[9] << 27 | e2[8] >>> 5, P = e2[18] << 20 | e2[19] >>> 12, O = e2[19] << 20 | e2[18] >>> 12, oe = e2[29] << 7 | e2[28] >>> 25, ae = e2[28] << 7 | e2[29] >>> 25, q = e2[38] << 8 | e2[39] >>> 24, z = e2[39] << 8 | e2[38] >>> 24, A = e2[48] << 14 | e2[49] >>> 18, S = e2[49] << 14 | e2[48] >>> 18, e2[0] = b ^ ~v & g, e2[1] = y ^ ~m & w, e2[10] = E ^ ~P & T, e2[11] = x ^ ~O & B, e2[20] = U ^ ~N & D, e2[21] = j ^ ~L & F, e2[30] = G ^ ~V & Y, e2[31] = W ^ ~J & X, e2[40] = te ^ ~ne & oe, e2[41] = re ^ ~ie & ae, e2[2] = v ^ ~g & _, e2[3] = m ^ ~w & k, e2[12] = P ^ ~T & M, e2[13] = O ^ ~B & R, e2[22] = N ^ ~D & q, e2[23] = L ^ ~F & z, e2[32] = V ^ ~Y & Q, e2[33] = J ^ ~X & Z, e2[42] = ne ^ ~oe & se, e2[43] = ie ^ ~ae & fe, e2[4] = g ^ ~_ & A, e2[5] = w ^ ~k & S, e2[14] = T ^ ~M & I, e2[15] = B ^ ~R & C, e2[24] = D ^ ~q & H, e2[25] = F ^ ~z & K2, e2[34] = Y ^ ~Q & $, e2[35] = X ^ ~Z & ee, e2[44] = oe ^ ~se & ce, e2[45] = ae ^ ~fe & ue, e2[6] = _ ^ ~A & b, e2[7] = k ^ ~S & y, e2[16] = M ^ ~I & E, e2[17] = R ^ ~C & x, e2[26] = q ^ ~H & U, e2[27] = z ^ ~K2 & j, e2[36] = Q ^ ~$ & G, e2[37] = Z ^ ~ee & W, e2[46] = se ^ ~ce & te, e2[47] = fe ^ ~ue & re, e2[8] = A ^ ~b & v, e2[9] = S ^ ~y & m, e2[18] = I ^ ~E & P, e2[19] = C ^ ~x & O, e2[28] = H ^ ~U & N, e2[29] = K2 ^ ~j & L, e2[38] = $ ^ ~G & V, e2[39] = ee ^ ~W & J, e2[48] = ce ^ ~te & ne, e2[49] = ue ^ ~re & ie, e2[0] ^= a[n2], e2[1] ^= a[n2 + 1];
      }, f2 = function(e2) {
        return function(t2) {
          var r3;
          if ("0x" === t2.slice(0, 2)) {
            r3 = [];
            for (var a2 = 2, f3 = t2.length; a2 < f3; a2 += 2)
              r3.push(parseInt(t2.slice(a2, a2 + 2), 16));
          } else
            r3 = t2;
          return function(e3, t3) {
            for (var r4, a3 = t3.length, f4 = e3.blocks, c = e3.blockCount << 2, u = e3.blockCount, d = e3.outputBlocks, h = e3.s, l = 0; l < a3; ) {
              if (e3.reset)
                for (e3.reset = false, f4[0] = e3.block, y = 1; y < u + 1; ++y)
                  f4[y] = 0;
              if ("string" != typeof t3)
                for (y = e3.start; l < a3 && y < c; ++l)
                  f4[y >> 2] |= t3[l] << o[3 & y++];
              else
                for (y = e3.start; l < a3 && y < c; ++l)
                  (r4 = t3.charCodeAt(l)) < 128 ? f4[y >> 2] |= r4 << o[3 & y++] : r4 < 2048 ? (f4[y >> 2] |= (192 | r4 >> 6) << o[3 & y++], f4[y >> 2] |= (128 | 63 & r4) << o[3 & y++]) : r4 < 55296 || r4 >= 57344 ? (f4[y >> 2] |= (224 | r4 >> 12) << o[3 & y++], f4[y >> 2] |= (128 | r4 >> 6 & 63) << o[3 & y++], f4[y >> 2] |= (128 | 63 & r4) << o[3 & y++]) : (r4 = 65536 + ((1023 & r4) << 10 | 1023 & t3.charCodeAt(++l)), f4[y >> 2] |= (240 | r4 >> 18) << o[3 & y++], f4[y >> 2] |= (128 | r4 >> 12 & 63) << o[3 & y++], f4[y >> 2] |= (128 | r4 >> 6 & 63) << o[3 & y++], f4[y >> 2] |= (128 | 63 & r4) << o[3 & y++]);
              if (e3.lastByteIndex = y, y >= c) {
                for (e3.start = y - c, e3.block = f4[u], y = 0; y < u; ++y)
                  h[y] ^= f4[y];
                s2(h), e3.reset = true;
              } else
                e3.start = y;
            }
            if (f4[(y = e3.lastByteIndex) >> 2] |= i[3 & y], e3.lastByteIndex === c)
              for (f4[0] = f4[u], y = 1; y < u + 1; ++y)
                f4[y] = 0;
            for (f4[u - 1] |= 2147483648, y = 0; y < u; ++y)
              h[y] ^= f4[y];
            s2(h);
            for (var p, b = "", y = 0, v = 0; v < d; ) {
              for (y = 0; y < u && v < d; ++y, ++v)
                p = h[y], b += n[p >> 4 & 15] + n[15 & p] + n[p >> 12 & 15] + n[p >> 8 & 15] + n[p >> 20 & 15] + n[p >> 16 & 15] + n[p >> 28 & 15] + n[p >> 24 & 15];
              v % u == 0 && (s2(h), y = 0);
            }
            return "0x" + b;
          }(function(e3) {
            return { blocks: [], reset: true, block: 0, start: 0, blockCount: 1600 - (e3 << 1) >> 5, outputBlocks: e3 >> 5, s: (t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [].concat(t3, t3, t3, t3, t3)) };
            var t3;
          }(e2), r3);
        };
      };
      e.exports = { keccak256: f2(256), keccak512: f2(512), keccak256s: f2(256), keccak512s: f2(512) };
    }, function(e, t, r2) {
      var n = function(e2) {
        return function() {
          return new Promise(function(t2, r3) {
            var n2, i = function(r4) {
              var n3 = {}, i2 = r4.target.files.length, o2 = 0;
              [].map.call(r4.target.files, function(r5) {
                var a = new FileReader();
                a.onload = function(a2) {
                  var s2 = new Uint8Array(a2.target.result);
                  if ("directory" === e2) {
                    var f2 = r5.webkitRelativePath;
                    n3[f2.slice(f2.indexOf("/") + 1)] = { type: "text/plain", data: s2 }, ++o2 === i2 && t2(n3);
                  } else if ("file" === e2) {
                    var c = r5.webkitRelativePath;
                    t2({ type: mimetype.lookup(c), data: s2 });
                  } else
                    t2(s2);
                }, a.readAsArrayBuffer(r5);
              });
            };
            "directory" === e2 ? ((n2 = document.createElement("input")).addEventListener("change", i), n2.type = "file", n2.webkitdirectory = true, n2.mozdirectory = true, n2.msdirectory = true, n2.odirectory = true, n2.directory = true) : ((n2 = document.createElement("input")).addEventListener("change", i), n2.type = "file");
            var o = document.createEvent("MouseEvents");
            o.initEvent("click", true, false), n2.dispatchEvent(o);
          });
        };
      };
      e.exports = { data: n("data"), file: n("file"), directory: n("directory") };
    }, function(e, t, r2) {
      e.exports = function(e2) {
        var t2 = e2.fs, r3 = e2.files, n = e2.os, i = e2.path, o = e2.child_process, a = e2.mimetype, s2 = e2.defaultArchives, f2 = e2.request, c = e2.downloadUrl, u = e2.bytes, d = e2.hash, h = e2.pick, l = function(e3) {
          return function(t3) {
            for (var r4 = {}, n2 = 0, i2 = e3.length; n2 < i2; ++n2)
              r4[e3[n2]] = t3[n2];
            return r4;
          };
        }, p = function(e3) {
          return function(t3) {
            return "".concat(e3, "/bzz-raw:/").concat(t3);
          };
        }, b = function(e3) {
          return function(t3) {
            return new Promise(function(r4, n2) {
              f2(p(e3)(t3), { responseType: "arraybuffer" }, function(e4, t4, i2) {
                return e4 ? n2(e4) : i2.statusCode >= 400 ? n2(new Error("Error ".concat(i2.statusCode, "."))) : r4(new Uint8Array(t4));
              });
            });
          };
        }, y = function(e3) {
          return function(t3) {
            return function t4(r4) {
              return function(n2) {
                return function(i2) {
                  var o2 = function(e4) {
                    return void 0 === e4.path ? Promise.resolve() : "application/bzz-manifest+json" === e4.contentType ? t4(e4.hash)(n2 + e4.path)(i2) : Promise.resolve((r5 = n2 + e4.path, function(e5) {
                      return function(t5) {
                        return t5[r5] = e5, t5;
                      };
                    })(function(e5) {
                      return { type: e5.contentType, hash: e5.hash };
                    }(e4))(i2));
                    var r5;
                  };
                  return b(e3)(r4).then(function(e4) {
                    return JSON.parse(j(e4)).entries;
                  }).then(function(e4) {
                    return Promise.all(e4.map(o2));
                  }).then(function() {
                    return i2;
                  });
                };
              };
            }(t3)("")({});
          };
        }, v = function(e3) {
          return function(t3) {
            return y(e3)(t3).then(function(e4) {
              return l(Object.keys(e4))(Object.keys(e4).map(function(t4) {
                return e4[t4].hash;
              }));
            });
          };
        }, m = function(e3) {
          return function(t3) {
            return y(e3)(t3).then(function(t4) {
              var r4 = Object.keys(t4), n2 = r4.map(function(e4) {
                return t4[e4].hash;
              }), i2 = r4.map(function(e4) {
                return t4[e4].type;
              }), o2 = n2.map(b(e3));
              return Promise.all(o2).then(function(e4) {
                return l(r4)(function(e5) {
                  return e5.map(function(e6, t5) {
                    return { type: i2[t5], data: e6 };
                  });
                }(e4));
              });
            });
          };
        }, g = function(e3) {
          return function(t3) {
            return function(n2) {
              return r3.download(p(e3)(t3))(n2);
            };
          };
        }, w = function(e3) {
          return function(t3) {
            return function(r4) {
              return v(e3)(t3).then(function(t4) {
                var n2 = [];
                for (var o2 in t4)
                  if (o2.length > 0) {
                    var a2 = i.join(r4, o2);
                    n2.push(g(e3)(t4[o2])(a2));
                  }
                return Promise.all(n2).then(function() {
                  return r4;
                });
              });
            };
          };
        }, _ = function(e3) {
          return function(t3) {
            return new Promise(function(r4, n2) {
              var i2 = { body: "string" == typeof t3 ? N(t3) : t3, method: "POST" };
              f2("".concat(e3, "/bzz-raw:/"), i2, function(e4, t4) {
                return e4 ? n2(e4) : r4(t4);
              });
            });
          };
        }, k = function(e3) {
          return function(t3) {
            return function(r4) {
              return function(n2) {
                return function i2(o2) {
                  var a2 = "/" === r4[0] ? r4 : "/" + r4, s3 = "".concat(e3, "/bzz:/").concat(t3).concat(a2), c2 = { method: "PUT", headers: { "Content-Type": n2.type }, body: n2.data };
                  return new Promise(function(e4, t4) {
                    f2(s3, c2, function(r5, n3) {
                      return r5 ? t4(r5) : -1 !== n3.indexOf("error") ? t4(n3) : e4(n3);
                    });
                  }).catch(function(e4) {
                    return o2 > 0 && i2(o2 - 1);
                  });
                }(3);
              };
            };
          };
        }, A = function(e3) {
          return function(t3) {
            return E(e3)({ "": t3 });
          };
        }, S = function(e3) {
          return function(r4) {
            return t2.readFile(r4).then(function(t3) {
              return A(e3)({ type: a.lookup(r4), data: t3 });
            });
          };
        }, E = function(e3) {
          return function(t3) {
            return _(e3)("{}").then(function(r4) {
              return Object.keys(t3).reduce(function(r5, n2) {
                return r5.then(function(r6) {
                  return function(n3) {
                    return k(e3)(n3)(r6)(t3[r6]);
                  };
                }(n2));
              }, Promise.resolve(r4));
            });
          };
        }, x = function(e3) {
          return function(r4) {
            return t2.readFile(r4).then(_(e3));
          };
        }, P = function(e3) {
          return function(n2) {
            return function(i2) {
              return r3.directoryTree(i2).then(function(e4) {
                return Promise.all(e4.map(function(e5) {
                  return t2.readFile(e5);
                })).then(function(t3) {
                  var r4 = e4.map(function(e5) {
                    return e5.slice(i2.length);
                  }), n3 = e4.map(function(e5) {
                    return a.lookup(e5) || "text/plain";
                  });
                  return l(r4)(t3.map(function(e5, t4) {
                    return { type: n3[t4], data: e5 };
                  }));
                });
              }).then(function(e4) {
                return (t3 = n2 ? { "": e4[n2] } : {}, function(e5) {
                  var r4 = {};
                  for (var n3 in t3)
                    r4[n3] = t3[n3];
                  for (var i3 in e5)
                    r4[i3] = e5[i3];
                  return r4;
                })(e4);
                var t3;
              }).then(E(e3));
            };
          };
        }, O = function(e3) {
          return function(t3) {
            if ("data" === t3.pick)
              return h.data().then(_(e3));
            if ("file" === t3.pick)
              return h.file().then(A(e3));
            if ("directory" === t3.pick)
              return h.directory().then(E(e3));
            if (t3.path)
              switch (t3.kind) {
                case "data":
                  return x(e3)(t3.path);
                case "file":
                  return S(e3)(t3.path);
                case "directory":
                  return P(e3)(t3.defaultFile)(t3.path);
              }
            else {
              if (t3.length || "string" == typeof t3)
                return _(e3)(t3);
              if (t3 instanceof Object)
                return E(e3)(t3);
            }
            return Promise.reject(new Error("Bad arguments"));
          };
        }, T = function(e3) {
          return function(t3) {
            return function(r4) {
              return C(e3)(t3).then(function(n2) {
                return n2 ? r4 ? w(e3)(t3)(r4) : m(e3)(t3) : r4 ? g(e3)(t3)(r4) : b(e3)(t3);
              });
            };
          };
        }, B = function(e3, t3) {
          var i2 = n.platform().replace("win32", "windows") + "-" + ("x64" === n.arch() ? "amd64" : "386"), o2 = (t3 || s2)[i2], a2 = c + o2.archive + ".tar.gz", f3 = o2.archiveMD5, u2 = o2.binaryMD5;
          return r3.safeDownloadArchived(a2)(f3)(u2)(e3);
        }, M = function(e3) {
          return new Promise(function(t3, r4) {
            var n2 = o.spawn, i2 = function(e4) {
              return function(t4) {
                return -1 !== ("" + t4).indexOf(e4);
              };
            }, a2 = e3.account, s3 = e3.password, f3 = e3.dataDir, c2 = e3.ensApi, u2 = e3.privateKey, d2 = 0, h2 = n2(e3.binPath, ["--bzzaccount", a2 || u2, "--datadir", f3, "--ens-api", c2]), l2 = function(e4) {
              0 === d2 && i2("Passphrase")(e4) ? setTimeout(function() {
                d2 = 1, h2.stdin.write(s3 + "\n");
              }, 500) : i2("Swarm http proxy started")(e4) && (d2 = 2, clearTimeout(p2), t3(h2));
            };
            h2.stdout.on("data", l2), h2.stderr.on("data", l2);
            var p2 = setTimeout(function() {
              return r4(new Error("Couldn't start swarm process."));
            }, 2e4);
          });
        }, R = function(e3) {
          return new Promise(function(t3, r4) {
            e3.stderr.removeAllListeners("data"), e3.stdout.removeAllListeners("data"), e3.stdin.removeAllListeners("error"), e3.removeAllListeners("error"), e3.removeAllListeners("exit"), e3.kill("SIGINT");
            var n2 = setTimeout(function() {
              return e3.kill("SIGKILL");
            }, 8e3);
            e3.once("close", function() {
              clearTimeout(n2), t3();
            });
          });
        }, I = function(e3) {
          return _(e3)("test").then(function(e4) {
            return "c9a99c7d326dcc6316f32fe2625b311f6dc49a175e6877681ded93137d3569e7" === e4;
          }).catch(function() {
            return false;
          });
        }, C = function(e3) {
          return function(t3) {
            return b(e3)(t3).then(function(e4) {
              try {
                return !!JSON.parse(j(e4)).entries;
              } catch (e5) {
                return false;
              }
            });
          };
        }, U = function(e3) {
          return function(t3, r4, n2, i2, o2) {
            var a2;
            return void 0 !== t3 && (a2 = e3(t3)), void 0 !== r4 && (a2 = e3(r4)), void 0 !== n2 && (a2 = e3(n2)), void 0 !== i2 && (a2 = e3(i2)), void 0 !== o2 && (a2 = e3(o2)), a2;
          };
        }, j = function(e3) {
          return u.toString(u.fromUint8Array(e3));
        }, N = function(e3) {
          return u.toUint8Array(u.fromString(e3));
        }, L = function(e3) {
          return { download: function(t3, r4) {
            return T(e3)(t3)(r4);
          }, downloadData: U(b(e3)), downloadDataToDisk: U(g(e3)), downloadDirectory: U(m(e3)), downloadDirectoryToDisk: U(w(e3)), downloadEntries: U(y(e3)), downloadRoutes: U(v(e3)), isAvailable: function() {
            return I(e3);
          }, upload: function(t3) {
            return O(e3)(t3);
          }, uploadData: U(_(e3)), uploadFile: U(A(e3)), uploadFileFromDisk: U(A(e3)), uploadDataFromDisk: U(x(e3)), uploadDirectory: U(E(e3)), uploadDirectoryFromDisk: U(P(e3)), uploadToManifest: U(k(e3)), pick: h, hash: d, fromString: N, toString: j };
        };
        return { at: L, local: function(e3) {
          return function(t3) {
            return I("http://localhost:8500").then(function(r4) {
              return r4 ? t3(L("http://localhost:8500")).then(function() {
              }) : B(e3.binPath, e3.archives).onData(function(t4) {
                return (e3.onProgress || function() {
                })(t4.length);
              }).then(function() {
                return M(e3);
              }).then(function(e4) {
                return t3(L("http://localhost:8500")).then(function() {
                  return e4;
                });
              }).then(R);
            });
          };
        }, download: T, downloadBinary: B, downloadData: b, downloadDataToDisk: g, downloadDirectory: m, downloadDirectoryToDisk: w, downloadEntries: y, downloadRoutes: v, isAvailable: I, startProcess: M, stopProcess: R, upload: O, uploadData: _, uploadDataFromDisk: x, uploadFile: A, uploadFileFromDisk: S, uploadDirectory: E, uploadDirectoryFromDisk: P, uploadToManifest: k, pick: h, hash: d, fromString: N, toString: j };
      };
    }]);
  });
})(web3_min);
var Web3 = /* @__PURE__ */ getDefaultExportFromCjs(web3_min.exports);
var vaultAbi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256"
              },
              {
                internalType: "uint256[]",
                name: "cumulativeDebits",
                type: "uint256[]"
              }
            ],
            internalType: "struct VaultV1.ClaimTransaction",
            name: "claimTransaction",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "requester",
            type: "address"
          }
        ],
        indexed: false,
        internalType: "struct VaultV1.EmergencyWithdrawRequest",
        name: "emergencyWithdrawRequest",
        type: "tuple"
      }
    ],
    name: "InitEmergencyWithdraw",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256"
              },
              {
                internalType: "uint256[]",
                name: "cumulativeDebits",
                type: "uint256[]"
              }
            ],
            internalType: "struct VaultV1.ClaimTransaction",
            name: "claimTransaction",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "requester",
            type: "address"
          }
        ],
        indexed: false,
        internalType: "struct VaultV1.EmergencyWithdrawRequest",
        name: "emergencyWithdrawRequest",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "string",
        name: "cause",
        type: "string"
      }
    ],
    name: "StopEmergencyWithdraw",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "uint256[]",
            name: "cumulativeDebits",
            type: "uint256[]"
          }
        ],
        indexed: false,
        internalType: "struct VaultV1.ClaimTransaction",
        name: "claimTransaction",
        type: "tuple"
      }
    ],
    name: "WithdrawAlice",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "WithdrawBob",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "clientAddress",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "emergencyWithdrawAlice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "emergencyWithdrawRequests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "uint256[]",
            name: "cumulativeDebits",
            type: "uint256[]"
          }
        ],
        internalType: "struct VaultV1.ClaimTransaction",
        name: "claimTransaction",
        type: "tuple"
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "requester",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "addresses",
            type: "address[]"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "messageForAlice",
            type: "string"
          },
          {
            internalType: "uint256[]",
            name: "cumulativeDebits",
            type: "uint256[]"
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]"
          },
          {
            internalType: "uint256",
            name: "closed",
            type: "uint256"
          }
        ],
        internalType: "struct VaultV1.ClaimRequest",
        name: "req",
        type: "tuple"
      }
    ],
    name: "initEmergencyWithdrawAlice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "initEmergencyWithdrawAliceWithoutClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "alice",
        type: "address"
      }
    ],
    name: "initEmergencyWithdrawBob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address"
      },
      {
        internalType: "address",
        name: "serverAddress",
        type: "address"
      },
      {
        internalType: "string",
        name: "name",
        type: "string"
      },
      {
        internalType: "string",
        name: "version",
        type: "string"
      }
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "addresses",
            type: "address[]"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "messageForAlice",
            type: "string"
          },
          {
            internalType: "uint256[]",
            name: "cumulativeDebits",
            type: "uint256[]"
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]"
          },
          {
            internalType: "uint256",
            name: "closed",
            type: "uint256"
          }
        ],
        internalType: "struct VaultV1.ClaimRequest",
        name: "req",
        type: "tuple"
      }
    ],
    name: "stopEmergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "addresses",
            type: "address[]"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "messageForAlice",
            type: "string"
          },
          {
            internalType: "uint256[]",
            name: "cumulativeDebits",
            type: "uint256[]"
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]"
          },
          {
            internalType: "uint256",
            name: "closed",
            type: "uint256"
          }
        ],
        internalType: "struct VaultV1.ClaimRequest",
        name: "req",
        type: "tuple"
      }
    ],
    name: "verify",
    outputs: [],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "addresses",
            type: "address[]"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "messageForAlice",
            type: "string"
          },
          {
            internalType: "uint256[]",
            name: "cumulativeDebits",
            type: "uint256[]"
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]"
          },
          {
            internalType: "uint256",
            name: "closed",
            type: "uint256"
          }
        ],
        internalType: "struct VaultV1.ClaimRequest",
        name: "req",
        type: "tuple"
      }
    ],
    name: "withdrawAlice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "withdrawBob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "withdrawTransactions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var degaAbi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
const initContract = (web3Provider, contractAddress, contractAbi) => {
  const web3 = new Web3(web3Provider);
  const contract = new web3.eth.Contract(contractAbi, contractAddress);
  return contract;
};
const callMethod = async (contract, method, params) => {
  return await contract.methods[method](...params).call();
};
const sendTx = async (address, contract, method, params, event, web3Provider) => {
  const web3 = new Web3(web3Provider);
  const gas = await contract.methods[method](...params).estimateGas({ from: address });
  const gasPrice = await web3.eth.getGasPrice();
  const options2 = { gasPrice, from: address, gas };
  await contract.methods[method](...params).send(options2).on("transactionHash", (txHash) => {
    emitEvent(event, { txHash });
  }).on("receipt", (receipt) => {
    emitEvent(event, { receipt });
  });
};
const getVaultBalance$1 = async (address, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].vaultAddress, vaultAbi);
  const balance = await callMethod(contract, "balanceOf", [address]);
  return { balance };
};
const withdrawConsensually$1 = async (claim, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].vaultAddress, vaultAbi);
  const web3 = new Web3(web3Provider);
  const address = claim.addresses[0];
  const gas = await contract.methods.withdrawAlice(claim).estimateGas({ from: address });
  const gasPrice = await web3.eth.getGasPrice();
  const opt = { gasPrice, from: address, gas };
  await contract.methods.withdrawAlice(claim).send(opt).on("transactionHash", (txHash) => {
    console.log("txHash", txHash);
    emitEvent(eventType.withdrawHash, txHash);
  }).on("receipt", (receipt) => {
    console.log("receipt", receipt);
    emitEvent(eventType.withdrawReceipt, receipt);
  });
};
const getDegaBalance$1 = async (address, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].tokenAddress, degaAbi);
  const balance = await callMethod(contract, "balanceOf", [address]);
  return balance;
};
const getBtcbBalance$1 = async (address, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].btcbAddress, degaAbi);
  const balance = await callMethod(contract, "balanceOf", [address]);
  return balance;
};
const getBnbBalance$1 = async (address, web3Provider) => {
  const web3 = new Web3(web3Provider);
  const balance = await web3.eth.getBalance(address);
  return balance;
};
const depositDega$1 = async (amount, address, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].vaultAddress, vaultAbi);
  await sendTx(address, contract, "deposit", [amount], eventType.depositDega, web3Provider);
};
const approveDega$1 = async (amount, address, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].tokenAddress, degaAbi);
  await sendTx(address, contract, "approve", [options[getEnv()].vaultAddress, amount], eventType.approveDega, web3Provider);
};
const getLastClosedChannel = async (address, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].vaultAddress, vaultAbi);
  const emergencyWithdrawRequest = await callMethod(contract, "emergencyWithdrawRequests", [address]);
  if (emergencyWithdrawRequest.claimTransaction.id.toString() !== "0") {
    return emergencyWithdrawRequest.claimTransaction.id.toString();
  }
  const closedWithdraw = await callMethod(contract, "withdrawTransactions", [address]);
  return closedWithdraw.id.toString();
};
const getDegaAllowance$1 = async (address, web3Provider) => {
  const contract = initContract(web3Provider, options[getEnv()].tokenAddress, degaAbi);
  const allowed = await callMethod(contract, "allowance", [address, options[getEnv()].vaultAddress]);
  return allowed;
};
var blockchain = {
  getVaultBalance: getVaultBalance$1,
  withdrawConsensually: withdrawConsensually$1,
  getDegaBalance: getDegaBalance$1,
  depositDega: depositDega$1,
  approveDega: approveDega$1,
  getBtcbBalance: getBtcbBalance$1,
  getBnbBalance: getBnbBalance$1,
  getLastClosedChannel,
  getDegaAllowance: getDegaAllowance$1
};
const cashout$1 = async (claim, web3Provider) => {
  claimControls.isValidNewClaim(claim);
  {
    if (!_verifySignature(claim)) {
      throw new Error("Server's signature is not verified");
    }
    const channelIsValid = await _controlChannel(claim, web3Provider);
    const balanceIsEnough = await _isBalanceEnough(claim, web3Provider);
    if (balanceIsEnough === true && channelIsValid) {
      await _signClaim(claim);
      claimStorage.saveConfirmedClaim(claim);
      return claim;
    } else {
      throw new Error("Server's balance is not enough");
    }
  }
};
const _buildTypedClaim = (claim) => {
  return {
    types: {
      EIP712Domain: [
        { name: "name", type: "string" },
        { name: "version", type: "string" },
        { name: "chainId", type: "uint256" },
        { name: "verifyingContract", type: "address" }
      ],
      Claim: [
        { name: "id", type: "uint256" },
        { name: "alice", type: "address" },
        { name: "bob", type: "address" },
        { name: "nonce", type: "uint256" },
        { name: "timestamp", type: "uint256" },
        { name: "messageForAlice", type: "string" },
        { name: "cumulativeDebitAlice", type: "uint256" },
        { name: "cumulativeDebitBob", type: "uint256" },
        { name: "closed", type: "uint256" }
      ]
    },
    domain: getDomain(),
    primaryType: "Claim",
    message: {
      id: claim.id,
      alice: claim.addresses[ALICE],
      bob: claim.addresses[BOB],
      nonce: claim.nonce,
      timestamp: claim.timestamp,
      messageForAlice: claim.messageForAlice,
      cumulativeDebitAlice: claim.cumulativeDebits[ALICE],
      cumulativeDebitBob: claim.cumulativeDebits[BOB],
      closed: claim.closed
    }
  };
};
const _verifySignature = (claim, ofAlice = false) => {
  let signer = 1;
  if (ofAlice) {
    signer = 0;
  }
  const data = _buildTypedClaim(claim);
  const signature2 = claim.signatures[signer];
  try {
    const addressSigner = recoverTypedSignature({
      data,
      signature: signature2,
      version: SignTypedDataVersion.V4
    });
    return addressSigner.toUpperCase() === claim.addresses[signer].toUpperCase();
  } catch (error) {
    return false;
  }
};
const cashin$1 = async (claim, web3Provider) => {
  const claimWasntSigned = _isAliceClaimNotSigned(claim);
  claimControls.isValidNewClaim(claim);
  const channelIsValid = await _controlChannel(claim, web3Provider);
  if (claimWasntSigned && channelIsValid) {
    await _signClaim(claim);
    claimStorage.saveClaimAlice(claim);
    return claim;
  }
};
const _isAliceClaimNotSigned = (claim) => {
  const lastAliceClaim = claimStorage.getClaimAlice(claim.addresses[ALICE]);
  if (lastAliceClaim && lastAliceClaim.id === claim.id && lastAliceClaim.nonce >= claim.nonce) {
    throw new Error(`Claim with nonce ${claim.nonce} is already signed`);
  } else {
    return true;
  }
};
const _isBalanceEnough = async (claim, web3Provider) => {
  const index = claim.amount < 0 ? 0 : 1;
  if (index === 1)
    return true;
  return _checkBalance(claim, index, web3Provider);
};
const _checkBalance = async (claim, index, web3Provider) => {
  try {
    const { balance } = await blockchain.getVaultBalance(claim.addresses[index], web3Provider);
    if (bnUtils.gte(balance, claim.cumulativeDebits[index])) {
      return true;
    } else {
      return false;
    }
  } catch (error) {
    throw new Error("Can't get balance from Vault");
  }
};
const _signClaim = async (claim) => {
  const msg = _buildTypedClaim(claim);
  const from = claim.addresses[ALICE];
  claim.signatures[ALICE] = await signTypedData(msg, from);
};
const claimControfirmed$1 = async (claim) => {
  const claimIsValid = claimControls.isValidClaimAlice(claim);
  if (claimIsValid) {
    if (_verifySignature(claim)) {
      claimStorage.saveConfirmedClaim(claim);
    } else {
      throw new Error("Server's signature is not verified");
    }
  }
};
const signWithdraw$1 = async (claim, web3Provider) => {
  const claimWasntSigned = _isAliceClaimNotSigned(claim);
  let balance;
  try {
    const vaultBalance = await blockchain.getVaultBalance(claim.addresses[ALICE], web3Provider);
    balance = vaultBalance.balance;
  } catch (error) {
    throw new Error("Can't get balance from Vault");
  }
  const claimIsValid = claimControls.isValidWithdraw(claim, balance);
  const channelIsValid = await _controlChannel(claim, web3Provider);
  if (claimIsValid && claimWasntSigned && channelIsValid) {
    await _signClaim(claim);
    claimStorage.saveClaimAlice(claim);
    return claim;
  } else {
    throw new Error("Withdraw claim is not valid");
  }
};
const _controlChannel = async (claim, web3Provider) => {
  const lastClosedChannel = await blockchain.getLastClosedChannel(claim.addresses[ALICE], web3Provider);
  if (bnUtils.eq(bnUtils.plus(lastClosedChannel, "1"), claim.id)) {
    return true;
  } else {
    throw new Error("Invalid channel id");
  }
};
const lastClaim$1 = (claim, address) => {
  const confirmedClaim = claimStorage.getConfirmedClaim(address);
  if (!confirmedClaim && claim === null) {
    return true;
  }
  if (!confirmedClaim && claim && claim.nonce) {
    claimStorage.saveConfirmedClaim(claim);
    return true;
  } else if (confirmedClaim && claim === null) {
    return confirmedClaim;
  } else if (claim.id >= confirmedClaim.id && claim.nonce > confirmedClaim.nonce) {
    if (_verifySignature(claim, true) && _verifySignature(claim)) {
      claimStorage.saveConfirmedClaim(claim);
      return true;
    } else {
      return confirmedClaim;
    }
  } else {
    try {
      const areEqual = claimControls.areEqualClaims(claim, confirmedClaim);
      if (areEqual === true && claim.signatures[ALICE] === confirmedClaim.signatures[ALICE] && claim.signatures[BOB] === confirmedClaim.signatures[BOB]) {
        return true;
      } else {
        return confirmedClaim;
      }
    } catch (error) {
      return confirmedClaim;
    }
  }
};
var claimLibrary = {
  cashin: cashin$1,
  claimControfirmed: claimControfirmed$1,
  cashout: cashout$1,
  signWithdraw: signWithdraw$1,
  lastClaim: lastClaim$1,
  downloadLastClaim: claimStorage.downloadLastClaim,
  getConfirmedClaim: claimStorage.getConfirmedClaim
};
const cashin = async (claim) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.claimNotSigned, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  try {
    const claimResult = await claimLibrary.cashin(claim, web3Provider);
    emitEvent(eventType.claimSigned, { claim: claimResult });
    return claimResult;
  } catch (error) {
    emitErrorEvent(eventType.claimNotSigned, error);
    throw error;
  }
};
const getVaultBalance = async (address) => {
  const web3Provider = getWeb3Provider();
  try {
    const balance = await blockchain.getVaultBalance(address, web3Provider);
    return balance;
  } catch (error) {
    console.error(error);
  }
};
const claimControfirmed = async (claim) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.claimNotConfirmed, error);
    throw error;
  }
  try {
    await claimLibrary.claimControfirmed(claim);
    emitEvent(eventType.claimConfirmed, { claim });
  } catch (error) {
    emitErrorEvent(eventType.claimNotConfirmed, { message: error, claim });
    throw error;
  }
};
const cashout = async (claim) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.winNotConfirmed, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  try {
    const claimResult = await claimLibrary.cashout(claim, web3Provider);
    emitEvent(eventType.winClaimSigned, { claim: claimResult });
    return claimResult;
  } catch (error) {
    emitErrorEvent(eventType.winNotConfirmed, error);
    throw error;
  }
};
const lastClaim = async (claim) => {
  if (claim && claim.hasOwnProperty("error")) {
    emitErrorEvent(eventType.claimNotSynced, claim.error);
    return;
  }
  const { address } = await getAddress();
  if (claim && claim.addresses[ALICE].toLowerCase() !== address.toLowerCase()) {
    emitErrorEvent(eventType.claimNotSynced, claim.error);
    return;
  }
  const trueOrClaim = claimLibrary.lastClaim(claim, address);
  if (trueOrClaim === true) {
    emitEvent(eventType.claimSynced, "Claims are synced");
  } else {
    emitErrorEvent(eventType.claimNotSynced, { message: "Claims are not synced", lastClaim: trueOrClaim });
    return trueOrClaim;
  }
};
const signWithdraw = async (claim) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.claimNotSigned, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  try {
    const claimResult = await claimLibrary.signWithdraw(claim, web3Provider);
    emitEvent(eventType.claimSigned, { claim: claimResult });
    return claimResult;
  } catch (error) {
    emitErrorEvent(eventType.claimNotSigned, error);
    throw error;
  }
};
const withdrawConsensually = async (claim) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.withdraw, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  try {
    await blockchain.withdrawConsensually(claim, web3Provider);
    emitEvent(eventType.withdraw, "Consensual withdraw is sent to blockchain");
  } catch (error) {
    console.log("error", error);
    emitErrorEvent(eventType.withdraw, error);
  }
};
const getTotalBalance = async (address) => {
  if (!address) {
    return "0";
  }
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.getBalance, error);
    throw error;
  }
  let balance = "0";
  const web3Provider = getWeb3Provider();
  const lastClaim2 = claimLibrary.getConfirmedClaim(address);
  if (lastClaim2 && lastClaim2.closed === 1) {
    const lastClosedChannel = await blockchain.getLastClosedChannel(address, web3Provider);
    if (lastClosedChannel !== lastClaim2.id.toString()) {
      return balance;
    }
  }
  try {
    balance = bnUtils.plus(balance, (await blockchain.getVaultBalance(address, web3Provider)).balance);
  } catch (error) {
    emitErrorEvent(eventType.getBalance, error);
  }
  if (lastClaim2 && lastClaim2.closed !== 1) {
    balance = bnUtils.plus(balance, bnUtils.minus(lastClaim2.cumulativeDebits[BOB], lastClaim2.cumulativeDebits[ALICE]));
  }
  return balance;
};
const sendConsensualWithdraw = async function() {
  const { address } = await getAddress();
  const claim = claimLibrary.getConfirmedClaim(address);
  if (!claim.closed) {
    throw new Error("Withdraw claim not found.");
  }
  await withdrawConsensually(claim);
};
var claims = {
  cashin,
  claimControfirmed,
  cashout,
  lastClaim,
  signWithdraw,
  withdrawConsensually,
  getVaultBalance,
  downloadLastClaim: claimLibrary.downloadLastClaim,
  getConfirmedClaim: claimLibrary.getConfirmedClaim,
  getTotalBalance,
  sendConsensualWithdraw
};
const depositDega = async (amount, address) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.depositDega, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  try {
    await checkDegaBalance(amount, address, web3Provider);
  } catch (error) {
    emitErrorEvent(eventType.depositDega, error);
    throw error;
  }
  try {
    await blockchain.depositDega(amount, address, web3Provider);
  } catch (error) {
    emitErrorEvent(eventType.depositDega, error);
    throw error;
  }
};
const checkDegaBalance = async (amount, address, web3Provider) => {
  let balance;
  try {
    balance = await blockchain.getDegaBalance(address, web3Provider);
  } catch (error) {
    throw new Error("Can't get balance of Dega");
  }
  if (bnUtils.lt(balance, amount)) {
    throw new Error("The balance of Dega is not enough");
  }
};
const approveDega = async (amount, address) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.approveDega, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  try {
    await blockchain.approveDega(amount, address, web3Provider);
  } catch (error) {
    emitErrorEvent(eventType.approveDega, error);
    throw error;
  }
};
const getDegaBalance = async (address) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.getBalance, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  let balance = "0";
  try {
    balance = await blockchain.getDegaBalance(address, web3Provider);
  } catch (error) {
    throw new Error("Can't get balance of Dega");
  }
  return balance.toString();
};
const getBtcbBalance = async (address) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.getBalance, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  let balance = "0";
  try {
    balance = await blockchain.getBtcbBalance(address, web3Provider);
  } catch (error) {
    throw new Error("Can't get balance of BTCB");
  }
  return balance.toString();
};
const getBnbBalance = async (address) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.getBalance, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  let balance = "0";
  try {
    balance = await blockchain.getBnbBalance(address, web3Provider);
  } catch (error) {
    throw new Error("Can't get balance of BNB");
  }
  return balance.toString();
};
const getDegaAllowance = async (address) => {
  try {
    await checkRightNetwork();
  } catch (error) {
    emitErrorEvent(eventType.approveDega, error);
    throw error;
  }
  const web3Provider = getWeb3Provider();
  try {
    return await blockchain.getDegaAllowance(address, web3Provider);
  } catch (error) {
    emitErrorEvent(eventType.approveDega, error);
    throw error;
  }
};
var erc20 = {
  depositDega,
  approveDega,
  getDegaBalance,
  getBtcbBalance,
  getBnbBalance,
  getDegaAllowance
};
const receiveMsg = async (msg) => {
  if (msg) {
    const { action, claim, context, error } = JSON.parse(msg);
    if (error) {
      emitErrorEvent(eventType.general, error);
    }
    switch (action) {
      case "HANDSHAKE": {
        const lastClaimAlice = await claims.lastClaim(claim);
        if (lastClaimAlice) {
          return {
            action,
            claim: lastClaimAlice,
            context
          };
        }
        break;
      }
      case "CASHIN": {
        if (!claim.signatures[ALICE] && !claim.signatures[BOB]) {
          const signedClaim = await claims.cashin(claim);
          return {
            action,
            claim: signedClaim,
            context
          };
        } else if (claim.signatures[ALICE] && claim.signatures[BOB]) {
          await claims.claimControfirmed(claim);
        } else {
          throw new Error("Invalid claim");
        }
        break;
      }
      case "CASHOUT": {
        if (!claim.signatures[ALICE] && claim.signatures[BOB]) {
          const signedClaim = await claims.cashout(claim);
          return {
            action,
            claim: signedClaim,
            context
          };
        } else {
          throw new Error("Invalid claim");
        }
      }
      case "WITHDRAW": {
        if (!claim.signatures[ALICE] && !claim.signatures[BOB]) {
          const signedClaim = await claims.signWithdraw(claim);
          return {
            action,
            claim: signedClaim,
            context
          };
        } else if (claim.signatures[ALICE] && claim.signatures[BOB]) {
          await claims.claimControfirmed(claim);
          emitEvent(eventType.withdrawSigned, "Consensual withdraw signed.");
        } else {
          throw new Error("Invalid claim");
        }
        break;
      }
    }
  }
};
const cryptoSDK = {
  setEnv,
  getAddress,
  isMetamaskInstalled,
  isRightNet,
  setRightNet,
  addEventListener,
  addEventListenerWS,
  emitEventWS,
  receiveMsg,
  signChallenge: token.signChallenge,
  setToken: token.setToken,
  getToken: token.getToken,
  isLogged: token.isLogged,
  getVaultBalance: claims.getVaultBalance,
  getTotalBalance: claims.getTotalBalance,
  downloadLastClaim: claims.downloadLastClaim,
  getConfirmedClaim: claims.getConfirmedClaim,
  formatNumber,
  pay: claims.cashin,
  payReceived: claims.claimControfirmed,
  win: claims.cashout,
  depositDega: erc20.depositDega,
  approveDega: erc20.approveDega,
  getDegaAllowance: erc20.getDegaAllowance,
  getDegaBalance: erc20.getDegaBalance,
  getBtcbBalance: erc20.getBtcbBalance,
  getBnbBalance: erc20.getBnbBalance,
  sendConsensualWithdraw: claims.sendConsensualWithdraw
};
export { cryptoSDK as default };
